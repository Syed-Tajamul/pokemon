{
  "version": 3,
  "sources": ["../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../../../../../.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../../../.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../../../.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/tty.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../../../.bun/install/global/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../../../.bun/install/global/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../node_modules/fast-decode-uri-component/index.js", "../../../node_modules/cookie/src/index.ts", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/fs/promises.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/fs/constants.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/fs/promises.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/fs/classes.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/internal/fs/fs.mjs", "../../../../../../../.bun/install/global/node_modules/unenv/dist/runtime/node/fs.mjs", "../../../node_modules/ieee754/index.js", "../../../node_modules/@borewit/text-codec/lib/index.js", "../../../node_modules/token-types/lib/index.js", "../../../node_modules/strtok3/lib/stream/Errors.js", "../../../node_modules/strtok3/lib/stream/Deferred.js", "../../../node_modules/strtok3/lib/stream/AbstractStreamReader.js", "../../../node_modules/strtok3/lib/stream/StreamReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamByobReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamDefaultReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamReaderFactory.js", "../../../node_modules/strtok3/lib/stream/index.js", "../../../node_modules/strtok3/lib/AbstractTokenizer.js", "../../../node_modules/strtok3/lib/ReadStreamTokenizer.js", "../../../node_modules/strtok3/lib/BufferTokenizer.js", "../../../node_modules/strtok3/lib/BlobTokenizer.js", "../../../node_modules/strtok3/lib/core.js", "../../../node_modules/fflate/esm/browser.js", "../../../node_modules/ms/index.js", "../../../node_modules/debug/src/common.js", "../../../node_modules/debug/src/browser.js", "../../../node_modules/@tokenizer/inflate/lib/ZipToken.js", "../../../node_modules/@tokenizer/inflate/lib/index.js", "../../../node_modules/uint8array-extras/index.js", "../../../node_modules/file-type/util.js", "../../../node_modules/file-type/supported.js", "../../../node_modules/file-type/core.js", "../../../node_modules/promise-limit/index.js", "../../../src/index.ts", "../../../src/routes/app.ts", "../../../node_modules/elysia/dist/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/create/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/system/policy.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/create/immutable.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/error/error.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/any/any.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/array/array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/argument/argument.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/computed/computed.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/never/never.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/function/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/number/number.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/string/string.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/object/object.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/const/const.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/date/date.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/null/null.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instantiate/instantiate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/record/record.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/module/module.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/module/compute.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/not/not.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/void/void.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/errors.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/check/check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/assert/assert.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/create/create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/decode/decode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/default/default.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/encode/encode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/parse/parse.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/compiler/compiler.mjs", "../../../node_modules/exact-mirror/dist/index.mjs", "../../../src/controllers/todo.controller.ts", "../../../node_modules/src/alias.ts", "../../../node_modules/src/column.ts", "../../../node_modules/src/entity.ts", "../../../node_modules/src/sql/sql.ts", "../../../node_modules/src/pg-core/columns/enum.ts", "../../../node_modules/src/pg-core/columns/common.ts", "../../../node_modules/src/column-builder.ts", "../../../node_modules/src/pg-core/foreign-keys.ts", "../../../node_modules/src/table.utils.ts", "../../../node_modules/src/tracing-utils.ts", "../../../node_modules/src/pg-core/unique-constraint.ts", "../../../node_modules/src/pg-core/utils/array.ts", "../../../node_modules/src/subquery.ts", "../../../node_modules/src/tracing.ts", "../../../node_modules/drizzle-orm/version.js", "../../../node_modules/src/view-common.ts", "../../../node_modules/src/table.ts", "../../../node_modules/src/errors.ts", "../../../node_modules/src/logger.ts", "../../../node_modules/src/query-promise.ts", "../../../node_modules/src/relations.ts", "../../../node_modules/src/pg-core/primary-keys.ts", "../../../node_modules/src/pg-core/table.ts", "../../../node_modules/src/utils.ts", "../../../node_modules/src/sql/expressions/conditions.ts", "../../../node_modules/src/sql/expressions/select.ts", "../../../node_modules/src/constants.ts", "../../../node_modules/src/utils.ts", "../../../node_modules/src/column.ts", "../../../node_modules/src/schema.ts", "../../../src/db/schema/todo.ts", "../../../node_modules/src/sqlite-core/columns/blob.ts", "../../../node_modules/src/sqlite-core/columns/common.ts", "../../../node_modules/src/sqlite-core/foreign-keys.ts", "../../../node_modules/src/sqlite-core/unique-constraint.ts", "../../../node_modules/src/sqlite-core/columns/custom.ts", "../../../node_modules/src/sqlite-core/columns/integer.ts", "../../../node_modules/src/sqlite-core/columns/numeric.ts", "../../../node_modules/src/sqlite-core/columns/real.ts", "../../../node_modules/src/sqlite-core/columns/text.ts", "../../../node_modules/src/sqlite-core/db.ts", "../../../node_modules/src/selection-proxy.ts", "../../../node_modules/src/sqlite-core/query-builders/delete.ts", "../../../node_modules/src/sqlite-core/table.ts", "../../../node_modules/src/sqlite-core/columns/all.ts", "../../../node_modules/src/sqlite-core/utils.ts", "../../../node_modules/src/sqlite-core/query-builders/insert.ts", "../../../node_modules/src/sqlite-core/query-builders/query-builder.ts", "../../../node_modules/src/sqlite-core/dialect.ts", "../../../node_modules/src/casing.ts", "../../../node_modules/src/sqlite-core/view-base.ts", "../../../node_modules/src/sqlite-core/query-builders/select.ts", "../../../node_modules/src/query-builders/query-builder.ts", "../../../node_modules/src/sqlite-core/query-builders/update.ts", "../../../node_modules/src/sqlite-core/query-builders/count.ts", "../../../node_modules/src/sqlite-core/query-builders/query.ts", "../../../node_modules/src/sqlite-core/query-builders/raw.ts", "../../../node_modules/src/sqlite-core/session.ts", "../../../node_modules/src/cache/core/cache.ts", "../../../src/db/schema/common.ts", "../../../src/db/schema/index.ts", "../../../node_modules/src/libsql/driver.ts", "../../../node_modules/@libsql/client/lib-esm/web.js", "../../../node_modules/@libsql/core/lib-esm/api.js", "../../../node_modules/@libsql/core/lib-esm/config.js", "../../../node_modules/@libsql/core/lib-esm/uri.js", "../../../node_modules/@libsql/core/lib-esm/util.js", "../../../node_modules/js-base64/base64.mjs", "../../../node_modules/@libsql/client/lib-esm/ws.js", "../../../node_modules/@libsql/hrana-client/lib-esm/index.js", "../../../node_modules/@libsql/isomorphic-ws/web.mjs", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/client.js", "../../../node_modules/@libsql/hrana-client/lib-esm/client.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/index.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/json/decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/errors.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/json/encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/util.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/id_alloc.js", "../../../node_modules/@libsql/hrana-client/lib-esm/result.js", "../../../node_modules/@libsql/hrana-client/lib-esm/value.js", "../../../node_modules/@libsql/hrana-client/lib-esm/util.js", "../../../node_modules/@libsql/hrana-client/lib-esm/sql.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/queue.js", "../../../node_modules/@libsql/hrana-client/lib-esm/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/batch.js", "../../../node_modules/@libsql/hrana-client/lib-esm/stmt.js", "../../../node_modules/@libsql/hrana-client/lib-esm/describe.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/client.js", "../../../node_modules/@libsql/isomorphic-fetch/web.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/queue_microtask.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/byte_queue.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/libsql_url.js", "../../../node_modules/@libsql/client/lib-esm/hrana.js", "../../../node_modules/@libsql/client/lib-esm/sql_cache.js", "../../../node_modules/@libsql/client/lib-esm/http.js", "../../../node_modules/src/libsql/driver-core.ts", "../../../node_modules/src/libsql/session.ts", "../../../src/utils/response.ts", "../../../src/utils/validation.ts", "../../../src/utils/id.ts", "../../../node_modules/ulid/dist/browser/index.js"],
  "sourceRoot": "C:\\Users\\syedt\\OneDrive\\Desktop\\personal\\pokemon\\.wrangler\\tmp\\deploy-1gxX39",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "import { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream: WriteStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "'use strict'\n\nvar UTF8_ACCEPT = 12\nvar UTF8_REJECT = 0\nvar UTF8_DATA = [\n  // The first part of the table maps bytes to character to a transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7,\n  10, 9, 9, 9, 11, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n\n  // The second part of the table maps a state to a new state when adding a\n  // transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  12, 0, 0, 0, 0, 24, 36, 48, 60, 72, 84, 96,\n  0, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n  // The third part maps the current transition to a mask that needs to apply\n  // to the byte.\n  0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07\n]\n\nfunction decodeURIComponent (uri) {\n  var percentPosition = uri.indexOf('%')\n  if (percentPosition === -1) return uri\n\n  var length = uri.length\n  var decoded = ''\n  var last = 0\n  var codepoint = 0\n  var startOfOctets = percentPosition\n  var state = UTF8_ACCEPT\n\n  while (percentPosition > -1 && percentPosition < length) {\n    var high = hexCodeToInt(uri[percentPosition + 1], 4)\n    var low = hexCodeToInt(uri[percentPosition + 2], 0)\n    var byte = high | low\n    var type = UTF8_DATA[byte]\n    state = UTF8_DATA[256 + state + type]\n    codepoint = (codepoint << 6) | (byte & UTF8_DATA[364 + type])\n\n    if (state === UTF8_ACCEPT) {\n      decoded += uri.slice(last, startOfOctets)\n\n      decoded += (codepoint <= 0xFFFF)\n        ? String.fromCharCode(codepoint)\n        : String.fromCharCode(\n          (0xD7C0 + (codepoint >> 10)),\n          (0xDC00 + (codepoint & 0x3FF))\n        )\n\n      codepoint = 0\n      last = percentPosition + 3\n      percentPosition = startOfOctets = uri.indexOf('%', last)\n    } else if (state === UTF8_REJECT) {\n      return null\n    } else {\n      percentPosition += 3\n      if (percentPosition < length && uri.charCodeAt(percentPosition) === 37) continue\n      return null\n    }\n  }\n\n  return decoded + uri.slice(last)\n}\n\nvar HEX = {\n  '0': 0,\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  'a': 10,\n  'A': 10,\n  'b': 11,\n  'B': 11,\n  'c': 12,\n  'C': 12,\n  'd': 13,\n  'D': 13,\n  'e': 14,\n  'E': 14,\n  'f': 15,\n  'F': 15\n}\n\nfunction hexCodeToInt (c, shift) {\n  var i = HEX[c]\n  return i === undefined ? 255 : i << shift\n}\n\nmodule.exports = decodeURIComponent\n", "/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n", "import { notImplemented } from \"../../../_internal/utils.mjs\";\nexport const access = /* @__PURE__ */ notImplemented(\"fs.access\");\nexport const copyFile = /* @__PURE__ */ notImplemented(\"fs.copyFile\");\nexport const cp = /* @__PURE__ */ notImplemented(\"fs.cp\");\nexport const open = /* @__PURE__ */ notImplemented(\"fs.open\");\nexport const opendir = /* @__PURE__ */ notImplemented(\"fs.opendir\");\nexport const rename = /* @__PURE__ */ notImplemented(\"fs.rename\");\nexport const truncate = /* @__PURE__ */ notImplemented(\"fs.truncate\");\nexport const rm = /* @__PURE__ */ notImplemented(\"fs.rm\");\nexport const rmdir = /* @__PURE__ */ notImplemented(\"fs.rmdir\");\nexport const mkdir = /* @__PURE__ */ notImplemented(\"fs.mkdir\");\nexport const readdir = /* @__PURE__ */ notImplemented(\"fs.readdir\");\nexport const readlink = /* @__PURE__ */ notImplemented(\"fs.readlink\");\nexport const symlink = /* @__PURE__ */ notImplemented(\"fs.symlink\");\nexport const lstat = /* @__PURE__ */ notImplemented(\"fs.lstat\");\nexport const stat = /* @__PURE__ */ notImplemented(\"fs.stat\");\nexport const link = /* @__PURE__ */ notImplemented(\"fs.link\");\nexport const unlink = /* @__PURE__ */ notImplemented(\"fs.unlink\");\nexport const chmod = /* @__PURE__ */ notImplemented(\"fs.chmod\");\nexport const lchmod = /* @__PURE__ */ notImplemented(\"fs.lchmod\");\nexport const lchown = /* @__PURE__ */ notImplemented(\"fs.lchown\");\nexport const chown = /* @__PURE__ */ notImplemented(\"fs.chown\");\nexport const utimes = /* @__PURE__ */ notImplemented(\"fs.utimes\");\nexport const lutimes = /* @__PURE__ */ notImplemented(\"fs.lutimes\");\nexport const realpath = /* @__PURE__ */ notImplemented(\"fs.realpath\");\nexport const mkdtemp = /* @__PURE__ */ notImplemented(\"fs.mkdtemp\");\nexport const writeFile = /* @__PURE__ */ notImplemented(\"fs.writeFile\");\nexport const appendFile = /* @__PURE__ */ notImplemented(\"fs.appendFile\");\nexport const readFile = /* @__PURE__ */ notImplemented(\"fs.readFile\");\nexport const watch = /* @__PURE__ */ notImplemented(\"fs.watch\");\nexport const statfs = /* @__PURE__ */ notImplemented(\"fs.statfs\");\nexport const glob = /* @__PURE__ */ notImplemented(\"fs.glob\");\n", "// npx -y node@22.14 -e 'const{constants}=require(\"fs\");console.log(Object.entries(constants).map(([k,v]) => `export const ${k} = ${JSON.stringify(v)}`).join(\"\\n\"))'\nexport const UV_FS_SYMLINK_DIR = 1;\nexport const UV_FS_SYMLINK_JUNCTION = 2;\nexport const O_RDONLY = 0;\nexport const O_WRONLY = 1;\nexport const O_RDWR = 2;\nexport const UV_DIRENT_UNKNOWN = 0;\nexport const UV_DIRENT_FILE = 1;\nexport const UV_DIRENT_DIR = 2;\nexport const UV_DIRENT_LINK = 3;\nexport const UV_DIRENT_FIFO = 4;\nexport const UV_DIRENT_SOCKET = 5;\nexport const UV_DIRENT_CHAR = 6;\nexport const UV_DIRENT_BLOCK = 7;\nexport const EXTENSIONLESS_FORMAT_JAVASCRIPT = 0;\nexport const EXTENSIONLESS_FORMAT_WASM = 1;\nexport const S_IFMT = 61440;\nexport const S_IFREG = 32768;\nexport const S_IFDIR = 16384;\nexport const S_IFCHR = 8192;\nexport const S_IFBLK = 24576;\nexport const S_IFIFO = 4096;\nexport const S_IFLNK = 40960;\nexport const S_IFSOCK = 49152;\nexport const O_CREAT = 64;\nexport const O_EXCL = 128;\nexport const UV_FS_O_FILEMAP = 0;\nexport const O_NOCTTY = 256;\nexport const O_TRUNC = 512;\nexport const O_APPEND = 1024;\nexport const O_DIRECTORY = 65536;\nexport const O_NOATIME = 262144;\nexport const O_NOFOLLOW = 131072;\nexport const O_SYNC = 1052672;\nexport const O_DSYNC = 4096;\nexport const O_DIRECT = 16384;\nexport const O_NONBLOCK = 2048;\nexport const S_IRWXU = 448;\nexport const S_IRUSR = 256;\nexport const S_IWUSR = 128;\nexport const S_IXUSR = 64;\nexport const S_IRWXG = 56;\nexport const S_IRGRP = 32;\nexport const S_IWGRP = 16;\nexport const S_IXGRP = 8;\nexport const S_IRWXO = 7;\nexport const S_IROTH = 4;\nexport const S_IWOTH = 2;\nexport const S_IXOTH = 1;\nexport const F_OK = 0;\nexport const R_OK = 4;\nexport const W_OK = 2;\nexport const X_OK = 1;\nexport const UV_FS_COPYFILE_EXCL = 1;\nexport const COPYFILE_EXCL = 1;\nexport const UV_FS_COPYFILE_FICLONE = 2;\nexport const COPYFILE_FICLONE = 2;\nexport const UV_FS_COPYFILE_FICLONE_FORCE = 4;\nexport const COPYFILE_FICLONE_FORCE = 4;\n", "import { access, appendFile, chmod, chown, copyFile, cp, glob, lchmod, lchown, link, lstat, lutimes, mkdir, mkdtemp, open, opendir, readFile, readdir, readlink, realpath, rename, rm, rmdir, stat, statfs, symlink, truncate, unlink, utimes, watch, writeFile } from \"../internal/fs/promises.mjs\";\nimport * as constants from \"../internal/fs/constants.mjs\";\nexport { constants };\nexport * from \"../internal/fs/promises.mjs\";\nexport default {\n\tconstants,\n\taccess,\n\tappendFile,\n\tchmod,\n\tchown,\n\tcopyFile,\n\tcp,\n\tglob,\n\tlchmod,\n\tlchown,\n\tlink,\n\tlstat,\n\tlutimes,\n\tmkdir,\n\tmkdtemp,\n\topen,\n\topendir,\n\treadFile,\n\treaddir,\n\treadlink,\n\trealpath,\n\trename,\n\trm,\n\trmdir,\n\tstat,\n\tstatfs,\n\tsymlink,\n\ttruncate,\n\tunlink,\n\tutimes,\n\twatch,\n\twriteFile\n};\n", "import { notImplementedClass } from \"../../../_internal/utils.mjs\";\nexport const Dir = /* @__PURE__ */ notImplementedClass(\"fs.Dir\");\nexport const Dirent = /* @__PURE__ */ notImplementedClass(\"fs.Dirent\");\nexport const Stats = /* @__PURE__ */ notImplementedClass(\"fs.Stats\");\nexport const ReadStream = /* @__PURE__ */ notImplementedClass(\"fs.ReadStream\");\nexport const WriteStream = /* @__PURE__ */ notImplementedClass(\"fs.WriteStream\");\nexport const FileReadStream = ReadStream;\nexport const FileWriteStream = WriteStream;\n", "import { notImplemented, notImplementedAsync } from \"../../../_internal/utils.mjs\";\nimport * as fsp from \"./promises.mjs\";\nfunction callbackify(fn) {\n\tconst fnc = function(...args) {\n\t\tconst cb = args.pop();\n\t\tfn().catch((error) => cb(error)).then((val) => cb(undefined, val));\n\t};\n\tfnc.__promisify__ = fn;\n\tfnc.native = fnc;\n\treturn fnc;\n}\n// Async\nexport const access = callbackify(fsp.access);\nexport const appendFile = callbackify(fsp.appendFile);\nexport const chown = callbackify(fsp.chown);\nexport const chmod = callbackify(fsp.chmod);\nexport const copyFile = callbackify(fsp.copyFile);\nexport const cp = callbackify(fsp.cp);\nexport const lchown = callbackify(fsp.lchown);\nexport const lchmod = callbackify(fsp.lchmod);\nexport const link = callbackify(fsp.link);\nexport const lstat = callbackify(fsp.lstat);\nexport const lutimes = callbackify(fsp.lutimes);\nexport const mkdir = callbackify(fsp.mkdir);\nexport const mkdtemp = callbackify(fsp.mkdtemp);\nexport const realpath = callbackify(fsp.realpath);\nexport const open = callbackify(fsp.open);\nexport const opendir = callbackify(fsp.opendir);\nexport const readdir = callbackify(fsp.readdir);\nexport const readFile = callbackify(fsp.readFile);\nexport const readlink = callbackify(fsp.readlink);\nexport const rename = callbackify(fsp.rename);\nexport const rm = callbackify(fsp.rm);\nexport const rmdir = callbackify(fsp.rmdir);\nexport const stat = callbackify(fsp.stat);\nexport const symlink = callbackify(fsp.symlink);\nexport const truncate = callbackify(fsp.truncate);\nexport const unlink = callbackify(fsp.unlink);\nexport const utimes = callbackify(fsp.utimes);\nexport const writeFile = callbackify(fsp.writeFile);\nexport const statfs = callbackify(fsp.statfs);\nexport const close = /* @__PURE__ */ notImplementedAsync(\"fs.close\");\nexport const createReadStream = /* @__PURE__ */ notImplementedAsync(\"fs.createReadStream\");\nexport const createWriteStream = /* @__PURE__ */ notImplementedAsync(\"fs.createWriteStream\");\nexport const exists = /* @__PURE__ */ notImplementedAsync(\"fs.exists\");\nexport const fchown = /* @__PURE__ */ notImplementedAsync(\"fs.fchown\");\nexport const fchmod = /* @__PURE__ */ notImplementedAsync(\"fs.fchmod\");\nexport const fdatasync = /* @__PURE__ */ notImplementedAsync(\"fs.fdatasync\");\nexport const fstat = /* @__PURE__ */ notImplementedAsync(\"fs.fstat\");\nexport const fsync = /* @__PURE__ */ notImplementedAsync(\"fs.fsync\");\nexport const ftruncate = /* @__PURE__ */ notImplementedAsync(\"fs.ftruncate\");\nexport const futimes = /* @__PURE__ */ notImplementedAsync(\"fs.futimes\");\nexport const lstatSync = /* @__PURE__ */ notImplementedAsync(\"fs.lstatSync\");\nexport const read = /* @__PURE__ */ notImplementedAsync(\"fs.read\");\nexport const readv = /* @__PURE__ */ notImplementedAsync(\"fs.readv\");\nexport const realpathSync = /* @__PURE__ */ notImplementedAsync(\"fs.realpathSync\");\nexport const statSync = /* @__PURE__ */ notImplementedAsync(\"fs.statSync\");\nexport const unwatchFile = /* @__PURE__ */ notImplementedAsync(\"fs.unwatchFile\");\nexport const watch = /* @__PURE__ */ notImplementedAsync(\"fs.watch\");\nexport const watchFile = /* @__PURE__ */ notImplementedAsync(\"fs.watchFile\");\nexport const write = /* @__PURE__ */ notImplementedAsync(\"fs.write\");\nexport const writev = /* @__PURE__ */ notImplementedAsync(\"fs.writev\");\nexport const _toUnixTimestamp = /* @__PURE__ */ notImplementedAsync(\"fs._toUnixTimestamp\");\nexport const openAsBlob = /* @__PURE__ */ notImplementedAsync(\"fs.openAsBlob\");\nexport const glob = /* @__PURE__ */ notImplementedAsync(\"fs.glob\");\n// Sync\nexport const appendFileSync = /* @__PURE__ */ notImplemented(\"fs.appendFileSync\");\nexport const accessSync = /* @__PURE__ */ notImplemented(\"fs.accessSync\");\nexport const chownSync = /* @__PURE__ */ notImplemented(\"fs.chownSync\");\nexport const chmodSync = /* @__PURE__ */ notImplemented(\"fs.chmodSync\");\nexport const closeSync = /* @__PURE__ */ notImplemented(\"fs.closeSync\");\nexport const copyFileSync = /* @__PURE__ */ notImplemented(\"fs.copyFileSync\");\nexport const cpSync = /* @__PURE__ */ notImplemented(\"fs.cpSync\");\nexport const existsSync = () => false;\nexport const fchownSync = /* @__PURE__ */ notImplemented(\"fs.fchownSync\");\nexport const fchmodSync = /* @__PURE__ */ notImplemented(\"fs.fchmodSync\");\nexport const fdatasyncSync = /* @__PURE__ */ notImplemented(\"fs.fdatasyncSync\");\nexport const fstatSync = /* @__PURE__ */ notImplemented(\"fs.fstatSync\");\nexport const fsyncSync = /* @__PURE__ */ notImplemented(\"fs.fsyncSync\");\nexport const ftruncateSync = /* @__PURE__ */ notImplemented(\"fs.ftruncateSync\");\nexport const futimesSync = /* @__PURE__ */ notImplemented(\"fs.futimesSync\");\nexport const lchownSync = /* @__PURE__ */ notImplemented(\"fs.lchownSync\");\nexport const lchmodSync = /* @__PURE__ */ notImplemented(\"fs.lchmodSync\");\nexport const linkSync = /* @__PURE__ */ notImplemented(\"fs.linkSync\");\nexport const lutimesSync = /* @__PURE__ */ notImplemented(\"fs.lutimesSync\");\nexport const mkdirSync = /* @__PURE__ */ notImplemented(\"fs.mkdirSync\");\nexport const mkdtempSync = /* @__PURE__ */ notImplemented(\"fs.mkdtempSync\");\nexport const openSync = /* @__PURE__ */ notImplemented(\"fs.openSync\");\nexport const opendirSync = /* @__PURE__ */ notImplemented(\"fs.opendirSync\");\nexport const readdirSync = /* @__PURE__ */ notImplemented(\"fs.readdirSync\");\nexport const readSync = /* @__PURE__ */ notImplemented(\"fs.readSync\");\nexport const readvSync = /* @__PURE__ */ notImplemented(\"fs.readvSync\");\nexport const readFileSync = /* @__PURE__ */ notImplemented(\"fs.readFileSync\");\nexport const readlinkSync = /* @__PURE__ */ notImplemented(\"fs.readlinkSync\");\nexport const renameSync = /* @__PURE__ */ notImplemented(\"fs.renameSync\");\nexport const rmSync = /* @__PURE__ */ notImplemented(\"fs.rmSync\");\nexport const rmdirSync = /* @__PURE__ */ notImplemented(\"fs.rmdirSync\");\nexport const symlinkSync = /* @__PURE__ */ notImplemented(\"fs.symlinkSync\");\nexport const truncateSync = /* @__PURE__ */ notImplemented(\"fs.truncateSync\");\nexport const unlinkSync = /* @__PURE__ */ notImplemented(\"fs.unlinkSync\");\nexport const utimesSync = /* @__PURE__ */ notImplemented(\"fs.utimesSync\");\nexport const writeFileSync = /* @__PURE__ */ notImplemented(\"fs.writeFileSync\");\nexport const writeSync = /* @__PURE__ */ notImplemented(\"fs.writeSync\");\nexport const writevSync = /* @__PURE__ */ notImplemented(\"fs.writevSync\");\nexport const statfsSync = /* @__PURE__ */ notImplemented(\"fs.statfsSync\");\nexport const globSync = /* @__PURE__ */ notImplemented(\"fs.globSync\");\n", "import promises from \"node:fs/promises\";\nimport { Dir, Dirent, FileReadStream, FileWriteStream, ReadStream, Stats, WriteStream } from \"./internal/fs/classes.mjs\";\nimport { _toUnixTimestamp, access, accessSync, appendFile, appendFileSync, chmod, chmodSync, chown, chownSync, close, closeSync, copyFile, copyFileSync, cp, cpSync, createReadStream, createWriteStream, exists, existsSync, fchmod, fchmodSync, fchown, fchownSync, fdatasync, fdatasyncSync, fstat, fstatSync, fsync, fsyncSync, ftruncate, ftruncateSync, futimes, futimesSync, glob, lchmod, globSync, lchmodSync, lchown, lchownSync, link, linkSync, lstat, lstatSync, lutimes, lutimesSync, mkdir, mkdirSync, mkdtemp, mkdtempSync, open, openAsBlob, openSync, opendir, opendirSync, read, readFile, readFileSync, readSync, readdir, readdirSync, readlink, readlinkSync, readv, readvSync, realpath, realpathSync, rename, renameSync, rm, rmSync, rmdir, rmdirSync, stat, statSync, statfs, statfsSync, symlink, symlinkSync, truncate, truncateSync, unlink, unlinkSync, unwatchFile, utimes, utimesSync, watch, watchFile, write, writeFile, writeFileSync, writeSync, writev, writevSync } from \"./internal/fs/fs.mjs\";\nimport * as constants from \"./internal/fs/constants.mjs\";\nimport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { F_OK, R_OK, W_OK, X_OK } from \"./internal/fs/constants.mjs\";\nexport { promises, constants };\nexport * from \"./internal/fs/fs.mjs\";\nexport * from \"./internal/fs/classes.mjs\";\nexport default {\n\tF_OK,\n\tR_OK,\n\tW_OK,\n\tX_OK,\n\tconstants,\n\tpromises,\n\tDir,\n\tDirent,\n\tFileReadStream,\n\tFileWriteStream,\n\tReadStream,\n\tStats,\n\tWriteStream,\n\t_toUnixTimestamp,\n\taccess,\n\taccessSync,\n\tappendFile,\n\tappendFileSync,\n\tchmod,\n\tchmodSync,\n\tchown,\n\tchownSync,\n\tclose,\n\tcloseSync,\n\tcopyFile,\n\tcopyFileSync,\n\tcp,\n\tcpSync,\n\tcreateReadStream,\n\tcreateWriteStream,\n\texists,\n\texistsSync,\n\tfchmod,\n\tfchmodSync,\n\tfchown,\n\tfchownSync,\n\tfdatasync,\n\tfdatasyncSync,\n\tfstat,\n\tfstatSync,\n\tfsync,\n\tfsyncSync,\n\tftruncate,\n\tftruncateSync,\n\tfutimes,\n\tfutimesSync,\n\tglob,\n\tlchmod,\n\tglobSync,\n\tlchmodSync,\n\tlchown,\n\tlchownSync,\n\tlink,\n\tlinkSync,\n\tlstat,\n\tlstatSync,\n\tlutimes,\n\tlutimesSync,\n\tmkdir,\n\tmkdirSync,\n\tmkdtemp,\n\tmkdtempSync,\n\topen,\n\topenAsBlob,\n\topenSync,\n\topendir,\n\topendirSync,\n\tread,\n\treadFile,\n\treadFileSync,\n\treadSync,\n\treaddir,\n\treaddirSync,\n\treadlink,\n\treadlinkSync,\n\treadv,\n\treadvSync,\n\trealpath,\n\trealpathSync,\n\trename,\n\trenameSync,\n\trm,\n\trmSync,\n\trmdir,\n\trmdirSync,\n\tstat,\n\tstatSync,\n\tstatfs,\n\tstatfsSync,\n\tsymlink,\n\tsymlinkSync,\n\ttruncate,\n\ttruncateSync,\n\tunlink,\n\tunlinkSync,\n\tunwatchFile,\n\tutimes,\n\tutimesSync,\n\twatch,\n\twatchFile,\n\twrite,\n\twriteFile,\n\twriteFileSync,\n\twriteSync,\n\twritev,\n\twritevSync\n};\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "// text-polyfill.ts\n// Minimal encode/decode for utf-8, utf-16le, ascii, latin1, windows-1252\nconst WINDOWS_1252_EXTRA = {\n    0x80: \"\u20AC\", 0x82: \"\u201A\", 0x83: \"\u0192\", 0x84: \"\u201E\", 0x85: \"\u2026\", 0x86: \"\u2020\",\n    0x87: \"\u2021\", 0x88: \"\u02C6\", 0x89: \"\u2030\", 0x8a: \"\u0160\", 0x8b: \"\u2039\", 0x8c: \"\u0152\",\n    0x8e: \"\u017D\", 0x91: \"\u2018\", 0x92: \"\u2019\", 0x93: \"\u201C\", 0x94: \"\u201D\", 0x95: \"\u2022\",\n    0x96: \"\u2013\", 0x97: \"\u2014\", 0x98: \"\u02DC\", 0x99: \"\u2122\", 0x9a: \"\u0161\", 0x9b: \"\u203A\",\n    0x9c: \"\u0153\", 0x9e: \"\u017E\", 0x9f: \"\u0178\",\n};\nconst WINDOWS_1252_REVERSE = {};\nfor (const [code, char] of Object.entries(WINDOWS_1252_EXTRA)) {\n    WINDOWS_1252_REVERSE[char] = Number.parseInt(code);\n}\n/**\n * Decode text from binary data\n * @param bytes Binary data\n * @param encoding Encoding\n */\nexport function textDecode(bytes, encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextDecoder !== \"undefined\") {\n                return new globalThis.TextDecoder(\"utf-8\").decode(bytes);\n            }\n            return decodeUTF8(bytes);\n        case \"utf-16le\":\n            return decodeUTF16LE(bytes);\n        case \"ascii\":\n            return decodeASCII(bytes);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return decodeLatin1(bytes);\n        case \"windows-1252\":\n            return decodeWindows1252(bytes);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\nexport function textEncode(input = \"\", encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextEncoder !== \"undefined\") {\n                return new globalThis.TextEncoder().encode(input);\n            }\n            return encodeUTF8(input);\n        case \"utf-16le\":\n            return encodeUTF16LE(input);\n        case \"ascii\":\n            return encodeASCII(input);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return encodeLatin1(input);\n        case \"windows-1252\":\n            return encodeWindows1252(input);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\n// --- Internal helpers ---\nfunction decodeUTF8(bytes) {\n    let out = \"\";\n    let i = 0;\n    while (i < bytes.length) {\n        const b1 = bytes[i++];\n        if (b1 < 0x80) {\n            out += String.fromCharCode(b1);\n        }\n        else if (b1 < 0xe0) {\n            const b2 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\n        }\n        else if (b1 < 0xf0) {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\n        }\n        else {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            const b4 = bytes[i++] & 0x3f;\n            let cp = ((b1 & 0x07) << 18) |\n                (b2 << 12) |\n                (b3 << 6) |\n                b4;\n            cp -= 0x10000;\n            out += String.fromCharCode(0xd800 + ((cp >> 10) & 0x3ff), 0xdc00 + (cp & 0x3ff));\n        }\n    }\n    return out;\n}\nfunction decodeUTF16LE(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.length; i += 2) {\n        out += String.fromCharCode(bytes[i] | (bytes[i + 1] << 8));\n    }\n    return out;\n}\nfunction decodeASCII(bytes) {\n    return String.fromCharCode(...bytes.map((b) => b & 0x7f));\n}\nfunction decodeLatin1(bytes) {\n    return String.fromCharCode(...bytes);\n}\nfunction decodeWindows1252(bytes) {\n    let out = \"\";\n    for (const b of bytes) {\n        if (b >= 0x80 && b <= 0x9f && WINDOWS_1252_EXTRA[b]) {\n            out += WINDOWS_1252_EXTRA[b];\n        }\n        else {\n            out += String.fromCharCode(b);\n        }\n    }\n    return out;\n}\nfunction encodeUTF8(str) {\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        const cp = str.charCodeAt(i);\n        if (cp < 0x80) {\n            out.push(cp);\n        }\n        else if (cp < 0x800) {\n            out.push(0xc0 | (cp >> 6), 0x80 | (cp & 0x3f));\n        }\n        else if (cp < 0x10000) {\n            out.push(0xe0 | (cp >> 12), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n        else {\n            out.push(0xf0 | (cp >> 18), 0x80 | ((cp >> 12) & 0x3f), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n    }\n    return new Uint8Array(out);\n}\nfunction encodeUTF16LE(str) {\n    const out = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        out[i * 2] = code & 0xff;\n        out[i * 2 + 1] = code >> 8;\n    }\n    return out;\n}\nfunction encodeASCII(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0x7f));\n}\nfunction encodeLatin1(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0xff));\n}\nfunction encodeWindows1252(str) {\n    return new Uint8Array([...str].map((ch) => {\n        const code = ch.charCodeAt(0);\n        if (code <= 0xff)\n            return code;\n        if (WINDOWS_1252_REVERSE[ch] !== undefined)\n            return WINDOWS_1252_REVERSE[ch];\n        return 0x3f; // '?'\n    }));\n}\n", "import * as ieee754 from 'ieee754';\nimport { textDecode } from \"@borewit/text-codec\";\n// Primitive types\nfunction dv(array) {\n    return new DataView(array.buffer, array.byteOffset);\n}\n/*\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getUint8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getInt8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_LE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_BE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n    len: 2,\n    get(dataView, offset) {\n        return ieee754.read(dataView, offset, false, 10, this.len);\n    },\n    put(dataView, offset, value) {\n        ieee754.write(dataView, value, offset, false, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n    len: 2,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 10, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, false, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, false, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n    /**\n     * @param len number of bytes to ignore\n     */\n    constructor(len) {\n        this.len = len;\n    }\n    // ToDo: don't read, but skip data\n    get(_array, _off) {\n    }\n}\nexport class Uint8ArrayType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(array, offset) {\n        return array.subarray(offset, offset + this.len);\n    }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n * Supports all encodings supported by TextDecoder, plus 'windows-1252'.\n */\nexport class StringType {\n    constructor(len, encoding) {\n        this.len = len;\n        this.encoding = encoding;\n    }\n    get(data, offset = 0) {\n        const bytes = data.subarray(offset, offset + this.len);\n        return textDecode(bytes, this.encoding);\n    }\n}\n/**\n * ANSI Latin 1 String using Windows-1252 (Code Page 1252)\n * Windows-1252 is a superset of ISO 8859-1 / Latin-1.\n */\nexport class AnsiStringType extends StringType {\n    constructor(len) {\n        super(len, 'windows-1252');\n    }\n}\n", "export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n        this.name = \"EndOfStreamError\";\n    }\n}\nexport class AbortError extends Error {\n    constructor(message = \"The operation was aborted\") {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n", "export class Deferred {\n    constructor() {\n        this.resolve = () => null;\n        this.reject = () => null;\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n", "import { EndOfStreamError, AbortError } from \"./Errors.js\";\nexport class AbstractStreamReader {\n    constructor() {\n        this.endOfStream = false;\n        this.interrupted = false;\n        /**\n         * Store peeked data\n         * @type {Array}\n         */\n        this.peekQueue = [];\n    }\n    async peek(uint8Array, mayBeLess = false) {\n        const bytesRead = await this.read(uint8Array, mayBeLess);\n        this.peekQueue.push(uint8Array.subarray(0, bytesRead)); // Put read data back to peek buffer\n        return bytesRead;\n    }\n    async read(buffer, mayBeLess = false) {\n        if (buffer.length === 0) {\n            return 0;\n        }\n        let bytesRead = this.readFromPeekBuffer(buffer);\n        if (!this.endOfStream) {\n            bytesRead += await this.readRemainderFromStream(buffer.subarray(bytesRead), mayBeLess);\n        }\n        if (bytesRead === 0 && !mayBeLess) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @returns Number of bytes read\n     */\n    readFromPeekBuffer(buffer) {\n        let remaining = buffer.length;\n        let bytesRead = 0;\n        // consume peeked data first\n        while (this.peekQueue.length > 0 && remaining > 0) {\n            const peekData = this.peekQueue.pop(); // Front of queue\n            if (!peekData)\n                throw new Error('peekData should be defined');\n            const lenCopy = Math.min(peekData.length, remaining);\n            buffer.set(peekData.subarray(0, lenCopy), bytesRead);\n            bytesRead += lenCopy;\n            remaining -= lenCopy;\n            if (lenCopy < peekData.length) {\n                // remainder back to queue\n                this.peekQueue.push(peekData.subarray(lenCopy));\n            }\n        }\n        return bytesRead;\n    }\n    async readRemainderFromStream(buffer, mayBeLess) {\n        let bytesRead = 0;\n        // Continue reading from stream if required\n        while (bytesRead < buffer.length && !this.endOfStream) {\n            if (this.interrupted) {\n                throw new AbortError();\n            }\n            const chunkLen = await this.readFromStream(buffer.subarray(bytesRead), mayBeLess);\n            if (chunkLen === 0)\n                break;\n            bytesRead += chunkLen;\n        }\n        if (!mayBeLess && bytesRead < buffer.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n}\n", "import { AbortError, } from './Errors.js';\nimport { Deferred } from './Deferred.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\n/**\n * Node.js Readable Stream Reader\n * Ref: https://nodejs.org/api/stream.html#readable-streams\n */\nexport class StreamReader extends AbstractStreamReader {\n    constructor(s) {\n        super();\n        this.s = s;\n        /**\n         * Deferred used for postponed read request (as not data is yet available to read)\n         */\n        this.deferred = null;\n        if (!s.read || !s.once) {\n            throw new Error('Expected an instance of stream.Readable');\n        }\n        this.s.once('end', () => {\n            this.endOfStream = true;\n            if (this.deferred) {\n                this.deferred.resolve(0);\n            }\n        });\n        this.s.once('error', err => this.reject(err));\n        this.s.once('close', () => this.abort());\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @returns Number of bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        const readBuffer = this.s.read(buffer.length);\n        if (readBuffer) {\n            buffer.set(readBuffer);\n            return readBuffer.length;\n        }\n        const request = {\n            buffer,\n            mayBeLess,\n            deferred: new Deferred()\n        };\n        this.deferred = request.deferred;\n        this.s.once('readable', () => {\n            this.readDeferred(request);\n        });\n        return request.deferred.promise;\n    }\n    /**\n     * Process deferred read request\n     * @param request Deferred read request\n     */\n    readDeferred(request) {\n        const readBuffer = this.s.read(request.buffer.length);\n        if (readBuffer) {\n            request.buffer.set(readBuffer);\n            request.deferred.resolve(readBuffer.length);\n            this.deferred = null;\n        }\n        else {\n            this.s.once('readable', () => {\n                this.readDeferred(request);\n            });\n        }\n    }\n    reject(err) {\n        this.interrupted = true;\n        if (this.deferred) {\n            this.deferred.reject(err);\n            this.deferred = null;\n        }\n    }\n    async abort() {\n        this.reject(new AbortError());\n    }\n    async close() {\n        return this.abort();\n    }\n}\n", "import { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n    }\n    async abort() {\n        return this.close();\n    }\n    async close() {\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamReader } from './WebStreamReader.js';\n/**\n * Read from a WebStream using a BYOB reader\n * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader\n */\nexport class WebStreamByobReader extends WebStreamReader {\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        // @ts-ignore\n        const result = await this.reader.read(new Uint8Array(buffer.length), { min: mayBeLess ? undefined : buffer.length });\n        if (result.done) {\n            this.endOfStream = result.done;\n        }\n        if (result.value) {\n            buffer.set(result.value);\n            return result.value.length;\n        }\n        return 0;\n    }\n}\n", "import { EndOfStreamError } from './Errors.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamDefaultReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n        this.buffer = null; // Internal buffer to store excess data\n    }\n    /**\n     * Copy chunk to target, and store the remainder in this.buffer\n     */\n    writeChunk(target, chunk) {\n        const written = Math.min(chunk.length, target.length);\n        target.set(chunk.subarray(0, written));\n        // Adjust the remainder of the buffer\n        if (written < chunk.length) {\n            this.buffer = chunk.subarray(written);\n        }\n        else {\n            this.buffer = null;\n        }\n        return written;\n    }\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        let totalBytesRead = 0;\n        // Serve from the internal buffer first\n        if (this.buffer) {\n            totalBytesRead += this.writeChunk(buffer, this.buffer);\n        }\n        // Continue reading from the stream if more data is needed\n        while (totalBytesRead < buffer.length && !this.endOfStream) {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.endOfStream = true;\n                break;\n            }\n            if (result.value) {\n                totalBytesRead += this.writeChunk(buffer.subarray(totalBytesRead), result.value);\n            }\n        }\n        if (!mayBeLess && totalBytesRead === 0 && this.endOfStream) {\n            throw new EndOfStreamError();\n        }\n        return totalBytesRead;\n    }\n    abort() {\n        this.interrupted = true;\n        return this.reader.cancel();\n    }\n    async close() {\n        await this.abort();\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamByobReader } from './WebStreamByobReader.js';\nimport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport function makeWebStreamReader(stream) {\n    try {\n        const reader = stream.getReader({ mode: \"byob\" });\n        if (reader instanceof ReadableStreamDefaultReader) {\n            // Fallback to default reader in case `mode: byob` is ignored\n            return new WebStreamDefaultReader(reader);\n        }\n        return new WebStreamByobReader(reader);\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            // Fallback to default reader in case `mode: byob` rejected by a `TypeError`\n            return new WebStreamDefaultReader(stream.getReader());\n        }\n        throw error;\n    }\n}\n", "export { AbortError, EndOfStreamError } from './Errors.js';\nexport { StreamReader } from './StreamReader.js';\nexport { WebStreamByobReader } from './WebStreamByobReader.js';\nexport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport { makeWebStreamReader } from './WebStreamReaderFactory.js';\n", "import { EndOfStreamError } from './stream/index.js';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    /**\n     * Constructor\n     * @param options Tokenizer options\n     * @protected\n     */\n    constructor(options) {\n        this.numBuffer = new Uint8Array(8);\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.onClose = options?.onClose;\n        if (options?.abortSignal) {\n            options.abortSignal.addEventListener('abort', () => {\n                this.abort();\n            });\n        }\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        await this.abort();\n        await this.onClose?.();\n    }\n    normalizeOptions(uint8Array, options) {\n        if (!this.supportsRandomAccess() && options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        return {\n            ...{\n                mayBeLess: false,\n                offset: 0,\n                length: uint8Array.length,\n                position: this.position\n            }, ...options\n        };\n    }\n    abort() {\n        return Promise.resolve(); // Ignore abort signal\n    }\n}\n", "import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from './stream/index.js';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n    /**\n     * Constructor\n     * @param streamReader stream-reader to read from\n     * @param options Tokenizer options\n     */\n    constructor(streamReader, options) {\n        super(options);\n        this.streamReader = streamReader;\n        this.fileInfo = options?.fileInfo ?? {};\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const skipBytes = normOptions.position - this.position;\n        if (skipBytes > 0) {\n            await this.ignore(skipBytes);\n            return this.readBuffer(uint8Array, options);\n        }\n        if (skipBytes < 0) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (normOptions.length === 0) {\n            return 0;\n        }\n        const bytesRead = await this.streamReader.read(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n        this.position += bytesRead;\n        if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes peeked\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        let bytesRead = 0;\n        if (normOptions.position) {\n            const skipBytes = normOptions.position - this.position;\n            if (skipBytes > 0) {\n                const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n                bytesRead = await this.peekBuffer(skipBuffer, { mayBeLess: normOptions.mayBeLess });\n                uint8Array.set(skipBuffer.subarray(skipBytes));\n                return bytesRead - skipBytes;\n            }\n            if (skipBytes < 0) {\n                throw new Error('Cannot peek from a negative offset in a stream');\n            }\n        }\n        if (normOptions.length > 0) {\n            try {\n                bytesRead = await this.streamReader.peek(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n            }\n            catch (err) {\n                if (options?.mayBeLess && err instanceof EndOfStreamError) {\n                    return 0;\n                }\n                throw err;\n            }\n            if ((!normOptions.mayBeLess) && bytesRead < normOptions.length) {\n                throw new EndOfStreamError();\n            }\n        }\n        return bytesRead;\n    }\n    async ignore(length) {\n        // debug(`ignore ${this.position}...${this.position + length - 1}`);\n        const bufSize = Math.min(maxBufferSize, length);\n        const buf = new Uint8Array(bufSize);\n        let totBytesRead = 0;\n        while (totBytesRead < length) {\n            const remaining = length - totBytesRead;\n            const bytesRead = await this.readBuffer(buf, { length: Math.min(bufSize, remaining) });\n            if (bytesRead < 0) {\n                return bytesRead;\n            }\n            totBytesRead += bytesRead;\n        }\n        return totBytesRead;\n    }\n    abort() {\n        return this.streamReader.abort();\n    }\n    async close() {\n        return this.streamReader.close();\n    }\n    supportsRandomAccess() {\n        return false;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(uint8Array, options) {\n        super(options);\n        this.uint8Array = uint8Array;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: uint8Array.length } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BlobTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param blob - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(blob, options) {\n        super(options);\n        this.blob = blob;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: blob.size, mimeType: blob.type } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param buffer\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(buffer, options) {\n        const normOptions = this.normalizeOptions(buffer, options);\n        const bytes2read = Math.min(this.blob.size - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        const arrayBuffer = await this.blob.slice(normOptions.position, normOptions.position + bytes2read).arrayBuffer();\n        buffer.set(new Uint8Array(arrayBuffer));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { StreamReader, makeWebStreamReader } from './stream/index.js';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nimport { BlobTokenizer } from './BlobTokenizer.js';\nexport { EndOfStreamError, AbortError } from './stream/index.js';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n    const streamReader = new StreamReader(stream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await streamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(streamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n    const webStreamReader = makeWebStreamReader(webStream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await webStreamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(webStreamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n    return new BufferTokenizer(uint8Array, options);\n}\n/**\n * Construct ReadStreamTokenizer from given Blob.\n * @param blob - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBlob(blob, options) {\n    return new BlobTokenizer(blob, options);\n}\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "/**\n * Ref https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n */\nimport { UINT16_LE, UINT32_LE } from \"token-types\";\nexport const Signature = {\n    LocalFileHeader: 0x04034b50,\n    DataDescriptor: 0x08074b50,\n    CentralFileHeader: 0x02014b50,\n    EndOfCentralDirectory: 0x06054b50\n};\nexport const DataDescriptor = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            compressedSize: UINT32_LE.get(array, 8),\n            uncompressedSize: UINT32_LE.get(array, 12),\n        };\n    }, len: 16\n};\n/**\n * First part of the ZIP Local File Header\n * Offset | Bytes| Description\n * -------|------+-------------------------------------------------------------------\n *      0 |    4 | Signature (0x04034b50)\n *      4 |    2 | Minimum version needed to extract\n *      6 |    2 | Bit flag\n *      8 |    2 | Compression method\n *     10 |    2 | File last modification time (MS-DOS format)\n *     12 |    2 | File last modification date (MS-DOS format)\n *     14 |    4 | CRC-32 of uncompressed data\n *     18 |    4 | Compressed size\n *     22 |    4 | Uncompressed size\n *     26 |    2 | File name length (n)\n *     28 |    2 | Extra field length (m)\n *     30 |    n | File name\n * 30 + n |    m | Extra field\n */\nexport const LocalFileHeaderToken = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 4),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 8),\n            compressedSize: UINT32_LE.get(array, 18),\n            uncompressedSize: UINT32_LE.get(array, 22),\n            filenameLength: UINT16_LE.get(array, 26),\n            extraFieldLength: UINT16_LE.get(array, 28),\n            filename: null\n        };\n    }, len: 30\n};\n/**\n * 4.3.16  End of central directory record:\n *  end of central dir signature (0x06064b50)                                      4 bytes\n *  number of this disk                                                            2 bytes\n *  number of the disk with the start of the central directory                     2 bytes\n *  total number of entries in the central directory on this disk                  2 bytes\n *  total number of entries in the size of the central directory                   2 bytes\n *  sizeOfTheCentralDirectory                                                      4 bytes\n *  offset of start of central directory with respect to the starting disk number  4 bytes\n *  .ZIP file comment length                                                       2 bytes\n *  .ZIP file comment       (variable size)\n */\nexport const EndOfCentralDirectoryRecordToken = {\n    get(array) {\n        return {\n            signature: UINT32_LE.get(array, 0),\n            nrOfThisDisk: UINT16_LE.get(array, 4),\n            nrOfThisDiskWithTheStart: UINT16_LE.get(array, 6),\n            nrOfEntriesOnThisDisk: UINT16_LE.get(array, 8),\n            nrOfEntriesOfSize: UINT16_LE.get(array, 10),\n            sizeOfCd: UINT32_LE.get(array, 12),\n            offsetOfStartOfCd: UINT32_LE.get(array, 16),\n            zipFileCommentLength: UINT16_LE.get(array, 20),\n        };\n    }, len: 22\n};\n/**\n * File header:\n *    central file header signature   4 bytes   0 (0x02014b50)\n *    version made by                 2 bytes   4\n *    version needed to extract       2 bytes   6\n *    general purpose bit flag        2 bytes   8\n *    compression method              2 bytes  10\n *    last mod file time              2 bytes  12\n *    last mod file date              2 bytes  14\n *    crc-32                          4 bytes  16\n *    compressed size                 4 bytes  20\n *    uncompressed size               4 bytes  24\n *    file name length                2 bytes  28\n *    extra field length              2 bytes  30\n *    file comment length             2 bytes  32\n *    disk number start               2 bytes  34\n *    internal file attributes        2 bytes  36\n *    external file attributes        4 bytes  38\n *    relative offset of local header 4 bytes  42\n */\nexport const FileHeader = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 8);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 6),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 10),\n            compressedSize: UINT32_LE.get(array, 20),\n            uncompressedSize: UINT32_LE.get(array, 24),\n            filenameLength: UINT16_LE.get(array, 28),\n            extraFieldLength: UINT16_LE.get(array, 30),\n            fileCommentLength: UINT16_LE.get(array, 32),\n            relativeOffsetOfLocalHeader: UINT32_LE.get(array, 42),\n            filename: null\n        };\n    }, len: 46\n};\n", "import { StringType, UINT32_LE } from 'token-types';\nimport { decompressSync } from 'fflate';\nimport initDebug from 'debug';\nimport { DataDescriptor, EndOfCentralDirectoryRecordToken, FileHeader, LocalFileHeaderToken, Signature } from \"./ZipToken.js\";\nfunction signatureToArray(signature) {\n    const signatureBytes = new Uint8Array(UINT32_LE.len);\n    UINT32_LE.put(signatureBytes, 0, signature);\n    return signatureBytes;\n}\nconst debug = initDebug('tokenizer:inflate');\nconst syncBufferSize = 256 * 1024;\nconst ddSignatureArray = signatureToArray(Signature.DataDescriptor);\nconst eocdSignatureBytes = signatureToArray(Signature.EndOfCentralDirectory);\nexport class ZipHandler {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.syncBuffer = new Uint8Array(syncBufferSize);\n    }\n    async isZip() {\n        return await this.peekSignature() === Signature.LocalFileHeader;\n    }\n    peekSignature() {\n        return this.tokenizer.peekToken(UINT32_LE);\n    }\n    async findEndOfCentralDirectoryLocator() {\n        const randomReadTokenizer = this.tokenizer;\n        const chunkLength = Math.min(16 * 1024, randomReadTokenizer.fileInfo.size);\n        const buffer = this.syncBuffer.subarray(0, chunkLength);\n        await this.tokenizer.readBuffer(buffer, { position: randomReadTokenizer.fileInfo.size - chunkLength });\n        // Search the buffer from end to beginning for EOCD signature\n        // const signature = 0x06054b50;\n        for (let i = buffer.length - 4; i >= 0; i--) {\n            // Compare 4 bytes directly without calling readUInt32LE\n            if (buffer[i] === eocdSignatureBytes[0] &&\n                buffer[i + 1] === eocdSignatureBytes[1] &&\n                buffer[i + 2] === eocdSignatureBytes[2] &&\n                buffer[i + 3] === eocdSignatureBytes[3]) {\n                return randomReadTokenizer.fileInfo.size - chunkLength + i;\n            }\n        }\n        return -1;\n    }\n    async readCentralDirectory() {\n        if (!this.tokenizer.supportsRandomAccess()) {\n            debug('Cannot reading central-directory without random-read support');\n            return;\n        }\n        debug('Reading central-directory...');\n        const pos = this.tokenizer.position;\n        const offset = await this.findEndOfCentralDirectoryLocator();\n        if (offset > 0) {\n            debug('Central-directory 32-bit signature found');\n            const eocdHeader = await this.tokenizer.readToken(EndOfCentralDirectoryRecordToken, offset);\n            const files = [];\n            this.tokenizer.setPosition(eocdHeader.offsetOfStartOfCd);\n            for (let n = 0; n < eocdHeader.nrOfEntriesOfSize; ++n) {\n                const entry = await this.tokenizer.readToken(FileHeader);\n                if (entry.signature !== Signature.CentralFileHeader) {\n                    throw new Error('Expected Central-File-Header signature');\n                }\n                entry.filename = await this.tokenizer.readToken(new StringType(entry.filenameLength, 'utf-8'));\n                await this.tokenizer.ignore(entry.extraFieldLength);\n                await this.tokenizer.ignore(entry.fileCommentLength);\n                files.push(entry);\n                debug(`Add central-directory file-entry: n=${n + 1}/${files.length}: filename=${files[n].filename}`);\n            }\n            this.tokenizer.setPosition(pos);\n            return files;\n        }\n        this.tokenizer.setPosition(pos);\n    }\n    async unzip(fileCb) {\n        const entries = await this.readCentralDirectory();\n        if (entries) {\n            // Use Central Directory to iterate over files\n            return this.iterateOverCentralDirectory(entries, fileCb);\n        }\n        // Scan Zip files for local-file-header\n        let stop = false;\n        do {\n            const zipHeader = await this.readLocalFileHeader();\n            if (!zipHeader)\n                break;\n            const next = fileCb(zipHeader);\n            stop = !!next.stop;\n            let fileData = undefined;\n            await this.tokenizer.ignore(zipHeader.extraFieldLength);\n            if (zipHeader.dataDescriptor && zipHeader.compressedSize === 0) {\n                const chunks = [];\n                let len = syncBufferSize;\n                debug('Compressed-file-size unknown, scanning for next data-descriptor-signature....');\n                let nextHeaderIndex = -1;\n                while (nextHeaderIndex < 0 && len === syncBufferSize) {\n                    len = await this.tokenizer.peekBuffer(this.syncBuffer, { mayBeLess: true });\n                    nextHeaderIndex = indexOf(this.syncBuffer.subarray(0, len), ddSignatureArray);\n                    const size = nextHeaderIndex >= 0 ? nextHeaderIndex : len;\n                    if (next.handler) {\n                        const data = new Uint8Array(size);\n                        await this.tokenizer.readBuffer(data);\n                        chunks.push(data);\n                    }\n                    else {\n                        // Move position to the next header if found, skip the whole buffer otherwise\n                        await this.tokenizer.ignore(size);\n                    }\n                }\n                debug(`Found data-descriptor-signature at pos=${this.tokenizer.position}`);\n                if (next.handler) {\n                    await this.inflate(zipHeader, mergeArrays(chunks), next.handler);\n                }\n            }\n            else {\n                if (next.handler) {\n                    debug(`Reading compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    fileData = new Uint8Array(zipHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n                else {\n                    debug(`Ignoring compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    await this.tokenizer.ignore(zipHeader.compressedSize);\n                }\n            }\n            debug(`Reading data-descriptor at pos=${this.tokenizer.position}`);\n            if (zipHeader.dataDescriptor) {\n                // await this.tokenizer.ignore(DataDescriptor.len);\n                const dataDescriptor = await this.tokenizer.readToken(DataDescriptor);\n                if (dataDescriptor.signature !== 0x08074b50) {\n                    throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position - DataDescriptor.len}`);\n                }\n            }\n        } while (!stop);\n    }\n    async iterateOverCentralDirectory(entries, fileCb) {\n        for (const fileHeader of entries) {\n            const next = fileCb(fileHeader);\n            if (next.handler) {\n                this.tokenizer.setPosition(fileHeader.relativeOffsetOfLocalHeader);\n                const zipHeader = await this.readLocalFileHeader();\n                if (zipHeader) {\n                    await this.tokenizer.ignore(zipHeader.extraFieldLength);\n                    const fileData = new Uint8Array(fileHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n            }\n            if (next.stop)\n                break;\n        }\n    }\n    inflate(zipHeader, fileData, cb) {\n        if (zipHeader.compressedMethod === 0) {\n            return cb(fileData);\n        }\n        debug(`Decompress filename=${zipHeader.filename}, compressed-size=${fileData.length}`);\n        const uncompressedData = decompressSync(fileData);\n        return cb(uncompressedData);\n    }\n    async readLocalFileHeader() {\n        const signature = await this.tokenizer.peekToken(UINT32_LE);\n        if (signature === Signature.LocalFileHeader) {\n            const header = await this.tokenizer.readToken(LocalFileHeaderToken);\n            header.filename = await this.tokenizer.readToken(new StringType(header.filenameLength, 'utf-8'));\n            return header;\n        }\n        if (signature === Signature.CentralFileHeader) {\n            return false;\n        }\n        if (signature === 0xE011CFD0) {\n            throw new Error('Encrypted ZIP');\n        }\n        throw new Error('Unexpected signature');\n    }\n}\nfunction indexOf(buffer, portion) {\n    const bufferLength = buffer.length;\n    const portionLength = portion.length;\n    // Return -1 if the portion is longer than the buffer\n    if (portionLength > bufferLength)\n        return -1;\n    // Search for the portion in the buffer\n    for (let i = 0; i <= bufferLength - portionLength; i++) {\n        let found = true;\n        for (let j = 0; j < portionLength; j++) {\n            if (buffer[i + j] !== portion[j]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            return i; // Return the starting offset\n        }\n    }\n    return -1; // Not found\n}\nfunction mergeArrays(chunks) {\n    // Concatenate chunks into a single Uint8Array\n    const totalLength = chunks.reduce((acc, curr) => acc + curr.length, 0);\n    const mergedArray = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n        mergedArray.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return mergedArray;\n}\n", "const objectToString = Object.prototype.toString;\nconst uint8ArrayStringified = '[object Uint8Array]';\nconst arrayBufferStringified = '[object ArrayBuffer]';\n\nfunction isType(value, typeConstructor, typeStringified) {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\tif (value.constructor === typeConstructor) {\n\t\treturn true;\n\t}\n\n\treturn objectToString.call(value) === typeStringified;\n}\n\nexport function isUint8Array(value) {\n\treturn isType(value, Uint8Array, uint8ArrayStringified);\n}\n\nfunction isArrayBuffer(value) {\n\treturn isType(value, ArrayBuffer, arrayBufferStringified);\n}\n\nfunction isUint8ArrayOrArrayBuffer(value) {\n\treturn isUint8Array(value) || isArrayBuffer(value);\n}\n\nexport function assertUint8Array(value) {\n\tif (!isUint8Array(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function assertUint8ArrayOrArrayBuffer(value) {\n\tif (!isUint8ArrayOrArrayBuffer(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function toUint8Array(value) {\n\tif (value instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(value);\n\t}\n\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t}\n\n\tthrow new TypeError(`Unsupported value, got \\`${typeof value}\\`.`);\n}\n\nexport function concatUint8Arrays(arrays, totalLength) {\n\tif (arrays.length === 0) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\ttotalLength ??= arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n\n\tconst returnValue = new Uint8Array(totalLength);\n\n\tlet offset = 0;\n\tfor (const array of arrays) {\n\t\tassertUint8Array(array);\n\t\treturnValue.set(array, offset);\n\t\toffset += array.length;\n\t}\n\n\treturn returnValue;\n}\n\nexport function areUint8ArraysEqual(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line unicorn/no-for-loop\n\tfor (let index = 0; index < a.length; index++) {\n\t\tif (a[index] !== b[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function compareUint8Arrays(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tconst length = Math.min(a.length, b.length);\n\n\tfor (let index = 0; index < length; index++) {\n\t\tconst diff = a[index] - b[index];\n\t\tif (diff !== 0) {\n\t\t\treturn Math.sign(diff);\n\t\t}\n\t}\n\n\t// At this point, all the compared elements are equal.\n\t// The shorter array should come first if the arrays are of different lengths.\n\treturn Math.sign(a.length - b.length);\n}\n\nconst cachedDecoders = {\n\tutf8: new globalThis.TextDecoder('utf8'),\n};\n\nexport function uint8ArrayToString(array, encoding = 'utf8') {\n\tassertUint8ArrayOrArrayBuffer(array);\n\tcachedDecoders[encoding] ??= new globalThis.TextDecoder(encoding);\n\treturn cachedDecoders[encoding].decode(array);\n}\n\nfunction assertString(value) {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nexport function stringToUint8Array(string) {\n\tassertString(string);\n\treturn cachedEncoder.encode(string);\n}\n\nfunction base64ToBase64Url(base64) {\n\treturn base64.replaceAll('+', '-').replaceAll('/', '_').replace(/=+$/, '');\n}\n\nfunction base64UrlToBase64(base64url) {\n\tconst base64 = base64url.replaceAll('-', '+').replaceAll('_', '/');\n\tconst padding = (4 - (base64.length % 4)) % 4;\n\treturn base64 + '='.repeat(padding);\n}\n\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\n// Important: Keep this value divisible by 3 so intermediate chunks produce no Base64 padding.\nconst MAX_BLOCK_SIZE = 65_535;\n\nexport function uint8ArrayToBase64(array, {urlSafe = false} = {}) {\n\tassertUint8Array(array);\n\n\tlet base64 = '';\n\n\tfor (let index = 0; index < array.length; index += MAX_BLOCK_SIZE) {\n\t\tconst chunk = array.subarray(index, index + MAX_BLOCK_SIZE);\n\t\t// Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n\t\tbase64 += globalThis.btoa(String.fromCodePoint.apply(undefined, chunk));\n\t}\n\n\treturn urlSafe ? base64ToBase64Url(base64) : base64;\n}\n\nexport function base64ToUint8Array(base64String) {\n\tassertString(base64String);\n\treturn Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), x => x.codePointAt(0));\n}\n\nexport function stringToBase64(string, {urlSafe = false} = {}) {\n\tassertString(string);\n\treturn uint8ArrayToBase64(stringToUint8Array(string), {urlSafe});\n}\n\nexport function base64ToString(base64String) {\n\tassertString(base64String);\n\treturn uint8ArrayToString(base64ToUint8Array(base64String));\n}\n\nconst byteToHexLookupTable = Array.from({length: 256}, (_, index) => index.toString(16).padStart(2, '0'));\n\nexport function uint8ArrayToHex(array) {\n\tassertUint8Array(array);\n\n\t// Concatenating a string is faster than using an array.\n\tlet hexString = '';\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- Max performance is critical.\n\tfor (let index = 0; index < array.length; index++) {\n\t\thexString += byteToHexLookupTable[array[index]];\n\t}\n\n\treturn hexString;\n}\n\nconst hexToDecimalLookupTable = {\n\t0: 0,\n\t1: 1,\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\ta: 10,\n\tb: 11,\n\tc: 12,\n\td: 13,\n\te: 14,\n\tf: 15,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15,\n};\n\nexport function hexToUint8Array(hexString) {\n\tassertString(hexString);\n\n\tif (hexString.length % 2 !== 0) {\n\t\tthrow new Error('Invalid Hex string length.');\n\t}\n\n\tconst resultLength = hexString.length / 2;\n\tconst bytes = new Uint8Array(resultLength);\n\n\tfor (let index = 0; index < resultLength; index++) {\n\t\tconst highNibble = hexToDecimalLookupTable[hexString[index * 2]];\n\t\tconst lowNibble = hexToDecimalLookupTable[hexString[(index * 2) + 1]];\n\n\t\tif (highNibble === undefined || lowNibble === undefined) {\n\t\t\tthrow new Error(`Invalid Hex character encountered at position ${index * 2}`);\n\t\t}\n\n\t\tbytes[index] = (highNibble << 4) | lowNibble; // eslint-disable-line no-bitwise\n\t}\n\n\treturn bytes;\n}\n\n/**\n@param {DataView} view\n@returns {number}\n*/\nexport function getUintBE(view) {\n\tconst {byteLength} = view;\n\n\tif (byteLength === 6) {\n\t\treturn (view.getUint16(0) * (2 ** 32)) + view.getUint32(2);\n\t}\n\n\tif (byteLength === 5) {\n\t\treturn (view.getUint8(0) * (2 ** 32)) + view.getUint32(1);\n\t}\n\n\tif (byteLength === 4) {\n\t\treturn view.getUint32(0);\n\t}\n\n\tif (byteLength === 3) {\n\t\treturn (view.getUint8(0) * (2 ** 16)) + view.getUint16(1);\n\t}\n\n\tif (byteLength === 2) {\n\t\treturn view.getUint16(0);\n\t}\n\n\tif (byteLength === 1) {\n\t\treturn view.getUint8(0);\n\t}\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {number}\n*/\nexport function indexOf(array, value) {\n\tconst arrayLength = array.length;\n\tconst valueLength = value.length;\n\n\tif (valueLength === 0) {\n\t\treturn -1;\n\t}\n\n\tif (valueLength > arrayLength) {\n\t\treturn -1;\n\t}\n\n\tconst validOffsetLength = arrayLength - valueLength;\n\n\tfor (let index = 0; index <= validOffsetLength; index++) {\n\t\tlet isMatch = true;\n\t\tfor (let index2 = 0; index2 < valueLength; index2++) {\n\t\t\tif (array[index + index2] !== value[index2]) {\n\t\t\t\tisMatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isMatch) {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {boolean}\n*/\nexport function includes(array, value) {\n\treturn indexOf(array, value) !== -1;\n}\n", "import {StringType} from 'token-types';\n\nexport function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n\tconst readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n", "export const extensions = [\n\t'jpg',\n\t'png',\n\t'apng',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'xcf',\n\t'cr2',\n\t'cr3',\n\t'orf',\n\t'arw',\n\t'dng',\n\t'nef',\n\t'rw2',\n\t'raf',\n\t'tif',\n\t'bmp',\n\t'icns',\n\t'jxr',\n\t'psd',\n\t'indd',\n\t'zip',\n\t'tar',\n\t'rar',\n\t'gz',\n\t'bz2',\n\t'7z',\n\t'dmg',\n\t'mp4',\n\t'mid',\n\t'mkv',\n\t'webm',\n\t'mov',\n\t'avi',\n\t'mpg',\n\t'mp2',\n\t'mp3',\n\t'm4a',\n\t'oga',\n\t'ogg',\n\t'ogv',\n\t'opus',\n\t'flac',\n\t'wav',\n\t'spx',\n\t'amr',\n\t'pdf',\n\t'epub',\n\t'elf',\n\t'macho',\n\t'exe',\n\t'swf',\n\t'rtf',\n\t'wasm',\n\t'woff',\n\t'woff2',\n\t'eot',\n\t'ttf',\n\t'otf',\n\t'ttc',\n\t'ico',\n\t'flv',\n\t'ps',\n\t'xz',\n\t'sqlite',\n\t'nes',\n\t'crx',\n\t'xpi',\n\t'cab',\n\t'deb',\n\t'ar',\n\t'rpm',\n\t'Z',\n\t'lz',\n\t'cfb',\n\t'mxf',\n\t'mts',\n\t'blend',\n\t'bpg',\n\t'docx',\n\t'pptx',\n\t'xlsx',\n\t'3gp',\n\t'3g2',\n\t'j2c',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'mj2',\n\t'aif',\n\t'qcp',\n\t'odt',\n\t'ods',\n\t'odp',\n\t'xml',\n\t'mobi',\n\t'heic',\n\t'cur',\n\t'ktx',\n\t'ape',\n\t'wv',\n\t'dcm',\n\t'ics',\n\t'glb',\n\t'pcap',\n\t'dsf',\n\t'lnk',\n\t'alias',\n\t'voc',\n\t'ac3',\n\t'm4v',\n\t'm4p',\n\t'm4b',\n\t'f4v',\n\t'f4p',\n\t'f4b',\n\t'f4a',\n\t'mie',\n\t'asf',\n\t'ogm',\n\t'ogx',\n\t'mpc',\n\t'arrow',\n\t'shp',\n\t'aac',\n\t'mp1',\n\t'it',\n\t's3m',\n\t'xm',\n\t'skp',\n\t'avif',\n\t'eps',\n\t'lzh',\n\t'pgp',\n\t'asar',\n\t'stl',\n\t'chm',\n\t'3mf',\n\t'zst',\n\t'jxl',\n\t'vcf',\n\t'jls',\n\t'pst',\n\t'dwg',\n\t'parquet',\n\t'class',\n\t'arj',\n\t'cpio',\n\t'ace',\n\t'avro',\n\t'icc',\n\t'fbx',\n\t'vsdx',\n\t'vtt',\n\t'apk',\n\t'drc',\n\t'lz4',\n\t'potx',\n\t'xltx',\n\t'dotx',\n\t'xltm',\n\t'ott',\n\t'ots',\n\t'otp',\n\t'odg',\n\t'otg',\n\t'xlsm',\n\t'docm',\n\t'dotm',\n\t'potm',\n\t'pptm',\n\t'jar',\n\t'rm',\n\t'ppsm',\n\t'ppsx',\n];\n\nexport const mimeTypes = [\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/webp',\n\t'image/flif',\n\t'image/x-xcf',\n\t'image/x-canon-cr2',\n\t'image/x-canon-cr3',\n\t'image/tiff',\n\t'image/bmp',\n\t'image/vnd.ms-photo',\n\t'image/vnd.adobe.photoshop',\n\t'application/x-indesign',\n\t'application/epub+zip',\n\t'application/x-xpinstall',\n\t'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text',\n\t'application/vnd.oasis.opendocument.spreadsheet',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t'application/zip',\n\t'application/x-tar',\n\t'application/x-rar-compressed',\n\t'application/gzip',\n\t'application/x-bzip2',\n\t'application/x-7z-compressed',\n\t'application/x-apple-diskimage',\n\t'application/vnd.apache.arrow.file',\n\t'video/mp4',\n\t'audio/midi',\n\t'video/matroska',\n\t'video/webm',\n\t'video/quicktime',\n\t'video/vnd.avi',\n\t'audio/wav',\n\t'audio/qcelp',\n\t'audio/x-ms-asf',\n\t'video/x-ms-asf',\n\t'application/vnd.ms-asf',\n\t'video/mpeg',\n\t'video/3gpp',\n\t'audio/mpeg',\n\t'audio/mp4', // RFC 4337\n\t'video/ogg',\n\t'audio/ogg',\n\t'audio/ogg; codecs=opus',\n\t'application/ogg',\n\t'audio/flac',\n\t'audio/ape',\n\t'audio/wavpack',\n\t'audio/amr',\n\t'application/pdf',\n\t'application/x-elf',\n\t'application/x-mach-binary',\n\t'application/x-msdownload',\n\t'application/x-shockwave-flash',\n\t'application/rtf',\n\t'application/wasm',\n\t'font/woff',\n\t'font/woff2',\n\t'application/vnd.ms-fontobject',\n\t'font/ttf',\n\t'font/otf',\n\t'font/collection',\n\t'image/x-icon',\n\t'video/x-flv',\n\t'application/postscript',\n\t'application/eps',\n\t'application/x-xz',\n\t'application/x-sqlite3',\n\t'application/x-nintendo-nes-rom',\n\t'application/x-google-chrome-extension',\n\t'application/vnd.ms-cab-compressed',\n\t'application/x-deb',\n\t'application/x-unix-archive',\n\t'application/x-rpm',\n\t'application/x-compress',\n\t'application/x-lzip',\n\t'application/x-cfb',\n\t'application/x-mie',\n\t'application/mxf',\n\t'video/mp2t',\n\t'application/x-blender',\n\t'image/bpg',\n\t'image/j2c',\n\t'image/jp2',\n\t'image/jpx',\n\t'image/jpm',\n\t'image/mj2',\n\t'audio/aiff',\n\t'application/xml',\n\t'application/x-mobipocket-ebook',\n\t'image/heif',\n\t'image/heif-sequence',\n\t'image/heic',\n\t'image/heic-sequence',\n\t'image/icns',\n\t'image/ktx',\n\t'application/dicom',\n\t'audio/x-musepack',\n\t'text/calendar',\n\t'text/vcard',\n\t'text/vtt',\n\t'model/gltf-binary',\n\t'application/vnd.tcpdump.pcap',\n\t'audio/x-dsf', // Non-standard\n\t'application/x.ms.shortcut', // Invented by us\n\t'application/x.apple.alias', // Invented by us\n\t'audio/x-voc',\n\t'audio/vnd.dolby.dd-raw',\n\t'audio/x-m4a',\n\t'image/apng',\n\t'image/x-olympus-orf',\n\t'image/x-sony-arw',\n\t'image/x-adobe-dng',\n\t'image/x-nikon-nef',\n\t'image/x-panasonic-rw2',\n\t'image/x-fujifilm-raf',\n\t'video/x-m4v',\n\t'video/3gpp2',\n\t'application/x-esri-shape',\n\t'audio/aac',\n\t'audio/x-it',\n\t'audio/x-s3m',\n\t'audio/x-xm',\n\t'video/MP1S',\n\t'video/MP2P',\n\t'application/vnd.sketchup.skp',\n\t'image/avif',\n\t'application/x-lzh-compressed',\n\t'application/pgp-encrypted',\n\t'application/x-asar',\n\t'model/stl',\n\t'application/vnd.ms-htmlhelp',\n\t'model/3mf',\n\t'image/jxl',\n\t'application/zstd',\n\t'image/jls',\n\t'application/vnd.ms-outlook',\n\t'image/vnd.dwg',\n\t'application/vnd.apache.parquet',\n\t'application/java-vm',\n\t'application/x-arj',\n\t'application/x-cpio',\n\t'application/x-ace-compressed',\n\t'application/avro',\n\t'application/vnd.iccprofile',\n\t'application/x.autodesk.fbx', // Invented by us\n\t'application/vnd.visio',\n\t'application/vnd.android.package-archive',\n\t'application/vnd.google.draco', // Invented by us\n\t'application/x-lz4', // Invented by us\n\t'application/vnd.openxmlformats-officedocument.presentationml.template',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n\t'application/vnd.ms-excel.template.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text-template',\n\t'application/vnd.oasis.opendocument.spreadsheet-template',\n\t'application/vnd.oasis.opendocument.presentation-template',\n\t'application/vnd.oasis.opendocument.graphics',\n\t'application/vnd.oasis.opendocument.graphics-template',\n\t'application/vnd.ms-excel.sheet.macroenabled.12',\n\t'application/vnd.ms-word.document.macroenabled.12',\n\t'application/vnd.ms-word.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t'application/java-archive',\n\t'application/vnd.rn-realmedia',\n];\n", "/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport {ZipHandler} from '@tokenizer/inflate';\nimport {getUintBE} from 'uint8array-extras';\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream, options) {\n\treturn new FileTypeParser(options).fromStream(stream);\n}\n\nexport async function fileTypeFromBuffer(input, options) {\n\treturn new FileTypeParser(options).fromBuffer(input);\n}\n\nexport async function fileTypeFromBlob(blob, options) {\n\treturn new FileTypeParser(options).fromBlob(blob);\n}\n\nfunction getFileTypeFromMimeType(mimeType) {\n\tmimeType = mimeType.toLowerCase();\n\tswitch (mimeType) {\n\t\tcase 'application/epub+zip':\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text-template':\n\t\t\treturn {\n\t\t\t\text: 'ott',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet-template':\n\t\t\treturn {\n\t\t\t\text: 'ots',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation-template':\n\t\t\treturn {\n\t\t\t\text: 'otp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics':\n\t\t\treturn {\n\t\t\t\text: 'odg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics-template':\n\t\t\treturn {\n\t\t\t\text: 'otg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.slideshow':\n\t\t\treturn {\n\t\t\t\text: 'ppsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\treturn {\n\t\t\t\text: 'xlsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.sheet.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xlsm',\n\t\t\t\tmime: 'application/vnd.ms-excel.sheet.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.template':\n\t\t\treturn {\n\t\t\t\text: 'xltx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xltm',\n\t\t\t\tmime: 'application/vnd.ms-excel.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.slideshow.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'ppsm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\treturn {\n\t\t\t\text: 'docx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.document.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'docm',\n\t\t\t\tmime: 'application/vnd.ms-word.document.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.template':\n\t\t\treturn {\n\t\t\t\text: 'dotx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.template.macroenabledtemplate':\n\t\t\treturn {\n\t\t\t\text: 'dotm',\n\t\t\t\tmime: 'application/vnd.ms-word.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.template':\n\t\t\treturn {\n\t\t\t\text: 'potx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'potm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n\t\t\treturn {\n\t\t\t\text: 'pptx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.presentation.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'pptm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-visio.drawing':\n\t\t\treturn {\n\t\t\t\text: 'vsdx',\n\t\t\t\tmime: 'application/vnd.visio',\n\t\t\t};\n\t\tcase 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml':\n\t\t\treturn {\n\t\t\t\text: '3mf',\n\t\t\t\tmime: 'model/3mf',\n\t\t\t};\n\t\tdefault:\n\t}\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer, options) {\n\treturn new FileTypeParser(options).fromTokenizer(tokenizer);\n}\n\nexport async function fileTypeStream(webStream, options) {\n\treturn new FileTypeParser(options).toDetectionStream(webStream, options);\n}\n\nexport class FileTypeParser {\n\tconstructor(options) {\n\t\tthis.options = {\n\t\t\tmpegOffsetTolerance: 0,\n\t\t\t...options,\n\t\t};\n\n\t\tthis.detectors = [...(options?.customDetectors ?? []),\n\t\t\t{id: 'core', detect: this.detectConfident},\n\t\t\t{id: 'core.imprecise', detect: this.detectImprecise}];\n\t\tthis.tokenizerOptions = {\n\t\t\tabortSignal: options?.signal,\n\t\t};\n\t}\n\n\tasync fromTokenizer(tokenizer) {\n\t\tconst initialPosition = tokenizer.position;\n\n\t\t// Iterate through all file-type detectors\n\t\tfor (const detector of this.detectors) {\n\t\t\tconst fileType = await detector.detect(tokenizer);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\n\t\t\tif (initialPosition !== tokenizer.position) {\n\t\t\t\treturn undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n\t\t\t}\n\t\t}\n\t}\n\n\tasync fromBuffer(input) {\n\t\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t\t}\n\n\t\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\t\tif (!(buffer?.length > 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.fromTokenizer(strtok3.fromBuffer(buffer, this.tokenizerOptions));\n\t}\n\n\tasync fromBlob(blob) {\n\t\treturn this.fromStream(blob.stream());\n\t}\n\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await strtok3.fromWebStream(stream, this.tokenizerOptions);\n\t\ttry {\n\t\t\treturn await this.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(stream, options) {\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\t\tlet detectedFileType;\n\t\tlet firstChunk;\n\n\t\tconst reader = stream.getReader({mode: 'byob'});\n\t\ttry {\n\t\t\t// Read the first chunk from the stream\n\t\t\tconst {value: chunk, done} = await reader.read(new Uint8Array(sampleSize));\n\t\t\tfirstChunk = chunk;\n\t\t\tif (!done && chunk) {\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to detect the file type from the chunk\n\t\t\t\t\tdetectedFileType = await this.fromBuffer(chunk.subarray(0, sampleSize));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\t\tthrow error; // Re-throw non-EndOfStreamError\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedFileType = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirstChunk = chunk;\n\t\t} finally {\n\t\t\treader.releaseLock(); // Ensure the reader is released\n\t\t}\n\n\t\t// Create a new ReadableStream to manage locking issues\n\t\tconst transformStream = new TransformStream({\n\t\t\tasync start(controller) {\n\t\t\t\tcontroller.enqueue(firstChunk); // Enqueue the initial chunk\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\t// Pass through the chunks without modification\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t});\n\n\t\tconst newStream = stream.pipeThrough(transformStream);\n\t\tnewStream.fileType = detectedFileType;\n\n\t\treturn newStream;\n\t}\n\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\t// Detections with a high degree of certainty in identifying the correct file type\n\tdetectConfident = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.detectConfident(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'avro',\n\t\t\t\tmime: 'application/avro',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\tlet fileType;\n\t\t\tawait new ZipHandler(tokenizer).unzip(zipHeader => {\n\t\t\t\tswitch (zipHeader.filename) {\n\t\t\t\t\tcase 'META-INF/mozilla.rsa':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'META-INF/MANIFEST.MF':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'jar',\n\t\t\t\t\t\t\tmime: 'application/java-archive',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'mimetype':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tconst mimeType = new TextDecoder('utf-8').decode(fileData).trim();\n\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase '[Content_Types].xml':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tlet xmlContent = new TextDecoder('utf-8').decode(fileData);\n\t\t\t\t\t\t\t\tconst endPos = xmlContent.indexOf('.main+xml\"');\n\t\t\t\t\t\t\t\tif (endPos === -1) {\n\t\t\t\t\t\t\t\t\tconst mimeType = 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml';\n\t\t\t\t\t\t\t\t\tif (xmlContent.includes(`ContentType=\"${mimeType}\"`)) {\n\t\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\txmlContent = xmlContent.slice(0, Math.max(0, endPos));\n\t\t\t\t\t\t\t\t\tconst firstPos = xmlContent.lastIndexOf('\"');\n\t\t\t\t\t\t\t\t\tconst mimeType = xmlContent.slice(Math.max(0, firstPos + 1));\n\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (/classes\\d*\\.dex/.test(zipHeader.filename)) {\n\t\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\t\text: 'apk',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.android.package-archive',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn {stop: true};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = new Uint8Array(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/ogg; codecs=opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/file/file/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = new Uint8Array(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst idField = await readField();\n\t\t\t\tconst lengthField = await readField();\n\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n\t\t\t\tconst idView = new DataView(idField.buffer);\n\t\t\t\tconst lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: getUintBE(idView),\n\t\t\t\t\tlen: getUintBE(lengthView),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n\t\t\t\t\t\treturn rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst documentType = await readChildren(re.len);\n\n\t\t\tswitch (documentType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1') || this.checkString('PARE')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/vnd.apache.parquet',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ttcf')) {\n\t\t\treturn {\n\t\t\t\text: 'ttc',\n\t\t\t\tmime: 'font/collection',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n\t\t\treturn {\n\t\t\t\text: 'macho',\n\t\t\t\tmime: 'application/x-mach-binary',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x22, 0x4D, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'lz4',\n\t\t\t\tmime: 'application/x-lz4', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('.RMF')) {\n\t\t\treturn {\n\t\t\t\text: 'rm',\n\t\t\t\tmime: 'application/vnd.rn-realmedia',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.checkString('DRACO')) {\n\t\t\treturn {\n\t\t\t\text: 'drc',\n\t\t\t\tmime: 'application/vnd.google.draco', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('WEBVTT')\n\t\t\t&&\t(\n\t\t\t\t// One of LF, CR, tab, space, or end of file must follow \"WEBVTT\" per the spec (see `fixture/fixture-vtt-*.vtt` for examples). Note that `\\0` is technically the null character (there is no such thing as an EOF character). However, checking for `\\0` gives us the same result as checking for the end of the stream.\n\t\t\t\t(['\\n', '\\r', '\\t', ' ', '\\0'].some(char7 => this.checkString(char7, {offset: 6}))))\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'vtt',\n\t\t\t\tmime: 'text/vtt',\n\t\t\t};\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'latin1')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/vnd.apache.arrow.file',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webp',\n\t\t\t\t\tmime: 'image/webp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/wav',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = new Uint8Array(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = new Uint8Array(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (this.check([0x61, 0x63, 0x73, 0x70], {offset: 36})) {\n\t\t\treturn {\n\t\t\t\text: 'icc',\n\t\t\t\tmime: 'application/vnd.iccprofile',\n\t\t\t};\n\t\t}\n\n\t\t// ACE: requires 14 bytes in the buffer\n\t\tif (this.checkString('**ACE', {offset: 7}) && this.checkString('**', {offset: 12})) {\n\t\t\treturn {\n\t\t\t\text: 'ace',\n\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = new TextDecoder().decode(this.buffer.subarray(16, jsonSize + 16));\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Kaydara FBX Binary  \\u0000')) {\n\t\t\treturn {\n\t\t\t\text: 'fbx',\n\t\t\t\tmime: 'application/x.autodesk.fbx', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif ((this.checkString('ustar', {offset: 257}) && (this.checkString('\\0', {offset: 262}) || this.checkString(' ', {offset: 262})))\n\t\t\t|| (this.check([0, 0, 0, 0, 0, 0], {offset: 257}) && tarHeaderChecksumMatches(this.buffer))) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\t};\n\t// Detections with limited supporting data, resulting in a higher likelihood of false positives\n\tdetectImprecise = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Read initial sample size of 8 bytes\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(8, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\t// Adjust buffer to `mpegOffsetTolerance`\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(2 + this.options.mpegOffsetTolerance, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= (2 + this.options.mpegOffsetTolerance)) {\n\t\t\tfor (let depth = 0; depth <= this.options.mpegOffsetTolerance; ++depth) {\n\t\t\t\tconst type = this.scanMpeg(depth);\n\t\t\t\tif (type) {\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8) {\n\t\t\t\t\tconst someId1 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 8);\n\t\t\t\t\tconst someId2 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 10);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(someId1 === 0x1C && someId2 === 0xFE)\n\t\t\t\t\t\t|| (someId1 === 0x1F && someId2 === 0x0B)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\tScan check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE).\n\n\t@param offset - Offset to scan for sync-preamble.\n\t@returns {{ext: string, mime: string}}\n\t*/\n\tscanMpeg(offset) {\n\t\tif (this.check([0xFF, 0xE0], {offset, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: offset + 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: offset + 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n", "function limiter (count) {\n  var outstanding = 0\n  var jobs = []\n\n  function remove () {\n    outstanding--\n\n    if (outstanding < count) {\n      dequeue()\n    }\n  }\n\n  function dequeue () {\n    var job = jobs.shift()\n    semaphore.queue = jobs.length\n\n    if (job) {\n      run(job.fn).then(job.resolve).catch(job.reject)\n    }\n  }\n\n  function queue (fn) {\n    return new Promise(function (resolve, reject) {\n      jobs.push({fn: fn, resolve: resolve, reject: reject})\n      semaphore.queue = jobs.length\n    })\n  }\n\n  function run (fn) {\n    outstanding++\n    try {\n      return Promise.resolve(fn()).then(function (result) {\n        remove()\n        return result\n      }, function (error) {\n        remove()\n        throw error\n      })\n    } catch (err) {\n      remove()\n      return Promise.reject(err)\n    }\n  }\n\n  var semaphore = function (fn) {\n    if (outstanding >= count) {\n      return queue(fn)\n    } else {\n      return run(fn)\n    }\n  }\n\n  return semaphore\n}\n\nfunction map (items, mapper) {\n  var failed = false\n\n  var limit = this\n\n  return Promise.all(items.map(function () {\n    var args = arguments\n    return limit(function () {\n      if (!failed) {\n        return mapper.apply(undefined, args).catch(function (e) {\n          failed = true\n          throw e\n        })\n      }\n    })\n  }))\n}\n\nfunction addExtras (fn) {\n  fn.queue = 0\n  fn.map = map\n  return fn\n}\n\nmodule.exports = function (count) {\n  if (count) {\n    return addExtras(limiter(count))\n  } else {\n    return addExtras(function (fn) {\n      return fn()\n    })\n  }\n}\n", "import { Env } from \"bun\"\nimport { Context } from \"elysia\"\nimport { app } from \"./routes/app\"\n\nexport default {\n  async fetch(\n    request: Request,\n    env: Env,\n    ctx: Context,\n\n  ): Promise<Response> {\n    // const expectedAuth = `Basic ${btoa(`admin:${env.BASIC_AUTH_PASSWORD}`)}`\n    const pathname = new URL(request.url).pathname\n\n    return await app.fetch(request)\n  },\n}\n\n// /**\n//  * MockEx Core\n//  *\n//  * @author    Afaan Bilal\n//  * @copyright Eonyx Infotech LLP\n//  * @link      https://eonyx.io\n//  */\n\n// import cors from \"@elysiajs/cors\";\n// import { Elysia } from \"elysia\";\n// import { TodoController } from \"./controllers/todo.controller\";\n\n// const app = new Elysia()\n//   .use(cors({\n//     origin: process.env.CLIENT_ORIGIN,\n//     methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\n//     credentials: true,\n//     allowedHeaders: [\"Content-Type\", \"Authorization\"],\n//   }))\n//   .use(TodoController)\n//   .listen(process.env.PORT!);\n", "\r\nimport Elysia from \"elysia\";\r\nimport { pokemonController } from \"./pokemon\";\r\nimport { TodoController } from \"../controllers/todo.controller\";\r\n\r\n\r\nexport const app = new Elysia({ aot: false }).onError(({ code, error }) => {\r\n    console.log(code)\r\n    return new Response(JSON.stringify({ error: error.toString() ?? code }), { status: 500 })\r\n}).use(TodoController)\r\n\r\n\r\napp.get('/', () => \"Hello from Elysia \uD83E\uDD8A\")", "// node_modules/memoirist/dist/index.mjs\nvar createNode = (part, inert) => {\n  let inertMap = inert?.length ? {} : null;\n  if (inertMap)\n    for (let child of inert)\n      inertMap[child.part.charCodeAt(0)] = child;\n  return {\n    part,\n    store: null,\n    inert: inertMap,\n    params: null,\n    wildcardStore: null\n  };\n}, cloneNode = (node, part) => ({\n  ...node,\n  part\n}), createParamNode = (name) => ({\n  name,\n  store: null,\n  inert: null\n}), Memoirist = class _Memoirist {\n  constructor(config = {}) {\n    this.config = config, config.lazy && (this.find = this.lazyFind), config.onParam && !Array.isArray(config.onParam) && (this.config.onParam = [\n      this.config.onParam\n    ]);\n  }\n  root = {};\n  history = [];\n  deferred = [];\n  static regex = {\n    static: /:.+?(?=\\/|$)/,\n    params: /:.+?(?=\\/|$)/g,\n    optionalParams: /(\\/:\\w+\\?)/g\n  };\n  lazyFind = (method, url) => this.config.lazy ? (this.build(), this.find(method, url)) : this.find;\n  build() {\n    if (this.config.lazy) {\n      for (let [method, path, store] of this.deferred)\n        this.add(method, path, store, { lazy: !1, ignoreHistory: !0 });\n      this.deferred = [], this.find = (method, url) => {\n        let root = this.root[method];\n        return root ? matchRoute(\n          url,\n          url.length,\n          root,\n          0,\n          this.config.onParam\n        ) : null;\n      };\n    }\n  }\n  add(method, path, store, {\n    ignoreError = !1,\n    ignoreHistory = !1,\n    lazy = this.config.lazy\n  } = {}) {\n    if (lazy)\n      return this.find = this.lazyFind, this.deferred.push([method, path, store]), store;\n    if (typeof path != \"string\")\n      throw new TypeError(\"Route path must be a string\");\n    path === \"\" ? path = \"/\" : path[0] !== \"/\" && (path = `/${path}`);\n    let isWildcard = path[path.length - 1] === \"*\", optionalParams = path.match(_Memoirist.regex.optionalParams);\n    if (optionalParams) {\n      let originalPath = path.replaceAll(\"?\", \"\");\n      this.add(method, originalPath, store, {\n        ignoreError,\n        ignoreHistory,\n        lazy\n      });\n      for (let i = 0; i < optionalParams.length; i++) {\n        let newPath = path.replace(optionalParams[i], \"\");\n        this.add(method, newPath, store, {\n          ignoreError: !0,\n          ignoreHistory,\n          lazy\n        });\n      }\n      return store;\n    }\n    if (optionalParams && (path = path.replaceAll(\"?\", \"\")), this.history.find(([m, p, s]) => m === method && p === path))\n      return store;\n    (isWildcard || optionalParams && path.charCodeAt(path.length - 1) === 63) && (path = path.slice(0, -1)), ignoreHistory || this.history.push([method, path, store]);\n    let inertParts = path.split(_Memoirist.regex.static), paramParts = path.match(_Memoirist.regex.params) || [];\n    inertParts[inertParts.length - 1] === \"\" && inertParts.pop();\n    let node;\n    this.root[method] ? node = this.root[method] : node = this.root[method] = createNode(\"/\");\n    let paramPartsIndex = 0;\n    for (let i = 0; i < inertParts.length; ++i) {\n      let part = inertParts[i];\n      if (i > 0) {\n        let param = paramParts[paramPartsIndex++].slice(1);\n        if (node.params === null)\n          node.params = createParamNode(param);\n        else if (node.params.name !== param) {\n          if (ignoreError)\n            return store;\n          throw new Error(\n            `Cannot create route \"${path}\" with parameter \"${param}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n          );\n        }\n        let params = node.params;\n        if (params.inert === null) {\n          node = params.inert = createNode(part);\n          continue;\n        }\n        node = params.inert;\n      }\n      for (let j = 0; ; ) {\n        if (j === part.length) {\n          if (j < node.part.length) {\n            let childNode = cloneNode(node, node.part.slice(j));\n            Object.assign(node, createNode(part, [childNode]));\n          }\n          break;\n        }\n        if (j === node.part.length) {\n          node.inert === null && (node.inert = {});\n          let inert = node.inert[part.charCodeAt(j)];\n          if (inert) {\n            node = inert, part = part.slice(j), j = 0;\n            continue;\n          }\n          let childNode = createNode(part.slice(j));\n          node.inert[part.charCodeAt(j)] = childNode, node = childNode;\n          break;\n        }\n        if (part[j] !== node.part[j]) {\n          let existingChild = cloneNode(node, node.part.slice(j)), newChild = createNode(part.slice(j));\n          Object.assign(\n            node,\n            createNode(node.part.slice(0, j), [\n              existingChild,\n              newChild\n            ])\n          ), node = newChild;\n          break;\n        }\n        ++j;\n      }\n    }\n    if (paramPartsIndex < paramParts.length) {\n      let name = paramParts[paramPartsIndex].slice(1);\n      if (node.params === null)\n        node.params = createParamNode(name);\n      else if (node.params.name !== name) {\n        if (ignoreError)\n          return store;\n        throw new Error(\n          `Cannot create route \"${path}\" with parameter \"${name}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n        );\n      }\n      return node.params.store === null && (node.params.store = store), node.params.store;\n    }\n    return isWildcard ? (node.wildcardStore === null && (node.wildcardStore = store), node.wildcardStore) : (node.store === null && (node.store = store), node.store);\n  }\n  find(method, url) {\n    let root = this.root[method];\n    return root ? matchRoute(\n      url,\n      url.length,\n      root,\n      0,\n      this.config.onParam\n    ) : null;\n  }\n}, matchRoute = (url, urlLength, node, startIndex, onParam) => {\n  let part = node.part, length = part.length, endIndex = startIndex + length;\n  if (length > 1) {\n    if (endIndex > urlLength)\n      return null;\n    if (length < 15) {\n      for (let i = 1, j = startIndex + 1; i < length; ++i, ++j)\n        if (part.charCodeAt(i) !== url.charCodeAt(j))\n          return null;\n    } else if (url.slice(startIndex, endIndex) !== part)\n      return null;\n  }\n  if (endIndex === urlLength)\n    return node.store !== null ? {\n      store: node.store,\n      params: {}\n    } : node.wildcardStore !== null ? {\n      store: node.wildcardStore,\n      params: { \"*\": \"\" }\n    } : null;\n  if (node.inert !== null) {\n    let inert = node.inert[url.charCodeAt(endIndex)];\n    if (inert !== void 0) {\n      let route = matchRoute(url, urlLength, inert, endIndex, onParam);\n      if (route !== null)\n        return route;\n    }\n  }\n  if (node.params !== null) {\n    let { store, name, inert } = node.params, slashIndex = url.indexOf(\"/\", endIndex);\n    if (slashIndex !== endIndex) {\n      if (slashIndex === -1 || slashIndex >= urlLength) {\n        if (store !== null) {\n          let params = {};\n          if (params[name] = url.substring(endIndex, urlLength), onParam)\n            for (let i = 0; i < onParam.length; i++) {\n              let temp = onParam[i](params[name], name);\n              temp !== void 0 && (params[name] = temp);\n            }\n          return {\n            store,\n            params\n          };\n        }\n      } else if (inert !== null) {\n        let route = matchRoute(\n          url,\n          urlLength,\n          inert,\n          slashIndex,\n          onParam\n        );\n        if (route !== null) {\n          if (route.params[name] = url.substring(endIndex, slashIndex), onParam)\n            for (let i = 0; i < onParam.length; i++) {\n              let temp = onParam[i](route.params[name], name);\n              temp !== void 0 && (route.params[name] = temp);\n            }\n          return route;\n        }\n      }\n    }\n  }\n  return node.wildcardStore !== null ? {\n    store: node.wildcardStore,\n    params: {\n      \"*\": url.substring(endIndex, urlLength)\n    }\n  } : null;\n};\n\n// src/index.ts\nimport {\n  Kind as Kind5\n} from \"@sinclair/typebox\";\nimport fastDecodeURIComponent from \"fast-decode-uri-component\";\n\n// src/type-system/index.ts\nimport { Type, Kind as Kind2 } from \"@sinclair/typebox\";\n\n// src/type-system/format.ts\nimport { FormatRegistry } from \"@sinclair/typebox\";\nvar fullFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: getTime(!0),\n  \"date-time\": getDateTime(!0),\n  \"iso-time\": getTime(!1),\n  \"iso-date-time\": getDateTime(!1),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\": /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\": /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: { type: \"number\", validate: validateInt32 },\n  // signed 64 bit integer\n  int64: { type: \"number\", validate: validateInt64 },\n  // C-type float\n  float: { type: \"number\", validate: validateNumber },\n  // C-type double\n  double: { type: \"number\", validate: validateNumber },\n  // hint to the UI to hide input strings\n  password: !0,\n  // unchecked string payload\n  binary: !0\n};\nfunction isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/, DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction date(str) {\n  let matches = DATE.exec(str);\n  if (!matches) return !1;\n  let year = +matches[1], month = +matches[2], day = +matches[3];\n  return month >= 1 && month <= 12 && day >= 1 && day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nfunction getTime(strictTimeZone) {\n  return function(str) {\n    let matches = TIME.exec(str);\n    if (!matches) return !1;\n    let hr = +matches[1], min = +matches[2], sec = +matches[3], tz = matches[4], tzSign = matches[5] === \"-\" ? -1 : 1, tzH = +(matches[6] || 0), tzM = +(matches[7] || 0);\n    if (tzH > 23 || tzM > 59 || strictTimeZone && !tz) return !1;\n    if (hr <= 23 && min <= 59 && sec < 60) return !0;\n    let utcMin = min - tzM * tzSign, utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61;\n  };\n}\nvar parseDateTimeEmptySpace = (str) => str.charCodeAt(str.length - 6) === 32 ? str.slice(0, -6) + \"+\" + str.slice(-5) : str, DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction getDateTime(strictTimeZone) {\n  let time = getTime(strictTimeZone);\n  return function(str) {\n    let dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1]);\n  };\n}\nvar NOT_URI_FRAGMENT = /\\/|:/, URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\nvar BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;\nfunction byte(str) {\n  return BYTE.lastIndex = 0, BYTE.test(str);\n}\nvar MIN_INT32 = -(2 ** 31), MAX_INT32 = 2 ** 31 - 1;\nfunction validateInt32(value) {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32;\n}\nfunction validateInt64(value) {\n  return Number.isInteger(value);\n}\nfunction validateNumber() {\n  return !0;\n}\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return !1;\n  try {\n    return new RegExp(str), !0;\n  } catch {\n    return !1;\n  }\n}\nvar isISO8601 = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/, isFormalDate = /(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT(?:\\+|-)\\d{4}\\s\\([^)]+\\)/, isShortenDate = /^(?:(?:(?:(?:0?[1-9]|[12][0-9]|3[01])[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:19|20)\\d{2})|(?:(?:19|20)\\d{2}[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:0?[1-9]|[12][0-9]|3[01]))))(?:\\s(?:1[012]|0?[1-9]):[0-5][0-9](?::[0-5][0-9])?(?:\\s[AP]M)?)?$/, _validateDate = fullFormats.date, _validateDateTime = fullFormats[\"date-time\"];\nFormatRegistry.Has(\"date\") || FormatRegistry.Set(\"date\", (value) => {\n  let temp = parseDateTimeEmptySpace(value).replace(/\"/g, \"\");\n  if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDate(temp)) {\n    let date2 = new Date(temp);\n    if (!Number.isNaN(date2.getTime())) return !0;\n  }\n  return !1;\n});\nFormatRegistry.Has(\"date-time\") || FormatRegistry.Set(\"date-time\", (value) => {\n  let temp = value.replace(/\"/g, \"\");\n  if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDateTime(temp)) {\n    let date2 = new Date(temp);\n    if (!Number.isNaN(date2.getTime())) return !0;\n  }\n  return !1;\n});\nObject.entries(fullFormats).forEach((formatEntry) => {\n  let [formatName, formatValue] = formatEntry;\n  FormatRegistry.Has(formatName) || (formatValue instanceof RegExp ? FormatRegistry.Set(formatName, (value) => formatValue.test(value)) : typeof formatValue == \"function\" && FormatRegistry.Set(formatName, formatValue));\n});\nFormatRegistry.Has(\"numeric\") || FormatRegistry.Set(\"numeric\", (value) => !!value && !isNaN(+value));\nFormatRegistry.Has(\"integer\") || FormatRegistry.Set(\n  \"integer\",\n  (value) => !!value && Number.isInteger(+value)\n);\nFormatRegistry.Has(\"boolean\") || FormatRegistry.Set(\n  \"boolean\",\n  (value) => value === \"true\" || value === \"false\"\n);\nFormatRegistry.Has(\"ObjectString\") || FormatRegistry.Set(\"ObjectString\", (value) => {\n  let start = value.charCodeAt(0);\n  if ((start === 9 || start === 10 || start === 32) && (start = value.trimStart().charCodeAt(0)), start !== 123 && start !== 91) return !1;\n  try {\n    return JSON.parse(value), !0;\n  } catch {\n    return !1;\n  }\n});\nFormatRegistry.Has(\"ArrayString\") || FormatRegistry.Set(\"ArrayString\", (value) => {\n  let start = value.charCodeAt(0);\n  if ((start === 9 || start === 10 || start === 32) && (start = value.trimStart().charCodeAt(0)), start !== 123 && start !== 91) return !1;\n  try {\n    return JSON.parse(value), !0;\n  } catch {\n    return !1;\n  }\n});\n\n// src/type-system/utils.ts\nimport {\n  Kind,\n  TypeRegistry,\n  Unsafe\n} from \"@sinclair/typebox\";\nimport { Value as Value2 } from \"@sinclair/typebox/value\";\nimport { TypeCompiler } from \"@sinclair/typebox/compiler\";\n\n// src/universal/utils.ts\nvar isBun = typeof Bun < \"u\";\n\n// src/universal/file.ts\nvar mime = {\n  aac: \"audio/aac\",\n  abw: \"application/x-abiword\",\n  ai: \"application/postscript\",\n  arc: \"application/octet-stream\",\n  avi: \"video/x-msvideo\",\n  azw: \"application/vnd.amazon.ebook\",\n  bin: \"application/octet-stream\",\n  bz: \"application/x-bzip\",\n  bz2: \"application/x-bzip2\",\n  csh: \"application/x-csh\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  doc: \"application/msword\",\n  dll: \"application/octet-stream\",\n  eot: \"application/vnd.ms-fontobject\",\n  epub: \"application/epub+zip\",\n  gif: \"image/gif\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/x-icon\",\n  ics: \"text/calendar\",\n  jar: \"application/java-archive\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  json: \"application/json\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  mp2: \"audio/mpeg\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mpa: \"video/mpeg\",\n  mpe: \"video/mpeg\",\n  mpeg: \"video/mpeg\",\n  mpkg: \"application/vnd.apple.installer+xml\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  oga: \"audio/ogg\",\n  ogv: \"video/ogg\",\n  ogx: \"application/ogg\",\n  otf: \"font/otf\",\n  png: \"image/png\",\n  pdf: \"application/pdf\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  rar: \"application/x-rar-compressed\",\n  rtf: \"application/rtf\",\n  sh: \"application/x-sh\",\n  svg: \"image/svg+xml\",\n  swf: \"application/x-shockwave-flash\",\n  tar: \"application/x-tar\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  ts: \"application/typescript\",\n  ttf: \"font/ttf\",\n  txt: \"text/plain\",\n  vsd: \"application/vnd.visio\",\n  wav: \"audio/x-wav\",\n  weba: \"audio/webm\",\n  webm: \"video/webm\",\n  webp: \"image/webp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  xhtml: \"application/xhtml+xml\",\n  xls: \"application/vnd.ms-excel\",\n  xlsx: \"application/vnd.ms-excel\",\n  xlsx_OLD: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  xml: \"application/xml\",\n  xul: \"application/vnd.mozilla.xul+xml\",\n  zip: \"application/zip\",\n  \"3gp\": \"video/3gpp\",\n  \"3gp_DOES_NOT_CONTAIN_VIDEO\": \"audio/3gpp\",\n  \"3gp2\": \"video/3gpp2\",\n  \"3gp2_DOES_NOT_CONTAIN_VIDEO\": \"audio/3gpp2\",\n  \"7z\": \"application/x-7z-compressed\"\n}, getFileExtension = (path) => {\n  let index = path.lastIndexOf(\".\");\n  return index === -1 ? \"\" : path.slice(index + 1);\n}, file = (path) => new ElysiaFile(path), createReadStream, stat, ElysiaFile = class {\n  constructor(path) {\n    this.path = path;\n    if (isBun) this.value = Bun.file(path);\n    else if (typeof window < \"u\")\n      console.warn(\"Browser environment does not support file\");\n    else if (!createReadStream || !stat)\n      try {\n        this.value = import(\"fs\").then((fs) => (createReadStream = fs.createReadStream, fs.createReadStream(path))), this.stats = import(\"fs/promises\").then((fs) => (stat = fs.stat, fs.stat(path)));\n      } catch {\n      }\n    else\n      this.value = createReadStream(path), this.stats = stat(path);\n  }\n  get type() {\n    return (\n      // @ts-ignore\n      mime[getFileExtension(this.path)] || \"application/octet-stream\"\n    );\n  }\n  get length() {\n    return isBun ? this.value.size : this.stats?.then((x) => x.size) ?? 0;\n  }\n};\n\n// src/error.ts\nimport { Value } from \"@sinclair/typebox/value\";\n\n// src/utils.ts\nvar hasHeaderShorthand = \"toJSON\" in new Headers(), replaceUrlPath = (url, pathname) => {\n  let urlObject = new URL(url);\n  return urlObject.pathname = pathname, urlObject.toString();\n}, isClass = (v) => typeof v == \"function\" && /^\\s*class\\s+/.test(v.toString()) || // Handle Object.create(null)\nv.toString && // Handle import * as Sentry from '@sentry/bun'\n// This also handle [object Date], [object Array]\n// and FFI value like [object Prisma]\nv.toString().startsWith(\"[object \") && v.toString() !== \"[object Object]\" || // If object prototype is not pure, then probably a class-like object\nisNotEmpty(Object.getPrototypeOf(v)), isObject = (item) => item && typeof item == \"object\" && !Array.isArray(item), mergeDeep = (target, source, options) => {\n  let skipKeys = options?.skipKeys, override = options?.override ?? !0;\n  if (!isObject(target) || !isObject(source)) return target;\n  for (let [key, value] of Object.entries(source))\n    if (!skipKeys?.includes(key)) {\n      if (!isObject(value) || !(key in target) || isClass(value)) {\n        (override || !(key in target)) && (target[key] = value);\n        continue;\n      }\n      target[key] = mergeDeep(\n        target[key],\n        value,\n        { skipKeys, override }\n      );\n    }\n  return target;\n}, mergeCookie = (a, b) => {\n  let v = mergeDeep(Object.assign({}, a), b, {\n    skipKeys: [\"properties\"]\n  });\n  return v.properties && delete v.properties, v;\n}, mergeObjectArray = (a, b) => {\n  if (!b) return a;\n  let array = [], checksums = [];\n  if (a) {\n    Array.isArray(a) || (a = [a]);\n    for (let item of a)\n      array.push(item), item.checksum && checksums.push(item.checksum);\n  }\n  if (b) {\n    Array.isArray(b) || (b = [b]);\n    for (let item of b)\n      checksums.includes(item.checksum) || array.push(item);\n  }\n  return array;\n}, primitiveHooks = [\n  \"start\",\n  \"request\",\n  \"parse\",\n  \"transform\",\n  \"resolve\",\n  \"beforeHandle\",\n  \"afterHandle\",\n  \"mapResponse\",\n  \"afterResponse\",\n  \"trace\",\n  \"error\",\n  \"stop\",\n  \"body\",\n  \"headers\",\n  \"params\",\n  \"query\",\n  \"response\",\n  \"type\",\n  \"detail\"\n], primitiveHookMap = primitiveHooks.reduce(\n  (acc, x) => (acc[x] = !0, acc),\n  {}\n), isRecordNumber = (x) => typeof x == \"object\" && Object.keys(x).every((x2) => !isNaN(+x2)), mergeResponse = (a, b) => isRecordNumber(a) && isRecordNumber(b) ? Object.assign({}, a, b) : a && !isRecordNumber(a) && isRecordNumber(b) ? Object.assign({ 200: a }, b) : b ?? a, mergeSchemaValidator = (a, b) => !a && !b ? {\n  body: void 0,\n  headers: void 0,\n  params: void 0,\n  query: void 0,\n  cookie: void 0,\n  response: void 0\n} : {\n  body: b?.body ?? a?.body,\n  headers: b?.headers ?? a?.headers,\n  params: b?.params ?? a?.params,\n  query: b?.query ?? a?.query,\n  cookie: b?.cookie ?? a?.cookie,\n  // @ts-ignore ? This order is correct - SaltyAom\n  response: mergeResponse(\n    // @ts-ignore\n    a?.response,\n    // @ts-ignore\n    b?.response\n  )\n}, mergeHook = (a, b) => {\n  if (!Object.values(b).find((x) => x != null))\n    return { ...a };\n  let hook = {\n    ...a,\n    ...b,\n    // Merge local hook first\n    // @ts-ignore\n    body: b?.body ?? a?.body,\n    // @ts-ignore\n    headers: b?.headers ?? a?.headers,\n    // @ts-ignore\n    params: b?.params ?? a?.params,\n    // @ts-ignore\n    query: b?.query ?? a?.query,\n    // @ts-ignore\n    cookie: b?.cookie ?? a?.cookie,\n    // ? This order is correct - SaltyAom\n    response: mergeResponse(\n      // @ts-ignore\n      a?.response,\n      // @ts-ignore\n      b?.response\n    ),\n    type: a?.type || b?.type,\n    detail: mergeDeep(\n      // @ts-ignore\n      b?.detail ?? {},\n      // @ts-ignore\n      a?.detail ?? {}\n    ),\n    parse: mergeObjectArray(a?.parse, b?.parse),\n    transform: mergeObjectArray(a?.transform, b?.transform),\n    beforeHandle: mergeObjectArray(\n      mergeObjectArray(\n        // @ts-ignore\n        fnToContainer(a?.resolve, \"resolve\"),\n        a?.beforeHandle\n      ),\n      mergeObjectArray(\n        fnToContainer(b.resolve, \"resolve\"),\n        b?.beforeHandle\n      )\n    ),\n    afterHandle: mergeObjectArray(a?.afterHandle, b?.afterHandle),\n    mapResponse: mergeObjectArray(a?.mapResponse, b?.mapResponse),\n    afterResponse: mergeObjectArray(\n      a?.afterResponse,\n      b?.afterResponse\n    ),\n    trace: mergeObjectArray(a?.trace, b?.trace),\n    error: mergeObjectArray(a?.error, b?.error)\n  };\n  return hook.resolve && delete hook.resolve, hook;\n}, lifeCycleToArray = (a) => {\n  a.parse && !Array.isArray(a.parse) && (a.parse = [a.parse]), a.transform && !Array.isArray(a.transform) && (a.transform = [a.transform]), a.afterHandle && !Array.isArray(a.afterHandle) && (a.afterHandle = [a.afterHandle]), a.mapResponse && !Array.isArray(a.mapResponse) && (a.mapResponse = [a.mapResponse]), a.afterResponse && !Array.isArray(a.afterResponse) && (a.afterResponse = [a.afterResponse]), a.trace && !Array.isArray(a.trace) && (a.trace = [a.trace]), a.error && !Array.isArray(a.error) && (a.error = [a.error]);\n  let beforeHandle = [];\n  return a.resolve && (beforeHandle = fnToContainer(\n    // @ts-expect-error\n    Array.isArray(a.resolve) ? a.resolve : [a.resolve],\n    \"resolve\"\n  ), delete a.resolve), a.beforeHandle && (beforeHandle.length ? beforeHandle = beforeHandle.concat(\n    Array.isArray(a.beforeHandle) ? a.beforeHandle : [a.beforeHandle]\n  ) : beforeHandle = Array.isArray(a.beforeHandle) ? a.beforeHandle : [a.beforeHandle]), beforeHandle.length && (a.beforeHandle = beforeHandle), a;\n}, isBun2 = typeof Bun < \"u\", hasBunHash = isBun2 && typeof Bun.hash == \"function\", checksum = (s) => {\n  if (hasBunHash) return Bun.hash(s);\n  let h = 9;\n  for (let i = 0; i < s.length; ) h = Math.imul(h ^ s.charCodeAt(i++), 9 ** 9);\n  return h = h ^ h >>> 9;\n}, injectChecksum = (checksum2, x) => {\n  if (!x) return;\n  if (!Array.isArray(x)) {\n    let fn = x;\n    return checksum2 && !fn.checksum && (fn.checksum = checksum2), fn.scope === \"scoped\" && (fn.scope = \"local\"), fn;\n  }\n  let fns = [...x];\n  for (let fn of fns)\n    checksum2 && !fn.checksum && (fn.checksum = checksum2), fn.scope === \"scoped\" && (fn.scope = \"local\");\n  return fns;\n}, mergeLifeCycle = (a, b, checksum2) => ({\n  start: mergeObjectArray(\n    a.start,\n    injectChecksum(checksum2, b?.start)\n  ),\n  request: mergeObjectArray(\n    a.request,\n    injectChecksum(checksum2, b?.request)\n  ),\n  parse: mergeObjectArray(\n    a.parse,\n    injectChecksum(checksum2, b?.parse)\n  ),\n  transform: mergeObjectArray(\n    a.transform,\n    injectChecksum(checksum2, b?.transform)\n  ),\n  beforeHandle: mergeObjectArray(\n    mergeObjectArray(\n      // @ts-ignore\n      fnToContainer(a.resolve, \"resolve\"),\n      a.beforeHandle\n    ),\n    injectChecksum(\n      checksum2,\n      mergeObjectArray(\n        fnToContainer(b?.resolve, \"resolve\"),\n        b?.beforeHandle\n      )\n    )\n  ),\n  afterHandle: mergeObjectArray(\n    a.afterHandle,\n    injectChecksum(checksum2, b?.afterHandle)\n  ),\n  mapResponse: mergeObjectArray(\n    a.mapResponse,\n    injectChecksum(checksum2, b?.mapResponse)\n  ),\n  afterResponse: mergeObjectArray(\n    a.afterResponse,\n    injectChecksum(checksum2, b?.afterResponse)\n  ),\n  // Already merged on Elysia._use, also logic is more complicated, can't directly merge\n  trace: mergeObjectArray(\n    a.trace,\n    injectChecksum(checksum2, b?.trace)\n  ),\n  error: mergeObjectArray(\n    a.error,\n    injectChecksum(checksum2, b?.error)\n  ),\n  stop: mergeObjectArray(\n    a.stop,\n    injectChecksum(checksum2, b?.stop)\n  )\n}), asHookType = (fn, inject, { skipIfHasType = !1 }) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn))\n    return skipIfHasType ? fn.scope ??= inject : fn.scope = inject, fn;\n  for (let x of fn)\n    skipIfHasType ? x.scope ??= inject : x.scope = inject;\n  return fn;\n}, filterGlobal = (fn) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn))\n    switch (fn.scope) {\n      case \"global\":\n      case \"scoped\":\n        return { ...fn };\n      default:\n        return { fn };\n    }\n  let array = [];\n  for (let x of fn)\n    switch (x.scope) {\n      case \"global\":\n      case \"scoped\":\n        array.push({\n          ...x\n        });\n        break;\n    }\n  return array;\n}, filterGlobalHook = (hook) => ({\n  // rest is validator\n  ...hook,\n  type: hook?.type,\n  detail: hook?.detail,\n  parse: filterGlobal(hook?.parse),\n  transform: filterGlobal(hook?.transform),\n  beforeHandle: filterGlobal(hook?.beforeHandle),\n  afterHandle: filterGlobal(hook?.afterHandle),\n  mapResponse: filterGlobal(hook?.mapResponse),\n  afterResponse: filterGlobal(hook?.afterResponse),\n  error: filterGlobal(hook?.error),\n  trace: filterGlobal(hook?.trace)\n}), StatusMap = {\n  Continue: 100,\n  \"Switching Protocols\": 101,\n  Processing: 102,\n  \"Early Hints\": 103,\n  OK: 200,\n  Created: 201,\n  Accepted: 202,\n  \"Non-Authoritative Information\": 203,\n  \"No Content\": 204,\n  \"Reset Content\": 205,\n  \"Partial Content\": 206,\n  \"Multi-Status\": 207,\n  \"Already Reported\": 208,\n  \"Multiple Choices\": 300,\n  \"Moved Permanently\": 301,\n  Found: 302,\n  \"See Other\": 303,\n  \"Not Modified\": 304,\n  \"Temporary Redirect\": 307,\n  \"Permanent Redirect\": 308,\n  \"Bad Request\": 400,\n  Unauthorized: 401,\n  \"Payment Required\": 402,\n  Forbidden: 403,\n  \"Not Found\": 404,\n  \"Method Not Allowed\": 405,\n  \"Not Acceptable\": 406,\n  \"Proxy Authentication Required\": 407,\n  \"Request Timeout\": 408,\n  Conflict: 409,\n  Gone: 410,\n  \"Length Required\": 411,\n  \"Precondition Failed\": 412,\n  \"Payload Too Large\": 413,\n  \"URI Too Long\": 414,\n  \"Unsupported Media Type\": 415,\n  \"Range Not Satisfiable\": 416,\n  \"Expectation Failed\": 417,\n  \"I'm a teapot\": 418,\n  \"Misdirected Request\": 421,\n  \"Unprocessable Content\": 422,\n  Locked: 423,\n  \"Failed Dependency\": 424,\n  \"Too Early\": 425,\n  \"Upgrade Required\": 426,\n  \"Precondition Required\": 428,\n  \"Too Many Requests\": 429,\n  \"Request Header Fields Too Large\": 431,\n  \"Unavailable For Legal Reasons\": 451,\n  \"Internal Server Error\": 500,\n  \"Not Implemented\": 501,\n  \"Bad Gateway\": 502,\n  \"Service Unavailable\": 503,\n  \"Gateway Timeout\": 504,\n  \"HTTP Version Not Supported\": 505,\n  \"Variant Also Negotiates\": 506,\n  \"Insufficient Storage\": 507,\n  \"Loop Detected\": 508,\n  \"Not Extended\": 510,\n  \"Network Authentication Required\": 511\n}, InvertedStatusMap = Object.fromEntries(\n  Object.entries(StatusMap).map(([k, v]) => [v, k])\n);\nfunction removeTrailingEquals(digest) {\n  let trimmedDigest = digest;\n  for (; trimmedDigest.endsWith(\"=\"); )\n    trimmedDigest = trimmedDigest.slice(0, -1);\n  return trimmedDigest;\n}\nvar encoder = new TextEncoder(), signCookie = async (val, secret) => {\n  if (typeof val == \"object\" ? val = JSON.stringify(val) : typeof val != \"string\" && (val = val + \"\"), secret === null) throw new TypeError(\"Secret key must be provided.\");\n  let secretKey = await crypto.subtle.importKey(\n    \"raw\",\n    encoder.encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    !1,\n    [\"sign\"]\n  ), hmacBuffer = await crypto.subtle.sign(\n    \"HMAC\",\n    secretKey,\n    encoder.encode(val)\n  );\n  return val + \".\" + removeTrailingEquals(Buffer.from(hmacBuffer).toString(\"base64\"));\n}, unsignCookie = async (input, secret) => {\n  if (typeof input != \"string\")\n    throw new TypeError(\"Signed cookie string must be provided.\");\n  if (secret === null) throw new TypeError(\"Secret key must be provided.\");\n  let tentativeValue = input.slice(0, input.lastIndexOf(\".\"));\n  return await signCookie(tentativeValue, secret) === input ? tentativeValue : !1;\n}, traceBackMacro = (extension, property, manage) => {\n  if (!(!extension || typeof extension != \"object\" || !property))\n    for (let [key, value] of Object.entries(property)) {\n      if (primitiveHookMap[key] || !(key in extension)) continue;\n      let v = extension[key];\n      if (typeof v == \"function\") {\n        let hook = v(value);\n        if (typeof hook == \"object\")\n          for (let [k, v2] of Object.entries(hook))\n            manage(k)({\n              fn: v2\n            });\n      }\n      delete property[key];\n    }\n}, createMacroManager = ({\n  globalHook,\n  localHook\n}) => (stackName) => (type, fn) => {\n  if (typeof type == \"function\" && (type = {\n    fn: type\n  }), stackName === \"resolve\" && (type = {\n    ...type,\n    subType: \"resolve\"\n  }), localHook[stackName] || (localHook[stackName] = []), typeof localHook[stackName] == \"function\" && (localHook[stackName] = [localHook[stackName]]), Array.isArray(localHook[stackName]) || (localHook[stackName] = [localHook[stackName]]), \"fn\" in type || Array.isArray(type)) {\n    Array.isArray(type) ? localHook[stackName] = localHook[stackName].concat(type) : localHook[stackName].push(type);\n    return;\n  }\n  let { insert = \"after\", stack = \"local\" } = type;\n  typeof fn == \"function\" && (fn = { fn }), stack === \"global\" ? Array.isArray(fn) ? insert === \"before\" ? globalHook[stackName] = fn.concat(\n    globalHook[stackName]\n  ) : globalHook[stackName] = globalHook[stackName].concat(fn) : insert === \"before\" ? globalHook[stackName].unshift(fn) : globalHook[stackName].push(fn) : Array.isArray(fn) ? insert === \"before\" ? localHook[stackName] = fn.concat(localHook[stackName]) : localHook[stackName] = localHook[stackName].concat(fn) : insert === \"before\" ? localHook[stackName].unshift(fn) : localHook[stackName].push(fn);\n}, parseNumericString = (message) => {\n  if (typeof message == \"number\") return message;\n  if (message.length < 16) {\n    if (message.trim().length === 0) return null;\n    let length = Number(message);\n    return Number.isNaN(length) ? null : length;\n  }\n  if (message.length === 16) {\n    if (message.trim().length === 0) return null;\n    let number = Number(message);\n    return Number.isNaN(number) || number.toString() !== message ? null : number;\n  }\n  return null;\n}, isNumericString = (message) => parseNumericString(message) !== null, PromiseGroup = class {\n  constructor(onError = console.error, onFinally = () => {\n  }) {\n    this.onError = onError;\n    this.onFinally = onFinally;\n    this.root = null;\n    this.promises = [];\n  }\n  /**\n   * The number of promises still being awaited.\n   */\n  get size() {\n    return this.promises.length;\n  }\n  /**\n   * Add a promise to the group.\n   * @returns The promise that was added.\n   */\n  add(promise) {\n    return this.promises.push(promise), this.root ||= this.drain(), this.promises.length === 1 && this.then(this.onFinally), promise;\n  }\n  async drain() {\n    for (; this.promises.length > 0; ) {\n      try {\n        await this.promises[0];\n      } catch (error2) {\n        this.onError(error2);\n      }\n      this.promises.shift();\n    }\n    this.root = null;\n  }\n  // Allow the group to be awaited.\n  then(onfulfilled, onrejected) {\n    return (this.root ?? Promise.resolve()).then(onfulfilled, onrejected);\n  }\n}, fnToContainer = (fn, subType) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn)) {\n    if (typeof fn == \"function\" || typeof fn == \"string\")\n      return subType ? { fn, subType } : { fn };\n    if (\"fn\" in fn) return fn;\n  }\n  let fns = [];\n  for (let x of fn)\n    typeof x == \"function\" || typeof x == \"string\" ? fns.push(subType ? { fn: x, subType } : { fn: x }) : \"fn\" in x && fns.push(x);\n  return fns;\n}, localHookToLifeCycleStore = (a) => (a.start && (a.start = fnToContainer(a.start)), a.request && (a.request = fnToContainer(a.request)), a.parse && (a.parse = fnToContainer(a.parse)), a.transform && (a.transform = fnToContainer(a.transform)), a.beforeHandle && (a.beforeHandle = fnToContainer(a.beforeHandle)), a.afterHandle && (a.afterHandle = fnToContainer(a.afterHandle)), a.mapResponse && (a.mapResponse = fnToContainer(a.mapResponse)), a.afterResponse && (a.afterResponse = fnToContainer(a.afterResponse)), a.trace && (a.trace = fnToContainer(a.trace)), a.error && (a.error = fnToContainer(a.error)), a.stop && (a.stop = fnToContainer(a.stop)), a), lifeCycleToFn = (a) => {\n  let lifecycle = /* @__PURE__ */ Object.create(null);\n  return a.start?.map && (lifecycle.start = a.start.map((x) => x.fn)), a.request?.map && (lifecycle.request = a.request.map((x) => x.fn)), a.parse?.map && (lifecycle.parse = a.parse.map((x) => x.fn)), a.transform?.map && (lifecycle.transform = a.transform.map((x) => x.fn)), a.beforeHandle?.map && (lifecycle.beforeHandle = a.beforeHandle.map((x) => x.fn)), a.afterHandle?.map && (lifecycle.afterHandle = a.afterHandle.map((x) => x.fn)), a.mapResponse?.map && (lifecycle.mapResponse = a.mapResponse.map((x) => x.fn)), a.afterResponse?.map && (lifecycle.afterResponse = a.afterResponse.map((x) => x.fn)), a.error?.map && (lifecycle.error = a.error.map((x) => x.fn)), a.stop?.map && (lifecycle.stop = a.stop.map((x) => x.fn)), a.trace?.map ? lifecycle.trace = a.trace.map((x) => x.fn) : lifecycle.trace = [], lifecycle;\n}, cloneInference = (inference) => ({\n  body: inference.body,\n  cookie: inference.cookie,\n  headers: inference.headers,\n  query: inference.query,\n  set: inference.set,\n  server: inference.server,\n  path: inference.path,\n  route: inference.route,\n  url: inference.url\n}), redirect = (url, status2 = 302) => Response.redirect(url, status2), ELYSIA_FORM_DATA = Symbol(\"ElysiaFormData\"), ELYSIA_REQUEST_ID = Symbol(\"ElysiaRequestId\"), form = (items) => {\n  let formData = new FormData();\n  if (formData[ELYSIA_FORM_DATA] = {}, items)\n    for (let [key, value] of Object.entries(items)) {\n      if (Array.isArray(value)) {\n        formData[ELYSIA_FORM_DATA][key] = [];\n        for (let v of value)\n          value instanceof File ? formData.append(key, value, value.name) : value instanceof ElysiaFile ? formData.append(key, value.value, value.value?.name) : formData.append(key, value), formData[ELYSIA_FORM_DATA][key].push(value);\n        continue;\n      }\n      value instanceof File ? formData.append(key, value, value.name) : value instanceof ElysiaFile ? formData.append(key, value.value, value.value?.name) : formData.append(key, value), formData[ELYSIA_FORM_DATA][key] = value;\n    }\n  return formData;\n}, randomId = () => {\n  let uuid = crypto.randomUUID();\n  return uuid.slice(0, 8) + uuid.slice(24, 32);\n}, deduplicateChecksum = (array) => {\n  if (!array.length) return [];\n  let hashes = [];\n  for (let i = 0; i < array.length; i++) {\n    let item = array[i];\n    item.checksum && (hashes.includes(item.checksum) && (array.splice(i, 1), i--), hashes.push(item.checksum));\n  }\n  return array;\n}, promoteEvent = (events, as = \"scoped\") => {\n  if (events) {\n    if (as === \"scoped\") {\n      for (let event of events)\n        \"scope\" in event && event.scope === \"local\" && (event.scope = \"scoped\");\n      return;\n    }\n    for (let event of events) \"scope\" in event && (event.scope = \"global\");\n  }\n}, getLoosePath = (path) => path.charCodeAt(path.length - 1) === 47 ? path.slice(0, path.length - 1) : path + \"/\", isNotEmpty = (obj) => {\n  if (!obj) return !1;\n  for (let _ in obj) return !0;\n  return !1;\n}, encodePath = (path, { dynamic = !1 } = {}) => {\n  let encoded = encodeURIComponent(path).replace(/%2F/g, \"/\");\n  return dynamic && (encoded = encoded.replace(/%3A/g, \":\").replace(/%3F/g, \"?\")), encoded;\n}, supportPerMethodInlineHandler = (() => {\n  if (typeof Bun > \"u\") return !0;\n  let semver = Bun.version.split(\".\");\n  return !(+semver[0] < 1 || +semver[1] < 2 || +semver[2] < 14);\n})(), sse = (_payload) => {\n  if (_payload instanceof ReadableStream)\n    return _payload.sse = !0, _payload;\n  let payload = typeof _payload == \"string\" ? { data: _payload } : _payload;\n  return payload.sse = !0, payload.toSSE = () => {\n    let payloadString = \"\";\n    return payload.id !== void 0 && payload.id !== null && (payloadString += `id: ${payload.id}\n`), payload.event && (payloadString += `event: ${payload.event}\n`), payload.retry !== void 0 && (payloadString += `retry: ${payload.retry}\n`), payload.data === null ? payloadString += `data: null\n` : typeof payload.data == \"string\" ? payloadString += `data: ${payload.data}\n` : typeof payload.data == \"object\" && (payloadString += `data: ${JSON.stringify(payload.data)}\n`), payloadString && (payloadString += `\n`), payloadString;\n  }, payload;\n};\n\n// src/error.ts\nvar env = typeof Bun < \"u\" ? Bun.env : typeof process < \"u\" ? process?.env : void 0, ERROR_CODE = Symbol(\"ElysiaErrorCode\"), isProduction = (env?.NODE_ENV ?? env?.ENV) === \"production\", emptyHttpStatus = {\n  101: void 0,\n  204: void 0,\n  205: void 0,\n  304: void 0,\n  307: void 0,\n  308: void 0\n}, ElysiaCustomStatusResponse = class {\n  constructor(code, response) {\n    let res = response ?? (code in InvertedStatusMap ? (\n      // @ts-expect-error Always correct\n      InvertedStatusMap[code]\n    ) : code);\n    this.code = StatusMap[code] ?? code, code in emptyHttpStatus ? this.response = void 0 : this.response = res;\n  }\n}, status = (code, response) => new ElysiaCustomStatusResponse(code, response), error = status, InternalServerError = class extends Error {\n  constructor(message) {\n    super(message ?? \"INTERNAL_SERVER_ERROR\");\n    this.code = \"INTERNAL_SERVER_ERROR\";\n    this.status = 500;\n  }\n}, NotFoundError = class extends Error {\n  constructor(message) {\n    super(message ?? \"NOT_FOUND\");\n    this.code = \"NOT_FOUND\";\n    this.status = 404;\n  }\n}, ParseError = class extends Error {\n  constructor(cause) {\n    super(\"Bad Request\", {\n      cause\n    });\n    this.code = \"PARSE\";\n    this.status = 400;\n  }\n}, InvalidCookieSignature = class extends Error {\n  constructor(key, message) {\n    super(message ?? `\"${key}\" has invalid cookie signature`);\n    this.key = key;\n    this.code = \"INVALID_COOKIE_SIGNATURE\";\n    this.status = 400;\n  }\n}, mapValueError = (error2) => {\n  if (!error2)\n    return {\n      summary: void 0\n    };\n  let { message, path, value, type } = error2, property = path.slice(1).replaceAll(\"/\", \".\"), isRoot = path === \"\";\n  switch (type) {\n    case 42:\n      return {\n        ...error2,\n        summary: isRoot ? \"Value should not be provided\" : `Property '${property}' should not be provided`\n      };\n    case 45:\n      return {\n        ...error2,\n        summary: isRoot ? \"Value is missing\" : `Property '${property}' is missing`\n      };\n    case 50:\n      let quoteIndex = message.indexOf(\"'\"), format = message.slice(\n        quoteIndex + 1,\n        message.indexOf(\"'\", quoteIndex + 1)\n      );\n      return {\n        ...error2,\n        summary: isRoot ? \"Value should be an email\" : `Property '${property}' should be ${format}`\n      };\n    case 54:\n      return {\n        ...error2,\n        summary: `${message.slice(0, 9).trim()} property '${property}' to be ${message.slice(8).trim()} but found: ${value}`\n      };\n    case 62:\n      let union = error2.schema.anyOf.map((x) => `'${x?.format ?? x.type}'`).join(\", \");\n      return {\n        ...error2,\n        summary: isRoot ? `Value should be one of ${union}` : `Property '${property}' should be one of: ${union}`\n      };\n    default:\n      return { summary: message, ...error2 };\n  }\n}, InvalidFileType = class _InvalidFileType extends Error {\n  constructor(property, expected, message = `\"${property}\" has invalid file type`) {\n    super(message);\n    this.property = property;\n    this.expected = expected;\n    this.message = message;\n    this.code = \"INVALID_FILE_TYPE\";\n    this.status = 422;\n    Object.setPrototypeOf(this, _InvalidFileType.prototype);\n  }\n  toResponse(headers) {\n    return isProduction ? new Response(\n      JSON.stringify({\n        type: \"validation\",\n        on: \"body\"\n      }),\n      {\n        status: 422,\n        headers: {\n          ...headers,\n          \"content-type\": \"application/json\"\n        }\n      }\n    ) : new Response(\n      JSON.stringify({\n        type: \"validation\",\n        on: \"body\",\n        summary: \"Invalid file type\",\n        message: this.message,\n        property: this.property,\n        expected: this.expected\n      }),\n      {\n        status: 422,\n        headers: {\n          ...headers,\n          \"content-type\": \"application/json\"\n        }\n      }\n    );\n  }\n}, ValidationError = class _ValidationError extends Error {\n  constructor(type, validator, value, errors) {\n    value && typeof value == \"object\" && value instanceof ElysiaCustomStatusResponse && (value = value.response);\n    let error2 = errors?.First() ?? (\"Errors\" in validator ? validator.Errors(value).First() : Value.Errors(validator, value).First()), accessor = error2?.path || \"root\", schema = validator?.schema ?? validator, expected;\n    if (!isProduction)\n      try {\n        expected = Value.Create(schema);\n      } catch (error3) {\n        expected = {\n          type: \"Could not create expected value\",\n          // @ts-expect-error\n          message: error3?.message,\n          error: error3\n        };\n      }\n    let customError = error2?.schema?.message || error2?.schema?.error !== void 0 ? typeof error2.schema.error == \"function\" ? error2.schema.error(\n      isProduction ? {\n        type: \"validation\",\n        on: type,\n        found: value\n      } : {\n        type: \"validation\",\n        on: type,\n        value,\n        property: accessor,\n        message: error2?.message,\n        summary: mapValueError(error2).summary,\n        found: value,\n        expected,\n        errors: \"Errors\" in validator ? [\n          ...validator.Errors(\n            value\n          )\n        ].map(mapValueError) : [\n          ...Value.Errors(\n            validator,\n            value\n          )\n        ].map(mapValueError)\n      },\n      validator\n    ) : error2.schema.error : void 0, message = \"\";\n    customError !== void 0 ? message = typeof customError == \"object\" ? JSON.stringify(customError) : customError + \"\" : isProduction ? message = JSON.stringify({\n      type: \"validation\",\n      on: type,\n      found: value\n    }) : message = JSON.stringify(\n      {\n        type: \"validation\",\n        on: type,\n        property: accessor,\n        message: error2?.message,\n        summary: mapValueError(error2).summary,\n        expected,\n        found: value,\n        errors: \"Errors\" in validator ? [...validator.Errors(value)].map(mapValueError) : [...Value.Errors(validator, value)].map(\n          mapValueError\n        )\n      },\n      null,\n      2\n    );\n    super(message);\n    this.type = type;\n    this.validator = validator;\n    this.value = value;\n    this.code = \"VALIDATION\";\n    this.status = 422;\n    this.valueError = error2, this.expected = expected, this.customError = customError, Object.setPrototypeOf(this, _ValidationError.prototype);\n  }\n  get all() {\n    return \"Errors\" in this.validator ? [...this.validator.Errors(this.value)].map(mapValueError) : (\n      // @ts-ignore\n      [...Value.Errors(this.validator, this.value)].map(mapValueError)\n    );\n  }\n  static simplifyModel(validator) {\n    let model = \"schema\" in validator ? validator.schema : validator;\n    try {\n      return Value.Create(model);\n    } catch {\n      return model;\n    }\n  }\n  get model() {\n    return _ValidationError.simplifyModel(this.validator);\n  }\n  toResponse(headers) {\n    return new Response(this.message, {\n      status: 400,\n      headers: {\n        ...headers,\n        \"content-type\": \"application/json\"\n      }\n    });\n  }\n  /**\n   * Utility function to inherit add custom error and keep the original Validation error\n   *\n   * @since 1.3.14\n   *\n   * @example\n   * ```ts\n   * new Elysia()\n   *\t\t.onError(({ error, code }) => {\n   *\t\t\tif (code === 'VALIDATION') return error.detail(error.message)\n   *\t\t})\n   *\t\t.post('/', () => 'Hello World!', {\n   *\t\t\tbody: t.Object({\n   *\t\t\t\tx: t.Number({\n   *\t\t\t\t\terror: 'x must be a number'\n   *\t\t\t\t})\n   *\t\t\t})\n   *\t\t})\n   * ```\n   */\n  detail(message) {\n    if (!this.customError) return this.message;\n    let validator = this.validator, value = this.value, expected = this.expected, errors = this.all;\n    return isProduction ? {\n      type: \"validation\",\n      on: this.type,\n      found: value,\n      message\n    } : {\n      type: \"validation\",\n      on: this.type,\n      property: this.valueError?.path || \"root\",\n      message,\n      summary: mapValueError(this.valueError).summary,\n      found: value,\n      expected,\n      errors\n    };\n  }\n};\n\n// src/type-system/utils.ts\nvar tryParse = (v, schema) => {\n  try {\n    return JSON.parse(v);\n  } catch {\n    throw new ValidationError(\"property\", schema, v);\n  }\n};\nfunction createType(kind, func) {\n  return TypeRegistry.Has(kind) || TypeRegistry.Set(kind, func), (options = {}) => Unsafe({ ...options, [Kind]: kind });\n}\nvar compile = (schema) => {\n  try {\n    let compiler = TypeCompiler.Compile(schema);\n    return compiler.Create = () => Value2.Create(schema), compiler.Error = (v) => new ValidationError(\"property\", schema, v, compiler.Errors(v)), compiler;\n  } catch {\n    return {\n      Check: (v) => Value2.Check(schema, v),\n      CheckThrow: (v) => {\n        if (!Value2.Check(schema, v))\n          throw new ValidationError(\n            \"property\",\n            schema,\n            v,\n            Value2.Errors(schema, v)\n          );\n      },\n      Decode: (v) => Value2.Decode(schema, v),\n      Create: () => Value2.Create(schema),\n      Error: (v) => new ValidationError(\n        \"property\",\n        schema,\n        v,\n        Value2.Errors(schema, v)\n      )\n    };\n  }\n}, parseFileUnit = (size) => {\n  if (typeof size == \"string\")\n    switch (size.slice(-1)) {\n      case \"k\":\n        return +size.slice(0, size.length - 1) * 1024;\n      case \"m\":\n        return +size.slice(0, size.length - 1) * 1048576;\n      default:\n        return +size;\n    }\n  return size;\n}, checkFileExtension = (type, extension) => type.startsWith(extension) ? !0 : extension.charCodeAt(extension.length - 1) === 42 && extension.charCodeAt(extension.length - 2) === 47 && type.startsWith(extension.slice(0, -1)), _fileTypeFromBlobWarn = !1, warnIfFileTypeIsNotInstalled = () => {\n  _fileTypeFromBlobWarn || (console.warn(\n    \"[Elysia] Attempt to validate file type without 'file-type'. This may lead to security risks. We recommend installing 'file-type' to properly validate file extension.\"\n  ), _fileTypeFromBlobWarn = !0);\n}, loadFileType = async () => import(\"file-type\").then((x) => (_fileTypeFromBlob = x.fileTypeFromBlob, _fileTypeFromBlob)).catch(warnIfFileTypeIsNotInstalled), _fileTypeFromBlob, fileTypeFromBlob = (file2) => _fileTypeFromBlob ? _fileTypeFromBlob(file2) : loadFileType().then((mod) => {\n  if (mod) return mod(file2);\n}), validateFileExtension = async (file2, extension, name = file2?.name ?? \"\") => {\n  if (Array.isArray(file2))\n    return await Promise.all(\n      file2.map((f) => validateFileExtension(f, extension, name))\n    ), !0;\n  if (!file2) return !1;\n  let result = await fileTypeFromBlob(file2);\n  if (!result) throw new InvalidFileType(name, extension);\n  if (typeof extension == \"string\" && !checkFileExtension(result.mime, extension))\n    throw new InvalidFileType(name, extension);\n  for (let i = 0; i < extension.length; i++)\n    if (checkFileExtension(result.mime, extension[i])) return !0;\n  throw new InvalidFileType(name, extension);\n}, validateFile = (options, value) => {\n  if (value instanceof ElysiaFile) return !0;\n  if (!(value instanceof Blob) || options.minSize && value.size < parseFileUnit(options.minSize) || options.maxSize && value.size > parseFileUnit(options.maxSize))\n    return !1;\n  if (options.extension) {\n    if (typeof options.extension == \"string\")\n      return checkFileExtension(value.type, options.extension);\n    for (let i = 0; i < options.extension.length; i++)\n      if (checkFileExtension(value.type, options.extension[i]))\n        return !0;\n    return !1;\n  }\n  return !0;\n}, validationDetail = (message) => (error2) => ({\n  ...error2,\n  message\n});\n\n// src/type-system/index.ts\nimport {\n  TypeSystemPolicy,\n  TypeSystem,\n  TypeSystemDuplicateFormat,\n  TypeSystemDuplicateTypeKind\n} from \"@sinclair/typebox/system\";\nimport { TypeRegistry as TypeRegistry2, FormatRegistry as FormatRegistry2 } from \"@sinclair/typebox\";\nimport { TypeCompiler as TypeCompiler2, TypeCheck as TypeCheck2 } from \"@sinclair/typebox/compiler\";\nvar t = Object.assign({}, Type);\ncreateType(\n  \"UnionEnum\",\n  (schema, value) => (typeof value == \"number\" || typeof value == \"string\" || value === null) && schema.enum.includes(value)\n);\ncreateType(\n  \"ArrayBuffer\",\n  (schema, value) => value instanceof ArrayBuffer\n);\nvar internalFiles = createType(\n  \"Files\",\n  (options, value) => {\n    if (options.minItems && options.minItems > 1 && !Array.isArray(value))\n      return !1;\n    if (!Array.isArray(value)) return validateFile(options, value);\n    if (options.minItems && value.length < options.minItems || options.maxItems && value.length > options.maxItems) return !1;\n    for (let i = 0; i < value.length; i++)\n      if (!validateFile(options, value[i])) return !1;\n    return !0;\n  }\n), internalFormData = createType(\n  \"ElysiaForm\",\n  ({ compiler, ...schema }, value) => {\n    if (!(value instanceof FormData)) return !1;\n    if (compiler) {\n      if (!(ELYSIA_FORM_DATA in value))\n        throw new ValidationError(\"property\", schema, value);\n      if (!compiler.Check(value[ELYSIA_FORM_DATA]))\n        throw compiler.Error(value[ELYSIA_FORM_DATA]);\n    }\n    return !0;\n  }\n), ElysiaType = {\n  // @ts-ignore\n  String: (property) => Type.String(property),\n  Numeric: (property) => {\n    let schema = Type.Number(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"numeric\",\n            default: 0\n          }),\n          t.Number(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      let number = +value;\n      if (isNaN(number)) return value;\n      if (property && !compiler.Check(number))\n        throw compiler.Error(number);\n      return number;\n    }).Encode((value) => value);\n  },\n  Integer: (property) => {\n    let schema = Type.Integer(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"integer\",\n            default: 0\n          }),\n          Type.Integer(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      let number = +value;\n      if (!compiler.Check(number)) throw compiler.Error(number);\n      return number;\n    }).Encode((value) => value);\n  },\n  Date: (property) => {\n    let schema = Type.Date(property), compiler = compile(schema), _default = property?.default ? new Date(property.default) : void 0;\n    return t.Transform(\n      t.Union(\n        [\n          Type.Date(property),\n          t.String({\n            format: \"date-time\",\n            default: _default?.toISOString()\n          }),\n          t.String({\n            format: \"date\",\n            default: _default?.toISOString()\n          }),\n          t.Number({ default: _default?.getTime() })\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (typeof value == \"number\") {\n        let date3 = new Date(value);\n        if (!compiler.Check(date3)) throw compiler.Error(date3);\n        return date3;\n      }\n      if (value instanceof Date) return value;\n      let date2 = new Date(parseDateTimeEmptySpace(value));\n      if (!date2 || isNaN(date2.getTime()))\n        throw new ValidationError(\"property\", schema, date2);\n      if (!compiler.Check(date2)) throw compiler.Error(date2);\n      return date2;\n    }).Encode((value) => {\n      if (value instanceof Date) return value.toISOString();\n      if (typeof value == \"string\") {\n        if (isNaN(\n          new Date(parseDateTimeEmptySpace(value)).getTime()\n        ))\n          throw new ValidationError(\"property\", schema, value);\n        return value;\n      }\n      if (!compiler.Check(value)) throw compiler.Error(value);\n      return value;\n    });\n  },\n  BooleanString: (property) => {\n    let schema = Type.Boolean(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.Boolean(property),\n          t.String({\n            format: \"boolean\",\n            default: !1\n          })\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (typeof value == \"string\") return value === \"true\";\n      if (value !== void 0 && !compiler.Check(value))\n        throw compiler.Error(value);\n      return value;\n    }).Encode((value) => value);\n  },\n  ObjectString: (properties, options) => {\n    let schema = t.Object(properties, options), compiler = compile(schema), defaultValue = JSON.stringify(compiler.Create());\n    return t.Transform(\n      t.Union([\n        t.String({\n          format: \"ObjectString\",\n          default: defaultValue\n        }),\n        schema\n      ])\n    ).Decode((value) => {\n      if (typeof value == \"string\") {\n        if (value.charCodeAt(0) !== 123)\n          throw new ValidationError(\"property\", schema, value);\n        if (!compiler.Check(value = tryParse(value, schema)))\n          throw compiler.Error(value);\n        return compiler.Decode(value);\n      }\n      return value;\n    }).Encode((value) => {\n      let original;\n      if (typeof value == \"string\" && (value = tryParse(original = value, schema)), !compiler.Check(value)) throw compiler.Error(value);\n      return original ?? JSON.stringify(value);\n    });\n  },\n  ArrayString: (children = t.String(), options) => {\n    let schema = t.Array(children, options), compiler = compile(schema), decode4 = (value, isProperty = !1) => {\n      if (value.charCodeAt(0) === 91) {\n        if (!compiler.Check(value = tryParse(value, schema)))\n          throw compiler.Error(value);\n        return compiler.Decode(value);\n      }\n      if (value.indexOf(\",\") !== -1) {\n        if (!compiler.Check(value)) throw compiler.Error(value);\n        return compiler.Decode(value);\n      }\n      if (isProperty) return value;\n      throw new ValidationError(\"property\", schema, value);\n    };\n    return t.Transform(\n      t.Union([\n        t.String({\n          format: \"ArrayString\",\n          default: options?.default\n        }),\n        schema\n      ])\n    ).Decode((value) => {\n      if (Array.isArray(value)) {\n        let values = [];\n        for (let i = 0; i < value.length; i++) {\n          let v = value[i];\n          if (typeof v == \"string\") {\n            let t2 = decode4(v, !0);\n            Array.isArray(t2) ? values = values.concat(t2) : values.push(t2);\n            continue;\n          }\n          values.push(v);\n        }\n        return values;\n      }\n      return typeof value == \"string\" ? decode4(value) : value;\n    }).Encode((value) => {\n      let original;\n      if (typeof value == \"string\" && (value = tryParse(original = value, schema)), !compiler.Check(value))\n        throw new ValidationError(\"property\", schema, value);\n      return original ?? JSON.stringify(value);\n    });\n  },\n  File: createType(\n    \"File\",\n    validateFile\n  ),\n  Files: (options = {}) => t.Transform(internalFiles(options)).Decode((value) => Array.isArray(value) ? value : [value]).Encode((value) => value),\n  Nullable: (schema, options) => t.Union([schema, t.Null()], {\n    ...options,\n    nullable: !0\n  }),\n  /**\n   * Allow Optional, Nullable and Undefined\n   */\n  MaybeEmpty: (schema, options) => t.Union([schema, t.Null(), t.Undefined()], options),\n  Cookie: (properties, {\n    domain,\n    expires,\n    httpOnly,\n    maxAge,\n    path,\n    priority,\n    sameSite,\n    secure,\n    secrets,\n    sign,\n    ...options\n  } = {}) => {\n    let v = t.Object(properties, options);\n    return v.config = {\n      domain,\n      expires,\n      httpOnly,\n      maxAge,\n      path,\n      priority,\n      sameSite,\n      secure,\n      secrets,\n      sign\n    }, v;\n  },\n  UnionEnum: (values, options = {}) => {\n    let type = values.every((value) => typeof value == \"string\") ? { type: \"string\" } : values.every((value) => typeof value == \"number\") ? { type: \"number\" } : values.every((value) => value === null) ? { type: \"null\" } : {};\n    if (values.some((x) => typeof x == \"object\" && x !== null))\n      throw new Error(\"This type does not support objects or arrays\");\n    return {\n      // default is need for generating error message\n      default: values[0],\n      ...options,\n      [Kind2]: \"UnionEnum\",\n      ...type,\n      enum: values\n    };\n  },\n  NoValidate: (v, enabled = !0) => (v.noValidate = enabled, v),\n  Form: (v, options = {}) => {\n    let schema = t.Object(v, {\n      default: form({}),\n      ...options\n    }), compiler = compile(schema);\n    return t.Union([\n      schema,\n      // @ts-expect-error\n      internalFormData({\n        compiler\n      })\n    ]);\n  },\n  ArrayBuffer(options = {}) {\n    return {\n      // default is need for generating error message\n      default: [1, 2, 3],\n      ...options,\n      [Kind2]: \"ArrayBuffer\"\n    };\n  },\n  Uint8Array: (options) => {\n    let schema = Type.Uint8Array(options), compiler = compile(schema);\n    return t.Transform(t.Union([t.ArrayBuffer(), Type.Uint8Array(options)])).Decode((value) => {\n      if (value instanceof ArrayBuffer) {\n        if (!compiler.Check(value = new Uint8Array(value)))\n          throw compiler.Error(value);\n        return value;\n      }\n      return value;\n    }).Encode((value) => value);\n  }\n};\nt.BooleanString = ElysiaType.BooleanString;\nt.ObjectString = ElysiaType.ObjectString;\nt.ArrayString = ElysiaType.ArrayString;\nt.Numeric = ElysiaType.Numeric;\nt.Integer = ElysiaType.Integer;\nt.File = (arg) => (arg?.type && loadFileType(), ElysiaType.File({\n  default: \"File\",\n  ...arg,\n  extension: arg?.type,\n  type: \"string\",\n  format: \"binary\"\n}));\nt.Files = (arg) => (arg?.type && loadFileType(), ElysiaType.Files({\n  ...arg,\n  elysiaMeta: \"Files\",\n  default: \"Files\",\n  extension: arg?.type,\n  type: \"array\",\n  items: {\n    ...arg,\n    default: \"Files\",\n    type: \"string\",\n    format: \"binary\"\n  }\n}));\nt.Nullable = ElysiaType.Nullable;\nt.MaybeEmpty = ElysiaType.MaybeEmpty;\nt.Cookie = ElysiaType.Cookie;\nt.Date = ElysiaType.Date;\nt.UnionEnum = ElysiaType.UnionEnum;\nt.NoValidate = ElysiaType.NoValidate;\nt.Form = ElysiaType.Form;\nt.ArrayBuffer = ElysiaType.ArrayBuffer;\nt.Uint8Array = ElysiaType.Uint8Array;\n\n// src/sucrose.ts\nvar separateFunction = (code) => {\n  code.startsWith(\"async\") && (code = code.slice(5)), code = code.trimStart();\n  let index = -1;\n  if (code.charCodeAt(0) === 40 && (index = code.indexOf(\"=>\", code.indexOf(\")\")), index !== -1)) {\n    let bracketEndIndex = index;\n    for (; bracketEndIndex > 0 && code.charCodeAt(--bracketEndIndex) !== 41; )\n      ;\n    let body = code.slice(index + 2);\n    return body.charCodeAt(0) === 32 && (body = body.trimStart()), [\n      code.slice(1, bracketEndIndex),\n      body,\n      {\n        isArrowReturn: body.charCodeAt(0) !== 123\n      }\n    ];\n  }\n  if (/^(\\w+)=>/g.test(code) && (index = code.indexOf(\"=>\"), index !== -1)) {\n    let body = code.slice(index + 2);\n    return body.charCodeAt(0) === 32 && (body = body.trimStart()), [\n      code.slice(0, index),\n      body,\n      {\n        isArrowReturn: body.charCodeAt(0) !== 123\n      }\n    ];\n  }\n  if (code.startsWith(\"function\")) {\n    index = code.indexOf(\"(\");\n    let end = code.indexOf(\")\");\n    return [\n      code.slice(index + 1, end),\n      code.slice(end + 2),\n      {\n        isArrowReturn: !1\n      }\n    ];\n  }\n  let start = code.indexOf(\"(\");\n  if (start !== -1) {\n    let sep = code.indexOf(`\n`, 2), parameter = code.slice(0, sep), end = parameter.lastIndexOf(\")\") + 1, body = code.slice(sep + 1);\n    return [\n      parameter.slice(start, end),\n      \"{\" + body,\n      {\n        isArrowReturn: !1\n      }\n    ];\n  }\n  let x = code.split(`\n`, 2);\n  return [x[0], x[1], { isArrowReturn: !1 }];\n}, bracketPairRange = (parameter) => {\n  let start = parameter.indexOf(\"{\");\n  if (start === -1) return [-1, 0];\n  let end = start + 1, deep = 1;\n  for (; end < parameter.length; end++) {\n    let char = parameter.charCodeAt(end);\n    if (char === 123 ? deep++ : char === 125 && deep--, deep === 0) break;\n  }\n  return deep !== 0 ? [0, parameter.length] : [start, end + 1];\n}, bracketPairRangeReverse = (parameter) => {\n  let end = parameter.lastIndexOf(\"}\");\n  if (end === -1) return [-1, 0];\n  let start = end - 1, deep = 1;\n  for (; start >= 0; start--) {\n    let char = parameter.charCodeAt(start);\n    if (char === 125 ? deep++ : char === 123 && deep--, deep === 0) break;\n  }\n  return deep !== 0 ? [-1, 0] : [start, end + 1];\n}, removeColonAlias = (parameter) => {\n  for (; ; ) {\n    let start = parameter.indexOf(\":\");\n    if (start === -1) break;\n    let end = parameter.indexOf(\",\", start);\n    end === -1 && (end = parameter.indexOf(\"}\", start) - 1), end === -2 && (end = parameter.length), parameter = parameter.slice(0, start) + parameter.slice(end);\n  }\n  return parameter;\n}, retrieveRootParamters = (parameter) => {\n  let hasParenthesis = !1;\n  parameter.charCodeAt(0) === 40 && (parameter = parameter.slice(1, -1)), parameter.charCodeAt(0) === 123 && (hasParenthesis = !0, parameter = parameter.slice(1, -1)), parameter = parameter.replace(/( |\\t|\\n)/g, \"\").trim();\n  let parameters = [];\n  for (; ; ) {\n    let [start, end] = bracketPairRange(parameter);\n    if (start === -1) break;\n    parameters.push(parameter.slice(0, start - 1)), parameter.charCodeAt(end) === 44 && end++, parameter = parameter.slice(end);\n  }\n  parameter = removeColonAlias(parameter), parameter && (parameters = parameters.concat(parameter.split(\",\")));\n  let parameterMap = /* @__PURE__ */ Object.create(null);\n  for (let p of parameters) {\n    if (p.indexOf(\",\") === -1) {\n      parameterMap[p] = !0;\n      continue;\n    }\n    for (let q of p.split(\",\")) parameterMap[q.trim()] = !0;\n  }\n  return {\n    hasParenthesis,\n    parameters: parameterMap\n  };\n}, findParameterReference = (parameter, inference) => {\n  let { parameters, hasParenthesis } = retrieveRootParamters(parameter);\n  return parameters.query && (inference.query = !0), parameters.headers && (inference.headers = !0), parameters.body && (inference.body = !0), parameters.cookie && (inference.cookie = !0), parameters.set && (inference.set = !0), parameters.server && (inference.server = !0), parameters.route && (inference.route = !0), parameters.url && (inference.url = !0), parameters.path && (inference.path = !0), hasParenthesis ? `{ ${Object.keys(parameters).join(\", \")} }` : Object.keys(parameters).join(\", \");\n}, findEndIndex = (type, content, index) => {\n  let regex2 = new RegExp(\n    `${type.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}[\\\\n\\\\t,; ]`\n  );\n  index !== void 0 && (regex2.lastIndex = index);\n  let match = regex2.exec(content);\n  return match ? match.index : -1;\n};\nvar findAlias = (type, body, depth = 0) => {\n  if (depth > 5) return [];\n  let aliases = [], content = body;\n  for (; ; ) {\n    let index = findEndIndex(\" = \" + type, content);\n    if (index === -1 && (index = findEndIndex(\"=\" + type, content)), index === -1) {\n      let lastIndex = content.indexOf(\" = \" + type);\n      if (lastIndex === -1 && (lastIndex = content.indexOf(\"=\" + type)), lastIndex + 3 + type.length !== content.length) break;\n      index = lastIndex;\n    }\n    let part = content.slice(0, index), lastPart = part.lastIndexOf(\" \"), variable = part.slice(lastPart !== -1 ? lastPart + 1 : -1);\n    if (variable === \"}\") {\n      let [start, end] = bracketPairRangeReverse(part);\n      aliases.push(removeColonAlias(content.slice(start, end))), content = content.slice(index + 3 + type.length);\n      continue;\n    }\n    for (; variable.charCodeAt(0) === 44; ) variable = variable.slice(1);\n    for (; variable.charCodeAt(0) === 9; ) variable = variable.slice(1);\n    variable.includes(\"(\") || aliases.push(variable), content = content.slice(index + 3 + type.length);\n  }\n  for (let alias of aliases) {\n    if (alias.charCodeAt(0) === 123) continue;\n    let deepAlias = findAlias(alias, body);\n    deepAlias.length > 0 && aliases.push(...deepAlias);\n  }\n  return aliases;\n}, extractMainParameter = (parameter) => {\n  if (!parameter) return;\n  if (parameter.charCodeAt(0) !== 123) return parameter;\n  if (parameter = parameter.slice(2, -2), !parameter.includes(\",\"))\n    return parameter.indexOf(\"...\") !== -1 ? parameter.slice(parameter.indexOf(\"...\") + 3) : void 0;\n  let spreadIndex = parameter.indexOf(\"...\");\n  if (spreadIndex !== -1)\n    return parameter.slice(spreadIndex + 3).trimEnd();\n}, inferBodyReference = (code, aliases, inference) => {\n  let access = (type, alias) => new RegExp(\n    `${alias}\\\\.(${type})|${alias}\\\\[\"${type}\"\\\\]|${alias}\\\\['${type}'\\\\]`\n  ).test(code);\n  for (let alias of aliases)\n    if (alias) {\n      if (alias.charCodeAt(0) === 123) {\n        let parameters = retrieveRootParamters(alias).parameters;\n        parameters.query && (inference.query = !0), parameters.headers && (inference.headers = !0), parameters.body && (inference.body = !0), parameters.cookie && (inference.cookie = !0), parameters.set && (inference.set = !0), parameters.server && (inference.server = !0), parameters.url && (inference.url = !0), parameters.route && (inference.route = !0), parameters.path && (inference.path = !0);\n        continue;\n      }\n      if (!inference.query && (access(\"query\", alias) || code.includes(\"return \" + alias) || code.includes(\"return \" + alias + \".query\")) && (inference.query = !0), !inference.headers && access(\"headers\", alias) && (inference.headers = !0), !inference.body && access(\"body\", alias) && (inference.body = !0), !inference.cookie && access(\"cookie\", alias) && (inference.cookie = !0), !inference.set && access(\"set\", alias) && (inference.set = !0), !inference.server && access(\"server\", alias) && (inference.server = !0), !inference.route && access(\"route\", alias) && (inference.route = !0), !inference.url && access(\"url\", alias) && (inference.url = !0), !inference.path && access(\"path\", alias) && (inference.path = !0), inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server && inference.route && inference.url && inference.path)\n        break;\n    }\n  return aliases;\n};\nvar isContextPassToFunction = (context, body, inference) => {\n  try {\n    let captureFunction = new RegExp(`\\\\w\\\\((.*?)?${context}`, \"gs\");\n    captureFunction.test(body);\n    let nextChar = body.charCodeAt(captureFunction.lastIndex);\n    return nextChar === 41 || nextChar === 44 ? (inference.query = !0, inference.headers = !0, inference.body = !0, inference.cookie = !0, inference.set = !0, inference.server = !0, inference.url = !0, inference.route = !0, inference.path = !0, !0) : !1;\n  } catch {\n    return console.log(\n      \"[Sucrose] warning: unexpected isContextPassToFunction error, you may continue development as usual but please report the following to maintainers:\"\n    ), console.log(\"--- body ---\"), console.log(body), console.log(\"--- context ---\"), console.log(context), !0;\n  }\n}, pendingGC, caches = {}, clearSucroseCache = (delay = 0) => {\n  pendingGC && clearTimeout(pendingGC), pendingGC = setTimeout(() => {\n    caches = {}, pendingGC = void 0, isBun && Bun.gc(!1);\n  }, delay);\n}, mergeInference = (a, b) => ({\n  body: a.body || b.body,\n  cookie: a.cookie || b.cookie,\n  headers: a.headers || b.headers,\n  query: a.query || b.query,\n  set: a.set || b.set,\n  server: a.server || b.server,\n  url: a.url || b.url,\n  route: a.route || b.route,\n  path: a.path || b.path\n}), sucrose = (lifeCycle, inference = {\n  query: !1,\n  headers: !1,\n  body: !1,\n  cookie: !1,\n  set: !1,\n  server: !1,\n  url: !1,\n  route: !1,\n  path: !1\n}) => {\n  let events = [];\n  lifeCycle.request?.length && events.push(...lifeCycle.request), lifeCycle.beforeHandle?.length && events.push(...lifeCycle.beforeHandle), lifeCycle.parse?.length && events.push(...lifeCycle.parse), lifeCycle.error?.length && events.push(...lifeCycle.error), lifeCycle.transform?.length && events.push(...lifeCycle.transform), lifeCycle.afterHandle?.length && events.push(...lifeCycle.afterHandle), lifeCycle.mapResponse?.length && events.push(...lifeCycle.mapResponse), lifeCycle.afterResponse?.length && events.push(...lifeCycle.afterResponse), lifeCycle.handler && typeof lifeCycle.handler == \"function\" && events.push(lifeCycle.handler);\n  for (let i = 0; i < events.length; i++) {\n    let e = events[i];\n    if (!e) continue;\n    let event = typeof e == \"object\" ? e.fn : e;\n    if (typeof event != \"function\") continue;\n    let content = event.toString(), key = checksum(content), cachedInference = caches[key];\n    if (cachedInference) {\n      inference = mergeInference(inference, cachedInference);\n      continue;\n    }\n    let fnInference = {\n      query: !1,\n      headers: !1,\n      body: !1,\n      cookie: !1,\n      set: !1,\n      server: !1,\n      url: !1,\n      route: !1,\n      path: !1\n    }, [parameter, body] = separateFunction(content), rootParameters = findParameterReference(parameter, fnInference), mainParameter = extractMainParameter(rootParameters);\n    if (mainParameter) {\n      let aliases = findAlias(mainParameter, body.slice(1, -1));\n      aliases.splice(0, -1, mainParameter);\n      let code = body;\n      code.charCodeAt(0) === 123 && code.charCodeAt(body.length - 1) === 125 && (code = code.slice(1, -1)), isContextPassToFunction(mainParameter, code, fnInference) || inferBodyReference(code, aliases, fnInference), !fnInference.query && code.includes(\"return \" + mainParameter + \".query\") && (fnInference.query = !0);\n    }\n    if (caches[key] || (caches[key] = fnInference), inference = mergeInference(inference, fnInference), inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server && inference.url && inference.route && inference.path)\n      break;\n  }\n  return inference;\n};\n\n// src/cookies.ts\nimport { parse, serialize } from \"cookie\";\nimport decode from \"fast-decode-uri-component\";\nvar Cookie = class {\n  constructor(name, jar, initial = {}) {\n    this.name = name;\n    this.jar = jar;\n    this.initial = initial;\n  }\n  get cookie() {\n    return this.jar[this.name] ?? this.initial;\n  }\n  set cookie(jar) {\n    this.name in this.jar || (this.jar[this.name] = this.initial), this.jar[this.name] = jar;\n  }\n  get setCookie() {\n    return this.name in this.jar || (this.jar[this.name] = this.initial), this.jar[this.name];\n  }\n  set setCookie(jar) {\n    this.cookie = jar;\n  }\n  get value() {\n    return this.cookie.value;\n  }\n  set value(value) {\n    this.setCookie.value = value;\n  }\n  get expires() {\n    return this.cookie.expires;\n  }\n  set expires(expires) {\n    this.setCookie.expires = expires;\n  }\n  get maxAge() {\n    return this.cookie.maxAge;\n  }\n  set maxAge(maxAge) {\n    this.setCookie.maxAge = maxAge;\n  }\n  get domain() {\n    return this.cookie.domain;\n  }\n  set domain(domain) {\n    this.setCookie.domain = domain;\n  }\n  get path() {\n    return this.cookie.path;\n  }\n  set path(path) {\n    this.setCookie.path = path;\n  }\n  get secure() {\n    return this.cookie.secure;\n  }\n  set secure(secure) {\n    this.setCookie.secure = secure;\n  }\n  get httpOnly() {\n    return this.cookie.httpOnly;\n  }\n  set httpOnly(httpOnly) {\n    this.setCookie.httpOnly = httpOnly;\n  }\n  get sameSite() {\n    return this.cookie.sameSite;\n  }\n  set sameSite(sameSite) {\n    this.setCookie.sameSite = sameSite;\n  }\n  get priority() {\n    return this.cookie.priority;\n  }\n  set priority(priority) {\n    this.setCookie.priority = priority;\n  }\n  get partitioned() {\n    return this.cookie.partitioned;\n  }\n  set partitioned(partitioned) {\n    this.setCookie.partitioned = partitioned;\n  }\n  get secrets() {\n    return this.cookie.secrets;\n  }\n  set secrets(secrets) {\n    this.setCookie.secrets = secrets;\n  }\n  update(config) {\n    return this.setCookie = Object.assign(\n      this.cookie,\n      typeof config == \"function\" ? config(this.cookie) : config\n    ), this;\n  }\n  set(config) {\n    return this.setCookie = Object.assign(\n      {\n        ...this.initial,\n        value: this.value\n      },\n      typeof config == \"function\" ? config(this.cookie) : config\n    ), this;\n  }\n  remove() {\n    if (this.value !== void 0)\n      return this.set({\n        expires: /* @__PURE__ */ new Date(0),\n        maxAge: 0,\n        value: \"\"\n      }), this;\n  }\n  toString() {\n    return typeof this.value == \"object\" ? JSON.stringify(this.value) : this.value?.toString() ?? \"\";\n  }\n}, createCookieJar = (set2, store, initial) => (set2.cookie || (set2.cookie = {}), new Proxy(store, {\n  get(_, key) {\n    return key in store ? new Cookie(\n      key,\n      set2.cookie,\n      Object.assign({}, initial ?? {}, store[key])\n    ) : new Cookie(\n      key,\n      set2.cookie,\n      Object.assign({}, initial)\n    );\n  }\n})), parseCookie = async (set2, cookieString, {\n  secrets,\n  sign,\n  ...initial\n} = {}) => {\n  if (!cookieString) return createCookieJar(set2, {}, initial);\n  let isStringKey = typeof secrets == \"string\";\n  sign && sign !== !0 && !Array.isArray(sign) && (sign = [sign]);\n  let jar = {}, cookies = parse(cookieString);\n  for (let [name, v] of Object.entries(cookies)) {\n    if (v === void 0) continue;\n    let value = decode(v);\n    if (sign === !0 || sign?.includes(name)) {\n      if (!secrets)\n        throw new Error(\"No secret is provided to cookie plugin\");\n      if (isStringKey) {\n        let temp = await unsignCookie(value, secrets);\n        if (temp === !1) throw new InvalidCookieSignature(name);\n        value = temp;\n      } else {\n        let decoded = !0;\n        for (let i = 0; i < secrets.length; i++) {\n          let temp = await unsignCookie(value, secrets[i]);\n          if (temp !== !1) {\n            decoded = !0, value = temp;\n            break;\n          }\n        }\n        if (!decoded) throw new InvalidCookieSignature(name);\n      }\n    }\n    jar[name] = {\n      value\n    };\n  }\n  return createCookieJar(set2, jar, initial);\n}, serializeCookie = (cookies) => {\n  if (!cookies || !isNotEmpty(cookies)) return;\n  let set2 = [];\n  for (let [key, property] of Object.entries(cookies)) {\n    if (!key || !property) continue;\n    let value = property.value;\n    value != null && set2.push(\n      serialize(\n        key,\n        typeof value == \"object\" ? JSON.stringify(value) : value + \"\",\n        property\n      )\n    );\n  }\n  if (set2.length !== 0)\n    return set2.length === 1 ? set2[0] : set2;\n};\n\n// src/adapter/utils.ts\nvar handleFile = (response, set2) => {\n  if (!isBun && response instanceof Promise)\n    return response.then((res) => handleFile(res, set2));\n  let size = response.size, immutable = set2 && (set2.status === 206 || set2.status === 304 || set2.status === 412 || set2.status === 416), defaultHeader = immutable ? {\n    \"transfer-encoding\": \"chunked\"\n  } : {\n    \"accept-ranges\": \"bytes\",\n    \"content-range\": size ? `bytes 0-${size - 1}/${size}` : void 0,\n    \"transfer-encoding\": \"chunked\"\n  };\n  if (!set2 && !size) return new Response(response);\n  if (!set2)\n    return new Response(response, {\n      headers: defaultHeader\n    });\n  if (set2.headers instanceof Headers) {\n    for (let key of Object.keys(defaultHeader))\n      key in set2.headers && set2.headers.append(key, defaultHeader[key]);\n    return immutable && (set2.headers.delete(\"content-length\"), set2.headers.delete(\"accept-ranges\")), new Response(response, set2);\n  }\n  return isNotEmpty(set2.headers) ? new Response(response, {\n    status: set2.status,\n    headers: Object.assign(defaultHeader, set2.headers)\n  }) : new Response(response, {\n    status: set2.status,\n    headers: defaultHeader\n  });\n}, parseSetCookies = (headers, setCookie) => {\n  if (!headers) return headers;\n  headers.delete(\"set-cookie\");\n  for (let i = 0; i < setCookie.length; i++) {\n    let index = setCookie[i].indexOf(\"=\");\n    headers.append(\n      \"set-cookie\",\n      `${setCookie[i].slice(0, index)}=${setCookie[i].slice(index + 1) || \"\"}`\n    );\n  }\n  return headers;\n}, responseToSetHeaders = (response, set2) => {\n  if (set2?.headers) {\n    if (response)\n      if (hasHeaderShorthand)\n        Object.assign(set2.headers, response.headers.toJSON());\n      else\n        for (let [key, value] of response.headers.entries())\n          key in set2.headers && (set2.headers[key] = value);\n    return set2.status === 200 && (set2.status = response.status), set2.headers[\"content-encoding\"] && delete set2.headers[\"content-encoding\"], set2;\n  }\n  if (!response)\n    return {\n      headers: {},\n      status: set2?.status ?? 200\n    };\n  if (hasHeaderShorthand)\n    return set2 = {\n      headers: response.headers.toJSON(),\n      status: set2?.status ?? 200\n    }, set2.headers[\"content-encoding\"] && delete set2.headers[\"content-encoding\"], set2;\n  set2 = {\n    headers: {},\n    status: set2?.status ?? 200\n  };\n  for (let [key, value] of response.headers.entries())\n    key !== \"content-encoding\" && key in set2.headers && (set2.headers[key] = value);\n  return set2;\n}, createStreamHandler = ({ mapResponse: mapResponse3, mapCompactResponse: mapCompactResponse3 }) => async (generator, set2, request) => {\n  let init = generator.next?.();\n  if (init instanceof Promise && (init = await init), init?.value instanceof ReadableStream)\n    generator = init.value;\n  else if (init && (typeof init?.done > \"u\" || init?.done))\n    return set2 ? mapResponse3(init.value, set2, request) : mapCompactResponse3(init.value, request);\n  let isSSE = (\n    // @ts-ignore First SSE result is wrapped with sse()\n    init?.value?.sse ?? // @ts-ignore ReadableStream is wrapped with sse()\n    generator?.sse ?? // User explicitly set content-type to SSE\n    set2?.headers[\"content-type\"]?.startsWith(\"text/event-stream\")\n  ), format = isSSE ? (data) => `data: ${data}\n\n` : (data) => data, contentType = isSSE ? \"text/event-stream\" : init?.value && typeof init?.value == \"object\" ? \"application/json\" : \"text/plain\";\n  return set2?.headers ? (set2.headers[\"transfer-encoding\"] || (set2.headers[\"transfer-encoding\"] = \"chunked\"), set2.headers[\"content-type\"] || (set2.headers[\"content-type\"] = contentType), set2.headers[\"cache-control\"] || (set2.headers[\"cache-control\"] = \"no-cache\")) : set2 = {\n    status: 200,\n    headers: {\n      \"content-type\": contentType,\n      \"transfer-encoding\": \"chunked\",\n      \"cache-control\": \"no-cache\",\n      connection: \"keep-alive\"\n    }\n  }, new Response(\n    new ReadableStream({\n      async start(controller) {\n        let end = !1;\n        if (request?.signal?.addEventListener(\"abort\", () => {\n          end = !0;\n          try {\n            controller.close();\n          } catch {\n          }\n        }), !(!init || init.value instanceof ReadableStream)) {\n          if (init.value !== void 0 && init.value !== null)\n            if (init.value.toSSE)\n              controller.enqueue(init.value.toSSE());\n            else if (typeof init.value == \"object\")\n              try {\n                controller.enqueue(\n                  format(JSON.stringify(init.value))\n                );\n              } catch {\n                controller.enqueue(\n                  format(init.value.toString())\n                );\n              }\n            else controller.enqueue(format(init.value.toString()));\n        }\n        try {\n          for await (let chunk of generator) {\n            if (end) break;\n            if (chunk != null)\n              if (chunk.toSSE)\n                controller.enqueue(chunk.toSSE());\n              else {\n                if (typeof chunk == \"object\")\n                  try {\n                    controller.enqueue(\n                      format(JSON.stringify(chunk))\n                    );\n                  } catch {\n                    controller.enqueue(\n                      format(chunk.toString())\n                    );\n                  }\n                else\n                  controller.enqueue(format(chunk.toString()));\n                isSSE || await new Promise(\n                  (resolve) => setTimeout(() => resolve(), 0)\n                );\n              }\n          }\n        } catch (error2) {\n          console.warn(error2);\n        }\n        try {\n          controller.close();\n        } catch {\n        }\n      }\n    }),\n    set2\n  );\n};\nasync function* streamResponse(response) {\n  let body = response.body;\n  if (!body) return;\n  let reader = body.getReader(), decoder = new TextDecoder();\n  try {\n    for (; ; ) {\n      let { done, value } = await reader.read();\n      if (done) break;\n      typeof value == \"string\" ? yield value : yield decoder.decode(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\nvar handleSet = (set2) => {\n  if (typeof set2.status == \"string\" && (set2.status = StatusMap[set2.status]), set2.cookie && isNotEmpty(set2.cookie)) {\n    let cookie = serializeCookie(set2.cookie);\n    cookie && (set2.headers[\"set-cookie\"] = cookie);\n  }\n  set2.headers[\"set-cookie\"] && Array.isArray(set2.headers[\"set-cookie\"]) && (set2.headers = parseSetCookies(\n    new Headers(set2.headers),\n    set2.headers[\"set-cookie\"]\n  ));\n}, createResponseHandler = (handler) => {\n  let handleStream3 = createStreamHandler(handler);\n  return (response, set2, request) => {\n    let isCookieSet = !1;\n    if (set2.headers instanceof Headers)\n      for (let key of set2.headers.keys())\n        if (key === \"set-cookie\") {\n          if (isCookieSet) continue;\n          isCookieSet = !0;\n          for (let cookie of set2.headers.getSetCookie())\n            response.headers.append(\"set-cookie\", cookie);\n        } else response.headers.append(key, set2.headers?.get(key) ?? \"\");\n    else\n      for (let key in set2.headers)\n        response.headers.append(\n          key,\n          set2.headers[key]\n        );\n    let status2 = set2.status ?? 200;\n    return response.status !== status2 && status2 !== 200 && (response.status <= 300 || response.status > 400) ? response.text().then((value) => {\n      let newResponse = new Response(value, {\n        headers: response.headers,\n        status: set2.status\n      });\n      return !newResponse.headers.has(\"content-length\") && newResponse.headers.get(\n        \"transfer-encoding\"\n      ) === \"chunked\" ? handleStream3(\n        streamResponse(newResponse),\n        responseToSetHeaders(newResponse, set2),\n        request\n      ) : newResponse;\n    }) : !response.headers.has(\"content-length\") && response.headers.get(\"transfer-encoding\") === \"chunked\" ? handleStream3(\n      streamResponse(response),\n      responseToSetHeaders(response, set2),\n      request\n    ) : response;\n  };\n};\n\n// src/adapter/web-standard/handler.ts\nvar handleElysiaFile = (file2, set2 = {\n  headers: {}\n}) => {\n  let path = file2.path, contentType = mime[path.slice(path.lastIndexOf(\".\") + 1)];\n  return contentType && (set2.headers[\"content-type\"] = contentType), file2.stats && set2.status !== 206 && set2.status !== 304 && set2.status !== 412 && set2.status !== 416 ? file2.stats.then((stat2) => {\n    let size = stat2.size;\n    return size !== void 0 && (set2.headers[\"content-range\"] = `bytes 0-${size - 1}/${size}`, set2.headers[\"content-length\"] = size), handleFile(file2.value, set2);\n  }) : handleFile(file2.value, set2);\n}, mapResponse = (response, set2, request) => {\n  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n    switch (handleSet(set2), response?.constructor?.name) {\n      case \"String\":\n        return set2.headers[\"content-type\"] = \"text/plain\", new Response(response, set2);\n      case \"Array\":\n      case \"Object\":\n        return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n      case \"ElysiaFile\":\n        return handleElysiaFile(response, set2);\n      case \"File\":\n        return handleFile(response, set2);\n      case \"Blob\":\n        return handleFile(response, set2);\n      case \"ElysiaCustomStatusResponse\":\n        return set2.status = response.code, mapResponse(\n          response.response,\n          set2,\n          request\n        );\n      case void 0:\n        return response ? new Response(JSON.stringify(response), set2) : new Response(\"\", set2);\n      case \"Response\":\n        return handleResponse(response, set2, request);\n      case \"Error\":\n        return errorToResponse(response, set2);\n      case \"Promise\":\n        return response.then(\n          (x) => mapResponse(x, set2, request)\n        );\n      case \"Function\":\n        return mapResponse(response(), set2, request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set2\n        );\n      case \"Cookie\":\n        return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n      case \"FormData\":\n        return new Response(response, set2);\n      default:\n        if (response instanceof Response)\n          return handleResponse(response, set2, request);\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse(x, set2));\n        if (response instanceof Error)\n          return errorToResponse(response, set2);\n        if (response instanceof ElysiaCustomStatusResponse)\n          return set2.status = response.code, mapResponse(\n            response.response,\n            set2,\n            request\n          );\n        if (\n          // @ts-expect-error\n          typeof response?.next == \"function\" || response instanceof ReadableStream\n        )\n          return handleStream(response, set2, request);\n        if (typeof response?.then == \"function\")\n          return response.then((x) => mapResponse(x, set2));\n        if (typeof response?.toResponse == \"function\")\n          return mapResponse(response.toResponse(), set2);\n        if (\"charCodeAt\" in response) {\n          let code = response.charCodeAt(0);\n          if (code === 123 || code === 91)\n            return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n              JSON.stringify(response),\n              set2\n            );\n        }\n        return new Response(response, set2);\n    }\n  return (\n    // @ts-expect-error\n    typeof response?.next == \"function\" || response instanceof ReadableStream ? handleStream(response, set2, request) : mapCompactResponse(response, request)\n  );\n}, mapEarlyResponse = (response, set2, request) => {\n  if (response != null)\n    if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n      switch (handleSet(set2), response?.constructor?.name) {\n        case \"String\":\n          return set2.headers[\"content-type\"] = \"text/plain\", new Response(response, set2);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleElysiaFile(response, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), set2) : void 0;\n        case \"Response\":\n          return handleResponse(response, set2, request);\n        case \"Promise\":\n          return response.then(\n            (x) => mapEarlyResponse(x, set2)\n          );\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapEarlyResponse(response(), set2);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(\n            response.toString(),\n            set2\n          );\n        case \"FormData\":\n          return new Response(response);\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        default:\n          if (response instanceof Response)\n            return handleResponse(response, set2, request);\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            let code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response, set2);\n      }\n    else\n      switch (response?.constructor?.name) {\n        case \"String\":\n          return set2.headers[\"content-type\"] = \"text/plain\", new Response(response);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleElysiaFile(response, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), {\n            headers: {\n              \"content-type\": \"application/json\"\n            }\n          }) : new Response(\"\");\n        case \"Response\":\n          return response;\n        case \"Promise\":\n          return response.then((x) => {\n            let r = mapEarlyResponse(x, set2);\n            if (r !== void 0) return r;\n          });\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapCompactResponse(response(), request);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(response.toString());\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        case \"FormData\":\n          return new Response(response);\n        default:\n          if (response instanceof Response) return response;\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            let code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response);\n      }\n}, mapCompactResponse = (response, request) => {\n  switch (response?.constructor?.name) {\n    case \"String\":\n      return new Response(response, {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        }\n      });\n    case \"Object\":\n    case \"Array\":\n      return new Response(JSON.stringify(response), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    case \"ElysiaFile\":\n      return handleElysiaFile(response);\n    case \"File\":\n      return handleFile(response);\n    case \"Blob\":\n      return handleFile(response);\n    case \"ElysiaCustomStatusResponse\":\n      return mapResponse(\n        response.response,\n        {\n          status: response.code,\n          headers: {}\n        }\n      );\n    case void 0:\n      return response ? new Response(JSON.stringify(response), {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }) : new Response(\"\");\n    case \"Response\":\n      return response;\n    case \"Error\":\n      return errorToResponse(response);\n    case \"Promise\":\n      return response.then(\n        (x) => mapCompactResponse(x, request)\n      );\n    // ? Maybe response or Blob\n    case \"Function\":\n      return mapCompactResponse(response(), request);\n    case \"Number\":\n    case \"Boolean\":\n      return new Response(response.toString());\n    case \"FormData\":\n      return new Response(response);\n    default:\n      if (response instanceof Response) return response;\n      if (response instanceof Promise)\n        return response.then(\n          (x) => mapCompactResponse(x, request)\n        );\n      if (response instanceof Error)\n        return errorToResponse(response);\n      if (response instanceof ElysiaCustomStatusResponse)\n        return mapResponse(\n          response.response,\n          {\n            status: response.code,\n            headers: {}\n          }\n        );\n      if (\n        // @ts-expect-error\n        typeof response?.next == \"function\" || response instanceof ReadableStream\n      )\n        return handleStream(response, void 0, request);\n      if (typeof response?.then == \"function\")\n        return response.then((x) => mapResponse(x, set));\n      if (typeof response?.toResponse == \"function\")\n        return mapCompactResponse(response.toResponse());\n      if (\"charCodeAt\" in response) {\n        let code = response.charCodeAt(0);\n        if (code === 123 || code === 91)\n          return new Response(JSON.stringify(response), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n      }\n      return new Response(response);\n  }\n}, errorToResponse = (error2, set2) => new Response(\n  JSON.stringify({\n    name: error2?.name,\n    message: error2?.message,\n    cause: error2?.cause\n  }),\n  {\n    status: set2?.status !== 200 ? set2?.status ?? 500 : 500,\n    headers: set2?.headers\n  }\n), createStaticHandler = (handle, hooks, setHeaders = {}) => {\n  if (typeof handle == \"function\") return;\n  let response = mapResponse(handle, {\n    headers: setHeaders\n  });\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return () => response.clone();\n}, handleResponse = createResponseHandler({\n  mapResponse,\n  mapCompactResponse\n}), handleStream = createStreamHandler({\n  mapResponse,\n  mapCompactResponse\n});\n\n// src/adapter/web-standard/index.ts\nvar WebStandardAdapter = {\n  name: \"web-standard\",\n  isWebStandard: !0,\n  handler: {\n    mapResponse,\n    mapEarlyResponse,\n    mapCompactResponse,\n    createStaticHandler\n  },\n  composeHandler: {\n    mapResponseContext: \"c.request\",\n    preferWebstandardHeaders: !0,\n    // @ts-ignore Bun specific\n    headers: `c.headers={}\nfor(const [k,v] of c.request.headers.entries())c.headers[k]=v\n`,\n    parser: {\n      json(isOptional2) {\n        return isOptional2 ? `try{c.body=await c.request.json()}catch{}\n` : `c.body=await c.request.json()\n`;\n      },\n      text() {\n        return `c.body=await c.request.text()\n`;\n      },\n      urlencoded() {\n        return `c.body=parseQuery(await c.request.text())\n`;\n      },\n      arrayBuffer() {\n        return `c.body=await c.request.arrayBuffer()\n`;\n      },\n      formData(isOptional2) {\n        let fnLiteral = `\nc.body={}\n`;\n        return isOptional2 ? fnLiteral += \"let form;try{form=await c.request.formData()}catch{}\" : fnLiteral += `const form=await c.request.formData()\n`, fnLiteral + `for(const key of form.keys()){if(c.body[key]) continue\nconst value=form.getAll(key)\nif(value.length===1)c.body[key]=value[0]\nelse c.body[key]=value}`;\n      }\n    }\n  },\n  async stop(app, closeActiveConnections) {\n    if (!app.server)\n      throw new Error(\n        \"Elysia isn't running. Call `app.listen` to start the server.\"\n      );\n    if (app.server && (app.server.stop(closeActiveConnections), app.server = null, app.event.stop?.length))\n      for (let i = 0; i < app.event.stop.length; i++)\n        app.event.stop[i].fn(app);\n  },\n  composeGeneralHandler: {\n    parameters: \"r\",\n    createContext(app) {\n      let decoratorsLiteral = \"\", fnLiteral = \"\", defaultHeaders = app.setHeaders;\n      for (let key of Object.keys(app.decorator))\n        decoratorsLiteral += `,'${key}':decorator['${key}']`;\n      let standardHostname = app.config.handler?.standardHostname ?? !0, hasTrace = !!app.event.trace?.length;\n      return fnLiteral += `const u=r.url,s=u.indexOf('/',${standardHostname ? 11 : 7}),qi=u.indexOf('?',s+1)\nlet p\nif(qi===-1)p=u.substring(s)\nelse p=u.substring(s, qi)\n`, hasTrace && (fnLiteral += `const id=randomId()\n`), fnLiteral += \"const c={request:r,store,qi,path:p,url:u,redirect,error:status,status,set:{headers:\", fnLiteral += Object.keys(defaultHeaders ?? {}).length ? \"Object.assign({},app.setHeaders)\" : \"Object.create(null)\", fnLiteral += \",status:200}\", app.inference.server && (fnLiteral += \",get server(){return app.getServer()}\"), hasTrace && (fnLiteral += \",[ELYSIA_REQUEST_ID]:id\"), fnLiteral += decoratorsLiteral, fnLiteral += `}\n`, fnLiteral;\n    },\n    error404(hasEventHook, hasErrorHook, afterHandle = \"\") {\n      let findDynamicRoute = \"if(route===null){\" + afterHandle + `\nreturn `;\n      return hasErrorHook ? findDynamicRoute += `app.handleError(c,notFound,false,${this.parameters})` : findDynamicRoute += hasEventHook ? \"new Response(error404Message,{status:c.set.status===200?404:c.set.status,headers:c.set.headers})\" : \"error404.clone()\", findDynamicRoute += \"}\", {\n        declare: hasErrorHook ? \"\" : `const error404Message=notFound.message.toString()\nconst error404=new Response(error404Message,{status:404})\n`,\n        code: findDynamicRoute\n      };\n    }\n  },\n  composeError: {\n    mapResponseContext: \"\",\n    validationError: \"return new Response(error.message,{headers:Object.assign({'content-type':'application/json'},set.headers),status:set.status})\",\n    unknownError: \"return new Response(error.message,{headers:set.headers,status:error.status??set.status??500})\"\n  },\n  listen() {\n    return () => {\n      throw new Error(\n        \"WebStandard does not support listen, you might want to export default Elysia.fetch instead\"\n      );\n    };\n  }\n};\n\n// src/adapter/bun/handler.ts\nvar mapResponse2 = (response, set2, request) => {\n  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n    switch (handleSet(set2), response?.constructor?.name) {\n      case \"String\":\n        return new Response(response, set2);\n      case \"Array\":\n      case \"Object\":\n        return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n      case \"ElysiaFile\":\n        return handleFile(response.value);\n      case \"File\":\n        return handleFile(response, set2);\n      case \"Blob\":\n        return handleFile(response, set2);\n      case \"ElysiaCustomStatusResponse\":\n        return set2.status = response.code, mapResponse2(\n          response.response,\n          set2,\n          request\n        );\n      case void 0:\n        return response ? new Response(JSON.stringify(response), set2) : new Response(\"\", set2);\n      case \"Response\":\n        return handleResponse2(response, set2, request);\n      case \"Error\":\n        return errorToResponse2(response, set2);\n      case \"Promise\":\n        return response.then(\n          (x) => mapResponse2(x, set2, request)\n        );\n      case \"Function\":\n        return mapResponse2(response(), set2, request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set2\n        );\n      case \"Cookie\":\n        return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n      case \"FormData\":\n        return new Response(response, set2);\n      default:\n        if (response instanceof Response)\n          return handleResponse2(response, set2, request);\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse2(x, set2));\n        if (response instanceof Error)\n          return errorToResponse2(response, set2);\n        if (response instanceof ElysiaCustomStatusResponse)\n          return set2.status = response.code, mapResponse2(\n            response.response,\n            set2,\n            request\n          );\n        if (\n          // @ts-expect-error\n          typeof response?.next == \"function\" || response instanceof ReadableStream\n        )\n          return handleStream2(response, set2, request);\n        if (typeof response?.then == \"function\")\n          return response.then((x) => mapResponse2(x, set2));\n        if (typeof response?.toResponse == \"function\")\n          return mapResponse2(response.toResponse(), set2);\n        if (\"charCodeAt\" in response) {\n          let code = response.charCodeAt(0);\n          if (code === 123 || code === 91)\n            return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n              JSON.stringify(response),\n              set2\n            );\n        }\n        return new Response(response, set2);\n    }\n  return (\n    // @ts-expect-error\n    typeof response?.next == \"function\" || response instanceof ReadableStream ? handleStream2(response, set2, request) : mapCompactResponse2(response, request)\n  );\n}, mapEarlyResponse2 = (response, set2, request) => {\n  if (response != null)\n    if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n      switch (handleSet(set2), response?.constructor?.name) {\n        case \"String\":\n          return new Response(response, set2);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleFile(response.value);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse2(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), set2) : void 0;\n        case \"Response\":\n          return handleResponse2(response, set2, request);\n        case \"Promise\":\n          return response.then(\n            (x) => mapEarlyResponse2(x, set2)\n          );\n        case \"Error\":\n          return errorToResponse2(response, set2);\n        case \"Function\":\n          return mapEarlyResponse2(response(), set2);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(\n            response.toString(),\n            set2\n          );\n        case \"FormData\":\n          return new Response(response);\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        default:\n          if (response instanceof Response)\n            return handleResponse2(response, set2, request);\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse2(x, set2));\n          if (response instanceof Error)\n            return errorToResponse2(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse2(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream2(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse2(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse2(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            let code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response, set2);\n      }\n    else\n      switch (response?.constructor?.name) {\n        case \"String\":\n          return new Response(response);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleFile(response.value);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse2(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), {\n            headers: {\n              \"content-type\": \"application/json\"\n            }\n          }) : new Response(\"\");\n        case \"Response\":\n          return response;\n        case \"Promise\":\n          return response.then((x) => {\n            let r = mapEarlyResponse2(x, set2);\n            if (r !== void 0) return r;\n          });\n        case \"Error\":\n          return errorToResponse2(response, set2);\n        case \"Function\":\n          return mapCompactResponse2(response(), request);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(response.toString());\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        case \"FormData\":\n          return new Response(response);\n        default:\n          if (response instanceof Response) return response;\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse2(x, set2));\n          if (response instanceof Error)\n            return errorToResponse2(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse2(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream2(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse2(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse2(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            let code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response);\n      }\n}, mapCompactResponse2 = (response, request) => {\n  switch (response?.constructor?.name) {\n    case \"String\":\n      return new Response(response);\n    case \"Object\":\n    case \"Array\":\n      return new Response(JSON.stringify(response), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    case \"ElysiaFile\":\n      return handleFile(response.value);\n    case \"File\":\n      return handleFile(response);\n    case \"Blob\":\n      return handleFile(response);\n    case \"ElysiaCustomStatusResponse\":\n      return mapResponse2(\n        response.response,\n        {\n          status: response.code,\n          headers: {}\n        }\n      );\n    case void 0:\n      return response ? new Response(JSON.stringify(response), {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }) : new Response(\"\");\n    case \"Response\":\n      return response;\n    case \"Error\":\n      return errorToResponse2(response);\n    case \"Promise\":\n      return response.then(\n        (x) => mapCompactResponse2(x, request)\n      );\n    // ? Maybe response or Blob\n    case \"Function\":\n      return mapCompactResponse2(response(), request);\n    case \"Number\":\n    case \"Boolean\":\n      return new Response(response.toString());\n    case \"FormData\":\n      return new Response(response);\n    default:\n      if (response instanceof Response) return response;\n      if (response instanceof Promise)\n        return response.then(\n          (x) => mapCompactResponse2(x, request)\n        );\n      if (response instanceof Error)\n        return errorToResponse2(response);\n      if (response instanceof ElysiaCustomStatusResponse)\n        return mapResponse2(\n          response.response,\n          {\n            status: response.code,\n            headers: {}\n          }\n        );\n      if (\n        // @ts-expect-error\n        typeof response?.next == \"function\" || response instanceof ReadableStream\n      )\n        return handleStream2(response, void 0, request);\n      if (typeof response?.then == \"function\")\n        return response.then((x) => mapResponse2(x, set));\n      if (typeof response?.toResponse == \"function\")\n        return mapCompactResponse2(response.toResponse());\n      if (\"charCodeAt\" in response) {\n        let code = response.charCodeAt(0);\n        if (code === 123 || code === 91)\n          return new Response(JSON.stringify(response), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n      }\n      return new Response(response);\n  }\n}, errorToResponse2 = (error2, set2) => new Response(\n  JSON.stringify({\n    name: error2?.name,\n    message: error2?.message,\n    cause: error2?.cause\n  }),\n  {\n    status: set2?.status !== 200 ? set2?.status ?? 500 : 500,\n    headers: set2?.headers\n  }\n), createStaticHandler2 = (handle, hooks, setHeaders = {}) => {\n  if (typeof handle == \"function\") return;\n  let response = mapResponse2(handle, {\n    headers: setHeaders\n  });\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return () => response.clone();\n}, handleResponse2 = createResponseHandler({\n  mapResponse: mapResponse2,\n  mapCompactResponse: mapCompactResponse2\n}), handleStream2 = createStreamHandler({\n  mapResponse: mapResponse2,\n  mapCompactResponse: mapCompactResponse2\n});\n\n// src/compose.ts\nimport { Value as Value4 } from \"@sinclair/typebox/value\";\nimport {\n  Kind as Kind4,\n  OptionalKind as OptionalKind2,\n  TypeBoxError\n} from \"@sinclair/typebox\";\nimport decode3 from \"fast-decode-uri-component\";\n\n// src/parse-query.ts\nimport decode2 from \"fast-decode-uri-component\";\nfunction parseQueryFromURL(input, startIndex = 0) {\n  let result = /* @__PURE__ */ Object.create(null), KEY_PLUS_FLAG = 1, KEY_DECODE_FLAG = 2, VALUE_PLUS_FLAG = 4, VALUE_DECODE_FLAG = 8, flags = 0, startingIndex = startIndex - 1, equalityIndex = startingIndex, inputLength = input.length;\n  for (let i = startIndex; i < inputLength; i++)\n    switch (input.charCodeAt(i)) {\n      // '&'\n      case 38:\n        processKeyValuePair(i), startingIndex = i, equalityIndex = i, flags = 0;\n        break;\n      // '='\n      case 61:\n        equalityIndex <= startingIndex ? equalityIndex = i : flags |= VALUE_DECODE_FLAG;\n        break;\n      // '+'\n      case 43:\n        equalityIndex > startingIndex ? flags |= VALUE_PLUS_FLAG : flags |= KEY_PLUS_FLAG;\n        break;\n      // '%'\n      case 37:\n        equalityIndex > startingIndex ? flags |= VALUE_DECODE_FLAG : flags |= KEY_DECODE_FLAG;\n        break;\n    }\n  return processKeyValuePair(inputLength), result;\n  function processKeyValuePair(endIndex) {\n    let hasBothKeyValuePair = equalityIndex > startingIndex, keyEndIndex = hasBothKeyValuePair ? equalityIndex : endIndex;\n    if (keyEndIndex <= startingIndex + 1) return;\n    let keySlice = input.slice(startingIndex + 1, keyEndIndex);\n    if (flags & KEY_PLUS_FLAG && (keySlice = keySlice.replace(/\\+/g, \" \")), flags & KEY_DECODE_FLAG && (keySlice = decode2(keySlice) || keySlice), result[keySlice] !== void 0) return;\n    let finalValue = \"\";\n    hasBothKeyValuePair && (finalValue = input.slice(equalityIndex + 1, endIndex), flags & VALUE_PLUS_FLAG && (finalValue = finalValue.replace(/\\+/g, \" \")), flags & VALUE_DECODE_FLAG && (finalValue = decode2(finalValue) || finalValue)), result[keySlice] = finalValue;\n  }\n}\nfunction parseQuery(input) {\n  let result = /* @__PURE__ */ Object.create(null), flags = 0, KEY_HAS_PLUS = 1, KEY_NEEDS_DECODE = 2, VALUE_HAS_PLUS = 4, VALUE_NEEDS_DECODE = 8, inputLength = input.length, startingIndex = -1, equalityIndex = -1;\n  for (let i = 0; i < inputLength; i++)\n    switch (input.charCodeAt(i)) {\n      // '&'\n      case 38:\n        processKeyValuePair(input, i), startingIndex = i, equalityIndex = i, flags = 0;\n        break;\n      // '='\n      case 61:\n        equalityIndex <= startingIndex ? equalityIndex = i : flags |= VALUE_NEEDS_DECODE;\n        break;\n      // '+'\n      case 43:\n        equalityIndex > startingIndex ? flags |= VALUE_HAS_PLUS : flags |= KEY_HAS_PLUS;\n        break;\n      // '%'\n      case 37:\n        equalityIndex > startingIndex ? flags |= VALUE_NEEDS_DECODE : flags |= KEY_NEEDS_DECODE;\n        break;\n    }\n  return startingIndex < inputLength && processKeyValuePair(input, inputLength), result;\n  function processKeyValuePair(input2, endIndex) {\n    let hasBothKeyValuePair = equalityIndex > startingIndex, effectiveEqualityIndex = hasBothKeyValuePair ? equalityIndex : endIndex, keySlice = input2.slice(startingIndex + 1, effectiveEqualityIndex);\n    if (!hasBothKeyValuePair && keySlice.length === 0) return;\n    let finalKey = keySlice;\n    flags & KEY_HAS_PLUS && (finalKey = finalKey.replace(/\\+/g, \" \")), flags & KEY_NEEDS_DECODE && (finalKey = decode2(finalKey) || finalKey);\n    let finalValue = \"\";\n    if (hasBothKeyValuePair) {\n      let valueSlice = input2.slice(equalityIndex + 1, endIndex);\n      flags & VALUE_HAS_PLUS && (valueSlice = valueSlice.replace(/\\+/g, \" \")), flags & VALUE_NEEDS_DECODE && (valueSlice = decode2(valueSlice) || valueSlice), finalValue = valueSlice;\n    }\n    let currentValue = result[finalKey];\n    currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue];\n  }\n}\n\n// src/trace.ts\nvar ELYSIA_TRACE = Symbol(\"ElysiaTrace\"), createProcess = () => {\n  let { promise, resolve } = Promise.withResolvers(), { promise: end, resolve: resolveEnd } = Promise.withResolvers(), { promise: error2, resolve: resolveError } = Promise.withResolvers(), callbacks = [], callbacksEnd = [];\n  return [\n    (callback) => (callback && callbacks.push(callback), promise),\n    (process2) => {\n      let processes = [], resolvers = [], groupError = null;\n      for (let i = 0; i < (process2.total ?? 0); i++) {\n        let { promise: promise2, resolve: resolve2 } = Promise.withResolvers(), { promise: end2, resolve: resolveEnd2 } = Promise.withResolvers(), { promise: error3, resolve: resolveError2 } = Promise.withResolvers(), callbacks2 = [], callbacksEnd2 = [];\n        processes.push((callback) => (callback && callbacks2.push(callback), promise2)), resolvers.push((process3) => {\n          let result2 = {\n            ...process3,\n            end: end2,\n            error: error3,\n            index: i,\n            onStop(callback) {\n              return callback && callbacksEnd2.push(callback), end2;\n            }\n          };\n          resolve2(result2);\n          for (let i2 = 0; i2 < callbacks2.length; i2++)\n            callbacks2[i2](result2);\n          return (error4 = null) => {\n            let end3 = performance.now();\n            error4 && (groupError = error4);\n            let detail = {\n              end: end3,\n              error: error4,\n              get elapsed() {\n                return end3 - process3.begin;\n              }\n            };\n            for (let i2 = 0; i2 < callbacksEnd2.length; i2++)\n              callbacksEnd2[i2](detail);\n            resolveEnd2(end3), resolveError2(error4);\n          };\n        });\n      }\n      let result = {\n        ...process2,\n        end,\n        error: error2,\n        onEvent(callback) {\n          for (let i = 0; i < processes.length; i++)\n            processes[i](callback);\n        },\n        onStop(callback) {\n          return callback && callbacksEnd.push(callback), end;\n        }\n      };\n      resolve(result);\n      for (let i = 0; i < callbacks.length; i++) callbacks[i](result);\n      return {\n        resolveChild: resolvers,\n        resolve(error3 = null) {\n          let end2 = performance.now();\n          !error3 && groupError && (error3 = groupError);\n          let detail = {\n            end: end2,\n            error: error3,\n            get elapsed() {\n              return end2 - process2.begin;\n            }\n          };\n          for (let i = 0; i < callbacksEnd.length; i++)\n            callbacksEnd[i](detail);\n          resolveEnd(end2), resolveError(error3);\n        }\n      };\n    }\n  ];\n}, createTracer = (traceListener) => (context) => {\n  let [onRequest, resolveRequest] = createProcess(), [onParse, resolveParse] = createProcess(), [onTransform, resolveTransform] = createProcess(), [onBeforeHandle, resolveBeforeHandle] = createProcess(), [onHandle, resolveHandle] = createProcess(), [onAfterHandle, resolveAfterHandle] = createProcess(), [onError, resolveError] = createProcess(), [onMapResponse, resolveMapResponse] = createProcess(), [onAfterResponse, resolveAfterResponse] = createProcess();\n  return traceListener({\n    // @ts-ignore\n    id: context[ELYSIA_REQUEST_ID],\n    context,\n    set: context.set,\n    // @ts-ignore\n    onRequest,\n    // @ts-ignore\n    onParse,\n    // @ts-ignore\n    onTransform,\n    // @ts-ignore\n    onBeforeHandle,\n    // @ts-ignore\n    onHandle,\n    // @ts-ignore\n    onAfterHandle,\n    // @ts-ignore\n    onMapResponse,\n    // @ts-ignore\n    onAfterResponse,\n    // @ts-ignore\n    onError,\n    time: Date.now(),\n    store: context.store\n  }), {\n    request: resolveRequest,\n    parse: resolveParse,\n    transform: resolveTransform,\n    beforeHandle: resolveBeforeHandle,\n    handle: resolveHandle,\n    afterHandle: resolveAfterHandle,\n    error: resolveError,\n    mapResponse: resolveMapResponse,\n    afterResponse: resolveAfterResponse\n  };\n};\n\n// src/schema.ts\nimport {\n  Kind as Kind3,\n  OptionalKind,\n  TransformKind\n} from \"@sinclair/typebox\";\nimport { Value as Value3 } from \"@sinclair/typebox/value\";\nimport { TypeCompiler as TypeCompiler3 } from \"@sinclair/typebox/compiler\";\nimport {\n  createMirror\n} from \"exact-mirror\";\nvar isOptional = (schema) => schema ? schema?.[Kind3] === \"Import\" && schema.References ? schema.References().some(isOptional) : (schema.schema && (schema = schema.schema), !!schema && OptionalKind in schema) : !1, hasAdditionalProperties = (_schema) => {\n  if (!_schema) return !1;\n  let schema = _schema?.schema ?? _schema;\n  if (schema[Kind3] === \"Import\" && _schema.References)\n    return _schema.References().some(hasAdditionalProperties);\n  if (schema.anyOf) return schema.anyOf.some(hasAdditionalProperties);\n  if (schema.someOf) return schema.someOf.some(hasAdditionalProperties);\n  if (schema.allOf) return schema.allOf.some(hasAdditionalProperties);\n  if (schema.not) return schema.not.some(hasAdditionalProperties);\n  if (schema.type === \"object\") {\n    let properties = schema.properties;\n    if (\"additionalProperties\" in schema) return schema.additionalProperties;\n    if (\"patternProperties\" in schema) return !1;\n    for (let key of Object.keys(properties)) {\n      let property = properties[key];\n      if (property.type === \"object\") {\n        if (hasAdditionalProperties(property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasAdditionalProperties(property.anyOf[i])) return !0;\n      }\n      return property.additionalProperties;\n    }\n    return !1;\n  }\n  return schema.type === \"array\" && schema.items && !Array.isArray(schema.items) ? hasAdditionalProperties(schema.items) : !1;\n}, hasType = (type, schema) => {\n  if (!schema) return !1;\n  if (Kind3 in schema && schema[Kind3] === type) return !0;\n  if (schema.type === \"object\") {\n    let properties = schema.properties;\n    if (!properties) return !1;\n    for (let key of Object.keys(properties)) {\n      let property = properties[key];\n      if (property.type === \"object\") {\n        if (hasType(type, property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasType(type, property.anyOf[i])) return !0;\n      }\n      if (Kind3 in property && property[Kind3] === type) return !0;\n    }\n    return !1;\n  }\n  return !!schema.properties && Kind3 in schema.properties && schema.properties[Kind3] === type;\n}, hasProperty = (expectedProperty, _schema) => {\n  if (!_schema) return;\n  let schema = _schema.schema ?? _schema;\n  if (schema[Kind3] === \"Import\" && _schema.References)\n    return _schema.References().some((schema2) => hasProperty(expectedProperty, schema2));\n  if (schema.type === \"object\") {\n    let properties = schema.properties;\n    if (!properties) return !1;\n    for (let key of Object.keys(properties)) {\n      let property = properties[key];\n      if (expectedProperty in property) return !0;\n      if (property.type === \"object\") {\n        if (hasProperty(expectedProperty, property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasProperty(expectedProperty, property.anyOf[i]))\n            return !0;\n      }\n    }\n    return !1;\n  }\n  return expectedProperty in schema;\n}, hasRef = (schema) => {\n  if (!schema) return !1;\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasRef(schema.oneOf[i])) return !0;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      if (hasRef(schema.anyOf[i])) return !0;\n  }\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasRef(schema.oneOf[i])) return !0;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      if (hasRef(schema.allOf[i])) return !0;\n  }\n  if (schema.not && hasRef(schema.not)) return !0;\n  if (schema.type === \"object\" && schema.properties) {\n    let properties = schema.properties;\n    for (let key of Object.keys(properties)) {\n      let property = properties[key];\n      if (hasRef(property) || property.type === \"array\" && property.items && hasRef(property.items))\n        return !0;\n    }\n  }\n  return schema.type === \"array\" && schema.items && hasRef(schema.items) ? !0 : schema[Kind3] === \"Ref\" && \"$ref\" in schema;\n}, hasTransform = (schema) => {\n  if (!schema) return !1;\n  if (schema.$ref && schema.$defs && schema.$ref in schema.$defs && hasTransform(schema.$defs[schema.$ref]))\n    return !0;\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasTransform(schema.oneOf[i])) return !0;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      if (hasTransform(schema.anyOf[i])) return !0;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      if (hasTransform(schema.allOf[i])) return !0;\n  }\n  if (schema.not && hasTransform(schema.not)) return !0;\n  if (schema.type === \"object\" && schema.properties) {\n    let properties = schema.properties;\n    for (let key of Object.keys(properties)) {\n      let property = properties[key];\n      if (hasTransform(property) || property.type === \"array\" && property.items && hasTransform(property.items))\n        return !0;\n    }\n  }\n  return schema.type === \"array\" && schema.items && hasTransform(schema.items) ? !0 : TransformKind in schema;\n}, replaceSchemaType = (schema, options, _config = {}) => {\n  let config = _config;\n  if (config.root = !0, !Array.isArray(options))\n    return options.original = schema, _replaceSchemaType(schema, options, config);\n  for (let option of options)\n    option.original = schema, schema = _replaceSchemaType(schema, option, config);\n  return schema;\n}, _replaceSchemaType = (schema, options, config) => {\n  if (!schema) return schema;\n  let root = config.root;\n  if (options.onlyFirst && schema.type === options.onlyFirst)\n    return options.to(schema) ?? schema;\n  if (options.untilObjectFound && !root && schema.type === \"object\")\n    return schema;\n  let fromSymbol = options.from[Kind3];\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      schema.oneOf[i] = _replaceSchemaType(\n        schema.oneOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      schema.anyOf[i] = _replaceSchemaType(\n        schema.anyOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      schema.allOf[i] = _replaceSchemaType(\n        schema.allOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.not) return _replaceSchemaType(schema.not, options, config);\n  let isRoot = root && !!options.excludeRoot;\n  if (schema[Kind3] === fromSymbol) {\n    let { anyOf, oneOf, allOf, not, properties: properties2, items, ...rest } = schema, to = options.to(rest);\n    if (!to) return schema;\n    let transform, composeProperties = (schema2) => {\n      let v = _composeProperties(schema2);\n      return v.$id && delete v.$id, v;\n    }, _composeProperties = (v) => {\n      if (properties2 && v.type === \"object\") {\n        let newProperties = {};\n        for (let [key, value2] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value2,\n            options,\n            {\n              ...config,\n              root: !1\n            }\n          );\n        return {\n          ...rest,\n          ...v,\n          properties: newProperties\n        };\n      }\n      if (items && v.type === \"array\")\n        return {\n          ...rest,\n          ...v,\n          items: _replaceSchemaType(items, options, {\n            ...config,\n            root: !1\n          })\n        };\n      let value = {\n        ...rest,\n        ...v\n      };\n      return delete value.required, properties2 && v.type === \"string\" && v.format === \"ObjectString\" && v.default === \"{}\" && (transform = t.ObjectString(properties2, rest), value.default = JSON.stringify(\n        Value3.Create(t.Object(properties2))\n      ), value.properties = properties2), items && v.type === \"string\" && v.format === \"ArrayString\" && v.default === \"[]\" && (transform = t.ArrayString(items, rest), value.default = JSON.stringify(Value3.Create(t.Array(items))), value.items = items), value;\n    };\n    if (isRoot) {\n      if (properties2) {\n        let newProperties = {};\n        for (let [key, value] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value,\n            options,\n            {\n              ...config,\n              root: !1\n            }\n          );\n        return {\n          ...rest,\n          properties: newProperties\n        };\n      } else if (items?.map)\n        return {\n          ...rest,\n          items: items.map(\n            (v) => _replaceSchemaType(v, options, {\n              ...config,\n              root: !1\n            })\n          )\n        };\n      return rest;\n    }\n    if (to.anyOf)\n      for (let i = 0; i < to.anyOf.length; i++)\n        to.anyOf[i] = composeProperties(to.anyOf[i]);\n    else if (to.oneOf)\n      for (let i = 0; i < to.oneOf.length; i++)\n        to.oneOf[i] = composeProperties(to.oneOf[i]);\n    else if (to.allOf)\n      for (let i = 0; i < to.allOf.length; i++)\n        to.allOf[i] = composeProperties(to.allOf[i]);\n    else to.not && (to.not = composeProperties(to.not));\n    if (transform && (to[TransformKind] = transform[TransformKind]), to.anyOf || to.oneOf || to.allOf || to.not) return to;\n    if (properties2) {\n      let newProperties = {};\n      for (let [key, value] of Object.entries(properties2))\n        newProperties[key] = _replaceSchemaType(\n          value,\n          options,\n          {\n            ...config,\n            root: !1\n          }\n        );\n      return {\n        ...rest,\n        ...to,\n        properties: newProperties\n      };\n    } else if (items?.map)\n      return {\n        ...rest,\n        ...to,\n        items: items.map(\n          (v) => _replaceSchemaType(v, options, {\n            ...config,\n            root: !1\n          })\n        )\n      };\n    return {\n      ...rest,\n      ...to\n    };\n  }\n  let properties = schema?.properties;\n  if (properties && root && options.rootOnly !== !0)\n    for (let [key, value] of Object.entries(properties))\n      switch (value[Kind3]) {\n        case fromSymbol:\n          let { anyOf, oneOf, allOf, not, type, ...rest } = value, to = options.to(rest);\n          if (!to) return schema;\n          if (to.anyOf)\n            for (let i = 0; i < to.anyOf.length; i++)\n              to.anyOf[i] = { ...rest, ...to.anyOf[i] };\n          else if (to.oneOf)\n            for (let i = 0; i < to.oneOf.length; i++)\n              to.oneOf[i] = { ...rest, ...to.oneOf[i] };\n          else if (to.allOf)\n            for (let i = 0; i < to.allOf.length; i++)\n              to.allOf[i] = { ...rest, ...to.allOf[i] };\n          else to.not && (to.not = { ...rest, ...to.not });\n          properties[key] = {\n            ...rest,\n            ..._replaceSchemaType(rest, options, {\n              ...config,\n              root: !1\n            })\n          };\n          break;\n        case \"Object\":\n        case \"Union\":\n          properties[key] = _replaceSchemaType(value, options, {\n            ...config,\n            root: !1\n          });\n          break;\n        default:\n          if (Array.isArray(value.items))\n            for (let i = 0; i < value.items.length; i++)\n              value.items[i] = _replaceSchemaType(\n                value.items[i],\n                options,\n                {\n                  ...config,\n                  root: !1\n                }\n              );\n          else value.anyOf || value.oneOf || value.allOf || value.not ? properties[key] = _replaceSchemaType(value, options, {\n            ...config,\n            root: !1\n          }) : value.type === \"array\" && (value.items = _replaceSchemaType(value.items, options, {\n            ...config,\n            root: !1\n          }));\n          break;\n      }\n  return schema.type === \"array\" && schema.items && (Array.isArray(schema.items) ? schema.items = schema.items.map(\n    (item) => _replaceSchemaType(item, options, {\n      ...config,\n      root: !1\n    })\n  ) : schema.items = _replaceSchemaType(schema.items, options, {\n    ...config,\n    root: !1\n  })), schema;\n}, createCleaner = (schema) => (value) => {\n  if (typeof value == \"object\")\n    try {\n      return Value3.Clean(schema, value);\n    } catch {\n    }\n  return value;\n}, getSchemaValidator = (s, {\n  models = {},\n  dynamic = !1,\n  modules,\n  normalize = !1,\n  additionalProperties = !1,\n  coerce = !1,\n  additionalCoerce = [],\n  validators,\n  sanitize\n} = {}) => {\n  if (validators = validators?.filter((x) => x), !s) {\n    if (!validators?.length) return;\n    s = validators[0], validators = validators.slice(1);\n  }\n  let doesHaveRef, replaceSchema = (schema2) => coerce ? replaceSchemaType(schema2, [\n    {\n      from: t.Number(),\n      to: (options) => t.Numeric(options),\n      untilObjectFound: !0\n    },\n    {\n      from: t.Boolean(),\n      to: (options) => t.BooleanString(options),\n      untilObjectFound: !0\n    },\n    ...Array.isArray(additionalCoerce) ? additionalCoerce : [additionalCoerce]\n  ]) : replaceSchemaType(schema2, additionalCoerce), mapSchema = (s2) => {\n    let schema2;\n    if (!s2) return;\n    if (typeof s2 != \"string\") schema2 = s2;\n    else {\n      let isArray = s2.endsWith(\"[]\"), key = isArray ? s2.substring(0, s2.length - 2) : s2;\n      schema2 = modules?.Import(\n        key\n      ) ?? models[key], isArray && (schema2 = t.Array(schema2));\n    }\n    if (!schema2) return;\n    let _doesHaveRef;\n    if (schema2[Kind3] !== \"Import\" && (_doesHaveRef = hasRef(schema2))) {\n      let id = randomId();\n      doesHaveRef === void 0 && (doesHaveRef = _doesHaveRef), schema2 = t.Module({\n        // @ts-expect-error private property\n        ...modules?.$defs,\n        [id]: schema2\n      }).Import(id);\n    }\n    if (schema2[Kind3] === \"Import\") {\n      let newDefs = {};\n      for (let [key2, value] of Object.entries(schema2.$defs))\n        newDefs[key2] = replaceSchema(value);\n      let key = schema2.$ref;\n      schema2 = t.Module(newDefs).Import(key);\n    } else (coerce || additionalCoerce) && (schema2 = replaceSchema(schema2));\n    return schema2;\n  }, schema = mapSchema(s);\n  if (validators?.length) {\n    let hasAdditional = !1, { schema: mergedObjectSchema, notObjects } = mergeObjectSchemas([\n      schema,\n      ...validators.map(mapSchema)\n    ]);\n    notObjects && (schema = t.Intersect([\n      ...mergedObjectSchema ? [mergedObjectSchema] : [],\n      ...notObjects.map((x) => {\n        let schema2 = mapSchema(x);\n        return schema2.type === \"object\" && \"additionalProperties\" in schema2 && (!hasAdditional && schema2.additionalProperties === !1 && (hasAdditional = !0), delete schema2.additionalProperties), schema2;\n      })\n    ]), schema.type === \"object\" && hasAdditional && (schema.additionalProperties = !1));\n  } else\n    schema.type === \"object\" && !(\"additionalProperties\" in schema) ? schema.additionalProperties = additionalProperties : schema = replaceSchemaType(schema, {\n      onlyFirst: \"object\",\n      from: t.Object({}),\n      // @ts-ignore\n      to({ properties, ...options }) {\n        if (properties && !(\"additionalProperties\" in schema))\n          return t.Object(properties, {\n            ...options,\n            additionalProperties: !1\n          });\n      }\n    });\n  if (dynamic) {\n    let validator = {\n      schema,\n      references: \"\",\n      checkFunc: () => {\n      },\n      code: \"\",\n      // @ts-expect-error\n      Check: (value) => Value3.Check(schema, value),\n      Errors: (value) => Value3.Errors(schema, value),\n      Code: () => \"\",\n      Clean: createCleaner(schema),\n      Decode: (value) => Value3.Decode(schema, value),\n      Encode: (value) => Value3.Encode(schema, value),\n      get hasAdditionalProperties() {\n        return \"~hasAdditionalProperties\" in this ? this[\"~hasAdditionalProperties\"] : this[\"~hasAdditionalProperties\"] = hasAdditionalProperties(schema);\n      },\n      get hasDefault() {\n        return \"~hasDefault\" in this ? this[\"~hasDefault\"] : this[\"~hasDefault\"] = hasProperty(\"default\", schema);\n      },\n      get isOptional() {\n        return \"~isOptional\" in this ? this[\"~isOptional\"] : this[\"~isOptional\"] = isOptional(schema);\n      },\n      get hasTransform() {\n        return \"~hasTransform\" in this ? this[\"~hasTransform\"] : this[\"~hasTransform\"] = hasTransform(schema);\n      },\n      \"~hasRef\": doesHaveRef,\n      get hasRef() {\n        return \"~hasRef\" in this ? this[\"~hasRef\"] : this[\"~hasRef\"] = hasTransform(schema);\n      }\n    };\n    if (schema.config && (validator.config = schema.config, validator?.schema?.config && delete validator.schema.config), normalize && schema.additionalProperties === !1)\n      if (normalize === !0 || normalize === \"exactMirror\")\n        try {\n          validator.Clean = createMirror(schema, {\n            TypeCompiler: TypeCompiler3,\n            sanitize: sanitize?.(),\n            modules\n          });\n        } catch {\n          console.warn(\n            \"Failed to create exactMirror. Please report the following code to https://github.com/elysiajs/elysia/issues\"\n          ), console.warn(schema), validator.Clean = createCleaner(schema);\n        }\n      else validator.Clean = createCleaner(schema);\n    return validator.parse = (v) => {\n      try {\n        return validator.Decode(validator.Clean?.(v) ?? v);\n      } catch {\n        throw [...validator.Errors(v)].map(mapValueError);\n      }\n    }, validator.safeParse = (v) => {\n      try {\n        return {\n          success: !0,\n          data: validator.Decode(validator.Clean?.(v) ?? v),\n          error: null\n        };\n      } catch {\n        let errors = [...compiled.Errors(v)].map(mapValueError);\n        return {\n          success: !1,\n          data: null,\n          error: errors[0]?.summary,\n          errors\n        };\n      }\n    }, validator;\n  }\n  let compiled = TypeCompiler3.Compile(\n    schema,\n    Object.values(models)\n  );\n  if (schema.config && (compiled.config = schema.config, compiled?.schema?.config && delete compiled.schema.config), normalize === !0 || normalize === \"exactMirror\")\n    try {\n      compiled.Clean = createMirror(schema, {\n        TypeCompiler: TypeCompiler3,\n        sanitize: sanitize?.(),\n        modules\n      });\n    } catch {\n      console.warn(\n        \"Failed to create exactMirror. Please report the following code to https://github.com/elysiajs/elysia/issues\"\n      ), console.dir(schema, {\n        depth: null\n      }), compiled.Clean = createCleaner(schema);\n    }\n  else normalize === \"typebox\" && (compiled.Clean = createCleaner(schema));\n  return compiled.parse = (v) => {\n    try {\n      return compiled.Decode(compiled.Clean?.(v) ?? v);\n    } catch {\n      throw [...compiled.Errors(v)].map(mapValueError);\n    }\n  }, compiled.safeParse = (v) => {\n    try {\n      return {\n        success: !0,\n        data: compiled.Decode(compiled.Clean?.(v) ?? v),\n        error: null\n      };\n    } catch {\n      let errors = [...compiled.Errors(v)].map(mapValueError);\n      return {\n        success: !1,\n        data: null,\n        error: errors[0]?.summary,\n        errors\n      };\n    }\n  }, Object.assign(compiled, {\n    get hasAdditionalProperties() {\n      return \"~hasAdditionalProperties\" in this ? this[\"~hasAdditionalProperties\"] : this[\"~hasAdditionalProperties\"] = hasAdditionalProperties(compiled);\n    },\n    get hasDefault() {\n      return \"~hasDefault\" in this ? this[\"~hasDefault\"] : this[\"~hasDefault\"] = hasProperty(\"default\", compiled);\n    },\n    get isOptional() {\n      return \"~isOptional\" in this ? this[\"~isOptional\"] : this[\"~isOptional\"] = isOptional(compiled);\n    },\n    get hasTransform() {\n      return \"~hasTransform\" in this ? this[\"~hasTransform\"] : this[\"~hasTransform\"] = hasTransform(schema);\n    },\n    get hasRef() {\n      return \"~hasRef\" in this ? this[\"~hasRef\"] : this[\"~hasRef\"] = hasRef(schema);\n    },\n    \"~hasRef\": doesHaveRef\n  }), compiled;\n}, isUnion = (schema) => schema[Kind3] === \"Union\" || !schema.schema && !!schema.anyOf, mergeObjectSchemas = (schemas) => {\n  if (schemas.length === 0)\n    return {\n      schema: void 0,\n      notObjects: []\n    };\n  if (schemas.length === 1)\n    return schemas[0].type === \"object\" ? {\n      schema: schemas[0],\n      notObjects: []\n    } : {\n      schema: void 0,\n      notObjects: schemas\n    };\n  let newSchema, notObjects = [], additionalPropertiesIsTrue = !1, additionalPropertiesIsFalse = !1;\n  for (let schema of schemas) {\n    if (schema.type !== \"object\") {\n      notObjects.push(schema);\n      continue;\n    }\n    if (\"additionalProperties\" in schema && (schema.additionalProperties === !0 ? additionalPropertiesIsTrue = !0 : schema.additionalProperties === !1 && (additionalPropertiesIsFalse = !0)), !newSchema) {\n      newSchema = schema;\n      continue;\n    }\n    newSchema = {\n      ...newSchema,\n      ...schema,\n      properties: {\n        ...newSchema.properties,\n        ...schema.properties\n      },\n      required: [...newSchema?.required ?? [], ...schema.required]\n    };\n  }\n  return newSchema && (newSchema.required && (newSchema.required = [...new Set(newSchema.required)]), additionalPropertiesIsFalse ? newSchema.additionalProperties = !1 : additionalPropertiesIsTrue && (newSchema.additionalProperties = !0)), {\n    schema: newSchema,\n    notObjects\n  };\n}, getResponseSchemaValidator = (s, {\n  models = {},\n  modules,\n  dynamic = !1,\n  normalize = !1,\n  additionalProperties = !1,\n  validators = [],\n  sanitize\n}) => {\n  if (validators = validators.filter((x) => x), !s) {\n    if (!validators?.length) return;\n    s = validators[0], validators = validators.slice(1);\n  }\n  let maybeSchemaOrRecord;\n  if (typeof s != \"string\") maybeSchemaOrRecord = s;\n  else {\n    let isArray = s.endsWith(\"[]\"), key = isArray ? s.substring(0, s.length - 2) : s;\n    maybeSchemaOrRecord = modules.Import(key) ?? models[key], isArray && (maybeSchemaOrRecord = t.Array(maybeSchemaOrRecord));\n  }\n  if (!maybeSchemaOrRecord) return;\n  if (Kind3 in maybeSchemaOrRecord)\n    return {\n      200: getSchemaValidator(maybeSchemaOrRecord, {\n        modules,\n        models,\n        additionalProperties,\n        dynamic,\n        normalize,\n        coerce: !1,\n        additionalCoerce: [],\n        validators: validators.map((x) => x[200]),\n        sanitize\n      })\n    };\n  let record = {};\n  return Object.keys(maybeSchemaOrRecord).forEach((status2) => {\n    if (isNaN(+status2)) return;\n    let maybeNameOrSchema = maybeSchemaOrRecord[+status2];\n    if (typeof maybeNameOrSchema == \"string\") {\n      if (maybeNameOrSchema in models) {\n        let schema = models[maybeNameOrSchema];\n        record[+status2] = Kind3 in schema ? getSchemaValidator(schema, {\n          modules,\n          models,\n          additionalProperties,\n          dynamic,\n          normalize,\n          coerce: !1,\n          additionalCoerce: [],\n          validators: validators.map((x) => x[+status2]),\n          sanitize\n        }) : schema;\n      }\n      return;\n    }\n    record[+status2] = Kind3 in maybeNameOrSchema ? getSchemaValidator(maybeNameOrSchema, {\n      modules,\n      models,\n      additionalProperties,\n      dynamic,\n      normalize,\n      coerce: !1,\n      additionalCoerce: [],\n      validators: validators.map((x) => x[+status2]),\n      sanitize\n    }) : maybeNameOrSchema;\n  }), record;\n}, _stringToStructureCoercions, stringToStructureCoercions = () => (_stringToStructureCoercions || (_stringToStructureCoercions = [\n  {\n    from: t.Object({}),\n    to: () => t.ObjectString({}),\n    excludeRoot: !0\n  },\n  {\n    from: t.Array(t.Any()),\n    to: () => t.ArrayString(t.Any())\n  }\n]), _stringToStructureCoercions), _coercePrimitiveRoot, coercePrimitiveRoot = () => (_coercePrimitiveRoot || (_coercePrimitiveRoot = [\n  {\n    from: t.Number(),\n    to: (options) => t.Numeric(options),\n    rootOnly: !0\n  },\n  {\n    from: t.Boolean(),\n    to: (options) => t.BooleanString(options),\n    rootOnly: !0\n  }\n]), _coercePrimitiveRoot), getCookieValidator = ({\n  validator,\n  modules,\n  defaultConfig = {},\n  config,\n  dynamic,\n  normalize = !1,\n  models,\n  validators,\n  sanitize\n}) => {\n  let cookieValidator = getSchemaValidator(validator, {\n    modules,\n    dynamic,\n    models,\n    normalize,\n    additionalProperties: !0,\n    coerce: !0,\n    additionalCoerce: stringToStructureCoercions(),\n    validators,\n    sanitize\n  });\n  return cookieValidator ? cookieValidator.config = mergeCookie(cookieValidator.config, config) : (cookieValidator = getSchemaValidator(t.Cookie(t.Any()), {\n    modules,\n    dynamic,\n    models,\n    additionalProperties: !0,\n    validators,\n    sanitize\n  }), cookieValidator.config = defaultConfig), cookieValidator;\n}, unwrapImportSchema = (schema) => schema[Kind3] === \"Import\" && schema.$defs[schema.$ref][Kind3] === \"Object\" ? schema.$defs[schema.$ref] : schema;\n\n// src/compose.ts\nvar allocateIf = (value, condition) => condition ? value : \"\", defaultParsers = [\n  \"json\",\n  \"text\",\n  \"urlencoded\",\n  \"arrayBuffer\",\n  \"formdata\",\n  \"application/json\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"text/plain\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"application/x-www-form-urlencoded\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"application/octet-stream\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"multipart/form-data\"\n], createReport = ({\n  context = \"c\",\n  trace = [],\n  addFn\n}) => {\n  if (!trace.length)\n    return () => ({\n      resolveChild() {\n        return () => {\n        };\n      },\n      resolve() {\n      }\n    });\n  for (let i = 0; i < trace.length; i++)\n    addFn(\n      `let report${i},reportChild${i},reportErr${i},reportErrChild${i};let trace${i}=${context}[ELYSIA_TRACE]?.[${i}]??trace[${i}](${context});\n`\n    );\n  return (event, {\n    name,\n    total = 0\n  } = {}) => {\n    name || (name = \"anonymous\");\n    let reporter = event === \"error\" ? \"reportErr\" : \"report\";\n    for (let i = 0; i < trace.length; i++)\n      addFn(\n        `${reporter}${i} = trace${i}.${event}({id,event:'${event}',name:'${name}',begin:performance.now(),total:${total}})\n`\n      );\n    return {\n      resolve() {\n        for (let i = 0; i < trace.length; i++)\n          addFn(`${reporter}${i}.resolve()\n`);\n      },\n      resolveChild(name2) {\n        for (let i = 0; i < trace.length; i++)\n          addFn(\n            `${reporter}Child${i}=${reporter}${i}.resolveChild?.shift()?.({id,event:'${event}',name:'${name2}',begin:performance.now()})\n`\n          );\n        return (binding) => {\n          for (let i = 0; i < trace.length; i++)\n            addFn(\n              binding ? `if(${binding} instanceof Error){${reporter}Child${i}?.(${binding}) }else{${reporter}Child${i}?.()}` : `${reporter}Child${i}?.()\n`\n            );\n        };\n      }\n    };\n  };\n}, composeCleaner = ({\n  schema,\n  name,\n  type,\n  typeAlias = type,\n  normalize,\n  ignoreTryCatch = !1\n}) => !normalize || !schema.Clean ? \"\" : normalize === !0 || normalize === \"exactMirror\" ? ignoreTryCatch ? `${name}=validator.${typeAlias}.Clean(${name})\n` : `try{${name}=validator.${typeAlias}.Clean(${name})\n}catch{}` : normalize === \"typebox\" ? `${name}=validator.${typeAlias}.Clean(${name})\n` : \"\", composeValidationFactory = ({\n  injectResponse = \"\",\n  normalize = !1,\n  validator,\n  encodeSchema = !1,\n  isStaticResponse = !1,\n  hasSanitize = !1\n}) => ({\n  validate: (type, value = `c.${type}`) => `c.set.status=422;throw new ValidationError('${type}',validator.${type},${value})`,\n  response: (name = \"r\") => {\n    if (isStaticResponse) return \"\";\n    let code = injectResponse + `\n`;\n    code += `if(${name} instanceof ElysiaCustomStatusResponse){c.set.status=${name}.code\n${name}=${name}.response}switch(c.set.status){`;\n    for (let [status2, value] of Object.entries(validator.response)) {\n      code += `\ncase ${status2}:if(${name} instanceof Response)break\n`;\n      let noValidate = value.schema?.noValidate === !0, appliedCleaner = noValidate || hasSanitize, clean = ({ ignoreTryCatch = !1 } = {}) => composeCleaner({\n        name,\n        schema: value,\n        type: \"response\",\n        typeAlias: `response[${status2}]`,\n        normalize,\n        ignoreTryCatch\n      });\n      appliedCleaner && (code += clean());\n      let applyErrorCleaner = !appliedCleaner && normalize && !noValidate;\n      encodeSchema && value.hasTransform ? (code += `try{${name}=validator.response[${status2}].Encode(${name})\n`, appliedCleaner || (code += clean({ ignoreTryCatch: !0 })), code += `c.set.status=${status2}}catch{` + (applyErrorCleaner ? `try{\n` + clean({ ignoreTryCatch: !0 }) + `${name}=validator.response[${status2}].Encode(${name})\n}catch{throw new ValidationError('response',validator.response[${status2}],${name})}` : `throw new ValidationError('response',validator.response[${status2}],${name})`) + \"}\") : (appliedCleaner || (code += clean()), noValidate || (code += `if(validator.response[${status2}].Check(${name})===false)throw new ValidationError('response',validator.response[${status2}],${name})\nc.set.status=${status2}\n`)), code += `break\n`;\n    }\n    return code + \"}\";\n  }\n}), isAsyncName = (v) => (v?.fn ?? v).constructor.name === \"AsyncFunction\", matchResponseClone = /=>\\s?response\\.clone\\(/, matchFnReturn = /(?:return|=>)\\s?\\S+\\(|a(?:sync|wait)/, isAsync = (v) => {\n  let isObject2 = typeof v == \"object\";\n  if (isObject2 && v.isAsync !== void 0) return v.isAsync;\n  let fn = isObject2 ? v.fn : v;\n  if (fn.constructor.name === \"AsyncFunction\") return !0;\n  let literal = fn.toString();\n  if (matchResponseClone.test(literal))\n    return isObject2 && (v.isAsync = !1), !1;\n  let result = matchFnReturn.test(literal);\n  return isObject2 && (v.isAsync = result), result;\n}, hasReturn = (v) => {\n  let isObject2 = typeof v == \"object\";\n  if (isObject2 && v.hasReturn !== void 0) return v.hasReturn;\n  let fnLiteral = isObject2 ? v.fn.toString() : typeof v == \"string\" ? v.toString() : v, parenthesisEnd = fnLiteral.indexOf(\")\");\n  if (fnLiteral.charCodeAt(parenthesisEnd + 2) === 61 && fnLiteral.charCodeAt(parenthesisEnd + 5) !== 123)\n    return isObject2 && (v.hasReturn = !0), !0;\n  let result = fnLiteral.includes(\"return\");\n  return isObject2 && (v.hasReturn = result), result;\n}, isGenerator = (v) => {\n  let fn = v?.fn ?? v;\n  return fn.constructor.name === \"AsyncGeneratorFunction\" || fn.constructor.name === \"GeneratorFunction\";\n}, coerceTransformDecodeError = (fnLiteral, type, value = `c.${type}`) => `try{${fnLiteral}}catch(error){if(error.constructor.name === 'TransformDecodeError'){c.set.status=422\nthrow error.error ?? new ValidationError('${type}',validator.${type},${value})}}`, composeHandler = ({\n  app,\n  path,\n  method,\n  hooks,\n  validator,\n  handler,\n  allowMeta = !1,\n  inference\n}) => {\n  let adapter = app[\"~adapter\"].composeHandler, adapterHandler = app[\"~adapter\"].handler, isHandleFn = typeof handler == \"function\";\n  if (!isHandleFn) {\n    handler = adapterHandler.mapResponse(handler, {\n      // @ts-expect-error private property\n      headers: app.setHeaders ?? {}\n    });\n    let isResponse = handler instanceof Response || // @ts-ignore If it's not instanceof Response, it might be a polyfill (only on Node)\n    handler?.constructor?.name === \"Response\" && typeof handler?.clone == \"function\";\n    if (hooks.parse?.length && hooks.transform?.length && hooks.beforeHandle?.length && hooks.afterHandle?.length)\n      return isResponse ? Function(\n        \"a\",\n        `\"use strict\";\nreturn function(){return a.clone()}`\n      )(handler) : Function(\n        \"a\",\n        `\"use strict\";\nreturn function(){return a}`\n      )(handler);\n    if (isResponse) {\n      let response = handler;\n      handler = () => response.clone();\n    }\n  }\n  let handle = isHandleFn ? \"handler(c)\" : \"handler\", hasTrace = !!hooks.trace?.length, fnLiteral = \"\";\n  if (inference = sucrose(hooks, inference), inference = sucrose(\n    {\n      handler\n    },\n    inference\n  ), adapter.declare) {\n    let literal = adapter.declare(inference);\n    literal && (fnLiteral += literal);\n  }\n  inference.server && (fnLiteral += `Object.defineProperty(c,'server',{get:function(){return getServer()}})\n`), validator.createBody?.(), validator.createQuery?.(), validator.createHeaders?.(), validator.createParams?.(), validator.createCookie?.(), validator.createResponse?.();\n  let hasValidation = !!validator.body || !!validator.headers || !!validator.params || !!validator.query || !!validator.cookie || !!validator.response, hasQuery = inference.query || !!validator.query, requestNoBody = hooks.parse?.length === 1 && // @ts-expect-error\n  hooks.parse[0].fn === \"none\", hasBody = method !== \"\" && method !== \"GET\" && method !== \"HEAD\" && (inference.body || !!validator.body || !!hooks.parse?.length) && !requestNoBody, defaultHeaders = app.setHeaders, hasDefaultHeaders = defaultHeaders && !!Object.keys(defaultHeaders).length, hasHeaders = inference.headers || !!validator.headers || adapter.preferWebstandardHeaders !== !0 && inference.body, hasCookie = inference.cookie || !!validator.cookie, cookieMeta = validator.cookie?.config ? mergeCookie(validator?.cookie?.config, app.config.cookie) : app.config.cookie, _encodeCookie = \"\", encodeCookie = () => {\n    if (_encodeCookie) return _encodeCookie;\n    if (cookieMeta?.sign) {\n      if (!cookieMeta.secrets)\n        throw new Error(\n          `t.Cookie required secret which is not set in (${method}) ${path}.`\n        );\n      let secret = cookieMeta.secrets ? typeof cookieMeta.secrets == \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0] : void 0;\n      if (_encodeCookie += `const _setCookie = c.set.cookie\nif(_setCookie){`, cookieMeta.sign === !0)\n        _encodeCookie += `for(const [key, cookie] of Object.entries(_setCookie)){c.set.cookie[key].value=await signCookie(cookie.value,'${secret}')}`;\n      else\n        for (let name of cookieMeta.sign)\n          _encodeCookie += `if(_setCookie['${name}']?.value)c.set.cookie['${name}'].value=await signCookie(_setCookie['${name}'].value,'${secret}')\n`;\n      _encodeCookie += `}\n`;\n    }\n    return _encodeCookie;\n  }, normalize = app.config.normalize, encodeSchema = app.config.encodeSchema, validation = composeValidationFactory({\n    normalize,\n    validator,\n    encodeSchema,\n    isStaticResponse: handler instanceof Response,\n    hasSanitize: !!app.config.sanitize\n  });\n  hasHeaders && (fnLiteral += adapter.headers), hasTrace && (fnLiteral += `const id=c[ELYSIA_REQUEST_ID]\n`);\n  let report = createReport({\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  });\n  if (fnLiteral += \"try{\", hasCookie) {\n    let get = (name, defaultValue) => {\n      let value = cookieMeta?.[name] ?? defaultValue;\n      return value ? typeof value == \"string\" ? `${name}:'${value}',` : value instanceof Date ? `${name}: new Date(${value.getTime()}),` : `${name}:${value},` : typeof defaultValue == \"string\" ? `${name}:\"${defaultValue}\",` : `${name}:${defaultValue},`;\n    }, options = cookieMeta ? `{secrets:${cookieMeta.secrets !== void 0 ? typeof cookieMeta.secrets == \"string\" ? `'${cookieMeta.secrets}'` : \"[\" + cookieMeta.secrets.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},sign:${cookieMeta.sign === !0 ? !0 : cookieMeta.sign !== void 0 ? \"[\" + cookieMeta.sign.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},` + get(\"domain\") + get(\"expires\") + get(\"httpOnly\") + get(\"maxAge\") + get(\"path\", \"/\") + get(\"priority\") + get(\"sameSite\") + get(\"secure\") + \"}\" : \"undefined\";\n    hasHeaders ? fnLiteral += `\nc.cookie=await parseCookie(c.set,c.headers.cookie,${options})\n` : fnLiteral += `\nc.cookie=await parseCookie(c.set,c.request.headers.get('cookie'),${options})\n`;\n  }\n  if (hasQuery) {\n    let destructured = [], schema = validator.query?.schema;\n    if (schema && (schema.type === \"object\" || schema[Kind4] === \"Import\" && schema.$defs[schema.$ref])) {\n      let properties = schema.properties ?? schema.$defs[schema.$ref].properties;\n      if (!validator.query.hasAdditionalProperties)\n        for (let [key, _value] of Object.entries(properties)) {\n          let value = _value, isArray = value.type === \"array\" || !!value.anyOf?.some(\n            (v) => v.type === \"string\" && v.format === \"ArrayString\"\n          );\n          value && OptionalKind2 in value && value.type === \"array\" && value.items && (value = value.items);\n          let { type, anyOf } = value;\n          destructured.push({\n            key,\n            isArray,\n            isNestedObjectArray: isArray && value.items?.type === \"object\" || !!value.items?.anyOf?.some(\n              (x) => x.type === \"object\" || x.type === \"array\"\n            ),\n            isObject: type === \"object\" || anyOf?.some(\n              (v) => v.type === \"string\" && v.format === \"ArrayString\"\n            ),\n            anyOf: !!anyOf\n          });\n        }\n    }\n    if (!destructured.length)\n      fnLiteral += \"if(c.qi===-1){c.query={}}else{c.query=parseQueryFromURL(c.url,c.qi+1)}\";\n    else {\n      fnLiteral += `if(c.qi!==-1){let url='&'+c.url.slice(c.qi+1)\n`;\n      let index = 0;\n      for (let {\n        key,\n        isArray,\n        isObject: isObject2,\n        isNestedObjectArray,\n        anyOf\n      } of destructured) {\n        let encoded = encodeURIComponent(key), init2 = (index === 0 ? \"let \" : \"\") + `memory=url.indexOf('&${encoded}=')\nlet a${index}\n`;\n        isArray ? (fnLiteral += init2, isNestedObjectArray ? fnLiteral += `while(memory!==-1){const start=memory+${encoded.length + 2}\nmemory=url.indexOf('&',start)\nif(a${index}===undefined)\na${index}=''\nelse\na${index}+=','\nlet temp\nif(memory===-1)temp=decodeURIComponent(url.slice(start).replace(/\\\\+/g,' '))\nelse temp=decodeURIComponent(url.slice(start, memory).replace(/\\\\+/g,' '))\nconst charCode=temp.charCodeAt(0)\nif(charCode!==91&&charCode !== 123)\ntemp='\"'+temp+'\"'\na${index}+=temp\nif(memory===-1)break\nmemory=url.indexOf('&${encoded}=',memory)\nif(memory===-1)break}try{if(a${index}.charCodeAt(0)===91)a${index} = JSON.parse(a${index})\nelse\na${index}=JSON.parse('['+a${index}+']')}catch{}\n` : fnLiteral += `while(memory!==-1){const start=memory+${encoded.length + 2}\nmemory=url.indexOf('&',start)\nif(a${index}===undefined)a${index}=[]\nif(memory===-1){const temp=decodeURIComponent(url.slice(start).replace(/\\\\+/g,' '))\nif(temp.includes(',')){a${index}=a${index}.concat(temp.split(','))}else{a${index}.push(decodeURIComponent(url.slice(start).replace(/\\\\+/g,' ')))}\nbreak}else{const temp=decodeURIComponent(url.slice(start, memory).replace(/\\\\+/g,' '))\nif(temp.includes(',')){a${index}=a${index}.concat(temp.split(','))}else{a${index}.push(temp)}\n}memory=url.indexOf('&${encoded}=',memory)\nif(memory===-1) break\n}`) : isObject2 ? fnLiteral += init2 + `if(memory!==-1){const start=memory+${encoded.length + 2}\nmemory=url.indexOf('&',start)\nif(memory===-1)a${index}=decodeURIComponent(url.slice(start).replace(/\\\\+/g,' '))else a${index}=decodeURIComponent(url.slice(start,memory).replace(/\\\\+/g,' '))if(a${index}!==undefined)try{a${index}=JSON.parse(a${index})}catch{}}` : (fnLiteral += init2 + `if(memory!==-1){const start=memory+${encoded.length + 2}\nmemory=url.indexOf('&',start)\nif(memory===-1)a${index}=decodeURIComponent(url.slice(start).replace(/\\\\+/g,' '))\nelse{a${index}=decodeURIComponent(url.slice(start,memory).replace(/\\\\+/g,' '))`, anyOf && (fnLiteral += `\nlet deepMemory=url.indexOf('&${encoded}=',memory)\nif(deepMemory!==-1){a${index}=[a${index}]\nlet first=true\nwhile(true){const start=deepMemory+${encoded.length + 2}\nif(first)first=false\nelse deepMemory = url.indexOf('&', start)\nlet value\nif(deepMemory===-1)value=url.slice(start).replace(/\\\\+/g,' ')\nelse value=url.slice(start, deepMemory).replace(/\\\\+/g,' ')\nvalue=decodeURIComponent(value)\nif(value===null){if(deepMemory===-1){break}else{continue}}\nconst vStart=value.charCodeAt(0)\nconst vEnd=value.charCodeAt(value.length - 1)\nif((vStart===91&&vEnd===93)||(vStart===123&&vEnd===125))\ntry{a${index}.push(JSON.parse(value))}catch{a${index}.push(value)}if(deepMemory===-1)break}}`), fnLiteral += \"}}\"), index++, fnLiteral += `\n`;\n      }\n      fnLiteral += \"c.query={\" + destructured.map(({ key }, index2) => `'${key}':a${index2}`).join(\",\") + \"}\", fnLiteral += `} else c.query = {}\n`;\n    }\n  }\n  let isAsyncHandler = typeof handler == \"function\" && isAsync(handler), saveResponse = hasTrace || hooks.afterResponse?.length ? \"c.response= \" : \"\", maybeAsync = hasCookie || hasBody || isAsyncHandler || !!hooks.parse?.length || !!hooks.afterHandle?.some(isAsync) || !!hooks.beforeHandle?.some(isAsync) || !!hooks.transform?.some(isAsync) || !!hooks.mapResponse?.some(isAsync), maybeStream = (typeof handler == \"function\" ? isGenerator(handler) : !1) || !!hooks.beforeHandle?.some(isGenerator) || !!hooks.afterHandle?.some(isGenerator) || !!hooks.transform?.some(isGenerator), responseKeys = Object.keys(validator.response ?? {}), hasMultipleResponses = responseKeys.length > 1, hasSingle200 = responseKeys.length === 0 || responseKeys.length === 1 && responseKeys[0] === \"200\", hasSet = inference.cookie || inference.set || hasHeaders || hasTrace || hasMultipleResponses || !hasSingle200 || isHandleFn && hasDefaultHeaders || maybeStream, afterResponse = () => {\n    if (!hooks.afterResponse?.length && !hasTrace) return \"\";\n    let afterResponse2 = \"\", prefix = hooks.afterResponse?.some(isAsync) ? \"async \" : \"\";\n    afterResponse2 += `\nsetImmediate(${prefix}()=>{`;\n    let reporter = createReport({\n      trace: hooks.trace,\n      addFn: (word) => {\n        afterResponse2 += word;\n      }\n    })(\"afterResponse\", {\n      total: hooks.afterResponse?.length\n    });\n    if (hooks.afterResponse?.length && hooks.afterResponse)\n      for (let i = 0; i < hooks.afterResponse.length; i++) {\n        let endUnit = reporter.resolveChild(\n          hooks.afterResponse[i].fn.name\n        ), prefix2 = isAsync(hooks.afterResponse[i]) ? \"await \" : \"\";\n        afterResponse2 += `\n${prefix2}e.afterResponse[${i}](c)\n`, endUnit();\n      }\n    return reporter.resolve(), afterResponse2 += `})\n`, afterResponse2;\n  }, mapResponse3 = (r = \"r\") => {\n    let after = afterResponse(), response = `${hasSet ? \"mapResponse\" : \"mapCompactResponse\"}(${saveResponse}${r}${hasSet ? \",c.set\" : \"\"}${mapResponseContext})\n`;\n    return after ? `const _res=${response}` + after + \"return _res\" : `return ${response}`;\n  }, mapResponseContext = maybeStream || adapter.mapResponseContext ? `,${adapter.mapResponseContext}` : \"\";\n  (hasTrace || inference.route) && (fnLiteral += `c.route=\\`${path}\\`\n`);\n  let parseReporter = report(\"parse\", {\n    total: hooks.parse?.length\n  });\n  if (hasBody) {\n    let hasBodyInference = !!hooks.parse?.length || inference.body || validator.body;\n    adapter.parser.declare && (fnLiteral += adapter.parser.declare), fnLiteral += `\ntry{`;\n    let parser = typeof hooks.parse == \"string\" ? hooks.parse : Array.isArray(hooks.parse) && hooks.parse.length === 1 ? typeof hooks.parse[0] == \"string\" ? hooks.parse[0] : typeof hooks.parse[0].fn == \"string\" ? hooks.parse[0].fn : void 0 : void 0;\n    if (!parser && validator.body && !hooks.parse?.length) {\n      let schema = validator.body.schema;\n      schema && schema.anyOf && schema[Kind4] === \"Union\" && schema.anyOf?.length === 2 && schema.anyOf?.find((x) => x[Kind4] === \"ElysiaForm\") && (parser = \"formdata\");\n    }\n    if (parser && defaultParsers.includes(parser)) {\n      let reporter = report(\"parse\", {\n        total: hooks.parse?.length\n      }), isOptionalBody = !!validator.body?.isOptional;\n      switch (parser) {\n        case \"json\":\n        case \"application/json\":\n          fnLiteral += adapter.parser.json(isOptionalBody);\n          break;\n        case \"text\":\n        case \"text/plain\":\n          fnLiteral += adapter.parser.text(isOptionalBody);\n          break;\n        case \"urlencoded\":\n        case \"application/x-www-form-urlencoded\":\n          fnLiteral += adapter.parser.urlencoded(isOptionalBody);\n          break;\n        case \"arrayBuffer\":\n        case \"application/octet-stream\":\n          fnLiteral += adapter.parser.arrayBuffer(isOptionalBody);\n          break;\n        case \"formdata\":\n        case \"multipart/form-data\":\n          fnLiteral += adapter.parser.formData(isOptionalBody);\n          break;\n        default:\n          parser[0] in app[\"~parser\"] && (fnLiteral += hasHeaders ? \"let contentType = c.headers['content-type']\" : \"let contentType = c.request.headers.get('content-type')\", fnLiteral += `\nif(contentType){const index=contentType.indexOf(';')\nif(index!==-1)contentType=contentType.substring(0,index)}\nelse{contentType=''}c.contentType=contentType\nlet result=parser['${parser}'](c, contentType)\nif(result instanceof Promise)result=await result\nif(result instanceof ElysiaCustomStatusResponse)throw result\nif(result!==undefined)c.body=result\ndelete c.contentType\n`);\n          break;\n      }\n      reporter.resolve();\n    } else if (hasBodyInference) {\n      fnLiteral += `\n`, fnLiteral += `let contentType\nif(c.request.body)`, fnLiteral += hasHeaders ? `contentType=c.headers['content-type']\n` : `contentType=c.request.headers.get('content-type')\n`;\n      let hasDefaultParser = !1;\n      if (hooks.parse?.length)\n        fnLiteral += `if(contentType){\nconst index=contentType.indexOf(';')\n\nif(index!==-1)contentType=contentType.substring(0,index)}else{contentType=''}let used=false\nc.contentType=contentType\n`;\n      else {\n        hasDefaultParser = !0;\n        let isOptionalBody = !!validator.body?.isOptional;\n        fnLiteral += `if(contentType)switch(contentType.charCodeAt(12)){\ncase 106:` + adapter.parser.json(isOptionalBody) + `break\ncase 120:` + adapter.parser.urlencoded(isOptionalBody) + `break\ncase 111:` + adapter.parser.arrayBuffer(isOptionalBody) + `break\ncase 114:` + adapter.parser.formData(isOptionalBody) + `break\ndefault:if(contentType.charCodeAt(0)===116){` + adapter.parser.text(isOptionalBody) + `}break\n}`;\n      }\n      let reporter = report(\"parse\", {\n        total: hooks.parse?.length\n      });\n      if (hooks.parse)\n        for (let i = 0; i < hooks.parse.length; i++) {\n          let name = `bo${i}`;\n          if (i !== 0 && (fnLiteral += `\nif(!used){`), typeof hooks.parse[i].fn == \"string\") {\n            let endUnit = reporter.resolveChild(\n              hooks.parse[i].fn\n            ), isOptionalBody = !!validator.body?.isOptional;\n            switch (hooks.parse[i].fn) {\n              case \"json\":\n              case \"application/json\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.json(isOptionalBody);\n                break;\n              case \"text\":\n              case \"text/plain\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.text(isOptionalBody);\n                break;\n              case \"urlencoded\":\n              case \"application/x-www-form-urlencoded\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.urlencoded(isOptionalBody);\n                break;\n              case \"arrayBuffer\":\n              case \"application/octet-stream\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.arrayBuffer(isOptionalBody);\n                break;\n              case \"formdata\":\n              case \"multipart/form-data\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.formData(isOptionalBody);\n                break;\n              default:\n                fnLiteral += `let ${name}=parser['${hooks.parse[i].fn}'](c,contentType)\nif(${name} instanceof Promise)${name}=await ${name}\nif(${name}!==undefined){c.body=${name};used=true;}\n`;\n            }\n            endUnit();\n          } else {\n            let endUnit = reporter.resolveChild(\n              hooks.parse[i].fn.name\n            );\n            fnLiteral += `let ${name}=e.parse[${i}]\n${name}=${name}(c,contentType)\nif(${name} instanceof Promise)${name}=await ${name}\nif(${name}!==undefined){c.body=${name};used=true}`, endUnit();\n          }\n          if (i !== 0 && (fnLiteral += \"}\"), hasDefaultParser) break;\n        }\n      if (reporter.resolve(), !hasDefaultParser) {\n        let isOptionalBody = !!validator.body?.isOptional;\n        hooks.parse?.length && (fnLiteral += `\nif(!used){\n`), fnLiteral += `switch(contentType){case 'application/json':\n` + adapter.parser.json(isOptionalBody) + `break\ncase 'text/plain':` + adapter.parser.text(isOptionalBody) + `break\ncase 'application/x-www-form-urlencoded':` + adapter.parser.urlencoded(isOptionalBody) + `break\ncase 'application/octet-stream':` + adapter.parser.arrayBuffer(isOptionalBody) + `break\ncase 'multipart/form-data':` + adapter.parser.formData(isOptionalBody) + `break\n`;\n        for (let key of Object.keys(app[\"~parser\"]))\n          fnLiteral += `case '${key}':let bo${key}=parser['${key}'](c,contentType)\nif(bo${key} instanceof Promise)bo${key}=await bo${key}\nif(bo${key} instanceof ElysiaCustomStatusResponse){` + mapResponse3(`bo${key}`) + `}if(bo${key}!==undefined)c.body=bo${key}\nbreak\n`;\n        hooks.parse?.length && (fnLiteral += \"}\"), fnLiteral += \"}\";\n      }\n      hooks.parse?.length && (fnLiteral += `\ndelete c.contentType`);\n    }\n    fnLiteral += \"}catch(error){throw new ParseError(error)}\";\n  }\n  if (parseReporter.resolve(), hooks?.transform || hasTrace) {\n    let reporter = report(\"transform\", {\n      total: hooks.transform?.length\n    });\n    if (hooks.transform?.length) {\n      fnLiteral += `let transformed\n`;\n      for (let i = 0; i < hooks.transform.length; i++) {\n        let transform = hooks.transform[i], endUnit = reporter.resolveChild(transform.fn.name);\n        fnLiteral += isAsync(transform) ? `transformed=await e.transform[${i}](c)\n` : `transformed=e.transform[${i}](c)\n`, transform.subType === \"mapDerive\" ? fnLiteral += \"if(transformed instanceof ElysiaCustomStatusResponse){\" + mapResponse3(\"transformed\") + `}else{transformed.request=c.request\ntransformed.store=c.store\ntransformed.qi=c.qi\ntransformed.path=c.path\ntransformed.url=c.url\ntransformed.redirect=c.redirect\ntransformed.set=c.set\ntransformed.error=c.error\nc=transformed}` : fnLiteral += \"if(transformed instanceof ElysiaCustomStatusResponse){\" + mapResponse3(\"transformed\") + `}else Object.assign(c,transformed)\n`, endUnit();\n      }\n    }\n    reporter.resolve();\n  }\n  let fileUnions = [];\n  if (validator) {\n    if (validator.headers) {\n      if (validator.headers.hasDefault)\n        for (let [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.headers.schema,\n            {}\n          )\n        )) {\n          let parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `c.headers['${key}']??=${parsed}\n`);\n        }\n      fnLiteral += composeCleaner({\n        name: \"c.headers\",\n        schema: validator.headers,\n        type: \"headers\",\n        normalize\n      }), validator.headers.isOptional && (fnLiteral += \"if(isNotEmpty(c.headers)){\"), validator.body?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.headers.Check(c.headers) === false){\" + validation.validate(\"headers\") + \"}\"), validator.headers.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.headers=validator.headers.Decode(c.headers)\n`,\n        \"headers\"\n      )), validator.headers.isOptional && (fnLiteral += \"}\");\n    }\n    if (validator.params) {\n      if (validator.params.hasDefault)\n        for (let [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.params.schema,\n            {}\n          )\n        )) {\n          let parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `c.params['${key}']??=${parsed}\n`);\n        }\n      validator.params?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.params.Check(c.params)===false){\" + validation.validate(\"params\") + \"}\"), validator.params.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.params=validator.params.Decode(c.params)\n`,\n        \"params\"\n      ));\n    }\n    if (validator.query) {\n      if (validator.query.hasDefault)\n        for (let [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.query.schema,\n            {}\n          )\n        )) {\n          let parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `if(c.query['${key}']===undefined)c.query['${key}']=${parsed}\n`), fnLiteral += composeCleaner({\n            name: \"c.query\",\n            schema: validator.query,\n            type: \"query\",\n            normalize\n          });\n        }\n      validator.query.isOptional && (fnLiteral += \"if(isNotEmpty(c.query)){\"), validator.query?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.query.Check(c.query)===false){\" + validation.validate(\"query\") + \"}\"), validator.query.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.query=validator.query.Decode(Object.assign({},c.query))\n`,\n        \"query\"\n      )), validator.query.isOptional && (fnLiteral += \"}\");\n    }\n    if (hasBody && validator.body) {\n      (validator.body.hasTransform || validator.body.isOptional) && (fnLiteral += `const isNotEmptyObject=c.body&&(typeof c.body===\"object\"&&(isNotEmpty(c.body)||c.body instanceof ArrayBuffer))\n`);\n      let hasUnion = isUnion(validator.body.schema), hasNonUnionFileWithDefault = !1;\n      if (validator.body.hasDefault) {\n        let value = Value4.Default(\n          validator.body.schema,\n          validator.body.schema.type === \"object\" || validator.body.schema[Kind4] === \"Import\" && validator.body.schema.$defs[validator.body.schema.$ref][Kind4] === \"Object\" ? {} : void 0\n        ), schema = unwrapImportSchema(validator.body.schema);\n        if (!hasUnion && value && typeof value == \"object\" && (hasType(\"File\", schema) || hasType(\"Files\", schema))) {\n          hasNonUnionFileWithDefault = !0;\n          for (let [k, v] of Object.entries(value))\n            (v === \"File\" || v === \"Files\") && delete value[k];\n          isNotEmpty(value) || (value = void 0);\n        }\n        let parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n        value != null && (Array.isArray(value) ? fnLiteral += `if(!c.body)c.body=${parsed}\n` : typeof value == \"object\" ? fnLiteral += `c.body=Object.assign(${parsed},c.body)\n` : fnLiteral += `c.body=${parsed}\n`), fnLiteral += composeCleaner({\n          name: \"c.body\",\n          schema: validator.body,\n          type: \"body\",\n          normalize\n        }), validator.body?.schema?.noValidate !== !0 && (validator.body.isOptional ? fnLiteral += \"if(isNotEmptyObject&&validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\" : fnLiteral += \"if(validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\");\n      } else\n        fnLiteral += composeCleaner({\n          name: \"c.body\",\n          schema: validator.body,\n          type: \"body\",\n          normalize\n        }), validator.body?.schema?.noValidate !== !0 && (validator.body.isOptional ? fnLiteral += \"if(isNotEmptyObject&&validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\" : fnLiteral += \"if(validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\");\n      if (validator.body.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `if(isNotEmptyObject)c.body=validator.body.Decode(c.body)\n`,\n        \"body\"\n      )), hasUnion && validator.body.schema.anyOf?.length) {\n        let iterator = Object.values(\n          validator.body.schema.anyOf\n        );\n        for (let i = 0; i < iterator.length; i++) {\n          let type = iterator[i];\n          if (hasType(\"File\", type) || hasType(\"Files\", type)) {\n            let candidate = getSchemaValidator(type, {\n              // @ts-expect-error private property\n              modules: app.definitions.typebox,\n              dynamic: !app.config.aot,\n              // @ts-expect-error private property\n              models: app.definitions.type,\n              normalize: app.config.normalize,\n              additionalCoerce: coercePrimitiveRoot(),\n              sanitize: () => app.config.sanitize\n            });\n            if (candidate) {\n              let isFirst = fileUnions.length === 0, iterator2 = Object.entries(\n                type.properties\n              ), validator2 = isFirst ? `\n` : \" else \";\n              validator2 += `if(fileUnions[${fileUnions.length}].Check(c.body)){`;\n              let validateFile2 = \"\", validatorLength = 0;\n              for (let i2 = 0; i2 < iterator2.length; i2++) {\n                let [k, v] = iterator2[i2];\n                !v.extension || v[Kind4] !== \"File\" && v[Kind4] !== \"Files\" || (validatorLength && (validateFile2 += \",\"), validateFile2 += `validateFileExtension(c.body.${k},${JSON.stringify(v.extension)},'body.${k}')`, validatorLength++);\n              }\n              validateFile2 && (validatorLength === 1 ? validator2 += `await ${validateFile2}\n` : validatorLength > 1 && (validator2 += `await Promise.all([${validateFile2}])\n`), validator2 += \"}\", fnLiteral += validator2, fileUnions.push(candidate));\n            }\n          }\n        }\n      } else if (hasNonUnionFileWithDefault || !hasUnion && (hasType(\n        \"File\",\n        unwrapImportSchema(validator.body.schema)\n      ) || hasType(\n        \"Files\",\n        unwrapImportSchema(validator.body.schema)\n      ))) {\n        let validateFile2 = \"\", i = 0;\n        for (let [k, v] of Object.entries(\n          unwrapImportSchema(validator.body.schema).properties\n        ))\n          !v.extension || v[Kind4] !== \"File\" && v[Kind4] !== \"Files\" || (i && (validateFile2 += \",\"), validateFile2 += `validateFileExtension(c.body.${k},${JSON.stringify(v.extension)},'body.${k}')`, i++);\n        i && (fnLiteral += `\n`), i === 1 ? fnLiteral += `await ${validateFile2}\n` : i > 1 && (fnLiteral += `await Promise.all([${validateFile2}])\n`);\n      }\n    }\n    if (validator.cookie) {\n      let cookieValidator = getCookieValidator({\n        // @ts-expect-error private property\n        modules: app.definitions.typebox,\n        validator: validator.cookie,\n        defaultConfig: app.config.cookie,\n        dynamic: !!app.config.aot,\n        config: validator.cookie?.config ?? {},\n        normalize: app.config.normalize,\n        // @ts-expect-error\n        models: app.definitions.type\n      });\n      if (fnLiteral += `const cookieValue={}\nfor(const [key,value] of Object.entries(c.cookie))cookieValue[key]=value.value\n`, cookieValidator.hasDefault)\n        for (let [key, value] of Object.entries(\n          Value4.Default(cookieValidator.schema, {})\n        ))\n          fnLiteral += `cookieValue['${key}'] = ${typeof value == \"object\" ? JSON.stringify(value) : value}\n`;\n      cookieValidator.isOptional && (fnLiteral += \"if(isNotEmpty(c.cookie)){\"), validator.body?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.cookie.Check(cookieValue)===false){\" + validation.validate(\"cookie\", \"cookieValue\") + \"}\"), cookieValidator.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `for(const [key,value] of Object.entries(validator.cookie.Decode(cookieValue)))c.cookie[key].value=value\n`,\n        \"cookie\"\n      )), cookieValidator.isOptional && (fnLiteral += \"}\");\n    }\n  }\n  if (hooks?.beforeHandle || hasTrace) {\n    let reporter = report(\"beforeHandle\", {\n      total: hooks.beforeHandle?.length\n    }), hasResolve = !1;\n    if (hooks.beforeHandle?.length)\n      for (let i = 0; i < hooks.beforeHandle.length; i++) {\n        let beforeHandle = hooks.beforeHandle[i], endUnit = reporter.resolveChild(beforeHandle.fn.name), returning = hasReturn(beforeHandle);\n        if (beforeHandle.subType === \"resolve\" || beforeHandle.subType === \"mapResolve\")\n          hasResolve || (hasResolve = !0, fnLiteral += `\nlet resolved\n`), fnLiteral += isAsync(beforeHandle) ? `resolved=await e.beforeHandle[${i}](c);\n` : `resolved=e.beforeHandle[${i}](c);\n`, beforeHandle.subType === \"mapResolve\" ? fnLiteral += \"if(resolved instanceof ElysiaCustomStatusResponse){\" + mapResponse3(\"resolved\") + `}else{resolved.request=c.request\nresolved.store=c.store\nresolved.qi=c.qi\nresolved.path=c.path\nresolved.url=c.url\nresolved.redirect=c.redirect\nresolved.set=c.set\nresolved.error=c.error\nc=resolved}` : fnLiteral += \"if(resolved instanceof ElysiaCustomStatusResponse){\" + mapResponse3(\"resolved\") + `}else Object.assign(c, resolved)\n`, endUnit();\n        else if (!returning)\n          fnLiteral += isAsync(beforeHandle) ? `await e.beforeHandle[${i}](c)\n` : `e.beforeHandle[${i}](c)\n`, endUnit();\n        else {\n          if (fnLiteral += isAsync(beforeHandle) ? `be=await e.beforeHandle[${i}](c)\n` : `be=e.beforeHandle[${i}](c)\n`, endUnit(\"be\"), fnLiteral += \"if(be!==undefined){\", reporter.resolve(), hooks.afterHandle?.length || hasTrace) {\n            report(\"handle\", {\n              name: isHandleFn ? handler.name : void 0\n            }).resolve();\n            let reporter2 = report(\"afterHandle\", {\n              total: hooks.afterHandle?.length\n            });\n            if (hooks.afterHandle?.length)\n              for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n                let hook = hooks.afterHandle[i2], returning2 = hasReturn(hook), endUnit2 = reporter2.resolveChild(hook.fn.name);\n                fnLiteral += `c.response = be\n`, returning2 ? (fnLiteral += isAsync(hook.fn) ? `af=await e.afterHandle[${i2}](c)\n` : `af=e.afterHandle[${i2}](c)\n`, fnLiteral += `if(af!==undefined) c.response=be=af\n`) : fnLiteral += isAsync(hook.fn) ? `await e.afterHandle[${i2}](c, be)\n` : `e.afterHandle[${i2}](c, be)\n`, endUnit2(\"af\");\n              }\n            reporter2.resolve();\n          }\n          validator.response && (fnLiteral += validation.response(\"be\"));\n          let mapResponseReporter = report(\"mapResponse\", {\n            total: hooks.mapResponse?.length\n          });\n          if (hooks.mapResponse?.length) {\n            fnLiteral += `c.response=be\n`;\n            for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n              let mapResponse4 = hooks.mapResponse[i2], endUnit2 = mapResponseReporter.resolveChild(\n                mapResponse4.fn.name\n              );\n              fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse4) ? \"await \" : \"\"}e.mapResponse[${i2}](c)\nif(mr!==undefined)be=c.response=mr}`, endUnit2();\n            }\n          }\n          mapResponseReporter.resolve(), fnLiteral += encodeCookie(), fnLiteral += `return mapEarlyResponse(${saveResponse}be,c.set${mapResponseContext})}\n`;\n        }\n      }\n    reporter.resolve();\n  }\n  if (hooks.afterHandle?.length || hasTrace) {\n    let handleReporter = report(\"handle\", {\n      name: isHandleFn ? handler.name : void 0\n    });\n    hooks.afterHandle?.length ? fnLiteral += isAsyncHandler ? `let r=c.response=await ${handle}\n` : `let r=c.response=${handle}\n` : fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, handleReporter.resolve();\n    let reporter = report(\"afterHandle\", {\n      total: hooks.afterHandle?.length\n    });\n    if (hooks.afterHandle?.length)\n      for (let i = 0; i < hooks.afterHandle.length; i++) {\n        let hook = hooks.afterHandle[i], returning = hasReturn(hook), endUnit = reporter.resolveChild(hook.fn.name);\n        returning ? (fnLiteral += isAsync(hook.fn) ? `af=await e.afterHandle[${i}](c)\n` : `af=e.afterHandle[${i}](c)\n`, endUnit(\"af\"), validator.response ? (fnLiteral += \"if(af!==undefined){\", reporter.resolve(), fnLiteral += validation.response(\"af\"), fnLiteral += \"c.response=af}\") : (fnLiteral += \"if(af!==undefined){\", reporter.resolve(), fnLiteral += \"c.response=af}\")) : (fnLiteral += isAsync(hook.fn) ? `await e.afterHandle[${i}](c)\n` : `e.afterHandle[${i}](c)\n`, endUnit());\n      }\n    reporter.resolve(), hooks.afterHandle?.length && (fnLiteral += `r=c.response\n`), validator.response && (fnLiteral += validation.response()), fnLiteral += encodeCookie();\n    let mapResponseReporter = report(\"mapResponse\", {\n      total: hooks.mapResponse?.length\n    });\n    if (hooks.mapResponse?.length)\n      for (let i = 0; i < hooks.mapResponse.length; i++) {\n        let mapResponse4 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n          mapResponse4.fn.name\n        );\n        fnLiteral += `mr=${isAsyncName(mapResponse4) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=mr\n`, endUnit();\n      }\n    mapResponseReporter.resolve(), fnLiteral += mapResponse3();\n  } else {\n    let handleReporter = report(\"handle\", {\n      name: isHandleFn ? handler.name : void 0\n    });\n    if (validator.response || hooks.mapResponse?.length || hasTrace) {\n      fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, handleReporter.resolve(), validator.response && (fnLiteral += validation.response());\n      let mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse?.length\n      });\n      if (hooks.mapResponse?.length) {\n        fnLiteral += `\nc.response=r\n`;\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          let mapResponse4 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n            mapResponse4.fn.name\n          );\n          fnLiteral += `\nif(mr===undefined){mr=${isAsyncName(mapResponse4) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=mr}\n`, endUnit();\n        }\n      }\n      mapResponseReporter.resolve(), fnLiteral += encodeCookie(), handler instanceof Response ? (fnLiteral += afterResponse(), fnLiteral += inference.set ? `if(isNotEmpty(c.set.headers)||c.set.status!==200||c.set.redirect||c.set.cookie)return mapResponse(${saveResponse}${handle}.clone(),c.set${mapResponseContext})\nelse return ${handle}.clone()` : `return ${handle}.clone()`, fnLiteral += `\n`) : fnLiteral += mapResponse3();\n    } else if (hasCookie || hasTrace) {\n      fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, handleReporter.resolve();\n      let mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse?.length\n      });\n      if (hooks.mapResponse?.length) {\n        fnLiteral += `c.response= r\n`;\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          let mapResponse4 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n            mapResponse4.fn.name\n          );\n          fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse4) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=mr}`, endUnit();\n        }\n      }\n      mapResponseReporter.resolve(), fnLiteral += encodeCookie() + mapResponse3();\n    } else {\n      handleReporter.resolve();\n      let handled = isAsyncHandler ? `await ${handle}` : handle;\n      handler instanceof Response ? (fnLiteral += afterResponse(), fnLiteral += inference.set ? `if(isNotEmpty(c.set.headers)||c.set.status!==200||c.set.redirect||c.set.cookie)return mapResponse(${saveResponse}${handle}.clone(),c.set${mapResponseContext})\nelse return ${handle}.clone()\n` : `return ${handle}.clone()\n`) : fnLiteral += mapResponse3(handled);\n    }\n  }\n  if (fnLiteral += `\n}catch(error){`, !maybeAsync && hooks.error?.length && (fnLiteral += \"return(async()=>{\"), fnLiteral += `const set=c.set\nif(!set.status||set.status<300)set.status=error?.status||500\n`, hasCookie && (fnLiteral += encodeCookie()), hasTrace && hooks.trace)\n    for (let i = 0; i < hooks.trace.length; i++)\n      fnLiteral += `report${i}?.resolve(error);reportChild${i}?.(error)\n`;\n  let errorReporter = report(\"error\", {\n    total: hooks.error?.length\n  });\n  if (hooks.error?.length) {\n    fnLiteral += `c.error=error\n`, hasValidation ? fnLiteral += `if(error instanceof TypeBoxError){c.code=\"VALIDATION\"\nc.set.status=422}else{c.code=error.code??error[ERROR_CODE]??\"UNKNOWN\"}` : fnLiteral += `c.code=error.code??error[ERROR_CODE]??\"UNKNOWN\"\n`, fnLiteral += `let er\n`, hooks.mapResponse?.length && (fnLiteral += `let mep\n`);\n    for (let i = 0; i < hooks.error.length; i++) {\n      let endUnit = errorReporter.resolveChild(hooks.error[i].fn.name);\n      if (isAsync(hooks.error[i]) ? fnLiteral += `er=await e.error[${i}](c)\n` : fnLiteral += `er=e.error[${i}](c)\nif(er instanceof Promise)er=await er\n`, endUnit(), hooks.mapResponse?.length) {\n        let mapResponseReporter = report(\"mapResponse\", {\n          total: hooks.mapResponse?.length\n        });\n        for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n          let mapResponse4 = hooks.mapResponse[i2], endUnit2 = mapResponseReporter.resolveChild(\n            mapResponse4.fn.name\n          );\n          fnLiteral += `c.response=er\nmep=e.mapResponse[${i2}](c)\nif(mep instanceof Promise)er=await er\nif(mep!==undefined)er=mep\n`, endUnit2();\n        }\n        mapResponseReporter.resolve();\n      }\n      if (fnLiteral += `er=mapEarlyResponse(er,set${mapResponseContext})\n`, fnLiteral += \"if(er){\", hasTrace && hooks.trace) {\n        for (let i2 = 0; i2 < hooks.trace.length; i2++)\n          fnLiteral += `report${i2}.resolve()\n`;\n        errorReporter.resolve();\n      }\n      fnLiteral += \"return er}\";\n    }\n  }\n  errorReporter.resolve(), fnLiteral += \"return handleError(c,error,true)\", !maybeAsync && hooks.error?.length && (fnLiteral += \"})()\"), fnLiteral += \"}\";\n  let adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\", init = \"const {handler,handleError,hooks:e, \" + allocateIf(\"validator,\", hasValidation) + \"mapResponse,mapCompactResponse,mapEarlyResponse,isNotEmpty,utils:{\" + allocateIf(\"parseQuery,\", hasBody) + allocateIf(\"parseQueryFromURL,\", hasQuery) + \"},error:{\" + allocateIf(\"ValidationError,\", hasValidation) + allocateIf(\"ParseError\", hasBody) + \"},validateFileExtension,schema,definitions,ERROR_CODE,\" + allocateIf(\"parseCookie,\", hasCookie) + allocateIf(\"signCookie,\", hasCookie) + allocateIf(\"decodeURIComponent,\", hasQuery) + \"ElysiaCustomStatusResponse,\" + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + allocateIf(\"parser,\", hooks.parse?.length) + allocateIf(\"getServer,\", inference.server) + allocateIf(\"fileUnions,\", fileUnions.length) + adapterVariables + allocateIf(\"TypeBoxError\", hasValidation) + `}=hooks\nconst trace=e.trace\nreturn ${maybeAsync ? \"async \" : \"\"}function handle(c){`;\n  hooks.beforeHandle?.length && (init += `let be\n`), hooks.afterHandle?.length && (init += `let af\n`), hooks.mapResponse?.length && (init += `let mr\n`), allowMeta && (init += `c.schema=schema\nc.defs=definitions\n`), fnLiteral = init + fnLiteral + \"}\", init = \"\";\n  try {\n    return Function(\n      \"hooks\",\n      `\"use strict\";\n` + fnLiteral\n    )({\n      handler,\n      hooks: lifeCycleToFn(hooks),\n      validator: hasValidation ? validator : void 0,\n      // @ts-expect-error\n      handleError: app.handleError,\n      mapResponse: adapterHandler.mapResponse,\n      mapCompactResponse: adapterHandler.mapCompactResponse,\n      mapEarlyResponse: adapterHandler.mapEarlyResponse,\n      isNotEmpty,\n      utils: {\n        parseQuery: hasBody ? parseQuery : void 0,\n        parseQueryFromURL: hasQuery ? parseQueryFromURL : void 0\n      },\n      error: {\n        ValidationError: hasValidation ? ValidationError : void 0,\n        ParseError: hasBody ? ParseError : void 0\n      },\n      validateFileExtension,\n      schema: app.router.history,\n      // @ts-expect-error\n      definitions: app.definitions.type,\n      ERROR_CODE,\n      parseCookie: hasCookie ? parseCookie : void 0,\n      signCookie: hasCookie ? signCookie : void 0,\n      decodeURIComponent: hasQuery ? decode3 : void 0,\n      ElysiaCustomStatusResponse,\n      ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n      ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n      // @ts-expect-error private property\n      getServer: inference.server ? () => app.getServer() : void 0,\n      fileUnions: fileUnions.length ? fileUnions : void 0,\n      TypeBoxError: hasValidation ? TypeBoxError : void 0,\n      parser: app[\"~parser\"],\n      ...adapter.inject\n    });\n  } catch (error2) {\n    let debugHooks = lifeCycleToFn(hooks);\n    console.log(\"[Composer] failed to generate optimized handler\"), console.log(\"---\"), console.log({\n      handler: typeof handler == \"function\" ? handler.toString() : handler,\n      instruction: fnLiteral,\n      hooks: {\n        ...debugHooks,\n        // @ts-ignore\n        transform: debugHooks?.transform?.map?.((x) => x.toString()),\n        // @ts-ignore\n        resolve: debugHooks?.resolve?.map?.((x) => x.toString()),\n        // @ts-ignore\n        beforeHandle: debugHooks?.beforeHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        afterHandle: debugHooks?.afterHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        mapResponse: debugHooks?.mapResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        parse: debugHooks?.parse?.map?.((x) => x.toString()),\n        // @ts-ignore\n        error: debugHooks?.error?.map?.((x) => x.toString()),\n        // @ts-ignore\n        afterResponse: debugHooks?.afterResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        stop: debugHooks?.stop?.map?.((x) => x.toString())\n      },\n      validator,\n      // @ts-expect-error\n      definitions: app.definitions.type,\n      error: error2\n    }), console.log(\"---\"), process.exit(1);\n  }\n}, createOnRequestHandler = (app, addFn) => {\n  let fnLiteral = \"\", reporter = createReport({\n    trace: app.event.trace,\n    addFn: addFn ?? ((word) => {\n      fnLiteral += word;\n    })\n  })(\"request\", {\n    total: app.event.request?.length\n  });\n  if (app.event.request?.length) {\n    fnLiteral += \"try{\";\n    for (let i = 0; i < app.event.request.length; i++) {\n      let hook = app.event.request[i], withReturn = hasReturn(hook), maybeAsync = isAsync(hook), endUnit = reporter.resolveChild(app.event.request[i].fn.name);\n      withReturn ? (fnLiteral += `re=mapEarlyResponse(${maybeAsync ? \"await \" : \"\"}onRequest[${i}](c),c.set)\n`, endUnit(\"re\"), fnLiteral += `if(re!==undefined)return re\n`) : (fnLiteral += `${maybeAsync ? \"await \" : \"\"}onRequest[${i}](c)\n`, endUnit());\n    }\n    fnLiteral += \"}catch(error){return app.handleError(c,error,false)}\";\n  }\n  return reporter.resolve(), fnLiteral;\n}, createHoc = (app, fnName = \"map\") => {\n  let hoc = app.extender.higherOrderFunctions;\n  if (!hoc.length) return \"return \" + fnName;\n  let adapter = app[\"~adapter\"].composeGeneralHandler, handler = fnName;\n  for (let i = 0; i < hoc.length; i++)\n    handler = `hoc[${i}](${handler},${adapter.parameters})`;\n  return `return function hocMap(${adapter.parameters}){return ${handler}(${adapter.parameters})}`;\n}, composeGeneralHandler = (app) => {\n  let adapter = app[\"~adapter\"].composeGeneralHandler;\n  app.router.http.build();\n  let hasTrace = app.event.trace?.length, fnLiteral = \"\", router = app.router, findDynamicRoute = router.http.root.WS ? `const route=router.find(r.method === \"GET\" && r.headers.get('upgrade')==='websocket'?'WS':r.method,p)` : \"const route=router.find(r.method,p)\";\n  findDynamicRoute += router.http.root.ALL ? `??router.find(\"ALL\",p)\n` : `\n`;\n  let afterResponse = `c.error=notFound\n`;\n  if (app.event.afterResponse?.length && !app.event.error) {\n    let prefix = app.event.afterResponse.some(isAsync) ? \"async\" : \"\";\n    afterResponse += `\nsetImmediate(${prefix}()=>{`;\n    for (let i = 0; i < app.event.afterResponse.length; i++) {\n      let fn2 = app.event.afterResponse[i].fn;\n      afterResponse += `\n${isAsyncName(fn2) ? \"await \" : \"\"}afterResponse[${i}](c)\n`;\n    }\n    afterResponse += `})\n`;\n  }\n  app.inference.query && (afterResponse += \"if(c.qi===-1){c.query={}}else{c.query=parseQueryFromURL(c.url,c.qi+1)}\");\n  let error404 = adapter.error404(\n    !!app.event.request?.length,\n    !!app.event.error?.length,\n    afterResponse\n  );\n  findDynamicRoute += error404.code, findDynamicRoute += `\nc.params=route.params\nif(route.store.handler)return route.store.handler(c)\nreturn route.store.compile()(c)\n`;\n  let switchMap = \"\";\n  for (let [path, methods] of Object.entries(router.static)) {\n    switchMap += `case'${path}':`, app.config.strictPath !== !0 && (switchMap += `case'${getLoosePath(path)}':`);\n    let encoded = encodePath(path);\n    path !== encoded && (switchMap += `case'${encoded}':`), switchMap += \"switch(r.method){\", (\"GET\" in methods || \"WS\" in methods) && (switchMap += \"case 'GET':\", \"WS\" in methods && (switchMap += `if(r.headers.get('upgrade')==='websocket')return ht[${methods.WS}].composed(c)\n`), \"GET\" in methods && (switchMap += `return ht[${methods.GET}].composed(c)\n`));\n    for (let [method, index] of Object.entries(methods))\n      method === \"ALL\" || method === \"GET\" || method === \"WS\" || (switchMap += `case '${method}':return ht[${index}].composed(c)\n`);\n    \"ALL\" in methods ? switchMap += `default:return ht[${methods.ALL}].composed(c)\n` : switchMap += `default:break map\n`, switchMap += \"}\";\n  }\n  let maybeAsync = !!app.event.request?.some(isAsync), adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\";\n  fnLiteral += `\nconst {app,mapEarlyResponse,NotFoundError,randomId,handleError,status,redirect,` + // @ts-ignore\n  allocateIf(\"parseQueryFromURL,\", app.inference.query) + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + adapterVariables + `}=data\nconst store=app.singleton.store\nconst decorator=app.singleton.decorator\nconst staticRouter=app.router.static.http\nconst ht=app.router.history\nconst router=app.router.http\nconst trace=app.event.trace?.map(x=>typeof x==='function'?x:x.fn)??[]\nconst notFound=new NotFoundError()\nconst hoc=app.extender.higherOrderFunctions.map(x=>x.fn)\n`, app.event.request?.length && (fnLiteral += `const onRequest=app.event.request.map(x=>x.fn)\n`), app.event.afterResponse?.length && (fnLiteral += `const afterResponse=app.event.afterResponse.map(x=>x.fn)\n`), fnLiteral += error404.declare, app.event.trace?.length && (fnLiteral += \"const \" + app.event.trace.map((_, i) => `tr${i}=app.event.trace[${i}].fn`).join(\",\") + `\n`), fnLiteral += `${maybeAsync ? \"async \" : \"\"}function map(${adapter.parameters}){`, app.event.request?.length && (fnLiteral += `let re\n`), fnLiteral += adapter.createContext(app), app.event.trace?.length && (fnLiteral += \"c[ELYSIA_TRACE]=[\" + app.event.trace.map((_, i) => `tr${i}(c)`).join(\",\") + `]\n`), fnLiteral += createOnRequestHandler(app), switchMap && (fnLiteral += `\nmap: switch(p){\n` + switchMap + \"}\"), fnLiteral += findDynamicRoute + `}\n` + createHoc(app);\n  let handleError = composeErrorHandler(app);\n  app.handleError = handleError;\n  let fn = Function(\n    \"data\",\n    `\"use strict\";\n` + fnLiteral\n  )({\n    app,\n    mapEarlyResponse: app[\"~adapter\"].handler.mapEarlyResponse,\n    NotFoundError,\n    randomId,\n    handleError,\n    status,\n    redirect,\n    // @ts-ignore\n    parseQueryFromURL: app.inference.query ? parseQueryFromURL : void 0,\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    ...adapter.inject\n  });\n  return isBun && Bun.gc(!1), fn;\n}, composeErrorHandler = (app) => {\n  let hooks = app.event, fnLiteral = \"\", adapter = app[\"~adapter\"].composeError, adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\", hasTrace = !!app.event.trace?.length;\n  fnLiteral += \"const {mapResponse,ERROR_CODE,ElysiaCustomStatusResponse,\" + allocateIf(\"onError,\", app.event.error) + allocateIf(\"afterResponse,\", app.event.afterResponse) + allocateIf(\"trace,\", app.event.trace) + allocateIf(\"onMapResponse,\", app.event.mapResponse) + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + adapterVariables + `}=inject\n`, fnLiteral += `return ${app.event.error?.find(isAsync) || app.event.mapResponse?.find(isAsync) ? \"async \" : \"\"}function(context,error,skipGlobal){`, fnLiteral += \"\", hasTrace && (fnLiteral += `const id=context[ELYSIA_REQUEST_ID]\n`);\n  let report = createReport({\n    context: \"context\",\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  }), afterResponse = () => {\n    if (!hooks.afterResponse?.length && !hasTrace) return \"\";\n    let afterResponse2 = \"\", prefix = hooks.afterResponse?.some(isAsync) ? \"async\" : \"\";\n    afterResponse2 += `\nsetImmediate(${prefix}()=>{`;\n    let reporter = createReport({\n      context: \"context\",\n      trace: hooks.trace,\n      addFn: (word) => {\n        afterResponse2 += word;\n      }\n    })(\"afterResponse\", {\n      total: hooks.afterResponse?.length,\n      name: \"context\"\n    });\n    if (hooks.afterResponse?.length && hooks.afterResponse)\n      for (let i = 0; i < hooks.afterResponse.length; i++) {\n        let fn = hooks.afterResponse[i].fn, endUnit = reporter.resolveChild(fn.name);\n        afterResponse2 += `\n${isAsyncName(fn) ? \"await \" : \"\"}afterResponse[${i}](context)\n`, endUnit();\n      }\n    return reporter.resolve(), afterResponse2 += `})\n`, afterResponse2;\n  };\n  fnLiteral += `const set=context.set\nlet _r\nif(!context.code)context.code=error.code??error[ERROR_CODE]\nif(!(context.error instanceof Error))context.error=error\nif(error instanceof ElysiaCustomStatusResponse){set.status=error.status=error.code\nerror.message=error.response}`, adapter.declare && (fnLiteral += adapter.declare);\n  let saveResponse = hasTrace || hooks.afterResponse?.length ? \"context.response = \" : \"\";\n  if (app.event.error)\n    for (let i = 0; i < app.event.error.length; i++) {\n      let handler = app.event.error[i], response = `${isAsync(handler) ? \"await \" : \"\"}onError[${i}](context)\n`;\n      if (fnLiteral += \"if(skipGlobal!==true){\", hasReturn(handler)) {\n        fnLiteral += `_r=${response}\nif(_r!==undefined){if(_r instanceof Response){` + afterResponse() + `return mapResponse(_r,set${adapter.mapResponseContext})}if(_r instanceof ElysiaCustomStatusResponse){error.status=error.code\nerror.message = error.response}if(set.status===200||!set.status)set.status=error.status\n`;\n        let mapResponseReporter2 = report(\"mapResponse\", {\n          total: hooks.mapResponse?.length,\n          name: \"context\"\n        });\n        if (hooks.mapResponse?.length)\n          for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n            let mapResponse3 = hooks.mapResponse[i2], endUnit = mapResponseReporter2.resolveChild(\n              mapResponse3.fn.name\n            );\n            fnLiteral += `context.response=_r_r=${isAsyncName(mapResponse3) ? \"await \" : \"\"}onMapResponse[${i2}](context)\n`, endUnit();\n          }\n        mapResponseReporter2.resolve(), fnLiteral += afterResponse() + `return mapResponse(${saveResponse}_r,set${adapter.mapResponseContext})}`;\n      } else fnLiteral += response;\n      fnLiteral += \"}\";\n    }\n  fnLiteral += `if(error.constructor.name===\"ValidationError\"||error.constructor.name===\"TransformDecodeError\"){\nif(error.error)error=error.error\nset.status=error.status??422\n` + afterResponse() + adapter.validationError + `\n}\n`, fnLiteral += \"if(error instanceof Error){\" + afterResponse() + `\nif(typeof error.toResponse==='function')return context.response=error.toResponse()\n` + adapter.unknownError + `\n}`;\n  let mapResponseReporter = report(\"mapResponse\", {\n    total: hooks.mapResponse?.length,\n    name: \"context\"\n  });\n  if (fnLiteral += `\nif(!context.response)context.response=error.message??error\n`, hooks.mapResponse?.length) {\n    fnLiteral += `let mr\n`;\n    for (let i = 0; i < hooks.mapResponse.length; i++) {\n      let mapResponse3 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n        mapResponse3.fn.name\n      );\n      fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse3) ? \"await \" : \"\"}onMapResponse[${i}](context)\nif(mr!==undefined)error=context.response=mr}`, endUnit();\n    }\n  }\n  mapResponseReporter.resolve(), fnLiteral += afterResponse() + `\nreturn mapResponse(${saveResponse}error,set${adapter.mapResponseContext})}`;\n  let mapFn = (x) => typeof x == \"function\" ? x : x.fn;\n  return Function(\n    \"inject\",\n    `\"use strict\";\n` + fnLiteral\n  )({\n    mapResponse: app[\"~adapter\"].handler.mapResponse,\n    ERROR_CODE,\n    ElysiaCustomStatusResponse,\n    onError: app.event.error?.map(mapFn),\n    afterResponse: app.event.afterResponse?.map(mapFn),\n    trace: app.event.trace?.map(mapFn),\n    onMapResponse: app.event.mapResponse?.map(mapFn),\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    ...adapter.inject\n  });\n};\n\n// src/adapter/bun/compose.ts\nvar allocateIf2 = (value, condition) => condition ? value : \"\", createContext = (app, route, inference, isInline = !1) => {\n  let fnLiteral = \"\", defaultHeaders = app.setHeaders, hasTrace = !!app.event.trace?.length;\n  hasTrace && (fnLiteral += `const id=randomId()\n`);\n  let isDynamic = /[:*]/.test(route.path), getQi = `const u=request.url,s=u.indexOf('/',${app.config.handler?.standardHostname ?? !0 ? 11 : 7}),qi=u.indexOf('?', s + 1)\n`, needsQuery = inference.query || !!route.hooks.query || !!route.standaloneValidators?.find((x) => x.query) || app.event.request?.length;\n  needsQuery && (fnLiteral += getQi);\n  let getPath = inference.path ? isDynamic ? \"get path(){\" + (needsQuery ? \"\" : getQi) + `if(qi===-1)return u.substring(s)\nreturn u.substring(s,qi)\n},` : `path:'${route.path}',` : \"\";\n  fnLiteral += allocateIf2(\"const c=\", !isInline) + \"{request,store,\" + allocateIf2(\"qi,\", needsQuery) + allocateIf2(\"params:request.params,\", isDynamic) + getPath + allocateIf2(\n    \"url:request.url,\",\n    hasTrace || inference.url || needsQuery\n  ) + \"redirect,error:status,status,set:{headers:\" + (isNotEmpty(defaultHeaders) ? \"Object.assign({},app.setHeaders)\" : \"Object.create(null)\") + \",status:200}\", inference.server && (fnLiteral += \",get server(){return app.getServer()}\"), hasTrace && (fnLiteral += \",[ELYSIA_REQUEST_ID]:id\");\n  {\n    let decoratorsLiteral = \"\";\n    for (let key of Object.keys(app.singleton.decorator))\n      decoratorsLiteral += `,'${key}':decorator['${key}']`;\n    fnLiteral += decoratorsLiteral;\n  }\n  return fnLiteral += `}\n`, fnLiteral;\n}, createBunRouteHandler = (app, route) => {\n  let hasTrace = !!app.event.trace?.length, hasHoc = !!app.extender.higherOrderFunctions.length, inference = sucrose(\n    route.hooks,\n    // @ts-expect-error\n    app.inference\n  );\n  inference = sucrose(\n    {\n      handler: route.handler\n    },\n    inference\n  );\n  let fnLiteral = \"const handler=data.handler,app=data.app,store=data.store,decorator=data.decorator,redirect=data.redirect,route=data.route,mapEarlyResponse=data.mapEarlyResponse,\" + allocateIf2(\"randomId=data.randomId,\", hasTrace) + allocateIf2(\"ELYSIA_REQUEST_ID=data.ELYSIA_REQUEST_ID,\", hasTrace) + allocateIf2(\"ELYSIA_TRACE=data.ELYSIA_TRACE,\", hasTrace) + allocateIf2(\"trace=data.trace,\", hasTrace) + allocateIf2(\"hoc=data.hoc,\", hasHoc) + `status=data.status\n`;\n  app.event.request?.length && (fnLiteral += `const onRequest=app.event.request.map(x=>x.fn)\n`), fnLiteral += `${app.event.request?.find(isAsync) ? \"async\" : \"\"} function map(request){`;\n  let needsQuery = inference.query || !!route.hooks.query || !!route.standaloneValidators?.find((x) => x.query);\n  return hasTrace || needsQuery || app.event.request?.length ? (fnLiteral += createContext(app, route, inference), fnLiteral += createOnRequestHandler(app), fnLiteral += \"return handler(c)}\") : fnLiteral += `return handler(${createContext(app, route, inference, !0)})}`, fnLiteral += createHoc(app), Function(\n    \"data\",\n    fnLiteral\n  )({\n    app,\n    handler: route.compile?.() ?? route.composed,\n    redirect,\n    status,\n    // @ts-expect-error private property\n    hoc: app.extender.higherOrderFunctions.map((x) => x.fn),\n    store: app.store,\n    decorator: app.decorator,\n    route: route.path,\n    randomId: hasTrace ? randomId : void 0,\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    trace: hasTrace ? app.event.trace?.map((x) => x?.fn ?? x) : void 0,\n    mapEarlyResponse: mapEarlyResponse2\n  });\n};\n\n// src/adapter/bun/handler-native.ts\nvar createNativeStaticHandler = (handle, hooks, set2) => {\n  if (typeof handle == \"function\" || handle instanceof Blob) return;\n  if (isHTMLBundle(handle)) return () => handle;\n  let response = mapResponse2(\n    handle,\n    set2 ?? {\n      headers: {}\n    }\n  );\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return response instanceof Promise ? response.then((response2) => {\n      if (response2)\n        return response2.headers.has(\"content-type\") || response2.headers.append(\"content-type\", \"text/plain\"), response2.clone();\n    }) : (response.headers.has(\"content-type\") || response.headers.append(\"content-type\", \"text/plain\"), () => response.clone());\n};\n\n// src/ws/index.ts\nvar websocket = {\n  open(ws) {\n    ws.data.open?.(ws);\n  },\n  message(ws, message) {\n    ws.data.message?.(ws, message);\n  },\n  drain(ws) {\n    ws.data.drain?.(ws);\n  },\n  close(ws, code, reason) {\n    ws.data.close?.(ws, code, reason);\n  }\n}, ElysiaWS = class {\n  constructor(raw, data, body = void 0) {\n    this.raw = raw;\n    this.data = data;\n    this.body = body;\n    this.validator = raw.data?.validator, this.sendText = raw.sendText.bind(raw), this.sendBinary = raw.sendBinary.bind(raw), this.close = raw.close.bind(raw), this.terminate = raw.terminate.bind(raw), this.publishText = raw.publishText.bind(raw), this.publishBinary = raw.publishBinary.bind(raw), this.subscribe = raw.subscribe.bind(raw), this.unsubscribe = raw.unsubscribe.bind(raw), this.isSubscribed = raw.isSubscribed.bind(raw), this.cork = raw.cork.bind(raw), this.remoteAddress = raw.remoteAddress, this.binaryType = raw.binaryType, this.data = raw.data, this.send = this.send.bind(this), this.ping = this.ping.bind(this), this.pong = this.pong.bind(this), this.publish = this.publish.bind(this);\n  }\n  /**\n   * Sends a message to the client.\n   *\n   * @param data The data to send.\n   * @param compress Should the data be compressed? If the client does not support compression, this is ignored.\n   * @example\n   * ws.send(\"Hello!\");\n   * ws.send(\"Compress this.\", true);\n   * ws.send(new Uint8Array([1, 2, 3, 4]));\n   */\n  send(data, compress) {\n    return Buffer.isBuffer(data) ? this.raw.send(data, compress) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.send(data, compress));\n  }\n  /**\n   * Sends a ping.\n   *\n   * @param data The data to send\n   */\n  ping(data) {\n    return Buffer.isBuffer(data) ? this.raw.ping(data) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.ping(data));\n  }\n  /**\n   * Sends a pong.\n   *\n   * @param data The data to send\n   */\n  pong(data) {\n    return Buffer.isBuffer(data) ? this.raw.pong(data) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.pong(data));\n  }\n  /**\n   * Sends a message to subscribers of the topic.\n   *\n   * @param topic The topic name.\n   * @param data The data to send.\n   * @param compress Should the data be compressed? If the client does not support compression, this is ignored.\n   * @example\n   * ws.publish(\"chat\", \"Hello!\");\n   * ws.publish(\"chat\", \"Compress this.\", true);\n   * ws.publish(\"chat\", new Uint8Array([1, 2, 3, 4]));\n   */\n  publish(topic, data, compress) {\n    return Buffer.isBuffer(data) ? this.raw.publish(\n      topic,\n      data,\n      compress\n    ) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.publish(topic, data, compress));\n  }\n  get readyState() {\n    return this.raw.readyState;\n  }\n  get id() {\n    return this.data.id;\n  }\n}, createWSMessageParser = (parse2) => {\n  let parsers = typeof parse2 == \"function\" ? [parse2] : parse2;\n  return async function(ws, message) {\n    if (typeof message == \"string\") {\n      let start = message?.charCodeAt(0);\n      if (start === 34 || start === 47 || start === 91 || start === 123)\n        try {\n          message = JSON.parse(message);\n        } catch {\n        }\n      else isNumericString(message) ? message = +message : message === \"true\" ? message = !0 : message === \"false\" ? message = !1 : message === \"null\" && (message = null);\n    }\n    if (parsers)\n      for (let i = 0; i < parsers.length; i++) {\n        let temp = parsers[i](ws, message);\n        if (temp instanceof Promise && (temp = await temp), temp !== void 0) return temp;\n      }\n    return message;\n  };\n}, createHandleWSResponse = (validateResponse) => {\n  let handleWSResponse = (ws, data) => {\n    if (data instanceof Promise)\n      return data.then((data2) => handleWSResponse(ws, data2));\n    if (Buffer.isBuffer(data)) return ws.send(data.toString());\n    if (data === void 0) return;\n    let send = (datum) => {\n      if (validateResponse?.Check(datum) === !1)\n        return ws.send(\n          new ValidationError(\"message\", validateResponse, datum).message\n        );\n      if (typeof datum == \"object\") return ws.send(JSON.stringify(datum));\n      ws.send(datum);\n    };\n    if (typeof data?.next != \"function\")\n      return void send(data);\n    let init = data.next();\n    if (init instanceof Promise)\n      return (async () => {\n        let first = await init;\n        if (validateResponse?.Check(first) === !1)\n          return ws.send(\n            new ValidationError(\"message\", validateResponse, first).message\n          );\n        if (send(first.value), !first.done)\n          for await (let datum of data) send(datum);\n      })();\n    if (send(init.value), !init.done) for (let datum of data) send(datum);\n  };\n  return handleWSResponse;\n};\n\n// src/adapter/bun/index.ts\nvar optionalParam = /:.+?\\?(?=\\/|$)/, getPossibleParams = (path) => {\n  let match = optionalParam.exec(path);\n  if (!match) return [path];\n  let routes = [], head = path.slice(0, match.index), param = match[0].slice(0, -1), tail = path.slice(match.index + match[0].length);\n  routes.push(head.slice(0, -1)), routes.push(head + param);\n  for (let fragment of getPossibleParams(tail))\n    fragment && (fragment.startsWith(\"/:\") || routes.push(head.slice(0, -1) + fragment), routes.push(head + param + fragment));\n  return routes;\n}, isHTMLBundle = (handle) => typeof handle == \"object\" && handle !== null && (handle.toString() === \"[object HTMLBundle]\" || typeof handle.index == \"string\"), supportedMethods = {\n  GET: !0,\n  HEAD: !0,\n  OPTIONS: !0,\n  DELETE: !0,\n  PATCH: !0,\n  POST: !0,\n  PUT: !0\n}, mapRoutes = (app) => {\n  if (!app.config.aot || !app.config.systemRouter) return;\n  let routes = {}, add = (route, handler) => {\n    routes[route.path] ? routes[route.path][route.method] || (routes[route.path][route.method] = handler) : routes[route.path] = {\n      [route.method]: handler\n    };\n  }, tree = app.routeTree;\n  for (let route of app.router.history) {\n    if (typeof route.handler != \"function\") continue;\n    let method = route.method;\n    if (method === \"GET\" && `WS_${route.path}` in tree || method === \"WS\" || route.path.charCodeAt(route.path.length - 1) === 42 || !(method in supportedMethods))\n      continue;\n    if (method === \"ALL\") {\n      `WS_${route.path}` in tree || (routes[route.path] = route.hooks?.config?.mount ? route.hooks.trace || app.event.trace || // @ts-expect-error private property\n      app.extender.higherOrderFunctions ? createBunRouteHandler(app, route) : route.hooks.mount || route.handler : route.handler);\n      continue;\n    }\n    let compiled, handler = app.config.precompile ? createBunRouteHandler(app, route) : (request) => compiled ? compiled(request) : (compiled = createBunRouteHandler(app, route))(\n      request\n    );\n    for (let path of getPossibleParams(route.path))\n      add(\n        {\n          method,\n          path\n        },\n        handler\n      );\n  }\n  return routes;\n}, mergeRoutes = (r1, r2) => {\n  if (!r2) return r1;\n  for (let key of Object.keys(r2))\n    if (r1[key] !== r2[key]) {\n      if (!r1[key]) {\n        r1[key] = r2[key];\n        continue;\n      }\n      if (r1[key] && r2[key]) {\n        if (typeof r1[key] == \"function\" || r1[key] instanceof Response) {\n          r1[key] = r2[key];\n          continue;\n        }\n        r1[key] = {\n          ...r1[key],\n          ...r2[key]\n        };\n      }\n    }\n  return r1;\n}, BunAdapter = {\n  ...WebStandardAdapter,\n  name: \"bun\",\n  handler: {\n    mapResponse: mapResponse2,\n    mapEarlyResponse: mapEarlyResponse2,\n    mapCompactResponse: mapCompactResponse2,\n    createStaticHandler: createStaticHandler2,\n    createNativeStaticHandler\n  },\n  composeHandler: {\n    ...WebStandardAdapter.composeHandler,\n    headers: hasHeaderShorthand ? `c.headers=c.request.headers.toJSON()\n` : `c.headers={}\nfor(const [k,v] of c.request.headers.entries())c.headers[k]=v\n`\n  },\n  listen(app) {\n    return (options, callback) => {\n      if (typeof Bun > \"u\")\n        throw new Error(\n          \".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch\"\n        );\n      if (app.compile(), typeof options == \"string\") {\n        if (!isNumericString(options))\n          throw new Error(\"Port must be a numeric value\");\n        options = parseInt(options);\n      }\n      let createStaticRoute = (iterator, { withAsync = !1 } = {}) => {\n        let staticRoutes = {}, ops = [];\n        for (let [path, route] of Object.entries(iterator))\n          if (supportPerMethodInlineHandler) {\n            if (!route) continue;\n            for (let [method, value] of Object.entries(route))\n              if (!(!value || !(method in supportedMethods))) {\n                if (value instanceof Promise) {\n                  withAsync && (staticRoutes[path] || (staticRoutes[path] = {}), ops.push(\n                    value.then((awaited) => {\n                      awaited instanceof Response && (staticRoutes[path][method] = awaited), isHTMLBundle(awaited) && (staticRoutes[path][method] = awaited);\n                    })\n                  ));\n                  continue;\n                }\n                !(value instanceof Response) && !isHTMLBundle(value) || (staticRoutes[path] || (staticRoutes[path] = {}), staticRoutes[path][method] = value);\n              }\n          } else {\n            if (!route) continue;\n            if (route instanceof Promise) {\n              withAsync && (staticRoutes[path] || (staticRoutes[path] = {}), ops.push(\n                route.then((awaited) => {\n                  awaited instanceof Response && (staticRoutes[path] = awaited);\n                })\n              ));\n              continue;\n            }\n            if (!(route instanceof Response)) continue;\n            staticRoutes[path] = route;\n          }\n        return withAsync ? Promise.all(ops).then(() => staticRoutes) : staticRoutes;\n      }, serve = typeof options == \"object\" ? {\n        development: !isProduction,\n        reusePort: !0,\n        idleTimeout: 30,\n        ...app.config.serve || {},\n        ...options || {},\n        // @ts-ignore\n        routes: mergeRoutes(\n          mergeRoutes(\n            createStaticRoute(app.router.response),\n            mapRoutes(app)\n          ),\n          // @ts-expect-error private property\n          app.config.serve?.routes\n        ),\n        websocket: {\n          ...app.config.websocket || {},\n          ...websocket || {},\n          // @ts-expect-error not available in this variant of options type\n          ...options.websocket || {}\n        },\n        fetch: app.fetch\n      } : {\n        development: !isProduction,\n        reusePort: !0,\n        idleTimeout: 30,\n        ...app.config.serve || {},\n        // @ts-ignore\n        routes: mergeRoutes(\n          mergeRoutes(\n            createStaticRoute(app.router.response),\n            mapRoutes(app)\n          ),\n          // @ts-expect-error private property\n          app.config.serve?.routes\n        ),\n        websocket: {\n          ...app.config.websocket || {},\n          ...websocket || {}\n        },\n        port: options,\n        fetch: app.fetch\n      };\n      if (app.server = Bun.serve(serve), app.event.start)\n        for (let i = 0; i < app.event.start.length; i++)\n          app.event.start[i].fn(app);\n      callback && callback(app.server), process.on(\"beforeExit\", () => {\n        if (app.server && (app.server.stop?.(), app.server = null, app.event.stop))\n          for (let i = 0; i < app.event.stop.length; i++)\n            app.event.stop[i].fn(app);\n      }), app.promisedModules.then(async () => {\n        app.server?.reload({\n          ...serve,\n          fetch: app.fetch,\n          // @ts-ignore\n          routes: mergeRoutes(\n            mergeRoutes(\n              await createStaticRoute(app.router.response, {\n                withAsync: !0\n              }),\n              mapRoutes(app)\n            ),\n            // @ts-expect-error private property\n            app.config.serve?.routes\n          )\n        }), Bun?.gc(!1);\n      });\n    };\n  },\n  async stop(app, closeActiveConnections) {\n    if (app.server) {\n      if (app.server.stop(closeActiveConnections), app.server = null, app.event.stop?.length)\n        for (let i = 0; i < app.event.stop.length; i++)\n          app.event.stop[i].fn(app);\n    } else\n      console.log(\n        \"Elysia isn't running. Call `app.listen` to start the server.\",\n        new Error().stack\n      );\n  },\n  ws(app, path, options) {\n    let { parse: parse2, body, response, ...rest } = options, validateMessage = getSchemaValidator(body, {\n      // @ts-expect-error private property\n      modules: app.definitions.typebox,\n      // @ts-expect-error private property\n      models: app.definitions.type,\n      normalize: app.config.normalize\n    }), validateResponse = getSchemaValidator(response, {\n      // @ts-expect-error private property\n      modules: app.definitions.typebox,\n      // @ts-expect-error private property\n      models: app.definitions.type,\n      normalize: app.config.normalize\n    });\n    app.route(\n      \"WS\",\n      path,\n      async (context) => {\n        let server = context.server ?? app.server, { set: set2, path: path2, qi, headers, query, params } = context;\n        if (context.validator = validateResponse, options.upgrade)\n          if (typeof options.upgrade == \"function\") {\n            let temp = options.upgrade(context);\n            temp instanceof Promise && await temp;\n          } else options.upgrade && Object.assign(\n            set2.headers,\n            options.upgrade\n          );\n        if (set2.cookie && isNotEmpty(set2.cookie)) {\n          let cookie = serializeCookie(set2.cookie);\n          cookie && (set2.headers[\"set-cookie\"] = cookie);\n        }\n        set2.headers[\"set-cookie\"] && Array.isArray(set2.headers[\"set-cookie\"]) && (set2.headers = parseSetCookies(\n          new Headers(set2.headers),\n          set2.headers[\"set-cookie\"]\n        ));\n        let handleResponse3 = createHandleWSResponse(validateResponse), parseMessage = createWSMessageParser(parse2), _id;\n        if (typeof options.beforeHandle == \"function\") {\n          let result = options.beforeHandle(context);\n          result instanceof Promise && await result;\n        }\n        let errorHandlers = [\n          ...options.error ? Array.isArray(options.error) ? options.error : [options.error] : [],\n          ...(app.event.error ?? []).map(\n            (x) => typeof x == \"function\" ? x : x.fn\n          )\n        ].filter((x) => x), hasCustomErrorHandlers = errorHandlers.length > 0, handleErrors = hasCustomErrorHandlers ? async (ws, error2) => {\n          for (let handleError of errorHandlers) {\n            let response2 = handleError(\n              Object.assign(context, { error: error2 })\n            );\n            if (response2 instanceof Promise && (response2 = await response2), await handleResponse3(ws, response2), response2) break;\n          }\n        } : () => {\n        };\n        if (!server?.upgrade(context.request, {\n          headers: isNotEmpty(set2.headers) ? set2.headers : void 0,\n          data: {\n            ...context,\n            get id() {\n              return _id || (_id = randomId());\n            },\n            validator: validateResponse,\n            ping(data) {\n              options.ping?.(data);\n            },\n            pong(data) {\n              options.pong?.(data);\n            },\n            open: async (ws) => {\n              try {\n                await handleResponse3(\n                  ws,\n                  options.open?.(\n                    new ElysiaWS(ws, context)\n                  )\n                );\n              } catch (error2) {\n                handleErrors(ws, error2);\n              }\n            },\n            message: async (ws, _message) => {\n              let message = await parseMessage(ws, _message);\n              if (validateMessage?.Check(message) === !1) {\n                let validationError = new ValidationError(\n                  \"message\",\n                  validateMessage,\n                  message\n                );\n                return hasCustomErrorHandlers ? handleErrors(ws, validationError) : void ws.send(validationError.message);\n              }\n              try {\n                await handleResponse3(\n                  ws,\n                  options.message?.(\n                    new ElysiaWS(\n                      ws,\n                      context,\n                      message\n                    ),\n                    message\n                  )\n                );\n              } catch (error2) {\n                handleErrors(ws, error2);\n              }\n            },\n            drain: async (ws) => {\n              try {\n                await handleResponse3(\n                  ws,\n                  options.drain?.(\n                    new ElysiaWS(ws, context)\n                  )\n                );\n              } catch (error2) {\n                handleErrors(ws, error2);\n              }\n            },\n            close: async (ws, code, reason) => {\n              try {\n                await handleResponse3(\n                  ws,\n                  options.close?.(\n                    new ElysiaWS(ws, context),\n                    code,\n                    reason\n                  )\n                );\n              } catch (error2) {\n                handleErrors(ws, error2);\n              }\n            }\n          }\n        }))\n          return set2.status = 400, \"Expected a websocket connection\";\n      },\n      {\n        ...rest,\n        websocket: options\n      }\n    );\n  }\n};\n\n// src/universal/env.ts\nvar env2 = isBun ? Bun.env : typeof process < \"u\" && process?.env ? process.env : {};\n\n// src/dynamic-handle.ts\nimport { TransformDecodeError } from \"@sinclair/typebox/value\";\nvar injectDefaultValues = (typeChecker, obj) => {\n  let schema = typeChecker.schema;\n  if (schema && (schema.$defs?.[schema.$ref] && (schema = schema.$defs[schema.$ref]), !!schema?.properties))\n    for (let [key, keySchema] of Object.entries(schema.properties))\n      obj[key] ??= keySchema.default;\n}, createDynamicHandler = (app) => {\n  let { mapResponse: mapResponse3, mapEarlyResponse: mapEarlyResponse3 } = app[\"~adapter\"].handler, defaultHeader = app.setHeaders;\n  return async (request) => {\n    let url = request.url, s = url.indexOf(\"/\", 11), qi = url.indexOf(\"?\", s + 1), path = qi === -1 ? url.substring(s) : url.substring(s, qi), set2 = {\n      cookie: {},\n      status: 200,\n      headers: defaultHeader ? { ...defaultHeader } : {}\n    }, context = Object.assign(\n      {},\n      // @ts-expect-error\n      app.singleton.decorator,\n      {\n        set: set2,\n        // @ts-expect-error\n        store: app.singleton.store,\n        request,\n        path,\n        qi,\n        error: status,\n        status,\n        redirect\n      }\n    );\n    try {\n      if (app.event.request)\n        for (let i = 0; i < app.event.request.length; i++) {\n          let onRequest = app.event.request[i].fn, response2 = onRequest(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 = mapEarlyResponse3(response2, set2), response2) return context.response = response2;\n        }\n      let methodKey = request.method === \"GET\" && request.headers.get(\"upgrade\")?.toLowerCase() === \"websocket\" ? \"WS\" : request.method, handler = app.router.dynamic.find(request.method, path) ?? app.router.dynamic.find(methodKey, path) ?? app.router.dynamic.find(\"ALL\", path);\n      if (!handler)\n        throw context.query = qi === -1 ? {} : parseQuery(url.substring(qi + 1)), new NotFoundError();\n      let { handle, hooks, validator, content, route } = handler.store, body;\n      if (request.method !== \"GET\" && request.method !== \"HEAD\")\n        if (content)\n          switch (content) {\n            case \"application/json\":\n              body = await request.json();\n              break;\n            case \"text/plain\":\n              body = await request.text();\n              break;\n            case \"application/x-www-form-urlencoded\":\n              body = parseQuery(await request.text());\n              break;\n            case \"application/octet-stream\":\n              body = await request.arrayBuffer();\n              break;\n            case \"multipart/form-data\":\n              body = {};\n              let form2 = await request.formData();\n              for (let key of form2.keys()) {\n                if (body[key]) continue;\n                let value = form2.getAll(key);\n                value.length === 1 ? body[key] = value[0] : body[key] = value;\n              }\n              break;\n          }\n        else {\n          let contentType;\n          if (request.body && (contentType = request.headers.get(\"content-type\")), contentType) {\n            let index = contentType.indexOf(\";\");\n            if (index !== -1 && (contentType = contentType.slice(0, index)), context.contentType = contentType, hooks.parse)\n              for (let i = 0; i < hooks.parse.length; i++) {\n                let hook = hooks.parse[i].fn;\n                if (typeof hook == \"string\")\n                  switch (hook) {\n                    case \"json\":\n                    case \"application/json\":\n                      body = await request.json();\n                      break;\n                    case \"text\":\n                    case \"text/plain\":\n                      body = await request.text();\n                      break;\n                    case \"urlencoded\":\n                    case \"application/x-www-form-urlencoded\":\n                      body = parseQuery(\n                        await request.text()\n                      );\n                      break;\n                    case \"arrayBuffer\":\n                    case \"application/octet-stream\":\n                      body = await request.arrayBuffer();\n                      break;\n                    case \"formdata\":\n                    case \"multipart/form-data\":\n                      body = {};\n                      let form2 = await request.formData();\n                      for (let key of form2.keys()) {\n                        if (body[key]) continue;\n                        let value = form2.getAll(key);\n                        value.length === 1 ? body[key] = value[0] : body[key] = value;\n                      }\n                      break;\n                    default:\n                      let parser = app[\"~parser\"][hook];\n                      if (parser) {\n                        let temp = parser(\n                          context,\n                          contentType\n                        );\n                        if (temp instanceof Promise && (temp = await temp), temp) {\n                          body = temp;\n                          break;\n                        }\n                      }\n                      break;\n                  }\n                else {\n                  let temp = hook(context, contentType);\n                  if (temp instanceof Promise && (temp = await temp), temp) {\n                    body = temp;\n                    break;\n                  }\n                }\n              }\n            if (delete context.contentType, body === void 0)\n              switch (contentType) {\n                case \"application/json\":\n                  body = await request.json();\n                  break;\n                case \"text/plain\":\n                  body = await request.text();\n                  break;\n                case \"application/x-www-form-urlencoded\":\n                  body = parseQuery(await request.text());\n                  break;\n                case \"application/octet-stream\":\n                  body = await request.arrayBuffer();\n                  break;\n                case \"multipart/form-data\":\n                  body = {};\n                  let form2 = await request.formData();\n                  for (let key of form2.keys()) {\n                    if (body[key]) continue;\n                    let value = form2.getAll(key);\n                    value.length === 1 ? body[key] = value[0] : body[key] = value;\n                  }\n                  break;\n              }\n          }\n        }\n      context.route = route, context.body = body, context.params = handler?.params || void 0, context.query = qi === -1 ? {} : parseQuery(url.substring(qi + 1)), context.headers = {};\n      for (let [key, value] of request.headers.entries())\n        context.headers[key] = value;\n      let cookieMeta = {\n        domain: app.config.cookie?.domain ?? // @ts-ignore\n        validator?.cookie?.config.domain,\n        expires: app.config.cookie?.expires ?? // @ts-ignore\n        validator?.cookie?.config.expires,\n        httpOnly: app.config.cookie?.httpOnly ?? // @ts-ignore\n        validator?.cookie?.config.httpOnly,\n        maxAge: app.config.cookie?.maxAge ?? // @ts-ignore\n        validator?.cookie?.config.maxAge,\n        // @ts-ignore\n        path: app.config.cookie?.path ?? validator?.cookie?.config.path,\n        priority: app.config.cookie?.priority ?? // @ts-ignore\n        validator?.cookie?.config.priority,\n        partitioned: app.config.cookie?.partitioned ?? // @ts-ignore\n        validator?.cookie?.config.partitioned,\n        sameSite: app.config.cookie?.sameSite ?? // @ts-ignore\n        validator?.cookie?.config.sameSite,\n        secure: app.config.cookie?.secure ?? // @ts-ignore\n        validator?.cookie?.config.secure,\n        secrets: app.config.cookie?.secrets ?? // @ts-ignore\n        validator?.cookie?.config.secrets,\n        // @ts-ignore\n        sign: app.config.cookie?.sign ?? validator?.cookie?.config.sign\n      }, cookieHeaderValue = request.headers.get(\"cookie\");\n      context.cookie = await parseCookie(\n        context.set,\n        cookieHeaderValue,\n        cookieMeta\n      );\n      let headerValidator = validator?.createHeaders?.();\n      headerValidator && injectDefaultValues(headerValidator, context.headers);\n      let paramsValidator = validator?.createParams?.();\n      paramsValidator && injectDefaultValues(paramsValidator, context.params);\n      let queryValidator = validator?.createQuery?.();\n      if (queryValidator && injectDefaultValues(queryValidator, context.query), hooks.transform)\n        for (let i = 0; i < hooks.transform.length; i++) {\n          let hook = hooks.transform[i], response2 = hook.fn(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 instanceof ElysiaCustomStatusResponse) {\n            let result = mapEarlyResponse3(response2, context.set);\n            if (result)\n              return context.response = result;\n          }\n          hook.subType === \"derive\" && Object.assign(context, response2);\n        }\n      if (validator) {\n        if (headerValidator) {\n          let _header = structuredClone(context.headers);\n          for (let [key, value] of request.headers)\n            _header[key] = value;\n          if (validator.headers.Check(_header) === !1)\n            throw new ValidationError(\n              \"header\",\n              validator.headers,\n              _header\n            );\n        } else validator.headers?.Decode && (context.headers = validator.headers.Decode(context.headers));\n        if (paramsValidator?.Check(context.params) === !1)\n          throw new ValidationError(\n            \"params\",\n            validator.params,\n            context.params\n          );\n        if (validator.params?.Decode && (context.params = validator.params.Decode(context.params)), validator.query?.schema) {\n          let schema = validator.query.schema;\n          schema.$defs?.[schema.$ref] && (schema = schema.$defs[schema.$ref]);\n          let properties = schema.properties;\n          for (let property of Object.keys(properties)) {\n            let value = properties[property];\n            (value.type === \"array\" || value.items?.type === \"string\") && typeof context.query[property] == \"string\" && context.query[property] && (context.query[property] = context.query[property].split(\",\"));\n          }\n        }\n        if (queryValidator?.Check(context.query) === !1)\n          throw new ValidationError(\n            \"query\",\n            validator.query,\n            context.query\n          );\n        if (validator.query?.Decode && (context.query = validator.query.Decode(context.query)), validator.createCookie?.()) {\n          let cookieValue = {};\n          for (let [key, value] of Object.entries(context.cookie))\n            cookieValue[key] = value.value;\n          if (validator.cookie.Check(cookieValue) === !1)\n            throw new ValidationError(\n              \"cookie\",\n              validator.cookie,\n              cookieValue\n            );\n          validator.cookie?.Decode && (cookieValue = validator.cookie.Decode(\n            cookieValue\n          ));\n        }\n        if (validator.createBody?.()?.Check(body) === !1)\n          throw new ValidationError(\"body\", validator.body, body);\n        validator.body?.Decode && (context.body = validator.body.Decode(body));\n      }\n      if (hooks.beforeHandle)\n        for (let i = 0; i < hooks.beforeHandle.length; i++) {\n          let hook = hooks.beforeHandle[i], response2 = hook.fn(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 instanceof ElysiaCustomStatusResponse) {\n            let result = mapEarlyResponse3(response2, context.set);\n            if (result)\n              return context.response = result;\n          }\n          if (hook.subType === \"resolve\") {\n            Object.assign(context, response2);\n            continue;\n          }\n          if (response2 !== void 0) {\n            if (context.response = response2, hooks.afterHandle)\n              for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n                let newResponse = hooks.afterHandle[i2].fn(\n                  context\n                );\n                newResponse instanceof Promise && (newResponse = await newResponse), newResponse && (response2 = newResponse);\n              }\n            let result = mapEarlyResponse3(response2, context.set);\n            if (result) return context.response = result;\n          }\n        }\n      let response = typeof handle == \"function\" ? handle(context) : handle;\n      if (response instanceof Promise && (response = await response), hooks.afterHandle?.length) {\n        context.response = response;\n        for (let i = 0; i < hooks.afterHandle.length; i++) {\n          let response2 = hooks.afterHandle[i].fn(\n            context\n          );\n          response2 instanceof Promise && (response2 = await response2);\n          let isCustomStatuResponse = response2 instanceof ElysiaCustomStatusResponse, status2 = isCustomStatuResponse ? response2.code : set2.status ? typeof set2.status == \"string\" ? StatusMap[set2.status] : set2.status : 200;\n          isCustomStatuResponse && (set2.status = status2, response2 = response2.response);\n          let responseValidator = validator?.createResponse?.()?.[status2];\n          if (responseValidator?.Check(response2) === !1)\n            if (responseValidator?.Clean) {\n              let temp = responseValidator.Clean(response2);\n              if (responseValidator?.Check(temp) === !1)\n                throw new ValidationError(\n                  \"response\",\n                  responseValidator,\n                  response2\n                );\n              response2 = temp;\n            } else\n              throw new ValidationError(\n                \"response\",\n                responseValidator,\n                response2\n              );\n          responseValidator?.Encode && (context.response = response2 = responseValidator.Encode(response2)), responseValidator?.Clean && (context.response = response2 = responseValidator.Clean(response2));\n          let result = mapEarlyResponse3(response2, context.set);\n          if (result !== void 0) return context.response = result;\n        }\n      } else {\n        let isCustomStatuResponse = response instanceof ElysiaCustomStatusResponse, status2 = isCustomStatuResponse ? response.code : set2.status ? typeof set2.status == \"string\" ? StatusMap[set2.status] : set2.status : 200;\n        isCustomStatuResponse && (set2.status = status2, response = response.response);\n        let responseValidator = validator?.createResponse?.()?.[status2];\n        if (responseValidator?.Check(response) === !1)\n          if (responseValidator?.Clean) {\n            let temp = responseValidator.Clean(response);\n            if (responseValidator?.Check(temp) === !1)\n              throw new ValidationError(\n                \"response\",\n                responseValidator,\n                response\n              );\n            response = temp;\n          } else\n            throw new ValidationError(\n              \"response\",\n              responseValidator,\n              response\n            );\n        responseValidator?.Encode && (response = responseValidator.Encode(response)), responseValidator?.Clean && (response = responseValidator.Clean(response));\n      }\n      if (context.set.cookie && cookieMeta?.sign) {\n        let secret = cookieMeta.secrets ? typeof cookieMeta.secrets == \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0] : void 0;\n        if (cookieMeta.sign === !0) {\n          if (secret)\n            for (let [key, cookie] of Object.entries(\n              context.set.cookie\n            ))\n              context.set.cookie[key].value = await signCookie(\n                cookie.value,\n                secret\n              );\n        } else {\n          let properties = validator?.cookie?.schema?.properties;\n          if (secret)\n            for (let name of cookieMeta.sign)\n              name in properties && context.set.cookie[name]?.value && (context.set.cookie[name].value = await signCookie(\n                context.set.cookie[name].value,\n                secret\n              ));\n        }\n      }\n      return mapResponse3(context.response = response, context.set);\n    } catch (error2) {\n      let reportedError = error2 instanceof TransformDecodeError && error2.error ? error2.error : error2;\n      return app.handleError(context, reportedError);\n    } finally {\n      app.event.afterResponse && setImmediate(async () => {\n        for (let afterResponse of app.event.afterResponse)\n          await afterResponse.fn(context);\n      });\n    }\n  };\n}, createDynamicErrorHandler = (app) => {\n  let { mapResponse: mapResponse3 } = app[\"~adapter\"].handler;\n  return async (context, error2) => {\n    let errorContext = Object.assign(context, { error: error2, code: error2.code });\n    if (errorContext.set = context.set, app.event.error)\n      for (let i = 0; i < app.event.error.length; i++) {\n        let response = app.event.error[i].fn(errorContext);\n        if (response instanceof Promise && (response = await response), response != null)\n          return context.response = mapResponse3(\n            response,\n            context.set\n          );\n      }\n    return new Response(\n      typeof error2.cause == \"string\" ? error2.cause : error2.message,\n      {\n        headers: context.set.headers,\n        status: error2.status ?? 500\n      }\n    );\n  };\n};\n\n// src/index.ts\nimport { TypeSystemPolicy as TypeSystemPolicy2 } from \"@sinclair/typebox/system\";\nvar _a;\n_a = Symbol.dispose;\nvar _Elysia = class _Elysia {\n  constructor(config = {}) {\n    this.server = null;\n    this.dependencies = {};\n    this[\"~Prefix\"] = \"\";\n    this[\"~Singleton\"] = null;\n    this[\"~Definitions\"] = null;\n    this[\"~Metadata\"] = null;\n    this[\"~Ephemeral\"] = null;\n    this[\"~Volatile\"] = null;\n    this[\"~Routes\"] = null;\n    this.singleton = {\n      decorator: {},\n      store: {},\n      derive: {},\n      resolve: {}\n    };\n    this.definitions = {\n      typebox: t.Module({}),\n      type: {},\n      error: {}\n    };\n    this.extender = {\n      macros: [],\n      higherOrderFunctions: []\n    };\n    this.validator = {\n      global: null,\n      scoped: null,\n      local: null,\n      getCandidate() {\n        return !this.global && !this.scoped && !this.local ? {\n          body: void 0,\n          headers: void 0,\n          params: void 0,\n          query: void 0,\n          cookie: void 0,\n          response: void 0\n        } : mergeSchemaValidator(\n          mergeSchemaValidator(this.global, this.scoped),\n          this.local\n        );\n      }\n    };\n    this.standaloneValidator = {\n      global: null,\n      scoped: null,\n      local: null\n    };\n    this.event = {};\n    this.router = {\n      \"~http\": void 0,\n      get http() {\n        return this[\"~http\"] || (this[\"~http\"] = new Memoirist({\n          lazy: !0,\n          onParam: fastDecodeURIComponent\n        })), this[\"~http\"];\n      },\n      \"~dynamic\": void 0,\n      // Use in non-AOT mode\n      get dynamic() {\n        return this[\"~dynamic\"] || (this[\"~dynamic\"] = new Memoirist({\n          onParam: fastDecodeURIComponent\n        })), this[\"~dynamic\"];\n      },\n      // Static Router\n      static: {},\n      // Native Static Response\n      response: {},\n      history: []\n    };\n    this.routeTree = {};\n    this.inference = {\n      body: !1,\n      cookie: !1,\n      headers: !1,\n      query: !1,\n      set: !1,\n      server: !1,\n      path: !1,\n      route: !1,\n      url: !1\n    };\n    this[\"~parser\"] = {};\n    this.handle = async (request) => this.fetch(request);\n    /**\n     * Use handle can be either sync or async to save performance.\n     *\n     * Beside benchmark purpose, please use 'handle' instead.\n     */\n    this.fetch = (request) => (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(request);\n    this.handleError = async (context, error2) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(context, error2);\n    /**\n     * ### listen\n     * Assign current instance to port and start serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     * ```\n     */\n    this.listen = (options, callback) => (this[\"~adapter\"].listen(this)(options, callback), this.promisedModules.size && clearSucroseCache(5e3), this.promisedModules.then(() => {\n      clearSucroseCache(1e3);\n    }), this);\n    /**\n     * ### stop\n     * Stop server from serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * const app = new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     *\n     * // Sometime later\n     * app.stop()\n     * ```\n     *\n     * @example\n     * ```typescript\n     * const app = new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     *\n     * app.stop(true) // Abruptly any requests inflight\n     * ```\n     */\n    this.stop = async (closeActiveConnections) => (await this[\"~adapter\"].stop?.(this, closeActiveConnections), this);\n    this[_a] = () => {\n      this.server && this.stop();\n    };\n    config.tags && (config.detail ? config.detail.tags = config.tags : config.detail = {\n      tags: config.tags\n    }), this.config = {\n      aot: env2.ELYSIA_AOT !== \"false\",\n      nativeStaticResponse: !0,\n      systemRouter: !0,\n      encodeSchema: !0,\n      normalize: !0,\n      ...config,\n      prefix: config.prefix ? config.prefix.charCodeAt(0) === 47 ? config.prefix : `/${config.prefix}` : void 0,\n      cookie: {\n        path: \"/\",\n        ...config?.cookie\n      },\n      experimental: config?.experimental ?? {},\n      seed: config?.seed === void 0 ? \"\" : config?.seed\n    }, this[\"~adapter\"] = config.adapter ?? (typeof Bun < \"u\" ? BunAdapter : WebStandardAdapter), config?.analytic && (config?.name || config?.seed !== void 0) && (this.telemetry = {\n      stack: new Error().stack\n    });\n  }\n  get store() {\n    return this.singleton.store;\n  }\n  get decorator() {\n    return this.singleton.decorator;\n  }\n  get routes() {\n    return this.router.history;\n  }\n  getGlobalRoutes() {\n    return this.router.history;\n  }\n  getGlobalDefinitions() {\n    return this.definitions;\n  }\n  getServer() {\n    return this.server;\n  }\n  getParent() {\n    return null;\n  }\n  get promisedModules() {\n    return this._promisedModules || (this._promisedModules = new PromiseGroup(console.error, () => {\n    })), this._promisedModules;\n  }\n  env(model, _env = env2) {\n    if (getSchemaValidator(model, {\n      modules: this.definitions.typebox,\n      dynamic: !0,\n      additionalProperties: !0,\n      coerce: !0,\n      sanitize: () => this.config.sanitize\n    }).Check(_env) === !1) {\n      let error2 = new ValidationError(\"env\", model, _env);\n      throw new Error(error2.all.map((x) => x.summary).join(`\n`));\n    }\n    return this;\n  }\n  /**\n   * @private DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n   * @version 1.1.0\n   *\n   * ! Do not use unless you know exactly what you are doing\n   * ? Add Higher order function to Elysia.fetch\n   */\n  wrap(fn) {\n    return this.extender.higherOrderFunctions.push({\n      checksum: checksum(\n        JSON.stringify({\n          name: this.config.name,\n          seed: this.config.seed,\n          content: fn.toString()\n        })\n      ),\n      fn\n    }), this;\n  }\n  applyMacro(localHook) {\n    if (this.extender.macros.length) {\n      let manage = createMacroManager({\n        globalHook: this.event,\n        localHook\n      }), manager = {\n        events: {\n          global: this.event,\n          local: localHook\n        },\n        get onParse() {\n          return manage(\"parse\");\n        },\n        get onTransform() {\n          return manage(\"transform\");\n        },\n        get onBeforeHandle() {\n          return manage(\"beforeHandle\");\n        },\n        get onAfterHandle() {\n          return manage(\"afterHandle\");\n        },\n        get mapResponse() {\n          return manage(\"mapResponse\");\n        },\n        get onAfterResponse() {\n          return manage(\"afterResponse\");\n        },\n        get onError() {\n          return manage(\"error\");\n        }\n      };\n      for (let macro of this.extender.macros)\n        traceBackMacro(macro.fn(manager), localHook, manage);\n    }\n  }\n  get models() {\n    let models = {};\n    for (let name of Object.keys(this.definitions.type))\n      models[name] = getSchemaValidator(\n        this.definitions.typebox.Import(name)\n      );\n    return models.modules = this.definitions.typebox, models;\n  }\n  add(method, path, handle, localHook, options, standaloneValidators) {\n    let skipPrefix = options?.skipPrefix ?? !1, allowMeta = options?.allowMeta ?? !1;\n    if (localHook ??= {}, standaloneValidators === void 0 && (standaloneValidators = [], this.standaloneValidator.local && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.local\n    )), this.standaloneValidator.scoped && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.scoped\n    )), this.standaloneValidator.global && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.global\n    ))), path !== \"\" && path.charCodeAt(0) !== 47 && (path = \"/\" + path), this.config.prefix && !skipPrefix && (path = this.config.prefix + path), localHook?.type)\n      switch (localHook.type) {\n        case \"text\":\n          localHook.type = \"text/plain\";\n          break;\n        case \"json\":\n          localHook.type = \"application/json\";\n          break;\n        case \"formdata\":\n          localHook.type = \"multipart/form-data\";\n          break;\n        case \"urlencoded\":\n          localHook.type = \"application/x-www-form-urlencoded\";\n          break;\n        case \"arrayBuffer\":\n          localHook.type = \"application/octet-stream\";\n          break;\n        default:\n          break;\n      }\n    let instanceValidator = this.validator.getCandidate(), cloned = {\n      body: localHook?.body ?? instanceValidator?.body,\n      headers: localHook?.headers ?? instanceValidator?.headers,\n      params: localHook?.params ?? instanceValidator?.params,\n      query: localHook?.query ?? instanceValidator?.query,\n      cookie: localHook?.cookie ?? instanceValidator?.cookie,\n      response: localHook?.response ?? instanceValidator?.response\n    }, shouldPrecompile = this.config.precompile === !0 || typeof this.config.precompile == \"object\" && this.config.precompile.compose === !0, createValidator = () => {\n      let models = this.definitions.type, dynamic = !this.config.aot, normalize = this.config.normalize, modules = this.definitions.typebox, sanitize = () => this.config.sanitize, cookieValidator = () => {\n        if (cloned.cookie || standaloneValidators.find((x) => x.cookie))\n          return getCookieValidator({\n            modules,\n            validator: cloned.cookie,\n            defaultConfig: this.config.cookie,\n            normalize,\n            config: cloned.cookie?.config ?? {},\n            dynamic,\n            models,\n            validators: standaloneValidators.map((x) => x.cookie),\n            sanitize\n          });\n      };\n      return shouldPrecompile ? {\n        body: getSchemaValidator(cloned.body, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          additionalCoerce: coercePrimitiveRoot(),\n          validators: standaloneValidators.map((x) => x.body),\n          sanitize\n        }),\n        headers: getSchemaValidator(cloned.headers, {\n          modules,\n          dynamic,\n          models,\n          additionalProperties: !0,\n          coerce: !0,\n          additionalCoerce: stringToStructureCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.headers\n          ),\n          sanitize\n        }),\n        params: getSchemaValidator(cloned.params, {\n          modules,\n          dynamic,\n          models,\n          coerce: !0,\n          additionalCoerce: stringToStructureCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.params\n          ),\n          sanitize\n        }),\n        query: getSchemaValidator(cloned.query, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          coerce: !0,\n          additionalCoerce: stringToStructureCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.query\n          ),\n          sanitize\n        }),\n        cookie: cookieValidator(),\n        response: getResponseSchemaValidator(cloned.response, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          validators: standaloneValidators.map(\n            (x) => x.response\n          ),\n          sanitize\n        })\n      } : {\n        createBody() {\n          return this.body ? this.body : this.body = getSchemaValidator(\n            cloned.body,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              additionalCoerce: coercePrimitiveRoot(),\n              validators: standaloneValidators.map(\n                (x) => x.body\n              ),\n              sanitize\n            }\n          );\n        },\n        createHeaders() {\n          return this.headers ? this.headers : this.headers = getSchemaValidator(\n            cloned.headers,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              additionalProperties: !normalize,\n              coerce: !0,\n              additionalCoerce: stringToStructureCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.headers\n              ),\n              sanitize\n            }\n          );\n        },\n        createParams() {\n          return this.params ? this.params : this.params = getSchemaValidator(\n            cloned.params,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              coerce: !0,\n              additionalCoerce: stringToStructureCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.params\n              ),\n              sanitize\n            }\n          );\n        },\n        createQuery() {\n          return this.query ? this.query : this.query = getSchemaValidator(\n            cloned.query,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              coerce: !0,\n              additionalCoerce: stringToStructureCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.query\n              ),\n              sanitize\n            }\n          );\n        },\n        createCookie() {\n          return this.cookie ? this.cookie : this.cookie = cookieValidator();\n        },\n        createResponse() {\n          return this.response ? this.response : this.response = getResponseSchemaValidator(\n            cloned.response,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              validators: standaloneValidators.map(\n                (x) => x.response\n              ),\n              sanitize\n            }\n          );\n        }\n      };\n    };\n    (instanceValidator.body || instanceValidator.cookie || instanceValidator.headers || instanceValidator.params || instanceValidator.query || instanceValidator.response) && (localHook = mergeHook(localHook, instanceValidator)), localHook.tags && (localHook.detail ? localHook.detail.tags = localHook.tags : localHook.detail = {\n      tags: localHook.tags\n    }), isNotEmpty(this.config.detail) && (localHook.detail = mergeDeep(\n      Object.assign({}, this.config.detail),\n      localHook.detail\n    )), this.applyMacro(localHook);\n    let hooks = isNotEmpty(this.event) ? mergeHook(this.event, localHookToLifeCycleStore(localHook)) : lifeCycleToArray(localHookToLifeCycleStore(localHook));\n    if (this.config.aot === !1) {\n      let validator = createValidator();\n      this.router.dynamic.add(method, path, {\n        validator,\n        hooks,\n        content: localHook?.type,\n        handle,\n        route: path\n      });\n      let encoded = encodePath(path, { dynamic: !0 });\n      if (path !== encoded && this.router.dynamic.add(method, encoded, {\n        validator,\n        hooks,\n        content: localHook?.type,\n        handle,\n        route: path\n      }), this.config.strictPath === !1) {\n        let loosePath = getLoosePath(path);\n        this.router.dynamic.add(method, loosePath, {\n          validator,\n          hooks,\n          content: localHook?.type,\n          handle,\n          route: path\n        });\n        let encoded2 = encodePath(loosePath);\n        loosePath !== encoded2 && this.router.dynamic.add(method, loosePath, {\n          validator,\n          hooks,\n          content: localHook?.type,\n          handle,\n          route: path\n        });\n      }\n      this.router.history.push({\n        method,\n        path,\n        composed: null,\n        handler: handle,\n        compile: void 0,\n        hooks,\n        standaloneValidators\n      });\n      return;\n    }\n    let adapter = this[\"~adapter\"].handler, nativeStaticHandler = typeof handle != \"function\" ? () => {\n      let context = {\n        redirect,\n        request: this[\"~adapter\"].isWebStandard ? new Request(`http://e.ly${path}`, {\n          method\n        }) : void 0,\n        server: null,\n        set: {\n          headers: Object.assign({}, this.setHeaders)\n        },\n        status,\n        error: status,\n        store: this.store\n      };\n      try {\n        this.event.request?.map((x) => {\n          if (typeof x.fn == \"function\")\n            return x.fn(context);\n          if (typeof x == \"function\") return x(context);\n        });\n      } catch (error2) {\n        let res;\n        context.error = error2, this.event.error?.some((x) => {\n          if (typeof x.fn == \"function\")\n            return res = x.fn(context);\n          if (typeof x == \"function\")\n            return res = x(context);\n        }), res !== void 0 && (handle = res);\n      }\n      let fn = adapter.createNativeStaticHandler?.(\n        handle,\n        hooks,\n        context.set\n      );\n      return fn instanceof Promise ? fn.then((fn2) => {\n        if (fn2) return fn2;\n      }) : fn?.();\n    } : void 0, useNativeStaticResponse = this.config.nativeStaticResponse === !0, addResponsePath = (path2) => {\n      !useNativeStaticResponse || !nativeStaticHandler || (supportPerMethodInlineHandler ? this.router.response[path2] ? this.router.response[path2][method] = nativeStaticHandler() : this.router.response[path2] = {\n        [method]: nativeStaticHandler()\n      } : this.router.response[path2] = nativeStaticHandler());\n    };\n    addResponsePath(path);\n    let _compiled, compile2 = () => _compiled || (_compiled = composeHandler({\n      app: this,\n      path,\n      method,\n      hooks,\n      validator: createValidator(),\n      handler: typeof handle != \"function\" && typeof adapter.createStaticHandler != \"function\" ? () => handle : handle,\n      allowMeta,\n      inference: this.inference\n    })), oldIndex;\n    if (`${method}_${path}` in this.routeTree)\n      for (let i = 0; i < this.router.history.length; i++) {\n        let route = this.router.history[i];\n        if (route.path === path && route.method === method) {\n          oldIndex = i;\n          break;\n        }\n      }\n    else this.routeTree[`${method}_${path}`] = this.router.history.length;\n    let index = oldIndex ?? this.router.history.length, mainHandler = shouldPrecompile ? compile2() : (ctx) => (this.router.history[index].composed = compile2())(ctx);\n    oldIndex !== void 0 ? this.router.history[oldIndex] = Object.assign(\n      {\n        method,\n        path,\n        composed: mainHandler,\n        compile: compile2,\n        handler: handle,\n        hooks\n      },\n      standaloneValidators.length ? {\n        standaloneValidators\n      } : void 0,\n      localHook.webSocket ? { websocket: localHook.websocket } : void 0\n    ) : this.router.history.push(\n      Object.assign(\n        {\n          method,\n          path,\n          composed: mainHandler,\n          compile: compile2,\n          handler: handle,\n          hooks\n        },\n        standaloneValidators.length ? {\n          standaloneValidators\n        } : void 0,\n        localHook.webSocket ? { websocket: localHook.websocket } : void 0\n      )\n    );\n    let handler = {\n      handler: shouldPrecompile ? mainHandler : void 0,\n      compile() {\n        return this.handler = compile2();\n      }\n    }, staticRouter = this.router.static, isStaticPath = path.indexOf(\":\") === -1 && path.indexOf(\"*\") === -1;\n    if (method === \"WS\") {\n      if (isStaticPath) {\n        path in staticRouter ? staticRouter[path][method] = index : staticRouter[path] = {\n          [method]: index\n        };\n        return;\n      }\n      this.router.http.add(\"WS\", path, handler), this.config.strictPath || this.router.http.add(\"WS\", getLoosePath(path), handler);\n      let encoded = encodePath(path, { dynamic: !0 });\n      path !== encoded && this.router.http.add(\"WS\", encoded, handler);\n      return;\n    }\n    if (isStaticPath)\n      path in staticRouter ? staticRouter[path][method] = index : staticRouter[path] = {\n        [method]: index\n      }, this.config.strictPath || addResponsePath(getLoosePath(path));\n    else {\n      if (this.router.http.add(method, path, handler), !this.config.strictPath) {\n        let loosePath = getLoosePath(path);\n        addResponsePath(loosePath), this.router.http.add(method, loosePath, handler);\n      }\n      let encoded = encodePath(path, { dynamic: !0 });\n      path !== encoded && (this.router.http.add(method, encoded, handler), addResponsePath(encoded));\n    }\n  }\n  headers(header) {\n    return header ? (this.setHeaders || (this.setHeaders = {}), this.setHeaders = mergeDeep(this.setHeaders, header), this) : this;\n  }\n  /**\n   * ### start | Life cycle event\n   * Called after server is ready for serving\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStart(({ server }) => {\n   *         console.log(\"Running at ${server?.url}:${server?.port}\")\n   *     })\n   *     .listen(3000)\n   * ```\n   */\n  onStart(handler) {\n    return this.on(\"start\", handler), this;\n  }\n  /**\n   * ### request | Life cycle event\n   * Called on every new request is accepted\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onRequest(({ method, url }) => {\n   *         saveToAnalytic({ method, url })\n   *     })\n   * ```\n   */\n  onRequest(handler) {\n    return this.on(\"request\", handler), this;\n  }\n  onParse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"parse\",\n      handler\n    ) : typeof options == \"string\" ? this.on(\"parse\", this[\"~parser\"][options]) : this.on(\"parse\", options);\n  }\n  /**\n   * ### parse | Life cycle event\n   * Callback function to handle body parsing\n   *\n   * If truthy value is returned, will be assigned to `context.body`\n   * Otherwise will skip the callback and look for the next one.\n   *\n   * Equivalent to Express's body parser\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onParse((request, contentType) => {\n   *         if(contentType === \"application/json\")\n   *             return request.json()\n   *     })\n   * ```\n   */\n  parser(name, parser) {\n    return this[\"~parser\"][name] = parser, this;\n  }\n  onTransform(options, handler) {\n    return handler ? this.on(\n      options,\n      \"transform\",\n      handler\n    ) : this.on(\"transform\", options);\n  }\n  resolve(optionsOrResolve, resolve) {\n    resolve || (resolve = optionsOrResolve, optionsOrResolve = { as: \"local\" });\n    let hook = {\n      subType: \"resolve\",\n      fn: resolve\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  mapResolve(optionsOrResolve, mapper) {\n    mapper || (mapper = optionsOrResolve, optionsOrResolve = { as: \"local\" });\n    let hook = {\n      subType: \"mapResolve\",\n      fn: mapper\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  onBeforeHandle(options, handler) {\n    return handler ? this.on(\n      options,\n      \"beforeHandle\",\n      handler\n    ) : this.on(\"beforeHandle\", options);\n  }\n  onAfterHandle(options, handler) {\n    return handler ? this.on(\n      options,\n      \"afterHandle\",\n      handler\n    ) : this.on(\"afterHandle\", options);\n  }\n  mapResponse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"mapResponse\",\n      handler\n    ) : this.on(\"mapResponse\", options);\n  }\n  onAfterResponse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"afterResponse\",\n      handler\n    ) : this.on(\"afterResponse\", options);\n  }\n  /**\n   * ### After Handle | Life cycle event\n   * Intercept request **after** main handler is called.\n   *\n   * If truthy value is returned, will be assigned as `Response`\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onAfterHandle((context, response) => {\n   *         if(typeof response === \"object\")\n   *             return JSON.stringify(response)\n   *     })\n   * ```\n   */\n  trace(options, handler) {\n    handler || (handler = options, options = { as: \"local\" }), Array.isArray(handler) || (handler = [handler]);\n    for (let fn of handler)\n      this.on(\n        options,\n        \"trace\",\n        createTracer(fn)\n      );\n    return this;\n  }\n  error(name, error2) {\n    switch (typeof name) {\n      case \"string\":\n        return error2.prototype[ERROR_CODE] = name, this.definitions.error[name] = error2, this;\n      case \"function\":\n        return this.definitions.error = name(this.definitions.error), this;\n    }\n    for (let [code, error3] of Object.entries(name))\n      error3.prototype[ERROR_CODE] = code, this.definitions.error[code] = error3;\n    return this;\n  }\n  /**\n   * ### Error | Life cycle event\n   * Called when error is thrown during processing request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onError(({ code }) => {\n   *         if(code === \"NOT_FOUND\")\n   *             return \"Path not found :(\"\n   *     })\n   * ```\n   */\n  onError(options, handler) {\n    return handler ? this.on(\n      options,\n      \"error\",\n      handler\n    ) : this.on(\"error\", options);\n  }\n  /**\n   * ### stop | Life cycle event\n   * Called after server stop serving request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStop((app) => {\n   *         cleanup()\n   *     })\n   * ```\n   */\n  onStop(handler) {\n    return this.on(\"stop\", handler), this;\n  }\n  on(optionsOrType, typeOrHandlers, handlers) {\n    let type;\n    switch (typeof optionsOrType) {\n      case \"string\":\n        type = optionsOrType, handlers = typeOrHandlers;\n        break;\n      case \"object\":\n        type = typeOrHandlers, !Array.isArray(typeOrHandlers) && typeof typeOrHandlers == \"object\" && (handlers = typeOrHandlers);\n        break;\n    }\n    Array.isArray(handlers) ? handlers = fnToContainer(handlers) : typeof handlers == \"function\" ? handlers = [\n      {\n        fn: handlers\n      }\n    ] : handlers = [handlers];\n    let handles = handlers;\n    for (let handle of handles)\n      handle.scope = typeof optionsOrType == \"string\" ? \"local\" : optionsOrType?.as ?? \"local\", (type === \"resolve\" || type === \"derive\") && (handle.subType = type);\n    type !== \"trace\" && (this.inference = sucrose(\n      {\n        [type]: handles.map((x) => x.fn)\n      },\n      this.inference\n    ));\n    for (let handle of handles) {\n      let fn = asHookType(handle, \"global\", { skipIfHasType: !0 });\n      switch (type) {\n        case \"start\":\n          this.event.start ??= [], this.event.start.push(fn);\n          break;\n        case \"request\":\n          this.event.request ??= [], this.event.request.push(fn);\n          break;\n        case \"parse\":\n          this.event.parse ??= [], this.event.parse.push(fn);\n          break;\n        case \"transform\":\n          this.event.transform ??= [], this.event.transform.push(fn);\n          break;\n        // @ts-expect-error\n        case \"derive\":\n          this.event.transform ??= [], this.event.transform.push(\n            fnToContainer(fn, \"derive\")\n          );\n          break;\n        case \"beforeHandle\":\n          this.event.beforeHandle ??= [], this.event.beforeHandle.push(fn);\n          break;\n        // @ts-expect-error\n        // eslint-disable-next-line sonarjs/no-duplicated-branches\n        case \"resolve\":\n          this.event.beforeHandle ??= [], this.event.beforeHandle.push(\n            fnToContainer(fn, \"resolve\")\n          );\n          break;\n        case \"afterHandle\":\n          this.event.afterHandle ??= [], this.event.afterHandle.push(fn);\n          break;\n        case \"mapResponse\":\n          this.event.mapResponse ??= [], this.event.mapResponse.push(fn);\n          break;\n        case \"afterResponse\":\n          this.event.afterResponse ??= [], this.event.afterResponse.push(fn);\n          break;\n        case \"trace\":\n          this.event.trace ??= [], this.event.trace.push(fn);\n          break;\n        case \"error\":\n          this.event.error ??= [], this.event.error.push(fn);\n          break;\n        case \"stop\":\n          this.event.stop ??= [], this.event.stop.push(fn);\n          break;\n      }\n    }\n    return this;\n  }\n  as(type) {\n    return promoteEvent(this.event.parse, type), promoteEvent(this.event.transform, type), promoteEvent(this.event.beforeHandle, type), promoteEvent(this.event.afterHandle, type), promoteEvent(this.event.mapResponse, type), promoteEvent(this.event.afterResponse, type), promoteEvent(this.event.trace, type), promoteEvent(this.event.error, type), type === \"scoped\" ? (this.validator.scoped = mergeSchemaValidator(\n      this.validator.scoped,\n      this.validator.local\n    ), this.validator.local = null, this.standaloneValidator.local !== null && (this.standaloneValidator.scoped ||= [], this.standaloneValidator.scoped.push(\n      ...this.standaloneValidator.local\n    ), this.standaloneValidator.local = null)) : type === \"global\" && (this.validator.global = mergeSchemaValidator(\n      this.validator.global,\n      mergeSchemaValidator(\n        this.validator.scoped,\n        this.validator.local\n      )\n    ), this.validator.scoped = null, this.validator.local = null, this.standaloneValidator.local !== null && (this.standaloneValidator.scoped ||= [], this.standaloneValidator.scoped.push(\n      ...this.standaloneValidator.local\n    ), this.standaloneValidator.local = null), this.standaloneValidator.scoped !== null && (this.standaloneValidator.global ||= [], this.standaloneValidator.global.push(\n      ...this.standaloneValidator.scoped\n    ), this.standaloneValidator.scoped = null)), this;\n  }\n  /**\n   * ### group\n   * Encapsulate and group path with prefix\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .group('/v1', app => app\n   *         .get('/', () => 'Hi')\n   *         .get('/name', () => 'Elysia')\n   *     })\n   * ```\n   */\n  group(prefix, schemaOrRun, run) {\n    let instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton }, instance.definitions = { ...this.definitions }, instance.getServer = () => this.getServer(), instance.inference = cloneInference(this.inference), instance.extender = { ...this.extender }, instance[\"~parser\"] = this[\"~parser\"], instance.standaloneValidator = {\n      local: [...this.standaloneValidator.local ?? []],\n      scoped: [...this.standaloneValidator.scoped ?? []],\n      global: [...this.standaloneValidator.global ?? []]\n    };\n    let isSchema = typeof schemaOrRun == \"object\", sandbox = (isSchema ? run : schemaOrRun)(instance);\n    return this.singleton = mergeDeep(this.singleton, instance.singleton), this.definitions = mergeDeep(this.definitions, instance.definitions), sandbox.event.request?.length && (this.event.request = [\n      ...this.event.request || [],\n      ...sandbox.event.request || []\n    ]), sandbox.event.mapResponse?.length && (this.event.mapResponse = [\n      ...this.event.mapResponse || [],\n      ...sandbox.event.mapResponse || []\n    ]), this.model(sandbox.definitions.type), Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks, standaloneValidators }) => {\n        if (path = (isSchema ? \"\" : this.config.prefix ?? \"\") + prefix + path, isSchema) {\n          let hook = schemaOrRun, localHook = hooks;\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(hook, {\n              ...localHook || {},\n              error: localHook.error ? Array.isArray(localHook.error) ? [\n                ...localHook.error ?? [],\n                ...sandbox.event.error ?? []\n              ] : [\n                localHook.error,\n                ...sandbox.event.error ?? []\n              ] : sandbox.event.error\n            }),\n            void 0,\n            standaloneValidators\n          );\n        } else\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(hooks, {\n              error: sandbox.event.error\n            }),\n            {\n              skipPrefix: !0\n            },\n            standaloneValidators\n          );\n      }\n    ), this;\n  }\n  /**\n   * ### guard\n   * Encapsulate and pass hook into all child handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { t } from 'elysia'\n   *\n   * new Elysia()\n   *     .guard({\n   *          schema: {\n   *              body: t.Object({\n   *                  username: t.String(),\n   *                  password: t.String()\n   *              })\n   *          }\n   *     }, app => app\n   *         .get(\"/\", () => 'Hi')\n   *         .get(\"/name\", () => 'Elysia')\n   *     })\n   * ```\n   */\n  guard(hook, run) {\n    if (!run) {\n      if (typeof hook == \"object\") {\n        this.applyMacro(hook), hook.detail && (this.config.detail ? this.config.detail = mergeDeep(\n          Object.assign({}, this.config.detail),\n          hook.detail\n        ) : this.config.detail = hook.detail), hook.tags && (this.config.detail ? this.config.detail.tags = hook.tags : this.config.detail = {\n          tags: hook.tags\n        });\n        let type = hook.as ?? \"local\";\n        if (hook.schema === \"standalone\") {\n          this.standaloneValidator[type] || (this.standaloneValidator[type] = []);\n          let response = hook?.response || typeof hook?.response == \"string\" || hook?.response && Kind5 in hook.response ? {\n            200: hook.response\n          } : hook?.response;\n          this.standaloneValidator[type].push({\n            body: hook.body,\n            headers: hook.headers,\n            params: hook.params,\n            query: hook.query,\n            response,\n            cookie: hook.cookie\n          });\n        } else\n          this.validator[type] = {\n            body: hook.body ?? this.validator[type]?.body,\n            headers: hook.headers ?? this.validator[type]?.headers,\n            params: hook.params ?? this.validator[type]?.params,\n            query: hook.query ?? this.validator[type]?.query,\n            response: hook.response ?? this.validator[type]?.response,\n            cookie: hook.cookie ?? this.validator[type]?.cookie\n          };\n        return hook.parse && this.on({ as: type }, \"parse\", hook.parse), hook.transform && this.on({ as: type }, \"transform\", hook.transform), hook.derive && this.on({ as: type }, \"derive\", hook.derive), hook.beforeHandle && this.on({ as: type }, \"beforeHandle\", hook.beforeHandle), hook.resolve && this.on({ as: type }, \"resolve\", hook.resolve), hook.afterHandle && this.on({ as: type }, \"afterHandle\", hook.afterHandle), hook.mapResponse && this.on({ as: type }, \"mapResponse\", hook.mapResponse), hook.afterResponse && this.on({ as: type }, \"afterResponse\", hook.afterResponse), hook.error && this.on({ as: type }, \"error\", hook.error), this;\n      }\n      return this.guard({}, hook);\n    }\n    let instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton }, instance.definitions = { ...this.definitions }, instance.inference = cloneInference(this.inference), instance.extender = { ...this.extender }, instance.getServer = () => this.getServer();\n    let sandbox = run(instance);\n    return this.singleton = mergeDeep(this.singleton, instance.singleton), this.definitions = mergeDeep(this.definitions, instance.definitions), sandbox.getServer = () => this.server, sandbox.event.request?.length && (this.event.request = [\n      ...this.event.request || [],\n      ...sandbox.event.request || []\n    ]), sandbox.event.mapResponse?.length && (this.event.mapResponse = [\n      ...this.event.mapResponse || [],\n      ...sandbox.event.mapResponse || []\n    ]), this.model(sandbox.definitions.type), Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks: localHook }) => {\n        this.add(\n          method,\n          path,\n          handler,\n          mergeHook(hook, {\n            ...localHook || {},\n            error: localHook.error ? Array.isArray(localHook.error) ? [\n              ...localHook.error ?? [],\n              ...sandbox.event.error ?? []\n            ] : [\n              localHook.error,\n              ...sandbox.event.error ?? []\n            ] : sandbox.event.error\n          })\n        );\n      }\n    ), this;\n  }\n  /**\n   * ### use\n   * Merge separate logic of Elysia with current\n   *\n   * ---\n   * @example\n   * ```typescript\n   * const plugin = (app: Elysia) => app\n   *     .get('/plugin', () => 'hi')\n   *\n   * new Elysia()\n   *     .use(plugin)\n   * ```\n   */\n  use(plugin) {\n    if (!plugin) return this;\n    if (Array.isArray(plugin)) {\n      let app = this;\n      for (let p of plugin) app = app.use(p);\n      return app;\n    }\n    return plugin instanceof Promise ? (this.promisedModules.add(\n      plugin.then((plugin2) => {\n        if (typeof plugin2 == \"function\") return plugin2(this);\n        if (plugin2 instanceof _Elysia)\n          return this._use(plugin2).compile();\n        if (plugin2.constructor?.name === \"Elysia\")\n          return this._use(\n            plugin2\n          ).compile();\n        if (typeof plugin2.default == \"function\")\n          return plugin2.default(this);\n        if (plugin2.default instanceof _Elysia)\n          return this._use(plugin2.default);\n        if (plugin2.constructor?.name === \"Elysia\")\n          return this._use(plugin2.default);\n        if (plugin2.constructor?.name === \"_Elysia\")\n          return this._use(plugin2.default);\n        try {\n          return this._use(plugin2.default);\n        } catch (error2) {\n          throw console.error(\n            'Invalid plugin type. Expected Elysia instance, function, or module with \"default\" as Elysia instance or function that returns Elysia instance.'\n          ), error2;\n        }\n      }).then((v) => (v && typeof v.compile == \"function\" && v.compile(), v))\n    ), this) : this._use(plugin);\n  }\n  propagatePromiseModules(plugin) {\n    if (plugin.promisedModules.size <= 0) return this;\n    for (let promise of plugin.promisedModules.promises)\n      this.promisedModules.add(\n        promise.then((v) => {\n          if (!v) return;\n          let t2 = this._use(v);\n          return t2 instanceof Promise ? t2.then((v2) => {\n            v2 ? v2.compile() : v.compile();\n          }) : v.compile();\n        })\n      );\n    return this;\n  }\n  _use(plugin) {\n    if (typeof plugin == \"function\") {\n      let instance = plugin(this);\n      return instance instanceof Promise ? (this.promisedModules.add(\n        instance.then((plugin2) => {\n          if (plugin2 instanceof _Elysia) {\n            plugin2.getServer = () => this.getServer(), plugin2.getGlobalRoutes = () => this.getGlobalRoutes(), plugin2.getGlobalDefinitions = () => this.getGlobalDefinitions(), plugin2.model(this.definitions.type), plugin2.error(this.definitions.error);\n            for (let {\n              method,\n              path,\n              handler,\n              hooks,\n              standaloneValidators\n            } of Object.values(plugin2.router.history))\n              this.add(\n                method,\n                path,\n                handler,\n                hooks,\n                void 0,\n                standaloneValidators\n              );\n            return plugin2 === this ? void 0 : (this.propagatePromiseModules(plugin2), plugin2);\n          }\n          return typeof plugin2 == \"function\" ? plugin2(\n            this\n          ) : typeof plugin2.default == \"function\" ? plugin2.default(\n            this\n          ) : this._use(plugin2);\n        }).then((v) => (v && typeof v.compile == \"function\" && v.compile(), v))\n      ), this) : instance;\n    }\n    this.propagatePromiseModules(plugin);\n    let name = plugin.config.name, seed = plugin.config.seed;\n    if (plugin.getParent = () => this, plugin.getServer = () => this.getServer(), plugin.getGlobalRoutes = () => this.getGlobalRoutes(), plugin.getGlobalDefinitions = () => this.getGlobalDefinitions(), plugin.standaloneValidator?.scoped && (this.standaloneValidator.local ? this.standaloneValidator.local = this.standaloneValidator.local.concat(\n      plugin.standaloneValidator.scoped\n    ) : this.standaloneValidator.local = plugin.standaloneValidator.scoped), plugin.standaloneValidator?.global && (this.standaloneValidator.global ? this.standaloneValidator.global = this.standaloneValidator.global.concat(\n      plugin.standaloneValidator.global\n    ) : this.standaloneValidator.global = plugin.standaloneValidator.global), isNotEmpty(plugin[\"~parser\"]) && (this[\"~parser\"] = {\n      ...plugin[\"~parser\"],\n      ...this[\"~parser\"]\n    }), plugin.setHeaders && this.headers(plugin.setHeaders), name) {\n      name in this.dependencies || (this.dependencies[name] = []);\n      let current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n      this.dependencies[name].some(\n        ({ checksum: checksum2 }) => current === checksum2\n      ) || (this.extender.macros = this.extender.macros.concat(\n        plugin.extender.macros\n      ), this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n        plugin.extender.higherOrderFunctions\n      ));\n    } else\n      plugin.extender.macros.length && (this.extender.macros = this.extender.macros.concat(\n        plugin.extender.macros\n      )), plugin.extender.higherOrderFunctions.length && (this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n        plugin.extender.higherOrderFunctions\n      ));\n    if (deduplicateChecksum(this.extender.macros), plugin.extender.higherOrderFunctions.length) {\n      deduplicateChecksum(this.extender.higherOrderFunctions);\n      let hofHashes = [];\n      for (let i = 0; i < this.extender.higherOrderFunctions.length; i++) {\n        let hof = this.extender.higherOrderFunctions[i];\n        hof.checksum && (hofHashes.includes(hof.checksum) && (this.extender.higherOrderFunctions.splice(i, 1), i--), hofHashes.push(hof.checksum));\n      }\n      hofHashes.length = 0;\n    }\n    this.inference = mergeInference(this.inference, plugin.inference), isNotEmpty(plugin.singleton.decorator) && this.decorate(plugin.singleton.decorator), isNotEmpty(plugin.singleton.store) && this.state(plugin.singleton.store), isNotEmpty(plugin.definitions.type) && this.model(plugin.definitions.type), isNotEmpty(plugin.definitions.error) && this.error(plugin.definitions.error), isNotEmpty(plugin.definitions.error) && (plugin.extender.macros = this.extender.macros.concat(\n      plugin.extender.macros\n    ));\n    for (let {\n      method,\n      path,\n      handler,\n      hooks,\n      standaloneValidators\n    } of Object.values(plugin.router.history))\n      this.add(\n        method,\n        path,\n        handler,\n        hooks,\n        void 0,\n        standaloneValidators\n      );\n    if (name) {\n      name in this.dependencies || (this.dependencies[name] = []);\n      let current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n      if (this.dependencies[name].some(\n        ({ checksum: checksum2 }) => current === checksum2\n      ))\n        return this;\n      this.dependencies[name].push(\n        this.config?.analytic ? {\n          name: plugin.config.name,\n          seed: plugin.config.seed,\n          checksum: current,\n          dependencies: plugin.dependencies,\n          stack: plugin.telemetry?.stack,\n          routes: plugin.router.history,\n          decorators: plugin.singleton,\n          store: plugin.singleton.store,\n          error: plugin.definitions.error,\n          derive: plugin.event.transform?.filter((x) => x?.subType === \"derive\").map((x) => ({\n            fn: x.toString(),\n            stack: new Error().stack ?? \"\"\n          })),\n          resolve: plugin.event.transform?.filter((x) => x?.subType === \"resolve\").map((x) => ({\n            fn: x.toString(),\n            stack: new Error().stack ?? \"\"\n          }))\n        } : {\n          name: plugin.config.name,\n          seed: plugin.config.seed,\n          checksum: current,\n          dependencies: plugin.dependencies\n        }\n      ), isNotEmpty(plugin.event) && (this.event = mergeLifeCycle(\n        this.event,\n        filterGlobalHook(plugin.event),\n        current\n      ));\n    } else\n      isNotEmpty(plugin.event) && (this.event = mergeLifeCycle(\n        this.event,\n        filterGlobalHook(plugin.event)\n      ));\n    return plugin.validator.global && (this.validator.global = mergeHook(this.validator.global, {\n      ...plugin.validator.global\n    })), plugin.validator.scoped && (this.validator.local = mergeHook(this.validator.local, {\n      ...plugin.validator.scoped\n    })), this;\n  }\n  macro(macro) {\n    if (typeof macro == \"function\") {\n      let hook = {\n        checksum: checksum(\n          JSON.stringify({\n            name: this.config.name,\n            seed: this.config.seed,\n            content: macro.toString()\n          })\n        ),\n        fn: macro\n      };\n      this.extender.macros.push(hook);\n    } else if (typeof macro == \"object\") {\n      for (let name of Object.keys(macro))\n        if (typeof macro[name] == \"object\") {\n          let actualValue = { ...macro[name] };\n          macro[name] = (v) => {\n            if (v === !0) return actualValue;\n          };\n        }\n      let hook = {\n        checksum: checksum(\n          JSON.stringify({\n            name: this.config.name,\n            seed: this.config.seed,\n            content: Object.entries(macro).map(([k, v]) => `${k}+${v}`).join(\",\")\n          })\n        ),\n        fn: () => macro\n      };\n      this.extender.macros.push(hook);\n    }\n    return this;\n  }\n  mount(path, handleOrConfig, config) {\n    if (path instanceof _Elysia || typeof path == \"function\" || path.length === 0 || path === \"/\") {\n      let run = typeof path == \"function\" ? path : path instanceof _Elysia ? path.compile().fetch : handleOrConfig instanceof _Elysia ? handleOrConfig.compile().fetch : typeof handleOrConfig == \"function\" ? handleOrConfig : (() => {\n        throw new Error(\"Invalid handler\");\n      })(), handler2 = ({ request, path: path2 }) => run(\n        new Request(replaceUrlPath(request.url, path2), {\n          method: request.method,\n          headers: request.headers,\n          signal: request.signal,\n          credentials: request.credentials,\n          referrerPolicy: request.referrerPolicy,\n          duplex: request.duplex,\n          redirect: request.redirect,\n          mode: request.mode,\n          keepalive: request.keepalive,\n          integrity: request.integrity,\n          body: request.body\n        })\n      );\n      return this.route(\"ALL\", \"/*\", handler2, {\n        parse: \"none\",\n        ...config,\n        detail: {\n          ...config?.detail,\n          hide: !0\n        },\n        config: {\n          mount: run\n        }\n      }), this;\n    }\n    let handle = handleOrConfig instanceof _Elysia ? handleOrConfig.compile().fetch : typeof handleOrConfig == \"function\" ? handleOrConfig : (() => {\n      throw new Error(\"Invalid handler\");\n    })(), length = path.length - (path.endsWith(\"*\") ? 1 : 0), handler = ({ request, path: path2 }) => handle(\n      new Request(\n        replaceUrlPath(request.url, path2.slice(length) || \"/\"),\n        {\n          method: request.method,\n          headers: request.headers,\n          signal: request.signal,\n          credentials: request.credentials,\n          referrerPolicy: request.referrerPolicy,\n          duplex: request.duplex,\n          redirect: request.redirect,\n          mode: request.mode,\n          keepalive: request.keepalive,\n          integrity: request.integrity,\n          body: request.body\n        }\n      )\n    );\n    return this.route(\"ALL\", path, handler, {\n      parse: \"none\",\n      ...config,\n      detail: {\n        ...config?.detail,\n        hide: !0\n      },\n      config: {\n        mount: handle\n      }\n    }), this.route(\n      \"ALL\",\n      path + (path.endsWith(\"/\") ? \"*\" : \"/*\"),\n      handler,\n      {\n        parse: \"none\",\n        ...config,\n        detail: {\n          ...config?.detail,\n          hide: !0\n        },\n        config: {\n          mount: handle\n        }\n      }\n    ), this;\n  }\n  /**\n   * ### get\n   * Register handler for path with method [GET]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .get('/', () => 'hi')\n   *     .get('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  get(path, handler, hook) {\n    return this.add(\"GET\", path, handler, hook), this;\n  }\n  /**\n   * ### post\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .post('/', () => 'hi')\n   *     .post('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  post(path, handler, hook) {\n    return this.add(\"POST\", path, handler, hook), this;\n  }\n  /**\n   * ### put\n   * Register handler for path with method [PUT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .put('/', () => 'hi')\n   *     .put('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  put(path, handler, hook) {\n    return this.add(\"PUT\", path, handler, hook), this;\n  }\n  /**\n   * ### patch\n   * Register handler for path with method [PATCH]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .patch('/', () => 'hi')\n   *     .patch('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  patch(path, handler, hook) {\n    return this.add(\"PATCH\", path, handler, hook), this;\n  }\n  /**\n   * ### delete\n   * Register handler for path with method [DELETE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .delete('/', () => 'hi')\n   *     .delete('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  delete(path, handler, hook) {\n    return this.add(\"DELETE\", path, handler, hook), this;\n  }\n  /**\n   * ### options\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .options('/', () => 'hi')\n   *     .options('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  options(path, handler, hook) {\n    return this.add(\"OPTIONS\", path, handler, hook), this;\n  }\n  /**\n   * ### all\n   * Register handler for path with method [ALL]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .all('/', () => 'hi')\n   *     .all('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  all(path, handler, hook) {\n    return this.add(\"ALL\", path, handler, hook), this;\n  }\n  /**\n   * ### head\n   * Register handler for path with method [HEAD]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .head('/', () => 'hi')\n   *     .head('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  head(path, handler, hook) {\n    return this.add(\"HEAD\", path, handler, hook), this;\n  }\n  /**\n   * ### connect\n   * Register handler for path with method [CONNECT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .connect('/', () => 'hi')\n   *     .connect('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  connect(path, handler, hook) {\n    return this.add(\"CONNECT\", path, handler, hook), this;\n  }\n  /**\n   * ### route\n   * Register handler for path with method [ROUTE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .route('/', () => 'hi')\n   *     .route('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  route(method, path, handler, hook) {\n    return this.add(method.toUpperCase(), path, handler, hook, hook?.config), this;\n  }\n  /**\n   * ### ws\n   * Register handler for path with method [ws]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .ws('/', {\n   *         message(ws, message) {\n   *             ws.send(message)\n   *         }\n   *     })\n   * ```\n   */\n  ws(path, options) {\n    return this[\"~adapter\"].ws ? this[\"~adapter\"].ws(this, path, options) : console.warn(\"Current adapter doesn't support WebSocket\"), this;\n  }\n  /**\n   * ### state\n   * Assign global mutatable state accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .state('counter', 0)\n   *     .get('/', (({ counter }) => ++counter)\n   * ```\n   */\n  state(options, name, value) {\n    name === void 0 ? (value = options, options = { as: \"append\" }, name = \"\") : value === void 0 && (typeof options == \"string\" ? (value = name, name = options, options = { as: \"append\" }) : typeof options == \"object\" && (value = name, name = \"\"));\n    let { as } = options;\n    if (typeof name != \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        return !value || !isNotEmpty(value) ? this : name ? (name in this.singleton.store ? this.singleton.store[name] = mergeDeep(\n          this.singleton.store[name],\n          value,\n          {\n            override: as === \"override\"\n          }\n        ) : this.singleton.store[name] = value, this) : value === null ? this : (this.singleton.store = mergeDeep(this.singleton.store, value, {\n          override: as === \"override\"\n        }), this);\n      case \"function\":\n        return name ? (as === \"override\" || !(name in this.singleton.store)) && (this.singleton.store[name] = value) : this.singleton.store = value(this.singleton.store), this;\n      default:\n        return (as === \"override\" || !(name in this.singleton.store)) && (this.singleton.store[name] = value), this;\n    }\n  }\n  /**\n   * ### decorate\n   * Define custom method to `Context` accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .decorate('getDate', () => Date.now())\n   *     .get('/', (({ getDate }) => getDate())\n   * ```\n   */\n  decorate(options, name, value) {\n    name === void 0 ? (value = options, options = { as: \"append\" }, name = \"\") : value === void 0 && (typeof options == \"string\" ? (value = name, name = options, options = { as: \"append\" }) : typeof options == \"object\" && (value = name, name = \"\"));\n    let { as } = options;\n    if (typeof name != \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        return name ? (name in this.singleton.decorator ? this.singleton.decorator[name] = mergeDeep(\n          this.singleton.decorator[name],\n          value,\n          {\n            override: as === \"override\"\n          }\n        ) : this.singleton.decorator[name] = value, this) : value === null ? this : (this.singleton.decorator = mergeDeep(\n          this.singleton.decorator,\n          value,\n          {\n            override: as === \"override\"\n          }\n        ), this);\n      case \"function\":\n        return name ? (as === \"override\" || !(name in this.singleton.decorator)) && (this.singleton.decorator[name] = value) : this.singleton.decorator = value(this.singleton.decorator), this;\n      default:\n        return (as === \"override\" || !(name in this.singleton.decorator)) && (this.singleton.decorator[name] = value), this;\n    }\n  }\n  derive(optionsOrTransform, transform) {\n    transform || (transform = optionsOrTransform, optionsOrTransform = { as: \"local\" });\n    let hook = {\n      subType: \"derive\",\n      fn: transform\n    };\n    return this.onTransform(optionsOrTransform, hook);\n  }\n  model(name, model) {\n    switch (typeof name) {\n      case \"object\":\n        let parsedSchemas = {}, kvs = Object.entries(name);\n        if (!kvs.length) return this;\n        for (let [key, value] of kvs)\n          key in this.definitions.type || (parsedSchemas[key] = this.definitions.type[key] = value, parsedSchemas[key].$id ??= `#/components/schemas/${key}`);\n        return this.definitions.typebox = t.Module({\n          ...this.definitions.typebox.$defs,\n          ...parsedSchemas\n        }), this;\n      case \"function\":\n        let result = name(this.definitions.type);\n        return this.definitions.type = result, this.definitions.typebox = t.Module(result), this;\n      case \"string\":\n        if (!model) break;\n        let newModel = {\n          ...model,\n          id: model.$id ?? `#/components/schemas/${name}`\n        };\n        return this.definitions.type[name] = model, this.definitions.typebox = t.Module({\n          ...this.definitions.typebox.$defs,\n          ...newModel\n        }), this;\n    }\n    return this.definitions.type[name] = model, this.definitions.typebox = t.Module({\n      ...this.definitions.typebox.$defs,\n      [name]: model\n    }), this;\n  }\n  Ref(key) {\n    return t.Ref(key);\n  }\n  mapDerive(optionsOrDerive, mapper) {\n    mapper || (mapper = optionsOrDerive, optionsOrDerive = { as: \"local\" });\n    let hook = {\n      subType: \"mapDerive\",\n      fn: mapper\n    };\n    return this.onTransform(optionsOrDerive, hook);\n  }\n  affix(base, type, word) {\n    if (word === \"\") return this;\n    let delimieter = [\"_\", \"-\", \" \"], capitalize = (word2) => word2[0].toUpperCase() + word2.slice(1), joinKey = base === \"prefix\" ? (prefix, word2) => delimieter.includes(prefix.at(-1) ?? \"\") ? prefix + word2 : prefix + capitalize(word2) : delimieter.includes(word.at(-1) ?? \"\") ? (suffix, word2) => word2 + suffix : (suffix, word2) => word2 + capitalize(suffix), remap = (type2) => {\n      let store = {};\n      switch (type2) {\n        case \"decorator\":\n          for (let key in this.singleton.decorator)\n            store[joinKey(word, key)] = this.singleton.decorator[key];\n          this.singleton.decorator = store;\n          break;\n        case \"state\":\n          for (let key in this.singleton.store)\n            store[joinKey(word, key)] = this.singleton.store[key];\n          this.singleton.store = store;\n          break;\n        case \"model\":\n          for (let key in this.definitions.type)\n            store[joinKey(word, key)] = this.definitions.type[key];\n          this.definitions.type = store;\n          break;\n        case \"error\":\n          for (let key in this.definitions.error)\n            store[joinKey(word, key)] = this.definitions.error[key];\n          this.definitions.error = store;\n          break;\n      }\n    }, types = Array.isArray(type) ? type : [type];\n    for (let type2 of types.some((x) => x === \"all\") ? [\"decorator\", \"state\", \"model\", \"error\"] : types)\n      remap(type2);\n    return this;\n  }\n  prefix(type, word) {\n    return this.affix(\"prefix\", type, word);\n  }\n  suffix(type, word) {\n    return this.affix(\"suffix\", type, word);\n  }\n  compile() {\n    return this[\"~adapter\"].isWebStandard ? (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this), typeof this.server?.reload == \"function\" && this.server.reload({\n      ...this.server || {},\n      fetch: this.fetch\n    }), this) : (typeof this.server?.reload == \"function\" && this.server.reload(this.server || {}), this._handle = composeGeneralHandler(this), this);\n  }\n  /**\n   * Wait until all lazy loaded modules all load is fully\n   */\n  get modules() {\n    return this.promisedModules;\n  }\n}, Elysia = _Elysia;\nexport {\n  Cookie,\n  ELYSIA_FORM_DATA,\n  ELYSIA_REQUEST_ID,\n  ELYSIA_TRACE,\n  ERROR_CODE,\n  Elysia,\n  ElysiaCustomStatusResponse,\n  ElysiaFile,\n  InternalServerError,\n  InvalidCookieSignature,\n  InvertedStatusMap,\n  NotFoundError,\n  ParseError,\n  StatusMap,\n  TypeSystemPolicy2 as TypeSystemPolicy,\n  ValidationError,\n  checksum,\n  cloneInference,\n  deduplicateChecksum,\n  Elysia as default,\n  env2 as env,\n  error,\n  file,\n  form,\n  getResponseSchemaValidator,\n  getSchemaValidator,\n  mapValueError,\n  mergeHook,\n  mergeObjectArray,\n  redirect,\n  replaceSchemaType,\n  replaceUrlPath,\n  serializeCookie,\n  sse,\n  status,\n  t,\n  validationDetail\n};\n/**\n * @license\n *\n * MIT License\n *\n * Copyright (c) 2020 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n", "import { Clone } from './value.mjs';\n/** Clones a Rest */\nexport function CloneRest(schemas) {\n    return schemas.map((schema) => CloneType(schema));\n}\n/** Clones a Type */\nexport function CloneType(schema, options) {\n    return options === undefined ? Clone(schema) : Clone({ ...options, ...schema });\n}\n", "import * as ValueGuard from '../guard/value.mjs';\nfunction ArrayType(value) {\n    return value.map((value) => Visit(value));\n}\nfunction DateType(value) {\n    return new Date(value.getTime());\n}\nfunction Uint8ArrayType(value) {\n    return new Uint8Array(value);\n}\nfunction RegExpType(value) {\n    return new RegExp(value.source, value.flags);\n}\nfunction ObjectType(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Visit(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Visit(value[key]);\n    }\n    return result;\n}\n// prettier-ignore\nfunction Visit(value) {\n    return (ValueGuard.IsArray(value) ? ArrayType(value) :\n        ValueGuard.IsDate(value) ? DateType(value) :\n            ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                ValueGuard.IsRegExp(value) ? RegExpType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n}\n/** Clones a value */\nexport function Clone(value) {\n    return Visit(value);\n}\n", "// --------------------------------------------------------------------------\n// PropertyKey\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n    return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n    return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Immutable } from './immutable.mjs';\nimport { Clone } from '../clone/value.mjs';\n/** Creates TypeBox schematics using the configured InstanceMode */\nexport function CreateType(schema, options) {\n    const result = options !== undefined ? { ...options, ...schema } : schema;\n    switch (TypeSystemPolicy.InstanceMode) {\n        case 'freeze':\n            return Immutable(result);\n        case 'clone':\n            return Clone(result);\n        default:\n            return result;\n    }\n}\n", "import { IsObject, IsArray, IsNumber, IsUndefined } from '../value/guard/index.mjs';\nexport var TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy: Instancing\n    // ------------------------------------------------------------------\n    /**\n     * Configures the instantiation behavior of TypeBox types. The `default` option assigns raw JavaScript\n     * references for embedded types, which may cause side effects if type properties are explicitly updated\n     * outside the TypeBox type builder. The `clone` option creates copies of any shared types upon creation,\n     * preventing unintended side effects. The `freeze` option applies `Object.freeze()` to the type, making\n     * it fully readonly and immutable. Implementations should use `default` whenever possible, as it is the\n     * fastest way to instantiate types. The default setting is `default`.\n     */\n    TypeSystemPolicy.InstanceMode = 'default';\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy: Checking\n    // ------------------------------------------------------------------\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Checks this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Checks this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = IsObject(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !IsArray(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Checks this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Checks this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? IsNumber(value) : Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Checks this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = IsUndefined(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (TypeSystemPolicy = {}));\n", "// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && globalThis.Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && globalThis.Symbol.iterator in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is not an instance of a class */\nexport function IsStandardObject(value) {\n    return IsObject(value) && (globalThis.Object.getPrototypeOf(value) === Object.prototype || globalThis.Object.getPrototypeOf(value) === null);\n}\n/** Returns true if this value is an instance of a class */\nexport function IsInstanceObject(value) {\n    return IsObject(value) && !IsArray(value) && IsFunction(value.constructor) && value.constructor.name !== 'Object';\n}\n// --------------------------------------------------------------------------\n// JavaScript\n// --------------------------------------------------------------------------\n/** Returns true if this value is a Promise */\nexport function IsPromise(value) {\n    return value instanceof globalThis.Promise;\n}\n/** Returns true if this value is a Date */\nexport function IsDate(value) {\n    return value instanceof Date && globalThis.Number.isFinite(value.getTime());\n}\n/** Returns true if this value is an instance of Map<K, T> */\nexport function IsMap(value) {\n    return value instanceof globalThis.Map;\n}\n/** Returns true if this value is an instance of Set<T> */\nexport function IsSet(value) {\n    return value instanceof globalThis.Set;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is a typed array */\nexport function IsTypedArray(value) {\n    return globalThis.ArrayBuffer.isView(value);\n}\n/** Returns true if the value is a Int8Array */\nexport function IsInt8Array(value) {\n    return value instanceof globalThis.Int8Array;\n}\n/** Returns true if the value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if the value is a Uint8ClampedArray */\nexport function IsUint8ClampedArray(value) {\n    return value instanceof globalThis.Uint8ClampedArray;\n}\n/** Returns true if the value is a Int16Array */\nexport function IsInt16Array(value) {\n    return value instanceof globalThis.Int16Array;\n}\n/** Returns true if the value is a Uint16Array */\nexport function IsUint16Array(value) {\n    return value instanceof globalThis.Uint16Array;\n}\n/** Returns true if the value is a Int32Array */\nexport function IsInt32Array(value) {\n    return value instanceof globalThis.Int32Array;\n}\n/** Returns true if the value is a Uint32Array */\nexport function IsUint32Array(value) {\n    return value instanceof globalThis.Uint32Array;\n}\n/** Returns true if the value is a Float32Array */\nexport function IsFloat32Array(value) {\n    return value instanceof globalThis.Float32Array;\n}\n/** Returns true if the value is a Float64Array */\nexport function IsFloat64Array(value) {\n    return value instanceof globalThis.Float64Array;\n}\n/** Returns true if the value is a BigInt64Array */\nexport function IsBigInt64Array(value) {\n    return value instanceof globalThis.BigInt64Array;\n}\n/** Returns true if the value is a BigUint64Array */\nexport function IsBigUint64Array(value) {\n    return value instanceof globalThis.BigUint64Array;\n}\n// --------------------------------------------------------------------------\n// PropertyKey\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true of this value is an object type */\nexport function IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\n/** Returns true if this value is an array, but not a typed array */\nexport function IsArray(value) {\n    return globalThis.Array.isArray(value) && !globalThis.ArrayBuffer.isView(value);\n}\n/** Returns true if this value is an undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n/** Returns true if this value is an null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is an boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is an number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an integer */\nexport function IsInteger(value) {\n    return globalThis.Number.isInteger(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is a symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a value type such as number, string, boolean */\nexport function IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\n", "import * as ValueGuard from '../guard/value.mjs';\nfunction ImmutableArray(value) {\n    return globalThis.Object.freeze(value).map((value) => Immutable(value));\n}\nfunction ImmutableDate(value) {\n    return value;\n}\nfunction ImmutableUint8Array(value) {\n    return value;\n}\nfunction ImmutableRegExp(value) {\n    return value;\n}\nfunction ImmutableObject(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Immutable(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Immutable(value[key]);\n    }\n    return globalThis.Object.freeze(result);\n}\n/** Specialized deep immutable value. Applies freeze recursively to the given value */\n// prettier-ignore\nexport function Immutable(value) {\n    return (ValueGuard.IsArray(value) ? ImmutableArray(value) :\n        ValueGuard.IsDate(value) ? ImmutableDate(value) :\n            ValueGuard.IsUint8Array(value) ? ImmutableUint8Array(value) :\n                ValueGuard.IsRegExp(value) ? ImmutableRegExp(value) :\n                    ValueGuard.IsObject(value) ? ImmutableObject(value) :\n                        value);\n}\n", "/** The base Error type thrown for all TypeBox exceptions  */\nexport class TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n", "export * as KindGuard from './kind.mjs';\nexport * as TypeGuard from './type.mjs';\nexport * as ValueGuard from './value.mjs';\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n/** `[Kind-Only]` Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** `[Kind-Only]` Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n/** `[Kind-Only]` Returns true if the given value is TAny */\nexport function IsAny(value) {\n    return IsKindOf(value, 'Any');\n}\n/** `[Kind-Only]` Returns true if the given value is TArgument */\nexport function IsArgument(value) {\n    return IsKindOf(value, 'Argument');\n}\n/** `[Kind-Only]` Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return IsKindOf(value, 'Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    return IsKindOf(value, 'AsyncIterator');\n}\n/** `[Kind-Only]` Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    return IsKindOf(value, 'BigInt');\n}\n/** `[Kind-Only]` Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    return IsKindOf(value, 'Boolean');\n}\n/** `[Kind-Only]` Returns true if the given value is TComputed */\nexport function IsComputed(value) {\n    return IsKindOf(value, 'Computed');\n}\n/** `[Kind-Only]` Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    return IsKindOf(value, 'Constructor');\n}\n/** `[Kind-Only]` Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return IsKindOf(value, 'Date');\n}\n/** `[Kind-Only]` Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    return IsKindOf(value, 'Function');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsImport(value) {\n    return IsKindOf(value, 'Import');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return IsKindOf(value, 'Integer');\n}\n/** `[Kind-Only]` Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    return ValueGuard.IsObject(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    return IsKindOf(value, 'Intersect');\n}\n/** `[Kind-Only]` Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    return IsKindOf(value, 'Iterator');\n}\n/** `[Kind-Only]` Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    return IsKindOf(value, 'Literal');\n}\n/** `[Kind-Only]` Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    return IsKindOf(value, 'MappedKey');\n}\n/** `[Kind-Only]` Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    return IsKindOf(value, 'MappedResult');\n}\n/** `[Kind-Only]` Returns true if the given value is TNever */\nexport function IsNever(value) {\n    return IsKindOf(value, 'Never');\n}\n/** `[Kind-Only]` Returns true if the given value is TNot */\nexport function IsNot(value) {\n    return IsKindOf(value, 'Not');\n}\n/** `[Kind-Only]` Returns true if the given value is TNull */\nexport function IsNull(value) {\n    return IsKindOf(value, 'Null');\n}\n/** `[Kind-Only]` Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return IsKindOf(value, 'Number');\n}\n/** `[Kind-Only]` Returns true if the given value is TObject */\nexport function IsObject(value) {\n    return IsKindOf(value, 'Object');\n}\n/** `[Kind-Only]` Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    return IsKindOf(value, 'Promise');\n}\n/** `[Kind-Only]` Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    return IsKindOf(value, 'Record');\n}\n/** `[Kind-Only]` Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** `[Kind-Only]` Returns true if the given value is TRef */\nexport function IsRef(value) {\n    return IsKindOf(value, 'Ref');\n}\n/** `[Kind-Only]` Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    return IsKindOf(value, 'RegExp');\n}\n/** `[Kind-Only]` Returns true if the given value is TString */\nexport function IsString(value) {\n    return IsKindOf(value, 'String');\n}\n/** `[Kind-Only]` Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    return IsKindOf(value, 'Symbol');\n}\n/** `[Kind-Only]` Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    return IsKindOf(value, 'TemplateLiteral');\n}\n/** `[Kind-Only]` Returns true if the given value is TThis */\nexport function IsThis(value) {\n    return IsKindOf(value, 'This');\n}\n/** `[Kind-Only]` Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** `[Kind-Only]` Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    return IsKindOf(value, 'Tuple');\n}\n/** `[Kind-Only]` Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    return IsKindOf(value, 'Undefined');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    return IsKindOf(value, 'Union');\n}\n/** `[Kind-Only]` Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    return IsKindOf(value, 'Uint8Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    return IsKindOf(value, 'Unknown');\n}\n/** `[Kind-Only]` Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** `[Kind-Only]` Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    return IsKindOf(value, 'Void');\n}\n/** `[Kind-Only]` Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]);\n}\n/** `[Kind-Only]` Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (IsAny(value) ||\n        IsArgument(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsComputed(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "/** Symbol key applied to transform types */\nexport const TransformKind = Symbol.for('TypeBox.Transform');\n/** Symbol key applied to readonly types */\nexport const ReadonlyKind = Symbol.for('TypeBox.Readonly');\n/** Symbol key applied to optional types */\nexport const OptionalKind = Symbol.for('TypeBox.Optional');\n/** Symbol key applied to types */\nexport const Hint = Symbol.for('TypeBox.Hint');\n/** Symbol key applied to types */\nexport const Kind = Symbol.for('TypeBox.Kind');\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nexport class TypeGuardUnknownTypeError extends TypeBoxError {\n}\nconst KnownTypes = [\n    'Argument',\n    'Any',\n    'Array',\n    'AsyncIterator',\n    'BigInt',\n    'Boolean',\n    'Computed',\n    'Constructor',\n    'Date',\n    'Enum',\n    'Function',\n    'Integer',\n    'Intersect',\n    'Iterator',\n    'Literal',\n    'MappedKey',\n    'MappedResult',\n    'Not',\n    'Null',\n    'Number',\n    'Object',\n    'Promise',\n    'Record',\n    'Ref',\n    'RegExp',\n    'String',\n    'Symbol',\n    'TemplateLiteral',\n    'This',\n    'Tuple',\n    'Undefined',\n    'Union',\n    'Uint8Array',\n    'Unknown',\n    'Void',\n];\nfunction IsPattern(value) {\n    try {\n        new RegExp(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction IsControlCharacterFree(value) {\n    if (!ValueGuard.IsString(value))\n        return false;\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction IsAdditionalProperties(value) {\n    return IsOptionalBoolean(value) || IsSchema(value);\n}\nfunction IsOptionalBigInt(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n}\nfunction IsOptionalNumber(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n}\nfunction IsOptionalBoolean(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n}\nfunction IsOptionalString(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n}\nfunction IsOptionalPattern(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n}\nfunction IsOptionalFormat(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n}\nfunction IsOptionalSchema(value) {\n    return ValueGuard.IsUndefined(value) || IsSchema(value);\n}\n// ------------------------------------------------------------------\n// Modifiers\n// ------------------------------------------------------------------\n/** Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\n/** Returns true if the given value is TAny */\nexport function IsAny(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Any') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TArgument */\nexport function IsArgument(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Argument') &&\n        ValueGuard.IsNumber(value.index));\n}\n/** Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return (IsKindOf(value, 'Array') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items) &&\n        IsOptionalNumber(value.minItems) &&\n        IsOptionalNumber(value.maxItems) &&\n        IsOptionalBoolean(value.uniqueItems) &&\n        IsOptionalSchema(value.contains) &&\n        IsOptionalNumber(value.minContains) &&\n        IsOptionalNumber(value.maxContains));\n}\n/** Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'AsyncIterator') &&\n        value.type === 'AsyncIterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'BigInt') &&\n        value.type === 'bigint' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalBigInt(value.exclusiveMaximum) &&\n        IsOptionalBigInt(value.exclusiveMinimum) &&\n        IsOptionalBigInt(value.maximum) &&\n        IsOptionalBigInt(value.minimum) &&\n        IsOptionalBigInt(value.multipleOf));\n}\n/** Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Boolean') &&\n        value.type === 'boolean' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TComputed */\nexport function IsComputed(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Computed') &&\n        ValueGuard.IsString(value.target) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every((schema) => IsSchema(schema)));\n}\n/** Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Constructor') &&\n        value.type === 'Constructor' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return (IsKindOf(value, 'Date') &&\n        value.type === 'Date' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximumTimestamp) &&\n        IsOptionalNumber(value.exclusiveMinimumTimestamp) &&\n        IsOptionalNumber(value.maximumTimestamp) &&\n        IsOptionalNumber(value.minimumTimestamp) &&\n        IsOptionalNumber(value.multipleOfTimestamp));\n}\n/** Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Function') &&\n        value.type === 'Function' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TImport */\nexport function IsImport(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Import') &&\n        ValueGuard.HasPropertyKey(value, '$defs') &&\n        ValueGuard.IsObject(value.$defs) &&\n        IsProperties(value.$defs) &&\n        ValueGuard.HasPropertyKey(value, '$ref') &&\n        ValueGuard.IsString(value.$ref) &&\n        value.$ref in value.$defs // required\n    );\n}\n/** Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return (IsKindOf(value, 'Integer') &&\n        value.type === 'integer' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value) &&\n        Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema(schema)));\n}\n/** Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Intersect') &&\n        (ValueGuard.IsString(value.type) && value.type !== 'object' ? false : true) &&\n        ValueGuard.IsArray(value.allOf) &&\n        value.allOf.every(schema => IsSchema(schema) && !IsTransform(schema)) &&\n        IsOptionalString(value.type) &&\n        (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Iterator') &&\n        value.type === 'Iterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Literal') &&\n        IsOptionalString(value.$id) && IsLiteralValue(value.const));\n}\n/** Returns true if the given value is a TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedKey') &&\n        ValueGuard.IsArray(value.keys) &&\n        value.keys.every(key => ValueGuard.IsNumber(key) || ValueGuard.IsString(key)));\n}\n/** Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedResult') &&\n        IsProperties(value.properties));\n}\n/** Returns true if the given value is TNever */\nexport function IsNever(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Never') &&\n        ValueGuard.IsObject(value.not) &&\n        Object.getOwnPropertyNames(value.not).length === 0);\n}\n/** Returns true if the given value is TNot */\nexport function IsNot(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Not') &&\n        IsSchema(value.not));\n}\n/** Returns true if the given value is TNull */\nexport function IsNull(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Null') &&\n        value.type === 'null' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return (IsKindOf(value, 'Number') &&\n        value.type === 'number' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given value is TObject */\nexport function IsObject(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Object') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsProperties(value.properties) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        IsOptionalNumber(value.minProperties) &&\n        IsOptionalNumber(value.maxProperties));\n}\n/** Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Promise') &&\n        value.type === 'Promise' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.item));\n}\n/** Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Record') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        ValueGuard.IsObject(value.patternProperties) &&\n        ((schema) => {\n            const keys = Object.getOwnPropertyNames(schema.patternProperties);\n            return (keys.length === 1 &&\n                IsPattern(keys[0]) &&\n                ValueGuard.IsObject(schema.patternProperties) &&\n                IsSchema(schema.patternProperties[keys[0]]));\n        })(value));\n}\n/** Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** Returns true if the given value is TRef */\nexport function IsRef(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Ref') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'RegExp') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.source) &&\n        ValueGuard.IsString(value.flags) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalNumber(value.minLength));\n}\n/** Returns true if the given value is TString */\nexport function IsString(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'String') &&\n        value.type === 'string' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minLength) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalPattern(value.pattern) &&\n        IsOptionalFormat(value.format));\n}\n/** Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Symbol') &&\n        value.type === 'symbol' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'TemplateLiteral') &&\n        value.type === 'string' &&\n        ValueGuard.IsString(value.pattern) &&\n        value.pattern[0] === '^' &&\n        value.pattern[value.pattern.length - 1] === '$');\n}\n/** Returns true if the given value is TThis */\nexport function IsThis(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'This') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Tuple') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsNumber(value.minItems) &&\n        ValueGuard.IsNumber(value.maxItems) &&\n        value.minItems === value.maxItems &&\n        (( // empty\n        ValueGuard.IsUndefined(value.items) &&\n            ValueGuard.IsUndefined(value.additionalItems) &&\n            value.minItems === 0) || (ValueGuard.IsArray(value.items) &&\n            value.items.every(schema => IsSchema(schema)))));\n}\n/** Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Undefined') &&\n        value.type === 'undefined' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TUnion<Literal<string | number>[]> */\nexport function IsUnionLiteral(value) {\n    return IsUnion(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));\n}\n/** Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Union') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsObject(value) &&\n        ValueGuard.IsArray(value.anyOf) &&\n        value.anyOf.every(schema => IsSchema(schema)));\n}\n/** Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Uint8Array') &&\n        value.type === 'Uint8Array' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minByteLength) &&\n        IsOptionalNumber(value.maxByteLength));\n}\n/** Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Unknown') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Void') &&\n        value.type === 'void' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]) && !KnownTypes.includes(value[Kind]);\n}\n/** Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value)) && (IsAny(value) ||\n        IsArgument(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsComputed(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "export const PatternBoolean = '(true|false)';\nexport const PatternNumber = '(0|[1-9][0-9]*)';\nexport const PatternString = '(.*)';\nexport const PatternNever = '(?!.*)';\nexport const PatternBooleanExact = `^${PatternBoolean}$`;\nexport const PatternNumberExact = `^${PatternNumber}$`;\nexport const PatternStringExact = `^${PatternString}$`;\nexport const PatternNeverExact = `^${PatternNever}$`;\n", "export * as FormatRegistry from './format.mjs';\nexport * as TypeRegistry from './type.mjs';\n", "/** A registry for user defined string formats */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined string formats */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered format */\nexport function Delete(format) {\n    return map.delete(format);\n}\n/** Returns true if the user defined string format exists */\nexport function Has(format) {\n    return map.has(format);\n}\n/** Sets a validation function for a user defined string format */\nexport function Set(format, func) {\n    map.set(format, func);\n}\n/** Gets a validation function for a user defined string format */\nexport function Get(format) {\n    return map.get(format);\n}\n", "/** A registry for user defined types */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined types */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered type */\nexport function Delete(kind) {\n    return map.delete(kind);\n}\n/** Returns true if this registry contains this kind */\nexport function Has(kind) {\n    return map.has(kind);\n}\n/** Sets a validation function for a user defined type */\nexport function Set(kind, func) {\n    map.set(kind, func);\n}\n/** Gets a custom validation function for a user defined type */\nexport function Get(kind) {\n    return map.get(kind);\n}\n", "/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n    return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n    return T.every((L) => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n    return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n    return T.filter((L) => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n    return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n    return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n    return T.reduce((Acc, L) => {\n        return SetIntersect(Acc, L);\n    }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n    return (T.length === 1\n        ? T[0]\n        // Use left to initialize the accumulator for resolve\n        : T.length > 1\n            ? SetIntersectManyResolve(T.slice(1), T[0])\n            : []);\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...L);\n    return Acc;\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Any type */\nexport function Any(options) {\n    return CreateType({ [Kind]: 'Any' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Array type */\nexport function Array(items, options) {\n    return CreateType({ [Kind]: 'Array', type: 'array', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Argument Type. */\nexport function Argument(index) {\n    return CreateType({ [Kind]: 'Argument', index });\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\n/** `[JavaScript]` Creates a AsyncIterator type */\nexport function AsyncIterator(items, options) {\n    return CreateType({ [Kind]: 'AsyncIterator', type: 'AsyncIterator', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsPromise, IsRef, IsComputed } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Awaited', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Awaited', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromIntersect(types) {\n    return Intersect(FromRest(types));\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    return Union(FromRest(types));\n}\n// prettier-ignore\nfunction FromPromise(type) {\n    return Awaited(type);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => Awaited(type));\n}\n/** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\nexport function Awaited(type, options) {\n    return CreateType(IsComputed(type) ? FromComputed(type.target, type.parameters) : IsIntersect(type) ? FromIntersect(type.allOf) : IsUnion(type) ? FromUnion(type.anyOf) : IsPromise(type) ? FromPromise(type.item) : IsRef(type) ? FromRef(type.$ref) : type, options);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/symbols.mjs';\n/** `[Internal]` Creates a deferred computed type. This type is used exclusively in modules to defer resolution of computable types that contain interior references  */\nexport function Computed(target, parameters, options) {\n    return CreateType({ [Kind]: 'Computed', target, parameters }, options);\n}\n", "import { OptionalKind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsTransform } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsIntersectOptional(types) {\n    return types.every(left => IsOptional(left));\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(type) {\n    return (Discard(type, [OptionalKind]));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(types) {\n    return types.map(left => IsOptional(left) ? RemoveOptionalFromType(left) : left);\n}\n// prettier-ignore\nfunction ResolveIntersect(types, options) {\n    return (IsIntersectOptional(types)\n        ? Optional(IntersectCreate(RemoveOptionalFromRest(types), options))\n        : IntersectCreate(RemoveOptionalFromRest(types), options));\n}\n/** `[Json]` Creates an evaluated Intersect type */\nexport function IntersectEvaluated(types, options = {}) {\n    if (types.length === 1)\n        return CreateType(types[0], options);\n    if (types.length === 0)\n        return Never(options);\n    if (types.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return ResolveIntersect(types, options);\n}\n", "function DiscardKey(value, key) {\n    const { [key]: _, ...rest } = value;\n    return rest;\n}\n/** Discards property keys from the given value. This function returns a shallow Clone. */\nexport function Discard(value, keys) {\n    return keys.reduce((acc, key) => DiscardKey(acc, key), value);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Never type */\nexport function Never(options) {\n    return CreateType({ [Kind]: 'Never', not: {} }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Optional } from './optional.mjs';\n// prettier-ignore\nfunction FromProperties(P, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Optional(P[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function OptionalFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedResult(properties) {\n    return CreateType({\n        [Kind]: 'MappedResult',\n        properties\n    });\n}\n", "import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n    return (K in P\n        ? FromSchemaType(K, P[K])\n        : MappedResult(P));\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n    return { [K]: Literal(K) };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n    const Acc = {};\n    for (const L of P)\n        Acc[L] = Literal(L);\n    return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n    return (SetIncludes(P, K)\n        ? MappedKeyToKnownMappedResultProperties(K)\n        : MappedKeyToUnknownMappedResultProperties(P));\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n    const R = MappedKeyToMappedResultProperties(K, P);\n    return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n    return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K2] = FromSchemaType(K, T[K2]);\n    return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n    // required to retain user defined options for mapped type\n    const options = { ...T };\n    return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) :\n        IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n            // unevaluated mapped types\n            IsMappedResult(T) ? FromMappedResult(K, T.properties) :\n                IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n                    // unevaluated types\n                    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns), options) :\n                        IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns), options) :\n                            IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items), options) :\n                                IsIterator(T) ? Iterator(FromSchemaType(K, T.items), options) :\n                                    IsIntersect(T) ? Intersect(FromRest(K, T.allOf), options) :\n                                        IsUnion(T) ? Union(FromRest(K, T.anyOf), options) :\n                                            IsTuple(T) ? Tuple(FromRest(K, T.items ?? []), options) :\n                                                IsObject(T) ? Object(FromProperties(K, T.properties), options) :\n                                                    IsArray(T) ? Array(FromSchemaType(K, T.items), options) :\n                                                        IsPromise(T) ? Promise(FromSchemaType(K, T.item), options) :\n                                                            T);\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n    const Acc = {};\n    for (const L of K)\n        Acc[L] = FromSchemaType(L, T);\n    return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options) {\n    const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const RT = map({ [Kind]: 'MappedKey', keys: K });\n    const R = MappedFunctionReturnType(K, RT);\n    return Object(R, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Constructor type */\nexport function Constructor(parameters, returns, options) {\n    return CreateType({ [Kind]: 'Constructor', type: 'Constructor', parameters, returns }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Function type */\nexport function Function(parameters, returns, options) {\n    return CreateType({ [Kind]: 'Function', type: 'Function', parameters, returns }, options);\n}\n", "import { Index } from './indexed.mjs';\nimport { MappedResult } from '../mapped/index.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction MappedIndexPropertyKey(type, key, options) {\n    return { [key]: Index(type, [key], Clone(options)) };\n}\n// prettier-ignore\nfunction MappedIndexPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((result, left) => {\n        return { ...result, ...MappedIndexPropertyKey(type, left, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIndexProperties(type, mappedKey, options) {\n    return MappedIndexPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function IndexFromMappedKey(type, mappedKey, options) {\n    const properties = MappedIndexProperties(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion, IsRef } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(types, key) {\n    return types.map(type => IndexFromPropertyKey(type, key));\n}\n// prettier-ignore\nfunction FromIntersectRest(types) {\n    return types.filter(type => !IsNever(type));\n}\n// prettier-ignore\nfunction FromIntersect(types, key) {\n    return (IntersectEvaluated(FromIntersectRest(FromRest(types, key))));\n}\n// prettier-ignore\nfunction FromUnionRest(types) {\n    return (types.some(L => IsNever(L))\n        ? []\n        : types);\n}\n// prettier-ignore\nfunction FromUnion(types, key) {\n    return (UnionEvaluated(FromUnionRest(FromRest(types, key))));\n}\n// prettier-ignore\nfunction FromTuple(types, key) {\n    return (key in types ? types[key] :\n        key === '[number]' ? UnionEvaluated(types) :\n            Never());\n}\n// prettier-ignore\nfunction FromArray(type, key) {\n    return (key === '[number]'\n        ? type\n        : Never());\n}\n// prettier-ignore\nfunction FromProperty(properties, propertyKey) {\n    return (propertyKey in properties ? properties[propertyKey] : Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(type, propertyKey) {\n    return (IsIntersect(type) ? FromIntersect(type.allOf, propertyKey) :\n        IsUnion(type) ? FromUnion(type.anyOf, propertyKey) :\n            IsTuple(type) ? FromTuple(type.items ?? [], propertyKey) :\n                IsArray(type) ? FromArray(type.items, propertyKey) :\n                    IsObject(type) ? FromProperty(type.properties, propertyKey) :\n                        Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(type, propertyKeys) {\n    return propertyKeys.map(propertyKey => IndexFromPropertyKey(type, propertyKey));\n}\n// prettier-ignore\nfunction FromSchema(type, propertyKeys) {\n    return (UnionEvaluated(IndexFromPropertyKeys(type, propertyKeys)));\n}\n// prettier-ignore\nexport function IndexFromComputed(type, key) {\n    return Computed('Index', [type, key]);\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(type, key, options) {\n    // computed-type\n    if (IsRef(type) || IsRef(key)) {\n        const error = `Index types using Ref parameters require both Type and Key to be of TSchema`;\n        if (!IsSchema(type) || !IsSchema(key))\n            throw new TypeBoxError(error);\n        return Computed('Index', [type, key]);\n    }\n    // mapped-types\n    if (IsMappedResult(key))\n        return IndexFromMappedResult(type, key, options);\n    if (IsMappedKey(key))\n        return IndexFromMappedKey(type, key, options);\n    // prettier-ignore\n    return CreateType(IsSchema(key)\n        ? FromSchema(type, IndexPropertyKeys(key))\n        : FromSchema(type, key), options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { OptionalKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(types) {\n    return types.some(type => IsOptional(type));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(types) {\n    return types.map(left => IsOptional(left) ? RemoveOptionalFromType(left) : left);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction ResolveUnion(types, options) {\n    const isOptional = IsUnionOptional(types);\n    return (isOptional\n        ? Optional(UnionCreate(RemoveOptionalFromRest(types), options))\n        : UnionCreate(RemoveOptionalFromRest(types), options));\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options) {\n    // prettier-ignore\n    return (T.length === 1 ? CreateType(T[0], options) :\n        T.length === 0 ? Never(options) :\n            ResolveUnion(T, options));\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\nexport function UnionCreate(T, options) {\n    return CreateType({ [Kind]: 'Union', anyOf: T }, options);\n}\n", "import { Never } from '../never/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { UnionCreate } from './union-create.mjs';\n/** `[Json]` Creates a Union type */\nexport function Union(types, options) {\n    // prettier-ignore\n    return (types.length === 0 ? Never(options) :\n        types.length === 1 ? CreateType(types[0], options) :\n            UnionCreate(types, options));\n}\n", "import { TemplateLiteralGenerate } from '../template-literal/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsLiteral, IsNumber, IsInteger } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromTemplateLiteral(templateLiteral) {\n    const keys = TemplateLiteralGenerate(templateLiteral);\n    return keys.map(key => key.toString());\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    const result = [];\n    for (const type of types)\n        result.push(...IndexPropertyKeys(type));\n    return result;\n}\n// prettier-ignore\nfunction FromLiteral(literalValue) {\n    return ([literalValue.toString()] // TS 5.4 observes TLiteralValue as not having a toString()\n    );\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema */\n// prettier-ignore\nexport function IndexPropertyKeys(type) {\n    return [...new Set((IsTemplateLiteral(type) ? FromTemplateLiteral(type) :\n            IsUnion(type) ? FromUnion(type.anyOf) :\n                IsLiteral(type) ? FromLiteral(type.const) :\n                    IsNumber(type) ? ['[number]'] :\n                        IsInteger(type) ? ['[number]'] :\n                            []))];\n}\n", "import { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralFiniteError\n// ------------------------------------------------------------------\nexport class TemplateLiteralFiniteError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralFiniteCheck\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsNumberExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === '0' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === '[1-9][0-9]*');\n}\n// prettier-ignore\nfunction IsBooleanExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === 'true' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === 'false');\n}\n// prettier-ignore\nfunction IsStringExpression(expression) {\n    return expression.type === 'const' && expression.const === '.*';\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralExpressionFinite\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IsTemplateLiteralExpressionFinite(expression) {\n    return (IsNumberExpression(expression) || IsStringExpression(expression) ? false :\n        IsBooleanExpression(expression) ? true :\n            (expression.type === 'and') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                (expression.type === 'or') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                    (expression.type === 'const') ? true :\n                        (() => { throw new TemplateLiteralFiniteError(`Unknown expression type`); })());\n}\n/** Returns true if this TemplateLiteral resolves to a finite set of values */\nexport function IsTemplateLiteralFinite(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    return IsTemplateLiteralExpressionFinite(expression);\n}\n", "import { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralParserError\n// ------------------------------------------------------------------\nexport class TemplateLiteralParserError extends TypeBoxError {\n}\n// -------------------------------------------------------------------\n// Unescape\n//\n// Unescape for these control characters specifically. Note that this\n// function is only called on non union group content, and where we\n// still want to allow the user to embed control characters in that\n// content. For review.\n// -------------------------------------------------------------------\n// prettier-ignore\nfunction Unescape(pattern) {\n    return pattern\n        .replace(/\\\\\\$/g, '$')\n        .replace(/\\\\\\*/g, '*')\n        .replace(/\\\\\\^/g, '^')\n        .replace(/\\\\\\|/g, '|')\n        .replace(/\\\\\\(/g, '(')\n        .replace(/\\\\\\)/g, ')');\n}\n// -------------------------------------------------------------------\n// Control Characters\n// -------------------------------------------------------------------\nfunction IsNonEscaped(pattern, index, char) {\n    return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n}\nfunction IsOpenParen(pattern, index) {\n    return IsNonEscaped(pattern, index, '(');\n}\nfunction IsCloseParen(pattern, index) {\n    return IsNonEscaped(pattern, index, ')');\n}\nfunction IsSeparator(pattern, index) {\n    return IsNonEscaped(pattern, index, '|');\n}\n// -------------------------------------------------------------------\n// Control Groups\n// -------------------------------------------------------------------\nfunction IsGroup(pattern) {\n    if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n        return false;\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (count === 0 && index !== pattern.length - 1)\n            return false;\n    }\n    return true;\n}\n// prettier-ignore\nfunction InGroup(pattern) {\n    return pattern.slice(1, pattern.length - 1);\n}\n// prettier-ignore\nfunction IsPrecedenceOr(pattern) {\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0)\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction IsPrecedenceAnd(pattern) {\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction Or(pattern) {\n    let [count, start] = [0, 0];\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0) {\n            const range = pattern.slice(start, index);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            start = index + 1;\n        }\n    }\n    const range = pattern.slice(start);\n    if (range.length > 0)\n        expressions.push(TemplateLiteralParse(range));\n    if (expressions.length === 0)\n        return { type: 'const', const: '' };\n    if (expressions.length === 1)\n        return expressions[0];\n    return { type: 'or', expr: expressions };\n}\n// prettier-ignore\nfunction And(pattern) {\n    function Group(value, index) {\n        if (!IsOpenParen(value, index))\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n        let count = 0;\n        for (let scan = index; scan < value.length; scan++) {\n            if (IsOpenParen(value, scan))\n                count += 1;\n            if (IsCloseParen(value, scan))\n                count -= 1;\n            if (count === 0)\n                return [index, scan];\n        }\n        throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n    }\n    function Range(pattern, index) {\n        for (let scan = index; scan < pattern.length; scan++) {\n            if (IsOpenParen(pattern, scan))\n                return [index, scan];\n        }\n        return [index, pattern.length];\n    }\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index)) {\n            const [start, end] = Group(pattern, index);\n            const range = pattern.slice(start, end + 1);\n            expressions.push(TemplateLiteralParse(range));\n            index = end;\n        }\n        else {\n            const [start, end] = Range(pattern, index);\n            const range = pattern.slice(start, end);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            index = end - 1;\n        }\n    }\n    return ((expressions.length === 0) ? { type: 'const', const: '' } :\n        (expressions.length === 1) ? expressions[0] :\n            { type: 'and', expr: expressions });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParse\n// ------------------------------------------------------------------\n/** Parses a pattern and returns an expression tree */\nexport function TemplateLiteralParse(pattern) {\n    // prettier-ignore\n    return (IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) :\n        IsPrecedenceOr(pattern) ? Or(pattern) :\n            IsPrecedenceAnd(pattern) ? And(pattern) :\n                { type: 'const', const: Unescape(pattern) });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParseExact\n// ------------------------------------------------------------------\n/** Parses a pattern and strips forward and trailing ^ and $ */\nexport function TemplateLiteralParseExact(pattern) {\n    return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));\n}\n", "import { IsTemplateLiteralExpressionFinite } from './finite.mjs';\nimport { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralGenerateError\n// ------------------------------------------------------------------\nexport class TemplateLiteralGenerateError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralExpressionGenerate\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* GenerateReduce(buffer) {\n    if (buffer.length === 1)\n        return yield* buffer[0];\n    for (const left of buffer[0]) {\n        for (const right of GenerateReduce(buffer.slice(1))) {\n            yield `${left}${right}`;\n        }\n    }\n}\n// prettier-ignore\nfunction* GenerateAnd(expression) {\n    return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));\n}\n// prettier-ignore\nfunction* GenerateOr(expression) {\n    for (const expr of expression.expr)\n        yield* TemplateLiteralExpressionGenerate(expr);\n}\n// prettier-ignore\nfunction* GenerateConst(expression) {\n    return yield expression.const;\n}\nexport function* TemplateLiteralExpressionGenerate(expression) {\n    return expression.type === 'and'\n        ? yield* GenerateAnd(expression)\n        : expression.type === 'or'\n            ? yield* GenerateOr(expression)\n            : expression.type === 'const'\n                ? yield* GenerateConst(expression)\n                : (() => {\n                    throw new TemplateLiteralGenerateError('Unknown expression');\n                })();\n}\n/** Generates a tuple of strings from the given TemplateLiteral. Returns an empty tuple if infinite. */\nexport function TemplateLiteralGenerate(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    // prettier-ignore\n    return (IsTemplateLiteralExpressionFinite(expression)\n        ? [...TemplateLiteralExpressionGenerate(expression)]\n        : []);\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\n// ------------------------------------------------------------------\n// SyntaxParsers\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* FromUnion(syntax) {\n    const trim = syntax.trim().replace(/\"|'/g, '');\n    return (trim === 'boolean' ? yield Boolean() :\n        trim === 'number' ? yield Number() :\n            trim === 'bigint' ? yield BigInt() :\n                trim === 'string' ? yield String() :\n                    yield (() => {\n                        const literals = trim.split('|').map((literal) => Literal(literal.trim()));\n                        return (literals.length === 0 ? Never() :\n                            literals.length === 1 ? literals[0] :\n                                UnionEvaluated(literals));\n                    })());\n}\n// prettier-ignore\nfunction* FromTerminal(syntax) {\n    if (syntax[1] !== '{') {\n        const L = Literal('$');\n        const R = FromSyntax(syntax.slice(1));\n        return yield* [L, ...R];\n    }\n    for (let i = 2; i < syntax.length; i++) {\n        if (syntax[i] === '}') {\n            const L = FromUnion(syntax.slice(2, i));\n            const R = FromSyntax(syntax.slice(i + 1));\n            return yield* [...L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n// prettier-ignore\nfunction* FromSyntax(syntax) {\n    for (let i = 0; i < syntax.length; i++) {\n        if (syntax[i] === '$') {\n            const L = Literal(syntax.slice(0, i));\n            const R = FromTerminal(syntax.slice(i));\n            return yield* [L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n/** Parses TemplateLiteralSyntax and returns a tuple of TemplateLiteralKinds */\nexport function TemplateLiteralSyntax(syntax) {\n    return [...FromSyntax(syntax)];\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Literal type */\nexport function Literal(value, options) {\n    return CreateType({\n        [Kind]: 'Literal',\n        const: value,\n        type: typeof value,\n    }, options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n/** `[Json]` Creates a Boolean type */\nexport function Boolean(options) {\n    return CreateType({ [Kind]: 'Boolean', type: 'boolean' }, options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n/** `[JavaScript]` Creates a BigInt type */\nexport function BigInt(options) {\n    return CreateType({ [Kind]: 'BigInt', type: 'bigint' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Number type */\nexport function Number(options) {\n    return CreateType({ [Kind]: 'Number', type: 'number' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a String type */\nexport function String(options) {\n    return CreateType({ [Kind]: 'String', type: 'string' }, options);\n}\n", "import { PatternNumber, PatternString, PatternBoolean } from '../patterns/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsNumber, IsInteger, IsBigInt, IsString, IsLiteral, IsBoolean } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralPatternError\n// ------------------------------------------------------------------\nexport class TemplateLiteralPatternError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralPattern\n// ------------------------------------------------------------------\nfunction Escape(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n// prettier-ignore\nfunction Visit(schema, acc) {\n    return (IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n        IsUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n            IsNumber(schema) ? `${acc}${PatternNumber}` :\n                IsInteger(schema) ? `${acc}${PatternNumber}` :\n                    IsBigInt(schema) ? `${acc}${PatternNumber}` :\n                        IsString(schema) ? `${acc}${PatternString}` :\n                            IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                IsBoolean(schema) ? `${acc}${PatternBoolean}` :\n                                    (() => { throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`); })());\n}\nexport function TemplateLiteralPattern(kinds) {\n    return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n}\n", "import { UnionEvaluated } from '../union/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { TemplateLiteralGenerate } from './generate.mjs';\n/** Returns a Union from the given TemplateLiteral */\nexport function TemplateLiteralToUnion(schema) {\n    const R = TemplateLiteralGenerate(schema);\n    const L = R.map((S) => Literal(S));\n    return UnionEvaluated(L);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options) {\n    const pattern = IsString(unresolved)\n        ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved))\n        : TemplateLiteralPattern(unresolved);\n    return CreateType({ [Kind]: 'TemplateLiteral', type: 'string', pattern }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { Index } from './index.mjs';\n// prettier-ignore\nfunction FromProperties(type, properties, options) {\n    const result = {};\n    for (const K2 of Object.getOwnPropertyNames(properties)) {\n        result[K2] = Index(type, IndexPropertyKeys(properties[K2]), options);\n    }\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(type, mappedResult, options) {\n    return FromProperties(type, mappedResult.properties, options);\n}\n// prettier-ignore\nexport function IndexFromMappedResult(type, mappedResult, options) {\n    const properties = FromMappedResult(type, mappedResult, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Iterator type */\nexport function Iterator(items, options) {\n    return CreateType({ [Kind]: 'Iterator', type: 'Iterator', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\nfunction RequiredKeys(properties) {\n    const keys = [];\n    for (let key in properties) {\n        if (!IsOptional(properties[key]))\n            keys.push(key);\n    }\n    return keys;\n}\n/** `[Json]` Creates an Object type */\nfunction _Object(properties, options) {\n    const required = RequiredKeys(properties);\n    const schematic = required.length > 0 ? { [Kind]: 'Object', type: 'object', properties, required } : { [Kind]: 'Object', type: 'object', properties };\n    return CreateType(schematic, options);\n}\n/** `[Json]` Creates an Object type */\nexport var Object = _Object;\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Promise type */\nexport function Promise(item, options) {\n    return CreateType({ [Kind]: 'Promise', type: 'Promise', item }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Readonly } from './readonly.mjs';\n// prettier-ignore\nfunction FromProperties(K, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Readonly(K[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function ReadonlyFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { ReadonlyKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { ReadonlyFromMappedResult } from './readonly-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveReadonly(schema) {\n    return CreateType(Discard(schema, [ReadonlyKind]));\n}\nfunction AddReadonly(schema) {\n    return CreateType({ ...schema, [ReadonlyKind]: 'Readonly' });\n}\n// prettier-ignore\nfunction ReadonlyWithFlag(schema, F) {\n    return (F === false\n        ? RemoveReadonly(schema)\n        : AddReadonly(schema));\n}\n/** `[Json]` Creates a Readonly property */\nexport function Readonly(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Tuple type */\nexport function Tuple(types, options) {\n    // prettier-ignore\n    return CreateType(types.length > 0 ?\n        { [Kind]: 'Tuple', type: 'array', items: types, additionalItems: false, minItems: types.length, maxItems: types.length } :\n        { [Kind]: 'Tuple', type: 'array', minItems: types.length, maxItems: types.length }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { OptionalKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { OptionalFromMappedResult } from './optional-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveOptional(schema) {\n    return CreateType(Discard(schema, [OptionalKind]));\n}\nfunction AddOptional(schema) {\n    return CreateType({ ...schema, [OptionalKind]: 'Optional' });\n}\n// prettier-ignore\nfunction OptionalWithFlag(schema, F) {\n    return (F === false\n        ? RemoveOptional(schema)\n        : AddOptional(schema));\n}\n/** `[Json]` Creates a Optional property */\nexport function Optional(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options = {}) {\n    const allObjects = T.every((schema) => IsObject(schema));\n    const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties)\n        ? { unevaluatedProperties: options.unevaluatedProperties }\n        : {};\n    return CreateType((options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects\n        ? { ...clonedUnevaluatedProperties, [Kind]: 'Intersect', type: 'object', allOf: T }\n        : { ...clonedUnevaluatedProperties, [Kind]: 'Intersect', allOf: T }), options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n/** `[Json]` Creates an evaluated Intersect type */\nexport function Intersect(types, options) {\n    if (types.length === 1)\n        return CreateType(types[0], options);\n    if (types.length === 0)\n        return Never(options);\n    if (types.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return IntersectCreate(types, options);\n}\n", "import { TypeBoxError } from '../error/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Ref type. The referenced type must contain a $id */\nexport function Ref(...args) {\n    const [$ref, options] = typeof args[0] === 'string' ? [args[0], args[1]] : [args[0].$id, args[1]];\n    if (typeof $ref !== 'string')\n        throw new TypeBoxError('Ref: $ref must be a string');\n    return CreateType({ [Kind]: 'Ref', $ref }, options);\n}\n", "import { IntersectEvaluated } from '../intersect/index.mjs';\nimport { IndexFromPropertyKeys } from '../indexed/index.mjs';\nimport { KeyOfPropertyKeys } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { SetDistinct } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsNever } from '../guard/kind.mjs';\n// prettier-ignore\nfunction CompositeKeys(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...KeyOfPropertyKeys(L));\n    return SetDistinct(Acc);\n}\n// prettier-ignore\nfunction FilterNever(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction CompositeProperty(T, K) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexFromPropertyKeys(L, [K]));\n    return FilterNever(Acc);\n}\n// prettier-ignore\nfunction CompositeProperties(T, K) {\n    const Acc = {};\n    for (const L of K) {\n        Acc[L] = IntersectEvaluated(CompositeProperty(T, L));\n    }\n    return Acc;\n}\n// prettier-ignore\nexport function Composite(T, options) {\n    const K = CompositeKeys(T);\n    const P = CompositeProperties(T, K);\n    const R = Object(P, options);\n    return R;\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { KeyOf } from './keyof.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = KeyOf(properties[K2], Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, options) {\n    return FromProperties(mappedResult.properties, options);\n}\n// prettier-ignore\nexport function KeyOfFromMappedResult(mappedResult, options) {\n    const properties = FromMappedResult(mappedResult, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { KeyOfFromMappedResult } from './keyof-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsRef, IsComputed } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('KeyOf', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('KeyOf', [Ref($ref)]);\n}\n// prettier-ignore\nfunction KeyOfFromType(type, options) {\n    const propertyKeys = KeyOfPropertyKeys(type);\n    const propertyKeyTypes = KeyOfPropertyKeysToRest(propertyKeys);\n    const result = UnionEvaluated(propertyKeyTypes);\n    return CreateType(result, options);\n}\n// prettier-ignore\nexport function KeyOfPropertyKeysToRest(propertyKeys) {\n    return propertyKeys.map(L => L === '[number]' ? Number() : Literal(L));\n}\n/** `[Json]` Creates a KeyOf type */\nexport function KeyOf(type, options) {\n    return (IsComputed(type) ? FromComputed(type.target, type.parameters) : IsRef(type) ? FromRef(type.$ref) : IsMappedResult(type) ? KeyOfFromMappedResult(type, options) : KeyOfFromType(type, options));\n}\n", "import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(types) {\n    const result = [];\n    for (const L of types)\n        result.push(KeyOfPropertyKeys(L));\n    return result;\n}\n// prettier-ignore\nfunction FromIntersect(types) {\n    const propertyKeysArray = FromRest(types);\n    const propertyKeys = SetUnionMany(propertyKeysArray);\n    return propertyKeys;\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    const propertyKeysArray = FromRest(types);\n    const propertyKeys = SetIntersectMany(propertyKeysArray);\n    return propertyKeys;\n}\n// prettier-ignore\nfunction FromTuple(types) {\n    return types.map((_, indexer) => indexer.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n    return (['[number]']);\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    return (globalThis.Object.getOwnPropertyNames(T));\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n    if (!includePatternProperties)\n        return [];\n    const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n    return patternPropertyKeys.map(key => {\n        return (key[0] === '^' && key[key.length - 1] === '$')\n            ? key.slice(1, key.length - 1)\n            : key;\n    });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(type) {\n    return (IsIntersect(type) ? FromIntersect(type.allOf) :\n        IsUnion(type) ? FromUnion(type.anyOf) :\n            IsTuple(type) ? FromTuple(type.items ?? []) :\n                IsArray(type) ? FromArray(type.items) :\n                    IsObject(type) ? FromProperties(type.properties) :\n                        IsRecord(type) ? FromPatternProperties(type.patternProperties) :\n                            []);\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n    includePatternProperties = true;\n    const keys = KeyOfPropertyKeys(schema);\n    includePatternProperties = false;\n    const pattern = keys.map((key) => `(${key})`);\n    return `^(${pattern.join('|')})$`;\n}\n", "import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n    const keys = KeyOfPropertyKeys(schema);\n    const schemas = IndexFromPropertyKeys(schema, keys);\n    return keys.map((_, index) => [keys[index], schemas[index]]);\n}\n", "import { Any } from '../any/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsNumber, IsBigInt, IsUint8Array, IsDate, IsIterator, IsObject, IsAsyncIterator, IsFunction, IsUndefined, IsNull, IsSymbol, IsBoolean, IsString } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromArray(T) {\n    return T.map(L => FromValue(L, false));\n}\n// prettier-ignore\nfunction FromProperties(value) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(value))\n        Acc[K] = Readonly(FromValue(value[K], false));\n    return Acc;\n}\nfunction ConditionalReadonly(T, root) {\n    return (root === true ? T : Readonly(T));\n}\n// prettier-ignore\nfunction FromValue(value, root) {\n    return (IsAsyncIterator(value) ? ConditionalReadonly(Any(), root) :\n        IsIterator(value) ? ConditionalReadonly(Any(), root) :\n            IsArray(value) ? Readonly(Tuple(FromArray(value))) :\n                IsUint8Array(value) ? Uint8Array() :\n                    IsDate(value) ? Date() :\n                        IsObject(value) ? ConditionalReadonly(Object(FromProperties(value)), root) :\n                            IsFunction(value) ? ConditionalReadonly(FunctionType([], Unknown()), root) :\n                                IsUndefined(value) ? Undefined() :\n                                    IsNull(value) ? Null() :\n                                        IsSymbol(value) ? Symbol() :\n                                            IsBigInt(value) ? BigInt() :\n                                                IsNumber(value) ? Literal(value) :\n                                                    IsBoolean(value) ? Literal(value) :\n                                                        IsString(value) ? Literal(value) :\n                                                            Object({}));\n}\n/** `[JavaScript]` Creates a readonly const type from the given value. */\nexport function Const(T, options) {\n    return CreateType(FromValue(T, true), options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\n/** `[JavaScript]` Creates a Date type */\nexport function Date(options) {\n    return CreateType({ [Kind]: 'Date', type: 'Date' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Null type */\nexport function Null(options) {\n    return CreateType({ [Kind]: 'Null', type: 'null' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Symbol type */\nexport function Symbol(options) {\n    return CreateType({ [Kind]: 'Symbol', type: 'symbol' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Undefined type */\nexport function Undefined(options) {\n    return CreateType({ [Kind]: 'Undefined', type: 'undefined' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Uint8Array type */\nexport function Uint8Array(options) {\n    return CreateType({ [Kind]: 'Uint8Array', type: 'Uint8Array' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Unknown type */\nexport function Unknown(options) {\n    return CreateType({ [Kind]: 'Unknown' }, options);\n}\n", "import { Tuple } from '../tuple/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\nexport function ConstructorParameters(schema, options) {\n    return (KindGuard.IsConstructor(schema) ? Tuple(schema.parameters, options) : Never(options));\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Enum type */\nexport function Enum(item, options) {\n    if (IsUndefined(item))\n        throw new Error('Enum undefined or empty');\n    const values1 = globalThis.Object.getOwnPropertyNames(item)\n        .filter((key) => isNaN(key))\n        .map((key) => item[key]);\n    const values2 = [...new Set(values1)];\n    const anyOf = values2.map((value) => Literal(value));\n    return Union(anyOf, { ...options, [Hint]: 'Enum' });\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Exclude } from './exclude.mjs';\n// prettier-ignore\nfunction FromProperties(P, U) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Exclude(P[K2], U);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExcludeFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { ExcludeFromMappedResult } from './exclude-from-mapped-result.mjs';\nimport { ExcludeFromTemplateLiteral } from './exclude-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExcludeRest(L, R) {\n    const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);\n    return excluded.length === 1 ? excluded[0] : Union(excluded);\n}\n/** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\nexport function Exclude(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CreateType(ExcludeFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CreateType(ExcludeFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CreateType(IsUnion(L) ? ExcludeRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);\n}\n", "import { Any } from '../any/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nimport { PatternNumberExact, PatternStringExact } from '../patterns/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { TypeGuard, ValueGuard } from '../guard/index.mjs';\nexport class ExtendsResolverError extends TypeBoxError {\n}\nexport var ExtendsResult;\n(function (ExtendsResult) {\n    ExtendsResult[ExtendsResult[\"Union\"] = 0] = \"Union\";\n    ExtendsResult[ExtendsResult[\"True\"] = 1] = \"True\";\n    ExtendsResult[ExtendsResult[\"False\"] = 2] = \"False\";\n})(ExtendsResult || (ExtendsResult = {}));\n// ------------------------------------------------------------------\n// IntoBooleanResult\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IntoBooleanResult(result) {\n    return result === ExtendsResult.False ? result : ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Throw\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Throw(message) {\n    throw new ExtendsResolverError(message);\n}\n// ------------------------------------------------------------------\n// StructuralRight\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsStructuralRight(right) {\n    return (TypeGuard.IsNever(right) ||\n        TypeGuard.IsIntersect(right) ||\n        TypeGuard.IsUnion(right) ||\n        TypeGuard.IsUnknown(right) ||\n        TypeGuard.IsAny(right));\n}\n// prettier-ignore\nfunction StructuralRight(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                    TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                        Throw('StructuralRight'));\n}\n// ------------------------------------------------------------------\n// Any\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAnyRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromAny(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        (TypeGuard.IsUnion(right) && right.anyOf.some((schema) => TypeGuard.IsAny(schema) || TypeGuard.IsUnknown(schema))) ? ExtendsResult.True :\n            TypeGuard.IsUnion(right) ? ExtendsResult.Union :\n                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                    TypeGuard.IsAny(right) ? ExtendsResult.True :\n                        ExtendsResult.Union);\n}\n// ------------------------------------------------------------------\n// Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromArrayRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union :\n            TypeGuard.IsNever(left) ? ExtendsResult.True :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromArray(left, right) {\n    return (TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.IsArray(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// AsyncIterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAsyncIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsAsyncIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// BigInt\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBigInt(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBigInt(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Boolean\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBooleanRight(left, right) {\n    return (TypeGuard.IsLiteralBoolean(left) ? ExtendsResult.True :\n        TypeGuard.IsBoolean(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromBoolean(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBoolean(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Constructor\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromConstructor(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsConstructor(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Date\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromDate(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsDate(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Function\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromFunction(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsFunction(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Integer\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntegerRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsNumber(left.const) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromInteger(left, right) {\n    return (TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntersectRight(left, right) {\n    return right.allOf.every((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromIntersect(left, right) {\n    return left.allOf.some((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Iterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// Literal\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromLiteral(left, right) {\n    return (TypeGuard.IsLiteral(right) && right.const === left.const ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Never\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNeverRight(left, right) {\n    return ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromNever(left, right) {\n    return ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Not\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction UnwrapTNot(schema) {\n    let [current, depth] = [schema, 0];\n    while (true) {\n        if (!TypeGuard.IsNot(current))\n            break;\n        current = current.not;\n        depth += 1;\n    }\n    return depth % 2 === 0 ? current : Unknown();\n}\n// prettier-ignore\nfunction FromNot(left, right) {\n    // TypeScript has no concept of negated types, and attempts to correctly check the negated\n    // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n    // the type. Instead we unwrap to either unknown or T and continue evaluating.\n    // prettier-ignore\n    return (TypeGuard.IsNot(left) ? Visit(UnwrapTNot(left), right) :\n        TypeGuard.IsNot(right) ? Visit(left, UnwrapTNot(right)) :\n            Throw('Invalid fallthrough for Not'));\n}\n// ------------------------------------------------------------------\n// Null\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNull(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsNull(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Number\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNumberRight(left, right) {\n    return (TypeGuard.IsLiteralNumber(left) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromNumber(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Object\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsObjectPropertyCount(schema, count) {\n    return Object.getOwnPropertyNames(schema.properties).length === count;\n}\n// prettier-ignore\nfunction IsObjectStringLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectSymbolLike(schema) {\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.IsString(schema.properties.description.anyOf[0]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.IsString(schema.properties.description.anyOf[1]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[0]))));\n}\n// prettier-ignore\nfunction IsObjectNumberLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBooleanLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBigIntLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectDateLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectUint8ArrayLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectFunctionLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectConstructorLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectArrayLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectPromiseLike(schema) {\n    const then = FunctionType([Any()], Any());\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === ExtendsResult.True);\n}\n// ------------------------------------------------------------------\n// Property\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Property(left, right) {\n    return (Visit(left, right) === ExtendsResult.False ? ExtendsResult.False :\n        TypeGuard.IsOptional(left) && !TypeGuard.IsOptional(right) ? ExtendsResult.False :\n            ExtendsResult.True);\n}\n// prettier-ignore\nfunction FromObjectRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union : (TypeGuard.IsNever(left) ||\n            (TypeGuard.IsLiteralString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsLiteralNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsBigInt(left) && IsObjectBigIntLike(right)) ||\n            (TypeGuard.IsString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsInteger(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n            (TypeGuard.IsDate(left) && IsObjectDateLike(right)) ||\n            (TypeGuard.IsConstructor(left) && IsObjectConstructorLike(right)) ||\n            (TypeGuard.IsFunction(left) && IsObjectFunctionLike(right))) ? ExtendsResult.True :\n            (TypeGuard.IsRecord(left) && TypeGuard.IsString(RecordKey(left))) ? (() => {\n                // When expressing a Record with literal key values, the Record is converted into a Object with\n                // the Hint assigned as `Record`. This is used to invert the extends logic.\n                return right[Hint] === 'Record' ? ExtendsResult.True : ExtendsResult.False;\n            })() :\n                (TypeGuard.IsRecord(left) && TypeGuard.IsNumber(RecordKey(left))) ? (() => {\n                    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;\n                })() :\n                    ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromObject(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n            !TypeGuard.IsObject(right) ? ExtendsResult.False :\n                (() => {\n                    for (const key of Object.getOwnPropertyNames(right.properties)) {\n                        if (!(key in left.properties) && !TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.False;\n                        }\n                        if (TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.True;\n                        }\n                        if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {\n                            return ExtendsResult.False;\n                        }\n                    }\n                    return ExtendsResult.True;\n                })());\n}\n// ------------------------------------------------------------------\n// Promise\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPromise(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True :\n            !TypeGuard.IsPromise(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.item, right.item)));\n}\n// ------------------------------------------------------------------\n// Record\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordKey(schema) {\n    return (PatternNumberExact in schema.patternProperties ? Number() :\n        PatternStringExact in schema.patternProperties ? String() :\n            Throw('Unknown record key pattern'));\n}\n// prettier-ignore\nfunction RecordValue(schema) {\n    return (PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] :\n        PatternStringExact in schema.patternProperties ? schema.patternProperties[PatternStringExact] :\n            Throw('Unable to get record value schema'));\n}\n// prettier-ignore\nfunction FromRecordRight(left, right) {\n    const [Key, Value] = [RecordKey(right), RecordValue(right)];\n    return ((TypeGuard.IsLiteralString(left) && TypeGuard.IsNumber(Key) && IntoBooleanResult(Visit(left, Value)) === ExtendsResult.True) ? ExtendsResult.True :\n        TypeGuard.IsUint8Array(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n            TypeGuard.IsString(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                TypeGuard.IsArray(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.IsObject(left) ? (() => {\n                        for (const key of Object.getOwnPropertyNames(left.properties)) {\n                            if (Property(Value, left.properties[key]) === ExtendsResult.False) {\n                                return ExtendsResult.False;\n                            }\n                        }\n                        return ExtendsResult.True;\n                    })() :\n                        ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromRecord(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsRecord(right) ? ExtendsResult.False :\n                Visit(RecordValue(left), RecordValue(right)));\n}\n// ------------------------------------------------------------------\n// RegExp\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromRegExp(left, right) {\n    // Note: RegExp types evaluate as strings, not RegExp objects.\n    // Here we remap either into string and continue evaluating.\n    const L = TypeGuard.IsRegExp(left) ? String() : left;\n    const R = TypeGuard.IsRegExp(right) ? String() : right;\n    return Visit(L, R);\n}\n// ------------------------------------------------------------------\n// String\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromStringRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsString(left.const) ? ExtendsResult.True :\n        TypeGuard.IsString(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromString(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsString(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Symbol\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromSymbol(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsSymbol(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// TemplateLiteral\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromTemplateLiteral(left, right) {\n    // TemplateLiteral types are resolved to either unions for finite expressions or string\n    // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n    // either type and continue evaluating.\n    return (TypeGuard.IsTemplateLiteral(left) ? Visit(TemplateLiteralToUnion(left), right) :\n        TypeGuard.IsTemplateLiteral(right) ? Visit(left, TemplateLiteralToUnion(right)) :\n            Throw('Invalid fallthrough for TemplateLiteral'));\n}\n// ------------------------------------------------------------------\n// Tuple\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsArrayOfTuple(left, right) {\n    return (TypeGuard.IsArray(right) &&\n        left.items !== undefined &&\n        left.items.every((schema) => Visit(schema, right.items) === ExtendsResult.True));\n}\n// prettier-ignore\nfunction FromTupleRight(left, right) {\n    return (TypeGuard.IsNever(left) ? ExtendsResult.True :\n        TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n            TypeGuard.IsAny(left) ? ExtendsResult.Union :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromTuple(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n            TypeGuard.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True :\n                !TypeGuard.IsTuple(right) ? ExtendsResult.False :\n                    (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? ExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? ExtendsResult.True :\n                            left.items.every((schema, index) => Visit(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True :\n                                ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Uint8Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUint8Array(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsUint8Array(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Undefined\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUndefined(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsVoid(right) ? FromVoidRight(left, right) :\n                    TypeGuard.IsUndefined(right) ? ExtendsResult.True :\n                        ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Union\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnionRight(left, right) {\n    return right.anyOf.some((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromUnion(left, right) {\n    return left.anyOf.every((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Unknown\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnknownRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromUnknown(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    TypeGuard.IsArray(right) ? FromArrayRight(left, right) :\n                                        TypeGuard.IsTuple(right) ? FromTupleRight(left, right) :\n                                            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                                                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Void\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromVoidRight(left, right) {\n    return (TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n        TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromVoid(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n            TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                        TypeGuard.IsVoid(right) ? ExtendsResult.True :\n                            ExtendsResult.False);\n}\n// prettier-ignore\nfunction Visit(left, right) {\n    return (\n    // resolvable\n    (TypeGuard.IsTemplateLiteral(left) || TypeGuard.IsTemplateLiteral(right)) ? FromTemplateLiteral(left, right) :\n        (TypeGuard.IsRegExp(left) || TypeGuard.IsRegExp(right)) ? FromRegExp(left, right) :\n            (TypeGuard.IsNot(left) || TypeGuard.IsNot(right)) ? FromNot(left, right) :\n                // standard\n                TypeGuard.IsAny(left) ? FromAny(left, right) :\n                    TypeGuard.IsArray(left) ? FromArray(left, right) :\n                        TypeGuard.IsBigInt(left) ? FromBigInt(left, right) :\n                            TypeGuard.IsBoolean(left) ? FromBoolean(left, right) :\n                                TypeGuard.IsAsyncIterator(left) ? FromAsyncIterator(left, right) :\n                                    TypeGuard.IsConstructor(left) ? FromConstructor(left, right) :\n                                        TypeGuard.IsDate(left) ? FromDate(left, right) :\n                                            TypeGuard.IsFunction(left) ? FromFunction(left, right) :\n                                                TypeGuard.IsInteger(left) ? FromInteger(left, right) :\n                                                    TypeGuard.IsIntersect(left) ? FromIntersect(left, right) :\n                                                        TypeGuard.IsIterator(left) ? FromIterator(left, right) :\n                                                            TypeGuard.IsLiteral(left) ? FromLiteral(left, right) :\n                                                                TypeGuard.IsNever(left) ? FromNever(left, right) :\n                                                                    TypeGuard.IsNull(left) ? FromNull(left, right) :\n                                                                        TypeGuard.IsNumber(left) ? FromNumber(left, right) :\n                                                                            TypeGuard.IsObject(left) ? FromObject(left, right) :\n                                                                                TypeGuard.IsRecord(left) ? FromRecord(left, right) :\n                                                                                    TypeGuard.IsString(left) ? FromString(left, right) :\n                                                                                        TypeGuard.IsSymbol(left) ? FromSymbol(left, right) :\n                                                                                            TypeGuard.IsTuple(left) ? FromTuple(left, right) :\n                                                                                                TypeGuard.IsPromise(left) ? FromPromise(left, right) :\n                                                                                                    TypeGuard.IsUint8Array(left) ? FromUint8Array(left, right) :\n                                                                                                        TypeGuard.IsUndefined(left) ? FromUndefined(left, right) :\n                                                                                                            TypeGuard.IsUnion(left) ? FromUnion(left, right) :\n                                                                                                                TypeGuard.IsUnknown(left) ? FromUnknown(left, right) :\n                                                                                                                    TypeGuard.IsVoid(left) ? FromVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[Kind]}'`));\n}\nexport function ExtendsCheck(left, right) {\n    return Visit(left, right);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Extends } from './extends.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(K, U, L, R, options) {\n    return {\n        [K]: Extends(Literal(K), U, L, R, Clone(options))\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(K, U, L, R, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(K, U, L, R, options) {\n    return FromPropertyKeys(K.keys, U, L, R, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedKey(T, U, L, R, options) {\n    const P = FromMappedKey(T, U, L, R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from './extends-check.mjs';\nimport { ExtendsFromMappedKey } from './extends-from-mapped-key.mjs';\nimport { ExtendsFromMappedResult } from './extends-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction ExtendsResolve(left, right, trueType, falseType) {\n    const R = ExtendsCheck(left, right);\n    return (R === ExtendsResult.Union ? Union([trueType, falseType]) :\n        R === ExtendsResult.True ? trueType :\n            falseType);\n}\n/** `[Json]` Creates a Conditional type */\nexport function Extends(L, R, T, F, options) {\n    // prettier-ignore\n    return (IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) :\n        IsMappedKey(L) ? CreateType(ExtendsFromMappedKey(L, R, T, F, options)) :\n            CreateType(ExtendsResolve(L, R, T, F), options));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extends } from './extends.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(P, Right, True, False, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extends(P[K2], Right, True, False, Clone(options));\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(Left, Right, True, False, options) {\n    return FromProperties(Left.properties, Right, True, False, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedResult(Left, Right, True, False, options) {\n    const P = FromMappedResult(Left, Right, True, False, options);\n    return MappedResult(P);\n}\n", "import { Kind } from '../symbols/index.mjs';\n/** Fast undefined check used for properties of type undefined */\nfunction Intersect(schema) {\n    return schema.allOf.every((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Union(schema) {\n    return schema.anyOf.some((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Not(schema) {\n    return !ExtendsUndefinedCheck(schema.not);\n}\n/** Fast undefined check used for properties of type undefined */\n// prettier-ignore\nexport function ExtendsUndefinedCheck(schema) {\n    return (schema[Kind] === 'Intersect' ? Intersect(schema) :\n        schema[Kind] === 'Union' ? Union(schema) :\n            schema[Kind] === 'Not' ? Not(schema) :\n                schema[Kind] === 'Undefined' ? true :\n                    false);\n}\n", "import { Exclude } from './exclude.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExcludeFromTemplateLiteral(L, R) {\n    return Exclude(TemplateLiteralToUnion(L), R);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extract } from './extract.mjs';\n// prettier-ignore\nfunction FromProperties(P, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extract(P[K2], T);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExtractFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { ExtractFromMappedResult } from './extract-from-mapped-result.mjs';\nimport { ExtractFromTemplateLiteral } from './extract-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExtractRest(L, R) {\n    const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);\n    return extracted.length === 1 ? extracted[0] : Union(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nexport function Extract(L, R, options) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CreateType(ExtractFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CreateType(ExtractFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CreateType(IsUnion(L) ? ExtractRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);\n}\n", "import { Extract } from './extract.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExtractFromTemplateLiteral(L, R) {\n    return Extract(TemplateLiteralToUnion(L), R);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\nexport function InstanceType(schema, options) {\n    return (KindGuard.IsConstructor(schema) ? CreateType(schema.returns, options) : Never(options));\n}\n", "import { CloneType } from '../clone/type.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Record, RecordKey, RecordValue } from '../record/index.mjs';\nimport * as ValueGuard from '../guard/value.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromConstructor(args, type) {\n    type.parameters = FromTypes(args, type.parameters);\n    type.returns = FromType(args, type.returns);\n    return type;\n}\n// prettier-ignore\nfunction FromFunction(args, type) {\n    type.parameters = FromTypes(args, type.parameters);\n    type.returns = FromType(args, type.returns);\n    return type;\n}\n// prettier-ignore\nfunction FromIntersect(args, type) {\n    type.allOf = FromTypes(args, type.allOf);\n    return type;\n}\n// prettier-ignore\nfunction FromUnion(args, type) {\n    type.anyOf = FromTypes(args, type.anyOf);\n    return type;\n}\n// prettier-ignore\nfunction FromTuple(args, type) {\n    if (ValueGuard.IsUndefined(type.items))\n        return type;\n    type.items = FromTypes(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromArray(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromAsyncIterator(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromIterator(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromPromise(args, type) {\n    type.item = FromType(args, type.item);\n    return type;\n}\n// prettier-ignore\nfunction FromObject(args, type) {\n    const mappedProperties = FromProperties(args, type.properties);\n    return { ...type, ...Object(mappedProperties) }; // retain options\n}\n// prettier-ignore\nfunction FromRecord(args, type) {\n    const mappedKey = FromType(args, RecordKey(type));\n    const mappedValue = FromType(args, RecordValue(type));\n    const result = Record(mappedKey, mappedValue);\n    return { ...type, ...result }; // retain options\n}\n// prettier-ignore\nfunction FromArgument(args, argument) {\n    return argument.index in args ? args[argument.index] : Unknown();\n}\n// prettier-ignore\nfunction FromProperty(args, type) {\n    const isReadonly = KindGuard.IsReadonly(type);\n    const isOptional = KindGuard.IsOptional(type);\n    const mapped = FromType(args, type);\n    return (isReadonly && isOptional ? ReadonlyOptional(mapped) :\n        isReadonly && !isOptional ? Readonly(mapped) :\n            !isReadonly && isOptional ? Optional(mapped) :\n                mapped);\n}\n// prettier-ignore\nfunction FromProperties(args, properties) {\n    return globalThis.Object.getOwnPropertyNames(properties).reduce((result, key) => {\n        return { ...result, [key]: FromProperty(args, properties[key]) };\n    }, {});\n}\n// prettier-ignore\nexport function FromTypes(args, types) {\n    return types.map(type => FromType(args, type));\n}\n// prettier-ignore\nfunction FromType(args, type) {\n    return (KindGuard.IsConstructor(type) ? FromConstructor(args, type) :\n        KindGuard.IsFunction(type) ? FromFunction(args, type) :\n            KindGuard.IsIntersect(type) ? FromIntersect(args, type) :\n                KindGuard.IsUnion(type) ? FromUnion(args, type) :\n                    KindGuard.IsTuple(type) ? FromTuple(args, type) :\n                        KindGuard.IsArray(type) ? FromArray(args, type) :\n                            KindGuard.IsAsyncIterator(type) ? FromAsyncIterator(args, type) :\n                                KindGuard.IsIterator(type) ? FromIterator(args, type) :\n                                    KindGuard.IsPromise(type) ? FromPromise(args, type) :\n                                        KindGuard.IsObject(type) ? FromObject(args, type) :\n                                            KindGuard.IsRecord(type) ? FromRecord(args, type) :\n                                                KindGuard.IsArgument(type) ? FromArgument(args, type) :\n                                                    type);\n}\n/** `[JavaScript]` Instantiates a type with the given parameters */\n// prettier-ignore\nexport function Instantiate(type, args) {\n    return FromType(args, CloneType(type));\n}\n", "import { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\n/** `[Json]` Creates a Readonly and Optional property */\nexport function ReadonlyOptional(schema) {\n    return Readonly(Optional(schema));\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IsTemplateLiteralFinite } from '../template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact, PatternNeverExact } from '../patterns/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsInteger, IsLiteral, IsAny, IsBoolean, IsNever, IsNumber, IsString, IsRegExp, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n    return CreateType({ [Kind]: 'Record', type: 'object', patternProperties: { [pattern]: T } }, options);\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n    const result = {};\n    for (const K2 of K)\n        result[K2] = T;\n    return Object(result, { ...options, [Hint]: 'Record' });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n    return (IsTemplateLiteralFinite(K)\n        ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options)\n        : RecordCreateFromPattern(K.pattern, T, options));\n}\n// prettier-ignore\nfunction FromUnionKey(key, type, options) {\n    return RecordCreateFromKeys(IndexPropertyKeys(Union(key)), type, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(key, type, options) {\n    return RecordCreateFromKeys([key.toString()], type, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(key, type, options) {\n    return RecordCreateFromPattern(key.source, type, options);\n}\n// prettier-ignore\nfunction FromStringKey(key, type, options) {\n    const pattern = IsUndefined(key.pattern) ? PatternStringExact : key.pattern;\n    return RecordCreateFromPattern(pattern, type, options);\n}\n// prettier-ignore\nfunction FromAnyKey(_, type, options) {\n    return RecordCreateFromPattern(PatternStringExact, type, options);\n}\n// prettier-ignore\nfunction FromNeverKey(_key, type, options) {\n    return RecordCreateFromPattern(PatternNeverExact, type, options);\n}\n// prettier-ignore\nfunction FromBooleanKey(_key, type, options) {\n    return Object({ true: type, false: type }, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_key, type, options) {\n    return RecordCreateFromPattern(PatternNumberExact, type, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, type, options) {\n    return RecordCreateFromPattern(PatternNumberExact, type, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nexport function Record(key, type, options = {}) {\n    // prettier-ignore\n    return (IsUnion(key) ? FromUnionKey(key.anyOf, type, options) :\n        IsTemplateLiteral(key) ? FromTemplateLiteralKey(key, type, options) :\n            IsLiteral(key) ? FromLiteralKey(key.const, type, options) :\n                IsBoolean(key) ? FromBooleanKey(key, type, options) :\n                    IsInteger(key) ? FromIntegerKey(key, type, options) :\n                        IsNumber(key) ? FromNumberKey(key, type, options) :\n                            IsRegExp(key) ? FromRegExpKey(key, type, options) :\n                                IsString(key) ? FromStringKey(key, type, options) :\n                                    IsAny(key) ? FromAnyKey(key, type, options) :\n                                        IsNever(key) ? FromNeverKey(key, type, options) :\n                                            Never(options));\n}\n// ------------------------------------------------------------------\n// Record Utilities\n// ------------------------------------------------------------------\n/** Gets the Records Pattern */\nexport function RecordPattern(record) {\n    return globalThis.Object.getOwnPropertyNames(record.patternProperties)[0];\n}\n/** Gets the Records Key Type */\n// prettier-ignore\nexport function RecordKey(type) {\n    const pattern = RecordPattern(type);\n    return (pattern === PatternStringExact ? String() :\n        pattern === PatternNumberExact ? Number() :\n            String({ pattern }));\n}\n/** Gets a Record Value Type */\n// prettier-ignore\nexport function RecordValue(type) {\n    return type.patternProperties[RecordPattern(type)];\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Integer type */\nexport function Integer(options) {\n    return CreateType({ [Kind]: 'Integer', type: 'integer' }, options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Capitalize LiteralString types */\nexport function Capitalize(T, options = {}) {\n    return Intrinsic(T, 'Capitalize', options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TemplateLiteral, TemplateLiteralParseExact, IsTemplateLiteralExpressionFinite, TemplateLiteralExpressionGenerate } from '../template-literal/index.mjs';\nimport { IntrinsicFromMappedKey } from './intrinsic-from-mapped-key.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsTemplateLiteral, IsUnion, IsLiteral } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// Apply\n// ------------------------------------------------------------------\nfunction ApplyUncapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toLowerCase(), rest].join('');\n}\nfunction ApplyCapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toUpperCase(), rest].join('');\n}\nfunction ApplyUppercase(value) {\n    return value.toUpperCase();\n}\nfunction ApplyLowercase(value) {\n    return value.toLowerCase();\n}\nfunction FromTemplateLiteral(schema, mode, options) {\n    // note: template literals require special runtime handling as they are encoded in string patterns.\n    // This diverges from the mapped type which would otherwise map on the template literal kind.\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    const finite = IsTemplateLiteralExpressionFinite(expression);\n    if (!finite)\n        return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };\n    const strings = [...TemplateLiteralExpressionGenerate(expression)];\n    const literals = strings.map((value) => Literal(value));\n    const mapped = FromRest(literals, mode);\n    const union = Union(mapped);\n    return TemplateLiteral([union], options);\n}\n// prettier-ignore\nfunction FromLiteralValue(value, mode) {\n    return (typeof value === 'string' ? (mode === 'Uncapitalize' ? ApplyUncapitalize(value) :\n        mode === 'Capitalize' ? ApplyCapitalize(value) :\n            mode === 'Uppercase' ? ApplyUppercase(value) :\n                mode === 'Lowercase' ? ApplyLowercase(value) :\n                    value) : value.toString());\n}\n// prettier-ignore\nfunction FromRest(T, M) {\n    return T.map(L => Intrinsic(L, M));\n}\n/** Applies an intrinsic string manipulation to the given type. */\nexport function Intrinsic(schema, mode, options = {}) {\n    // prettier-ignore\n    return (\n    // Intrinsic-Mapped-Inference\n    IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) :\n        // Standard-Inference\n        IsTemplateLiteral(schema) ? FromTemplateLiteral(schema, mode, options) :\n            IsUnion(schema) ? Union(FromRest(schema.anyOf, mode), options) :\n                IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) :\n                    // Default Type\n                    CreateType(schema, options));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Intrinsic } from './intrinsic.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction MappedIntrinsicPropertyKey(K, M, options) {\n    return {\n        [K]: Intrinsic(Literal(K), M, Clone(options))\n    };\n}\n// prettier-ignore\nfunction MappedIntrinsicPropertyKeys(K, M, options) {\n    const result = K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };\n    }, {});\n    return result;\n}\n// prettier-ignore\nfunction MappedIntrinsicProperties(T, M, options) {\n    return MappedIntrinsicPropertyKeys(T['keys'], M, options);\n}\n// prettier-ignore\nexport function IntrinsicFromMappedKey(T, M, options) {\n    const P = MappedIntrinsicProperties(T, M, options);\n    return MappedResult(P);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Lowercase LiteralString types */\nexport function Lowercase(T, options = {}) {\n    return Intrinsic(T, 'Lowercase', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\nexport function Uncapitalize(T, options = {}) {\n    return Intrinsic(T, 'Uncapitalize', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uppercase LiteralString types */\nexport function Uppercase(T, options = {}) {\n    return Intrinsic(T, 'Uppercase', options);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// Module Infrastructure Types\n// ------------------------------------------------------------------\nimport { ComputeModuleProperties } from './compute.mjs';\n// ------------------------------------------------------------------\n// Module\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TModule {\n    constructor($defs) {\n        const computed = ComputeModuleProperties($defs);\n        const identified = this.WithIdentifiers(computed);\n        this.$defs = identified;\n    }\n    /** `[Json]` Imports a Type by Key. */\n    Import(key, options) {\n        const $defs = { ...this.$defs, [key]: CreateType(this.$defs[key], options) };\n        return CreateType({ [Kind]: 'Import', $defs, $ref: key });\n    }\n    // prettier-ignore\n    WithIdentifiers($defs) {\n        return globalThis.Object.getOwnPropertyNames($defs).reduce((result, key) => {\n            return { ...result, [key]: { ...$defs[key], $id: key } };\n        }, {});\n    }\n}\n/** `[Json]` Creates a Type Definition Module. */\nexport function Module(properties) {\n    return new TModule(properties);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { CloneType } from '../clone/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Array } from '../array/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Index } from '../indexed/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { KeyOf } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Omit } from '../omit/index.mjs';\nimport { Pick } from '../pick/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Partial } from '../partial/index.mjs';\nimport { RecordValue, RecordPattern } from '../record/index.mjs';\nimport { Required } from '../required/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// Symbols\n// ------------------------------------------------------------------\nimport { TransformKind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction DereferenceParameters(moduleProperties, types) {\n    return types.map((type) => {\n        return KindGuard.IsRef(type)\n            ? Dereference(moduleProperties, type.$ref)\n            : FromType(moduleProperties, type);\n    });\n}\n// prettier-ignore\nfunction Dereference(moduleProperties, ref) {\n    return (ref in moduleProperties\n        ? KindGuard.IsRef(moduleProperties[ref])\n            ? Dereference(moduleProperties, moduleProperties[ref].$ref)\n            : FromType(moduleProperties, moduleProperties[ref])\n        : Never());\n}\n// prettier-ignore\nfunction FromAwaited(parameters) {\n    return Awaited(parameters[0]);\n}\n// prettier-ignore\nfunction FromIndex(parameters) {\n    return Index(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromKeyOf(parameters) {\n    return KeyOf(parameters[0]);\n}\n// prettier-ignore\nfunction FromPartial(parameters) {\n    return Partial(parameters[0]);\n}\n// prettier-ignore\nfunction FromOmit(parameters) {\n    return Omit(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromPick(parameters) {\n    return Pick(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromRequired(parameters) {\n    return Required(parameters[0]);\n}\n// prettier-ignore\nfunction FromComputed(moduleProperties, target, parameters) {\n    const dereferenced = DereferenceParameters(moduleProperties, parameters);\n    return (target === 'Awaited' ? FromAwaited(dereferenced) :\n        target === 'Index' ? FromIndex(dereferenced) :\n            target === 'KeyOf' ? FromKeyOf(dereferenced) :\n                target === 'Partial' ? FromPartial(dereferenced) :\n                    target === 'Omit' ? FromOmit(dereferenced) :\n                        target === 'Pick' ? FromPick(dereferenced) :\n                            target === 'Required' ? FromRequired(dereferenced) :\n                                Never());\n}\nfunction FromArray(moduleProperties, type) {\n    return Array(FromType(moduleProperties, type));\n}\nfunction FromAsyncIterator(moduleProperties, type) {\n    return AsyncIterator(FromType(moduleProperties, type));\n}\n// prettier-ignore\nfunction FromConstructor(moduleProperties, parameters, instanceType) {\n    return Constructor(FromTypes(moduleProperties, parameters), FromType(moduleProperties, instanceType));\n}\n// prettier-ignore\nfunction FromFunction(moduleProperties, parameters, returnType) {\n    return FunctionType(FromTypes(moduleProperties, parameters), FromType(moduleProperties, returnType));\n}\nfunction FromIntersect(moduleProperties, types) {\n    return Intersect(FromTypes(moduleProperties, types));\n}\nfunction FromIterator(moduleProperties, type) {\n    return Iterator(FromType(moduleProperties, type));\n}\nfunction FromObject(moduleProperties, properties) {\n    return Object(globalThis.Object.keys(properties).reduce((result, key) => {\n        return { ...result, [key]: FromType(moduleProperties, properties[key]) };\n    }, {}));\n}\n// prettier-ignore\nfunction FromRecord(moduleProperties, type) {\n    const [value, pattern] = [FromType(moduleProperties, RecordValue(type)), RecordPattern(type)];\n    const result = CloneType(type);\n    result.patternProperties[pattern] = value;\n    return result;\n}\n// prettier-ignore\nfunction FromTransform(moduleProperties, transform) {\n    return (KindGuard.IsRef(transform))\n        ? { ...Dereference(moduleProperties, transform.$ref), [TransformKind]: transform[TransformKind] }\n        : transform;\n}\nfunction FromTuple(moduleProperties, types) {\n    return Tuple(FromTypes(moduleProperties, types));\n}\nfunction FromUnion(moduleProperties, types) {\n    return Union(FromTypes(moduleProperties, types));\n}\nfunction FromTypes(moduleProperties, types) {\n    return types.map((type) => FromType(moduleProperties, type));\n}\n// prettier-ignore\nexport function FromType(moduleProperties, type) {\n    return (\n    // Modifiers\n    KindGuard.IsOptional(type) ? CreateType(FromType(moduleProperties, Discard(type, [OptionalKind])), type) :\n        KindGuard.IsReadonly(type) ? CreateType(FromType(moduleProperties, Discard(type, [ReadonlyKind])), type) :\n            // Transform\n            KindGuard.IsTransform(type) ? CreateType(FromTransform(moduleProperties, type), type) :\n                // Types\n                KindGuard.IsArray(type) ? CreateType(FromArray(moduleProperties, type.items), type) :\n                    KindGuard.IsAsyncIterator(type) ? CreateType(FromAsyncIterator(moduleProperties, type.items), type) :\n                        KindGuard.IsComputed(type) ? CreateType(FromComputed(moduleProperties, type.target, type.parameters)) :\n                            KindGuard.IsConstructor(type) ? CreateType(FromConstructor(moduleProperties, type.parameters, type.returns), type) :\n                                KindGuard.IsFunction(type) ? CreateType(FromFunction(moduleProperties, type.parameters, type.returns), type) :\n                                    KindGuard.IsIntersect(type) ? CreateType(FromIntersect(moduleProperties, type.allOf), type) :\n                                        KindGuard.IsIterator(type) ? CreateType(FromIterator(moduleProperties, type.items), type) :\n                                            KindGuard.IsObject(type) ? CreateType(FromObject(moduleProperties, type.properties), type) :\n                                                KindGuard.IsRecord(type) ? CreateType(FromRecord(moduleProperties, type)) :\n                                                    KindGuard.IsTuple(type) ? CreateType(FromTuple(moduleProperties, type.items || []), type) :\n                                                        KindGuard.IsUnion(type) ? CreateType(FromUnion(moduleProperties, type.anyOf), type) :\n                                                            type);\n}\n// prettier-ignore\nexport function ComputeType(moduleProperties, key) {\n    return (key in moduleProperties\n        ? FromType(moduleProperties, moduleProperties[key])\n        : Never());\n}\n// prettier-ignore\nexport function ComputeModuleProperties(moduleProperties) {\n    return globalThis.Object.getOwnPropertyNames(moduleProperties).reduce((result, key) => {\n        return { ...result, [key]: ComputeType(moduleProperties, key) };\n    }, {});\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(type, key, options) {\n    return { [key]: Omit(type, [key], Clone(options)) };\n}\n// prettier-ignore\nfunction FromPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(type, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(type, mappedKey, options) {\n    return FromPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedKey(type, mappedKey, options) {\n    const properties = FromMappedKey(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/discard.mjs';\nimport { TransformKind } from '../symbols/symbols.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\n// ------------------------------------------------------------------\n// Mapped\n// ------------------------------------------------------------------\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult, IsLiteralValue, IsRef } from '../guard/kind.mjs';\nimport { IsArray as IsArrayValue } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromIntersect(types, propertyKeys) {\n    return types.map((type) => OmitResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromUnion(types, propertyKeys) {\n    return types.map((type) => OmitResolve(type, propertyKeys));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(properties, key) {\n    const { [key]: _, ...R } = properties;\n    return R;\n}\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys) {\n    return propertyKeys.reduce((T, K2) => FromProperty(T, K2), properties);\n}\n// prettier-ignore\nfunction FromObject(properties, propertyKeys) {\n    const options = Discard(properties, [TransformKind, '$id', 'required', 'properties']);\n    const omittedProperties = FromProperties(properties['properties'], propertyKeys);\n    return Object(omittedProperties, options);\n}\n// prettier-ignore\nfunction UnionFromPropertyKeys(propertyKeys) {\n    const result = propertyKeys.reduce((result, key) => IsLiteralValue(key) ? [...result, Literal(key)] : result, []);\n    return Union(result);\n}\n// prettier-ignore\nfunction OmitResolve(properties, propertyKeys) {\n    return (IsIntersect(properties) ? Intersect(FromIntersect(properties.allOf, propertyKeys)) :\n        IsUnion(properties) ? Union(FromUnion(properties.anyOf, propertyKeys)) :\n            IsObject(properties) ? FromObject(properties, propertyKeys) :\n                Object({}));\n}\n/** `[Json]` Constructs a type whose keys are picked from the given type */\n// prettier-ignore\nexport function Omit(type, key, options) {\n    const typeKey = IsArrayValue(key) ? UnionFromPropertyKeys(key) : key;\n    const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const isTypeRef = IsRef(type);\n    const isKeyRef = IsRef(key);\n    return (IsMappedResult(type) ? OmitFromMappedResult(type, propertyKeys, options) :\n        IsMappedKey(key) ? OmitFromMappedKey(type, key, options) :\n            (isTypeRef && isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                (!isTypeRef && isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                    (isTypeRef && !isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                        CreateType({ ...OmitResolve(type, propertyKeys), ...options }));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = Omit(properties[K2], propertyKeys, Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, propertyKeys, options) {\n    return FromProperties(mappedResult.properties, propertyKeys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedResult(mappedResult, propertyKeys, options) {\n    const properties = FromMappedResult(mappedResult, propertyKeys, options);\n    return MappedResult(properties);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(type, key, options) {\n    return {\n        [key]: Pick(type, [key], Clone(options))\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((result, leftKey) => {\n        return { ...result, ...FromPropertyKey(type, leftKey, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(type, mappedKey, options) {\n    return FromPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function PickFromMappedKey(type, mappedKey, options) {\n    const properties = FromMappedKey(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/discard.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { TransformKind } from '../symbols/symbols.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema, IsLiteralValue, IsRef } from '../guard/kind.mjs';\nimport { IsArray as IsArrayValue } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// Infrastructure\n// ------------------------------------------------------------------\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\nfunction FromIntersect(types, propertyKeys) {\n    return types.map((type) => PickResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromUnion(types, propertyKeys) {\n    return types.map((type) => PickResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys) {\n    const result = {};\n    for (const K2 of propertyKeys)\n        if (K2 in properties)\n            result[K2] = properties[K2];\n    return result;\n}\n// prettier-ignore\nfunction FromObject(T, K) {\n    const options = Discard(T, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(T['properties'], K);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction UnionFromPropertyKeys(propertyKeys) {\n    const result = propertyKeys.reduce((result, key) => IsLiteralValue(key) ? [...result, Literal(key)] : result, []);\n    return Union(result);\n}\n// prettier-ignore\nfunction PickResolve(properties, propertyKeys) {\n    return (IsIntersect(properties) ? Intersect(FromIntersect(properties.allOf, propertyKeys)) :\n        IsUnion(properties) ? Union(FromUnion(properties.anyOf, propertyKeys)) :\n            IsObject(properties) ? FromObject(properties, propertyKeys) :\n                Object({}));\n}\n/** `[Json]` Constructs a type whose keys are picked from the given type */\n// prettier-ignore\nexport function Pick(type, key, options) {\n    const typeKey = IsArrayValue(key) ? UnionFromPropertyKeys(key) : key;\n    const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const isTypeRef = IsRef(type);\n    const isKeyRef = IsRef(key);\n    return (IsMappedResult(type) ? PickFromMappedResult(type, propertyKeys, options) :\n        IsMappedKey(key) ? PickFromMappedKey(type, key, options) :\n            (isTypeRef && isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                (!isTypeRef && isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                    (isTypeRef && !isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                        CreateType({ ...PickResolve(type, propertyKeys), ...options }));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = Pick(properties[K2], propertyKeys, Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, propertyKeys, options) {\n    return FromProperties(mappedResult.properties, propertyKeys, options);\n}\n// prettier-ignore\nexport function PickFromMappedResult(mappedResult, propertyKeys, options) {\n    const properties = FromMappedResult(mappedResult, propertyKeys, options);\n    return MappedResult(properties);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Partial } from './partial.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Partial(K[K2], Clone(options));\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function PartialFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { PartialFromMappedResult } from './partial-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Partial', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Partial', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromProperties(properties) {\n    const partialProperties = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties))\n        partialProperties[K] = Optional(properties[K]);\n    return partialProperties;\n}\n// prettier-ignore\nfunction FromObject(type) {\n    const options = Discard(type, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(type['properties']);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => PartialResolve(type));\n}\n// ------------------------------------------------------------------\n// PartialResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PartialResolve(type) {\n    return (\n    // Mappable\n    KindGuard.IsComputed(type) ? FromComputed(type.target, type.parameters) :\n        KindGuard.IsRef(type) ? FromRef(type.$ref) :\n            KindGuard.IsIntersect(type) ? Intersect(FromRest(type.allOf)) :\n                KindGuard.IsUnion(type) ? Union(FromRest(type.anyOf)) :\n                    KindGuard.IsObject(type) ? FromObject(type) :\n                        // Intrinsic\n                        KindGuard.IsBigInt(type) ? type :\n                            KindGuard.IsBoolean(type) ? type :\n                                KindGuard.IsInteger(type) ? type :\n                                    KindGuard.IsLiteral(type) ? type :\n                                        KindGuard.IsNull(type) ? type :\n                                            KindGuard.IsNumber(type) ? type :\n                                                KindGuard.IsString(type) ? type :\n                                                    KindGuard.IsSymbol(type) ? type :\n                                                        KindGuard.IsUndefined(type) ? type :\n                                                            // Passthrough\n                                                            Object({}));\n}\n/** `[Json]` Constructs a type where all properties are optional */\nexport function Partial(type, options) {\n    if (KindGuard.IsMappedResult(type)) {\n        return PartialFromMappedResult(type, options);\n    }\n    else {\n        // special: mapping types require overridable options\n        return CreateType({ ...PartialResolve(type), ...options });\n    }\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Required } from './required.mjs';\n// prettier-ignore\nfunction FromProperties(P, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Required(P[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function RequiredFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { OptionalKind, TransformKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { RequiredFromMappedResult } from './required-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Required', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Required', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromProperties(properties) {\n    const requiredProperties = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties))\n        requiredProperties[K] = Discard(properties[K], [OptionalKind]);\n    return requiredProperties;\n}\n// prettier-ignore\nfunction FromObject(type) {\n    const options = Discard(type, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(type['properties']);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => RequiredResolve(type));\n}\n// ------------------------------------------------------------------\n// RequiredResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RequiredResolve(type) {\n    return (\n    // Mappable\n    KindGuard.IsComputed(type) ? FromComputed(type.target, type.parameters) :\n        KindGuard.IsRef(type) ? FromRef(type.$ref) :\n            KindGuard.IsIntersect(type) ? Intersect(FromRest(type.allOf)) :\n                KindGuard.IsUnion(type) ? Union(FromRest(type.anyOf)) :\n                    KindGuard.IsObject(type) ? FromObject(type) :\n                        // Intrinsic\n                        KindGuard.IsBigInt(type) ? type :\n                            KindGuard.IsBoolean(type) ? type :\n                                KindGuard.IsInteger(type) ? type :\n                                    KindGuard.IsLiteral(type) ? type :\n                                        KindGuard.IsNull(type) ? type :\n                                            KindGuard.IsNumber(type) ? type :\n                                                KindGuard.IsString(type) ? type :\n                                                    KindGuard.IsSymbol(type) ? type :\n                                                        KindGuard.IsUndefined(type) ? type :\n                                                            // Passthrough\n                                                            Object({}));\n}\n/** `[Json]` Constructs a type where all properties are required */\nexport function Required(type, options) {\n    if (KindGuard.IsMappedResult(type)) {\n        return RequiredFromMappedResult(type, options);\n    }\n    else {\n        // special: mapping types require overridable options\n        return CreateType({ ...RequiredResolve(type), ...options });\n    }\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Not type */\nexport function Not(type, options) {\n    return CreateType({ [Kind]: 'Not', not: type }, options);\n}\n", "import { Tuple } from '../tuple/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the Parameters from the given Function type */\nexport function Parameters(schema, options) {\n    return (KindGuard.IsFunction(schema) ? Tuple(schema.parameters, options) : Never());\n}\n", "import { CloneType } from '../clone/type.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n    if (IsUndefined(options.$id))\n        options.$id = `T${Ordinal++}`;\n    const thisType = CloneType(callback({ [Kind]: 'This', $ref: `${options.$id}` }));\n    thisType.$id = options.$id;\n    // prettier-ignore\n    return CreateType({ [Hint]: 'Recursive', ...thisType }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a RegExp type */\nexport function RegExp(unresolved, options) {\n    const expr = IsString(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;\n    return CreateType({ [Kind]: 'RegExp', type: 'RegExp', source: expr.source, flags: expr.flags }, options);\n}\n", "// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple } from '../guard/kind.mjs';\n// prettier-ignore\nfunction RestResolve(T) {\n    return (IsIntersect(T) ? T.allOf :\n        IsUnion(T) ? T.anyOf :\n            IsTuple(T) ? T.items ?? [] :\n                []);\n}\n/** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\nexport function Rest(T) {\n    return RestResolve(T);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the ReturnType from the given Function type */\nexport function ReturnType(schema, options) {\n    return (KindGuard.IsFunction(schema) ? CreateType(schema.returns, options) : Never(options));\n}\n", "import { TransformKind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    EncodeTransform(encode, schema) {\n        const Encode = (value) => schema[TransformKind].Encode(encode(value));\n        const Decode = (value) => this.decode(schema[TransformKind].Decode(value));\n        const Codec = { Encode: Encode, Decode: Decode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    EncodeSchema(encode, schema) {\n        const Codec = { Decode: this.decode, Encode: encode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    Encode(encode) {\n        return (IsTransform(this.schema) ? this.EncodeTransform(encode, this.schema) : this.EncodeSchema(encode, this.schema));\n    }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n    return new TransformDecodeBuilder(schema);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\nexport function Unsafe(options = {}) {\n    return CreateType({ [Kind]: options[Kind] ?? 'Unsafe' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Void type */\nexport function Void(options) {\n    return CreateType({ [Kind]: 'Void', type: 'void' }, options);\n}\n", "// ------------------------------------------------------------------\n// JsonTypeBuilder\n// ------------------------------------------------------------------\nexport { JsonTypeBuilder } from './json.mjs';\n// ------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// ------------------------------------------------------------------\nimport * as TypeBuilder from './type.mjs';\nimport { JavaScriptTypeBuilder } from './javascript.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nconst Type = TypeBuilder;\nexport { JavaScriptTypeBuilder };\nexport { Type };\n", "// ------------------------------------------------------------------\n// Type: Module\n// ------------------------------------------------------------------\nexport { Any } from '../any/index.mjs';\nexport { Argument } from '../argument/index.mjs';\nexport { Array } from '../array/index.mjs';\nexport { AsyncIterator } from '../async-iterator/index.mjs';\nexport { Awaited } from '../awaited/index.mjs';\nexport { BigInt } from '../bigint/index.mjs';\nexport { Boolean } from '../boolean/index.mjs';\nexport { Composite } from '../composite/index.mjs';\nexport { Const } from '../const/index.mjs';\nexport { Constructor } from '../constructor/index.mjs';\nexport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nexport { Date } from '../date/index.mjs';\nexport { Enum } from '../enum/index.mjs';\nexport { Exclude } from '../exclude/index.mjs';\nexport { Extends } from '../extends/index.mjs';\nexport { Extract } from '../extract/index.mjs';\nexport { Function } from '../function/index.mjs';\nexport { Index } from '../indexed/index.mjs';\nexport { InstanceType } from '../instance-type/index.mjs';\nexport { Instantiate } from '../instantiate/index.mjs';\nexport { Integer } from '../integer/index.mjs';\nexport { Intersect } from '../intersect/index.mjs';\nexport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nexport { Iterator } from '../iterator/index.mjs';\nexport { KeyOf } from '../keyof/index.mjs';\nexport { Literal } from '../literal/index.mjs';\nexport { Mapped } from '../mapped/index.mjs';\nexport { Module } from '../module/index.mjs';\nexport { Never } from '../never/index.mjs';\nexport { Not } from '../not/index.mjs';\nexport { Null } from '../null/index.mjs';\nexport { Number } from '../number/index.mjs';\nexport { Object } from '../object/index.mjs';\nexport { Omit } from '../omit/index.mjs';\nexport { Optional } from '../optional/index.mjs';\nexport { Parameters } from '../parameters/index.mjs';\nexport { Partial } from '../partial/index.mjs';\nexport { Pick } from '../pick/index.mjs';\nexport { Promise } from '../promise/index.mjs';\nexport { Readonly } from '../readonly/index.mjs';\nexport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nexport { Record } from '../record/index.mjs';\nexport { Recursive } from '../recursive/index.mjs';\nexport { Ref } from '../ref/index.mjs';\nexport { RegExp } from '../regexp/index.mjs';\nexport { Required } from '../required/index.mjs';\nexport { Rest } from '../rest/index.mjs';\nexport { ReturnType } from '../return-type/index.mjs';\nexport { String } from '../string/index.mjs';\nexport { Symbol } from '../symbol/index.mjs';\nexport { TemplateLiteral } from '../template-literal/index.mjs';\nexport { Transform } from '../transform/index.mjs';\nexport { Tuple } from '../tuple/index.mjs';\nexport { Uint8Array } from '../uint8array/index.mjs';\nexport { Undefined } from '../undefined/index.mjs';\nexport { Union } from '../union/index.mjs';\nexport { Unknown } from '../unknown/index.mjs';\nexport { Unsafe } from '../unsafe/index.mjs';\nexport { Void } from '../void/index.mjs';\n", "// ------------------------------------------------------------------\n// Errors (re-export)\n// ------------------------------------------------------------------\nexport { ValueErrorType, ValueErrorIterator } from '../errors/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nexport * from './guard/index.mjs';\n// ------------------------------------------------------------------\n// Operators\n// ------------------------------------------------------------------\nexport * from './assert/index.mjs';\nexport * from './cast/index.mjs';\nexport * from './check/index.mjs';\nexport * from './clean/index.mjs';\nexport * from './clone/index.mjs';\nexport * from './convert/index.mjs';\nexport * from './create/index.mjs';\nexport * from './decode/index.mjs';\nexport * from './default/index.mjs';\nexport * from './delta/index.mjs';\nexport * from './encode/index.mjs';\nexport * from './equal/index.mjs';\nexport * from './hash/index.mjs';\nexport * from './mutate/index.mjs';\nexport * from './parse/index.mjs';\nexport * from './pointer/index.mjs';\nexport * from './transform/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport { Value } from './value/index.mjs';\n", "import { TypeSystemPolicy } from '../system/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { GetErrorFunction } from './function.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Check } from '../value/check/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { Never } from '../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// ValueErrorType\n// ------------------------------------------------------------------\nexport var ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"RegExp\"] = 48] = \"RegExp\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 49] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 50] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 51] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 52] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 53] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 54] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 55] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 56] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 57] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 58] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 59] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 60] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 61] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 62] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 63] = \"Void\";\n})(ValueErrorType || (ValueErrorType = {}));\n// ------------------------------------------------------------------\n// ValueErrors\n// ------------------------------------------------------------------\nexport class ValueErrorsUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// EscapeKey\n// ------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// ValueErrorIterator\n// ------------------------------------------------------------------\nexport class ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(errorType, schema, path, value, errors = []) {\n    return {\n        type: errorType,\n        schema,\n        path,\n        value,\n        message: GetErrorFunction()({ errorType, path, schema, value, errors }),\n        errors,\n    };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* FromAny(schema, references, path, value) { }\nfunction* FromArgument(schema, references, path, value) { }\nfunction* FromArray(schema, references, path, value) {\n    if (!IsArray(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* FromAsyncIterator(schema, references, path, value) {\n    if (!IsAsyncIterator(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* FromBigInt(schema, references, path, value) {\n    if (!IsBigInt(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* FromBoolean(schema, references, path, value) {\n    if (!IsBoolean(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* FromConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* FromDate(schema, references, path, value) {\n    if (!IsDate(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* FromFunction(schema, references, path, value) {\n    if (!IsFunction(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* FromImport(schema, references, path, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    yield* Visit(target, [...references, ...definitions], path, value);\n}\nfunction* FromInteger(schema, references, path, value) {\n    if (!IsInteger(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* FromIntersect(schema, references, path, value) {\n    let hasError = false;\n    for (const inner of schema.allOf) {\n        for (const error of Visit(inner, references, path, value)) {\n            hasError = true;\n            yield error;\n        }\n    }\n    if (hasError) {\n        return yield Create(ValueErrorType.Intersect, schema, path, value);\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* FromIterator(schema, references, path, value) {\n    if (!IsIterator(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* FromLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* FromNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* FromNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* FromNull(schema, references, path, value) {\n    if (!IsNull(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* FromNumber(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* FromObject(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* FromPromise(schema, references, path, value) {\n    if (!IsPromise(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* FromRecord(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* FromRef(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromRegExp(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    const regex = new RegExp(schema.source, schema.flags);\n    if (!regex.test(value)) {\n        return yield Create(ValueErrorType.RegExp, schema, path, value);\n    }\n}\nfunction* FromString(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if (IsString(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if (IsString(schema.format)) {\n        if (!FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* FromSymbol(schema, references, path, value) {\n    if (!IsSymbol(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* FromTemplateLiteral(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* FromThis(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromTuple(schema, references, path, value) {\n    if (!IsArray(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* FromUndefined(schema, references, path, value) {\n    if (!IsUndefined(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* FromUnion(schema, references, path, value) {\n    if (Check(schema, references, value))\n        return;\n    const errors = schema.anyOf.map((variant) => new ValueErrorIterator(Visit(variant, references, path, value)));\n    yield Create(ValueErrorType.Union, schema, path, value, errors);\n}\nfunction* FromUint8Array(schema, references, path, value) {\n    if (!IsUint8Array(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* FromUnknown(schema, references, path, value) { }\nfunction* FromVoid(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* FromKind(schema, references, path, value) {\n    const check = TypeRegistry.Get(schema[Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return yield* FromAny(schema_, references_, path, value);\n        case 'Argument':\n            return yield* FromArgument(schema_, references_, path, value);\n        case 'Array':\n            return yield* FromArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* FromAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* FromBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* FromBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* FromConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* FromDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* FromFunction(schema_, references_, path, value);\n        case 'Import':\n            return yield* FromImport(schema_, references_, path, value);\n        case 'Integer':\n            return yield* FromInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* FromIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* FromIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* FromLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* FromNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* FromNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* FromNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* FromNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* FromObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* FromPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* FromRef(schema_, references_, path, value);\n        case 'RegExp':\n            return yield* FromRegExp(schema_, references_, path, value);\n        case 'String':\n            return yield* FromString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* FromSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* FromTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* FromTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* FromUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* FromUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* FromUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* FromUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* FromVoid(schema_, references_, path, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* FromKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\n", "import { Kind } from '../type/symbols/index.mjs';\nimport { ValueErrorType } from './errors.mjs';\n/** Creates an error message using en-US as the default locale */\nexport function DefaultErrorFunction(error) {\n    switch (error.errorType) {\n        case ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${error.schema.maxContains} matching values`;\n        case ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${error.schema.minContains} matching values`;\n        case ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${error.schema.maxItems}`;\n        case ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${error.schema.minItems}`;\n        case ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case ValueErrorType.Array:\n            return 'Expected array';\n        case ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${error.schema.exclusiveMinimumTimestamp}`;\n        case ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${error.schema.exclusiveMaximumTimestamp}`;\n        case ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${error.schema.minimumTimestamp}`;\n        case ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${error.schema.maximumTimestamp}`;\n        case ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${error.schema.multipleOfTimestamp}`;\n        case ValueErrorType.Date:\n            return 'Expected Date';\n        case ValueErrorType.Function:\n            return 'Expected function';\n        case ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Integer:\n            return 'Expected integer';\n        case ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case ValueErrorType.Literal:\n            return `Expected ${typeof error.schema.const === 'string' ? `'${error.schema.const}'` : error.schema.const}`;\n        case ValueErrorType.Never:\n            return 'Never';\n        case ValueErrorType.Not:\n            return 'Value should not match';\n        case ValueErrorType.Null:\n            return 'Expected null';\n        case ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Number:\n            return 'Expected number';\n        case ValueErrorType.Object:\n            return 'Expected object';\n        case ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${error.schema.maxProperties} properties`;\n        case ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${error.schema.minProperties} properties`;\n        case ValueErrorType.ObjectRequiredProperty:\n            return 'Expected required property';\n        case ValueErrorType.Promise:\n            return 'Expected Promise';\n        case ValueErrorType.RegExp:\n            return 'Expected string to match regular expression';\n        case ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${error.schema.format}'`;\n        case ValueErrorType.StringFormat:\n            return `Expected string to match '${error.schema.format}' format`;\n        case ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${error.schema.maxLength}`;\n        case ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${error.schema.minLength}`;\n        case ValueErrorType.StringPattern:\n            return `Expected string to match '${error.schema.pattern}'`;\n        case ValueErrorType.String:\n            return 'Expected string';\n        case ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case ValueErrorType.TupleLength:\n            return `Expected tuple to have ${error.schema.maxItems || 0} elements`;\n        case ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${error.schema.maxByteLength}`;\n        case ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${error.schema.minByteLength}`;\n        case ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case ValueErrorType.Union:\n            return 'Expected union value';\n        case ValueErrorType.Void:\n            return 'Expected void';\n        case ValueErrorType.Kind:\n            return `Expected kind '${error.schema[Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\n/** Manages error message providers */\nlet errorFunction = DefaultErrorFunction;\n/** Sets the error function used to generate error messages. */\nexport function SetErrorFunction(callback) {\n    errorFunction = callback;\n}\n/** Gets the error function used to generate error messages */\nexport function GetErrorFunction() {\n    return errorFunction;\n}\n", "import { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { IsString } from '../guard/guard.mjs';\nexport class TypeDereferenceError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$ref}'`);\n        this.schema = schema;\n    }\n}\nfunction Resolve(schema, references) {\n    const target = references.find((target) => target.$id === schema.$ref);\n    if (target === undefined)\n        throw new TypeDereferenceError(schema);\n    return Deref(target, references);\n}\n/** `[Internal]` Pushes a schema onto references if the schema has an $id and does not exist on references */\nexport function Pushref(schema, references) {\n    if (!IsString(schema.$id) || references.some((target) => target.$id === schema.$id))\n        return references;\n    references.push(schema);\n    return references;\n}\n/** `[Internal]` Dereferences a schema from the references array or throws if not found */\nexport function Deref(schema, references) {\n    // prettier-ignore\n    return (schema[Kind] === 'This' || schema[Kind] === 'Ref')\n        ? Resolve(schema, references)\n        : schema;\n}\n", "import { IsArray, IsBoolean, IsBigInt, IsDate, IsNull, IsNumber, IsObject, IsString, IsSymbol, IsUint8Array, IsUndefined } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueHashError extends TypeBoxError {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// ByteMarker\n// ------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (ByteMarker = {}));\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('18446744073709551616' /* 2 ^ 64 */)];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// ------------------------------------------------------------------\n// NumberToBytes\n// ------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// ------------------------------------------------------------------\n// Hashing Functions\n// ------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsBoolean(value))\n        return BooleanType(value);\n    if (IsBigInt(value))\n        return BigIntType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsNull(value))\n        return NullType(value);\n    if (IsNumber(value))\n        return NumberType(value);\n    if (IsObject(value))\n        return ObjectType(value);\n    if (IsString(value))\n        return StringType(value);\n    if (IsSymbol(value))\n        return SymbolType(value);\n    if (IsUint8Array(value))\n        return Uint8ArrayType(value);\n    if (IsUndefined(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// ------------------------------------------------------------------\n// Hash\n// ------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\n", "import { TypeSystemPolicy } from '../../system/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Hash } from '../hash/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { KeyOfPattern } from '../../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../../type/extends/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../../type/registry/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Never } from '../../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCheckUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unknown type`);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// TypeGuards\n// ------------------------------------------------------------------\nfunction IsAnyOrUnknown(schema) {\n    return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromAny(schema, references, value) {\n    return true;\n}\nfunction FromArgument(schema, references, value) {\n    return true;\n}\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return false;\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        return false;\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        return false;\n    }\n    if (!value.every((value) => Visit(schema.items, references, value))) {\n        return false;\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        return false;\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {\n        return true; // exit\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value) => (Visit(containsSchema, references, value) ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        return false;\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        return false;\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        return false;\n    }\n    return true;\n}\nfunction FromAsyncIterator(schema, references, value) {\n    return IsAsyncIterator(value);\n}\nfunction FromBigInt(schema, references, value) {\n    if (!IsBigInt(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        return false;\n    }\n    return true;\n}\nfunction FromBoolean(schema, references, value) {\n    return IsBoolean(value);\n}\nfunction FromConstructor(schema, references, value) {\n    return Visit(schema.returns, references, value.prototype);\n}\nfunction FromDate(schema, references, value) {\n    if (!IsDate(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromFunction(schema, references, value) {\n    return IsFunction(value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromInteger(schema, references, value) {\n    if (!IsInteger(value)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromIntersect(schema, references, value) {\n    const check1 = schema.allOf.every((schema) => Visit(schema, references, value));\n    if (schema.unevaluatedProperties === false) {\n        const keyPattern = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));\n        return check1 && check2;\n    }\n    else if (IsSchema(schema.unevaluatedProperties)) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit(schema.unevaluatedProperties, references, value[key]));\n        return check1 && check2;\n    }\n    else {\n        return check1;\n    }\n}\nfunction FromIterator(schema, references, value) {\n    return IsIterator(value);\n}\nfunction FromLiteral(schema, references, value) {\n    return value === schema.const;\n}\nfunction FromNever(schema, references, value) {\n    return false;\n}\nfunction FromNot(schema, references, value) {\n    return !Visit(schema.not, references, value);\n}\nfunction FromNull(schema, references, value) {\n    return IsNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromObject(schema, references, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return false;\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            if (!Visit(property, references, value[knownKey])) {\n                return false;\n            }\n            if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {\n                return false;\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit(property, references, value[knownKey])) {\n                return false;\n            }\n        }\n    }\n    if (schema.additionalProperties === false) {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        // optimization: value is valid if schemaKey length matches the valueKey length\n        if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {\n            return true;\n        }\n        else {\n            return valueKeys.every((valueKey) => knownKeys.includes(valueKey));\n        }\n    }\n    else if (typeof schema.additionalProperties === 'object') {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        return valueKeys.every((key) => knownKeys.includes(key) || Visit(schema.additionalProperties, references, value[key]));\n    }\n    else {\n        return true;\n    }\n}\nfunction FromPromise(schema, references, value) {\n    return IsPromise(value);\n}\nfunction FromRecord(schema, references, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    // prettier-ignore\n    const check1 = Object.entries(value).every(([key, value]) => {\n        return (regex.test(key)) ? Visit(patternSchema, references, value) : true;\n    });\n    // prettier-ignore\n    const check2 = typeof schema.additionalProperties === 'object' ? Object.entries(value).every(([key, value]) => {\n        return (!regex.test(key)) ? Visit(schema.additionalProperties, references, value) : true;\n    }) : true;\n    const check3 = schema.additionalProperties === false\n        ? Object.getOwnPropertyNames(value).every((key) => {\n            return regex.test(key);\n        })\n        : true;\n    return check1 && check2 && check3;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromRegExp(schema, references, value) {\n    const regex = new RegExp(schema.source, schema.flags);\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    return regex.test(value);\n}\nfunction FromString(schema, references, value) {\n    if (!IsString(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    if (IsDefined(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value))\n            return false;\n    }\n    if (IsDefined(schema.format)) {\n        if (!FormatRegistry.Has(schema.format))\n            return false;\n        const func = FormatRegistry.Get(schema.format);\n        return func(value);\n    }\n    return true;\n}\nfunction FromSymbol(schema, references, value) {\n    return IsSymbol(value);\n}\nfunction FromTemplateLiteral(schema, references, value) {\n    return IsString(value) && new RegExp(schema.pattern).test(value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value)) {\n        return false;\n    }\n    if (schema.items === undefined && !(value.length === 0)) {\n        return false;\n    }\n    if (!(value.length === schema.maxItems)) {\n        return false;\n    }\n    if (!schema.items) {\n        return true;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        if (!Visit(schema.items[i], references, value[i]))\n            return false;\n    }\n    return true;\n}\nfunction FromUndefined(schema, references, value) {\n    return IsUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    return schema.anyOf.some((inner) => Visit(inner, references, value));\n}\nfunction FromUint8Array(schema, references, value) {\n    if (!IsUint8Array(value)) {\n        return false;\n    }\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        return false;\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        return false;\n    }\n    return true;\n}\nfunction FromUnknown(schema, references, value) {\n    return true;\n}\nfunction FromVoid(schema, references, value) {\n    return TypeSystemPolicy.IsVoidLike(value);\n}\nfunction FromKind(schema, references, value) {\n    if (!TypeRegistry.Has(schema[Kind]))\n        return false;\n    const func = TypeRegistry.Get(schema[Kind]);\n    return func(schema, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsDefined(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_, value);\n        case 'Argument':\n            return FromArgument(schema_, references_, value);\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Function':\n            return FromFunction(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Iterator':\n            return FromIterator(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Not':\n            return FromNot(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Promise':\n            return FromPromise(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'RegExp':\n            return FromRegExp(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_, value);\n        case 'Unknown':\n            return FromUnknown(schema_, references_, value);\n        case 'Void':\n            return FromVoid(schema_, references_, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCheckUnknownTypeError(schema_);\n            return FromKind(schema_, references_, value);\n    }\n}\n/** Returns true if the value matches the given type. */\nexport function Check(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AssertError_instances, _AssertError_iterator, _AssertError_Iterator;\nimport { Errors, ValueErrorIterator } from '../../errors/index.mjs';\nimport { TypeBoxError } from '../../type/error/error.mjs';\nimport { Check } from '../check/check.mjs';\n// ------------------------------------------------------------------\n// AssertError\n// ------------------------------------------------------------------\nexport class AssertError extends TypeBoxError {\n    constructor(iterator) {\n        const error = iterator.First();\n        super(error === undefined ? 'Invalid Value' : error.message);\n        _AssertError_instances.add(this);\n        _AssertError_iterator.set(this, void 0);\n        __classPrivateFieldSet(this, _AssertError_iterator, iterator, \"f\");\n        this.error = error;\n    }\n    /** Returns an iterator for each error in this value. */\n    Errors() {\n        return new ValueErrorIterator(__classPrivateFieldGet(this, _AssertError_instances, \"m\", _AssertError_Iterator).call(this));\n    }\n}\n_AssertError_iterator = new WeakMap(), _AssertError_instances = new WeakSet(), _AssertError_Iterator = function* _AssertError_Iterator() {\n    if (this.error)\n        yield this.error;\n    yield* __classPrivateFieldGet(this, _AssertError_iterator, \"f\");\n};\n// ------------------------------------------------------------------\n// AssertValue\n// ------------------------------------------------------------------\nfunction AssertValue(schema, references, value) {\n    if (Check(schema, references, value))\n        return;\n    throw new AssertError(Errors(schema, references, value));\n}\n/** Asserts a value matches the given type or throws an `AssertError` if invalid */\nexport function Assert(...args) {\n    return args.length === 3 ? AssertValue(args[0], args[1], args[2]) : AssertValue(args[0], [], args[1]);\n}\n", "import { IsObject, IsArray, IsString, IsNumber, IsNull } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { Create } from '../create/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCastError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// The following logic assigns a score to a schema based on how well\n// it matches a given value. For object types, the score is calculated\n// by evaluating each property of the value against the schema's\n// properties. To avoid bias towards objects with many properties,\n// each property contributes equally to the total score. Properties\n// that exactly match literal values receive the highest possible\n// score, as literals are often used as discriminators in union types.\n// ------------------------------------------------------------------\nfunction ScoreUnion(schema, references, value) {\n    if (schema[Kind] === 'Object' && typeof value === 'object' && !IsNull(value)) {\n        const object = schema;\n        const keys = Object.getOwnPropertyNames(value);\n        const entries = Object.entries(object.properties);\n        return entries.reduce((acc, [key, schema]) => {\n            const literal = schema[Kind] === 'Literal' && schema.const === value[key] ? 100 : 0;\n            const checks = Check(schema, references, value[key]) ? 10 : 0;\n            const exists = keys.includes(key) ? 1 : 0;\n            return acc + (literal + checks + exists);\n        }, 0);\n    }\n    else if (schema[Kind] === 'Union') {\n        const schemas = schema.anyOf.map((schema) => Deref(schema, references));\n        const scores = schemas.map((schema) => ScoreUnion(schema, references, value));\n        return Math.max(...scores);\n    }\n    else {\n        return Check(schema, references, value) ? 1 : 0;\n    }\n}\nfunction SelectUnion(union, references, value) {\n    const schemas = union.anyOf.map((schema) => Deref(schema, references));\n    let [select, best] = [schemas[0], 0];\n    for (const schema of schemas) {\n        const score = ScoreUnion(schema, references, value);\n        if (score > best) {\n            select = schema;\n            best = score;\n        }\n    }\n    return select;\n}\nfunction CastUnion(union, references, value) {\n    if ('default' in union) {\n        return typeof value === 'function' ? union.default : Clone(union.default);\n    }\n    else {\n        const schema = SelectUnion(union, references, value);\n        return Cast(schema, references, value);\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction DefaultClone(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : Create(schema, references);\n}\nfunction Default(schema, references, value) {\n    return Check(schema, references, value) ? value : Create(schema, references);\n}\n// ------------------------------------------------------------------\n// Cast\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    const created = IsArray(value) ? Clone(value) : Create(schema, references);\n    const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;\n    const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;\n    const casted = maximum.map((value) => Visit(schema.items, references, value));\n    if (schema.uniqueItems !== true)\n        return casted;\n    const unique = [...new Set(casted)];\n    if (!Check(schema, references, unique))\n        throw new ValueCastError(schema, 'Array cast produced invalid data due to uniqueItems constraint');\n    return unique;\n}\nfunction FromConstructor(schema, references, value) {\n    if (Check(schema, references, value))\n        return Create(schema, references);\n    const required = new Set(schema.returns.required || []);\n    const result = function () { };\n    for (const [key, property] of Object.entries(schema.returns.properties)) {\n        if (!required.has(key) && value.prototype[key] === undefined)\n            continue;\n        result.prototype[key] = Visit(property, references, value.prototype[key]);\n    }\n    return result;\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\nfunction IntersectAssign(correct, value) {\n    // trust correct on mismatch | value on non-object\n    if ((IsObject(correct) && !IsObject(value)) || (!IsObject(correct) && IsObject(value)))\n        return correct;\n    if (!IsObject(correct) || !IsObject(value))\n        return value;\n    return globalThis.Object.getOwnPropertyNames(correct).reduce((result, key) => {\n        const property = key in value ? IntersectAssign(correct[key], value[key]) : correct[key];\n        return { ...result, [key]: property };\n    }, {});\n}\nfunction FromIntersect(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    const correct = Create(schema, references);\n    const assigned = IntersectAssign(correct, value);\n    return Check(schema, references, assigned) ? assigned : correct;\n}\nfunction FromNever(schema, references, value) {\n    throw new ValueCastError(schema, 'Never types cannot be cast');\n}\nfunction FromObject(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    if (value === null || typeof value !== 'object')\n        return Create(schema, references);\n    const required = new Set(schema.required || []);\n    const result = {};\n    for (const [key, property] of Object.entries(schema.properties)) {\n        if (!required.has(key) && value[key] === undefined)\n            continue;\n        result[key] = Visit(property, references, value[key]);\n    }\n    // additional schema properties\n    if (typeof schema.additionalProperties === 'object') {\n        const propertyNames = Object.getOwnPropertyNames(schema.properties);\n        for (const propertyName of Object.getOwnPropertyNames(value)) {\n            if (propertyNames.includes(propertyName))\n                continue;\n            result[propertyName] = Visit(schema.additionalProperties, references, value[propertyName]);\n        }\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (value === null || typeof value !== 'object' || Array.isArray(value) || value instanceof Date)\n        return Create(schema, references);\n    const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const subschema = schema.patternProperties[subschemaPropertyName];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(subschema, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (!IsArray(value))\n        return Create(schema, references);\n    if (schema.items === undefined)\n        return [];\n    return schema.items.map((schema, index) => Visit(schema, references, value[index]));\n}\nfunction FromUnion(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : CastUnion(schema, references, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        // --------------------------------------------------------------\n        // Structural\n        // --------------------------------------------------------------\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        // --------------------------------------------------------------\n        // DefaultClone\n        // --------------------------------------------------------------\n        case 'Date':\n        case 'Symbol':\n        case 'Uint8Array':\n            return DefaultClone(schema, references, value);\n        // --------------------------------------------------------------\n        // Default\n        // --------------------------------------------------------------\n        default:\n            return Default(schema_, references_, value);\n    }\n}\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasPropertyKey } from '../guard/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { TemplateLiteralGenerate, IsTemplateLiteralFinite } from '../../type/template-literal/index.mjs';\nimport { TypeRegistry } from '../../type/registry/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { IsFunction } from '../guard/guard.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCreateError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction FromDefault(value) {\n    return IsFunction(value) ? value() : Clone(value);\n}\n// ------------------------------------------------------------------\n// Create\n// ------------------------------------------------------------------\nfunction FromAny(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromArgument(schema, references) {\n    return {};\n}\nfunction FromArray(schema, references) {\n    if (schema.uniqueItems === true && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the uniqueItems constraint requires a default value');\n    }\n    else if ('contains' in schema && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the contains constraint requires a default value');\n    }\n    else if ('default' in schema) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minItems !== undefined) {\n        return Array.from({ length: schema.minItems }).map((item) => {\n            return Visit(schema.items, references);\n        });\n    }\n    else {\n        return [];\n    }\n}\nfunction FromAsyncIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (async function* () { })();\n    }\n}\nfunction FromBigInt(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction FromBoolean(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return false;\n    }\n}\nfunction FromConstructor(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const value = Visit(schema.returns, references);\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            return class {\n                constructor() {\n                    for (const [key, val] of Object.entries(value)) {\n                        const self = this;\n                        self[key] = val;\n                    }\n                }\n            };\n        }\n        else {\n            return class {\n            };\n        }\n    }\n}\nfunction FromDate(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimumTimestamp !== undefined) {\n        return new Date(schema.minimumTimestamp);\n    }\n    else {\n        return new Date();\n    }\n}\nfunction FromFunction(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return () => Visit(schema.returns, references);\n    }\n}\nfunction FromImport(schema, references) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions]);\n}\nfunction FromInteger(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromIntersect(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        // --------------------------------------------------------------\n        // Note: The best we can do here is attempt to instance each\n        // sub type and apply through object assign. For non-object\n        // sub types, we just escape the assignment and just return\n        // the value. In the latter case, this is typically going to\n        // be a consequence of an illogical intersection.\n        // --------------------------------------------------------------\n        const value = schema.allOf.reduce((acc, schema) => {\n            const next = Visit(schema, references);\n            return typeof next === 'object' ? { ...acc, ...next } : next;\n        }, {});\n        if (!Check(schema, references, value))\n            throw new ValueCreateError(schema, 'Intersect produced invalid value. Consider using a default value.');\n        return value;\n    }\n}\nfunction FromIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (function* () { })();\n    }\n}\nfunction FromLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return schema.const;\n    }\n}\nfunction FromNever(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Never types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromNot(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Not types must have a default value');\n    }\n}\nfunction FromNull(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return null;\n    }\n}\nfunction FromNumber(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromObject(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const required = new Set(schema.required);\n        const Acc = {};\n        for (const [key, subschema] of Object.entries(schema.properties)) {\n            if (!required.has(key))\n                continue;\n            Acc[key] = Visit(subschema, references);\n        }\n        return Acc;\n    }\n}\nfunction FromPromise(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Promise.resolve(Visit(schema.item, references));\n    }\n}\nfunction FromRecord(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromRef(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromRegExp(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'RegExp types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromString(schema, references) {\n    if (schema.pattern !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with patterns must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else if (schema.format !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with formats must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else {\n        if (HasPropertyKey(schema, 'default')) {\n            return FromDefault(schema.default);\n        }\n        else if (schema.minLength !== undefined) {\n            // prettier-ignore\n            return Array.from({ length: schema.minLength }).map(() => ' ').join('');\n        }\n        else {\n            return '';\n        }\n    }\n}\nfunction FromSymbol(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if ('value' in schema) {\n        return Symbol.for(schema.value);\n    }\n    else {\n        return Symbol();\n    }\n}\nfunction FromTemplateLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (!IsTemplateLiteralFinite(schema))\n        throw new ValueCreateError(schema, 'Can only create template literals that produce a finite variants. Consider using a default value.');\n    const generated = TemplateLiteralGenerate(schema);\n    return generated[0];\n}\nfunction FromThis(schema, references) {\n    if (recursiveDepth++ > recursiveMaxDepth)\n        throw new ValueCreateError(schema, 'Cannot create recursive type as it appears possibly infinite. Consider using a default.');\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromTuple(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (schema.items === undefined) {\n        return [];\n    }\n    else {\n        return Array.from({ length: schema.minItems }).map((_, index) => Visit(schema.items[index], references));\n    }\n}\nfunction FromUndefined(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction FromUnion(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.anyOf.length === 0) {\n        throw new Error('ValueCreate.Union: Cannot create Union with zero variants');\n    }\n    else {\n        return Visit(schema.anyOf[0], references);\n    }\n}\nfunction FromUint8Array(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minByteLength !== undefined) {\n        return new Uint8Array(schema.minByteLength);\n    }\n    else {\n        return new Uint8Array(0);\n    }\n}\nfunction FromUnknown(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromVoid(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return void 0;\n    }\n}\nfunction FromKind(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new Error('User defined types must specify a default value');\n    }\n}\nfunction Visit(schema, references) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_);\n        case 'Argument':\n            return FromArgument(schema_, references_);\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'BigInt':\n            return FromBigInt(schema_, references_);\n        case 'Boolean':\n            return FromBoolean(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Date':\n            return FromDate(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Import':\n            return FromImport(schema_, references_);\n        case 'Integer':\n            return FromInteger(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Literal':\n            return FromLiteral(schema_, references_);\n        case 'Never':\n            return FromNever(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Null':\n            return FromNull(schema_, references_);\n        case 'Number':\n            return FromNumber(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'RegExp':\n            return FromRegExp(schema_, references_);\n        case 'String':\n            return FromString(schema_, references_);\n        case 'Symbol':\n            return FromSymbol(schema_, references_);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Undefined':\n            return FromUndefined(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_);\n        case 'Unknown':\n            return FromUnknown(schema_, references_);\n        case 'Void':\n            return FromVoid(schema_, references_);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCreateError(schema_, 'Unknown type');\n            return FromKind(schema_, references_);\n    }\n}\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nconst recursiveMaxDepth = 512;\nlet recursiveDepth = 0;\n/** Creates a value from the given schema */\nexport function Create(...args) {\n    recursiveDepth = 0;\n    return args.length === 2 ? Visit(args[0], args[1]) : Visit(args[0], []);\n}\n", "// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsMap, IsSet, IsObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction FromObject(value) {\n    const Acc = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    return Acc;\n}\nfunction FromArray(value) {\n    return value.map((element) => Clone(element));\n}\nfunction FromTypedArray(value) {\n    return value.slice();\n}\nfunction FromMap(value) {\n    return new Map(Clone([...value.entries()]));\n}\nfunction FromSet(value) {\n    return new Set(Clone([...value.entries()]));\n}\nfunction FromDate(value) {\n    return new Date(value.toISOString());\n}\nfunction FromValue(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n    if (IsArray(value))\n        return FromArray(value);\n    if (IsDate(value))\n        return FromDate(value);\n    if (IsTypedArray(value))\n        return FromTypedArray(value);\n    if (IsMap(value))\n        return FromMap(value);\n    if (IsSet(value))\n        return FromSet(value);\n    if (IsObject(value))\n        return FromObject(value);\n    if (IsValueType(value))\n        return FromValue(value);\n    throw new Error('ValueClone: Unable to clone value');\n}\n", "import { KeyOfPropertyKeys } from '../../type/keyof/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { HasPropertyKey, IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsKind } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsKind(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    return value.map((value) => Visit(schema.items, references, value));\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromIntersect(schema, references, value) {\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const intersections = schema.allOf.map((schema) => Visit(schema, references, Clone(value)));\n    const composite = intersections.reduce((acc, value) => (IsObject(value) ? { ...acc, ...value } : value), {});\n    if (!IsObject(value) || !IsObject(composite) || !IsKind(unevaluatedProperties))\n        return composite;\n    const knownkeys = KeyOfPropertyKeys(schema);\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (knownkeys.includes(key))\n            continue;\n        if (Check(unevaluatedProperties, references, value[key])) {\n            composite[key] = Visit(unevaluatedProperties, references, value[key]);\n        }\n    }\n    return composite;\n}\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value; // Check IsArray for AllowArrayObject configuration\n    const additionalProperties = schema.additionalProperties;\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (HasPropertyKey(schema.properties, key)) {\n            value[key] = Visit(schema.properties[key], references, value[key]);\n            continue;\n        }\n        if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    if (!IsObject(value))\n        return value;\n    const additionalProperties = schema.additionalProperties;\n    const propertyKeys = Object.getOwnPropertyNames(value);\n    const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const propertyKeyTest = new RegExp(propertyKey);\n    for (const key of propertyKeys) {\n        if (propertyKeyTest.test(key)) {\n            value[key] = Visit(propertySchema, references, value[key]);\n            continue;\n        }\n        if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    if (IsUndefined(schema.items))\n        return [];\n    const length = Math.min(value.length, schema.items.length);\n    for (let i = 0; i < length; i++) {\n        value[i] = Visit(schema.items[i], references, value[i]);\n    }\n    // prettier-ignore\n    return value.length > length\n        ? value.slice(0, length)\n        : value;\n}\nfunction FromUnion(schema, references, value) {\n    for (const inner of schema.anyOf) {\n        if (IsCheckable(inner) && Check(inner, references, value)) {\n            return Visit(inner, references, value);\n        }\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return value;\n    }\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { Clone } from '../clone/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsObject, IsDate, IsUndefined, IsString, IsNumber, IsBoolean, IsBigInt, IsSymbol, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Conversions\n// ------------------------------------------------------------------\nfunction IsStringNumeric(value) {\n    return IsString(value) && !isNaN(value) && !isNaN(parseFloat(value));\n}\nfunction IsValueToString(value) {\n    return IsBigInt(value) || IsBoolean(value) || IsNumber(value);\n}\nfunction IsValueTrue(value) {\n    return value === true || (IsNumber(value) && value === 1) || (IsBigInt(value) && value === BigInt('1')) || (IsString(value) && (value.toLowerCase() === 'true' || value === '1'));\n}\nfunction IsValueFalse(value) {\n    return value === false || (IsNumber(value) && (value === 0 || Object.is(value, -0))) || (IsBigInt(value) && value === BigInt('0')) || (IsString(value) && (value.toLowerCase() === 'false' || value === '0' || value === '-0'));\n}\nfunction IsTimeStringWithTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateTimeStringWithTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsDateTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateString(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value);\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction TryConvertLiteralString(value, target) {\n    const conversion = TryConvertString(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralNumber(value, target) {\n    const conversion = TryConvertNumber(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralBoolean(value, target) {\n    const conversion = TryConvertBoolean(value);\n    return conversion === target ? conversion : value;\n}\n// prettier-ignore\nfunction TryConvertLiteral(schema, value) {\n    return (IsString(schema.const) ? TryConvertLiteralString(value, schema.const) :\n        IsNumber(schema.const) ? TryConvertLiteralNumber(value, schema.const) :\n            IsBoolean(schema.const) ? TryConvertLiteralBoolean(value, schema.const) :\n                value);\n}\nfunction TryConvertBoolean(value) {\n    return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;\n}\nfunction TryConvertBigInt(value) {\n    const truncateInteger = (value) => value.split('.')[0];\n    return IsStringNumeric(value) ? BigInt(truncateInteger(value)) : IsNumber(value) ? BigInt(Math.trunc(value)) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;\n}\nfunction TryConvertString(value) {\n    return IsSymbol(value) && value.description !== undefined ? value.description.toString() : IsValueToString(value) ? value.toString() : value;\n}\nfunction TryConvertNumber(value) {\n    return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertInteger(value) {\n    return IsStringNumeric(value) ? parseInt(value) : IsNumber(value) ? Math.trunc(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertNull(value) {\n    return IsString(value) && value.toLowerCase() === 'null' ? null : value;\n}\nfunction TryConvertUndefined(value) {\n    return IsString(value) && value === 'undefined' ? undefined : value;\n}\n// ------------------------------------------------------------------\n// note: this function may return an invalid dates for the regex\n// tests above. Invalid dates will however be checked during the\n// casting function and will return a epoch date if invalid.\n// Consider better string parsing for the iso dates in future\n// revisions.\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction TryConvertDate(value) {\n    return (IsDate(value) ? value :\n        IsNumber(value) ? new Date(value) :\n            IsValueTrue(value) ? new Date(1) :\n                IsValueFalse(value) ? new Date(0) :\n                    IsStringNumeric(value) ? new Date(parseInt(value)) :\n                        IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) :\n                            IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) :\n                                IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) :\n                                    IsDateTimeStringWithTimeZone(value) ? new Date(value) :\n                                        IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) :\n                                            value);\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction Default(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const elements = IsArray(value) ? value : [value];\n    return elements.map((element) => Visit(schema.items, references, element));\n}\nfunction FromBigInt(schema, references, value) {\n    return TryConvertBigInt(value);\n}\nfunction FromBoolean(schema, references, value) {\n    return TryConvertBoolean(value);\n}\nfunction FromDate(schema, references, value) {\n    return TryConvertDate(value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromInteger(schema, references, value) {\n    return TryConvertInteger(value);\n}\nfunction FromIntersect(schema, references, value) {\n    return schema.allOf.reduce((value, schema) => Visit(schema, references, value), value);\n}\nfunction FromLiteral(schema, references, value) {\n    return TryConvertLiteral(schema, value);\n}\nfunction FromNull(schema, references, value) {\n    return TryConvertNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    return TryConvertNumber(value);\n}\n// prettier-ignore\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value;\n    for (const propertyKey of Object.getOwnPropertyNames(schema.properties)) {\n        if (!HasPropertyKey(value, propertyKey))\n            continue;\n        value[propertyKey] = Visit(schema.properties[propertyKey], references, value[propertyKey]);\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    const isConvertable = IsObject(value) && !IsArray(value);\n    if (!isConvertable)\n        return value;\n    const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[propertyKey];\n    for (const [propKey, propValue] of Object.entries(value)) {\n        value[propKey] = Visit(property, references, propValue);\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromString(schema, references, value) {\n    return TryConvertString(value);\n}\nfunction FromSymbol(schema, references, value) {\n    return IsString(value) || IsNumber(value) ? Symbol(value) : value;\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, value) {\n    const isConvertable = IsArray(value) && !IsUndefined(schema.items);\n    if (!isConvertable)\n        return value;\n    return value.map((value, index) => {\n        return (index < schema.items.length)\n            ? Visit(schema.items[index], references, value)\n            : value;\n    });\n}\nfunction FromUndefined(schema, references, value) {\n    return TryConvertUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    // Check if original value already matches one of the union variants\n    for (const subschema of schema.anyOf) {\n        if (Check(subschema, references, value)) {\n            return value;\n        }\n    }\n    // Attempt conversion for each variant\n    for (const subschema of schema.anyOf) {\n        const converted = Visit(subschema, references, Clone(value));\n        if (!Check(subschema, references, converted))\n            continue;\n        return converted;\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return Default(value);\n    }\n}\n/** `[Mutable]` Converts any type mismatched values to their target type if a reasonable conversion is possible. */\n// prettier-ignore\nexport function Convert(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasTransform, TransformDecode, TransformDecodeCheckError } from '../transform/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Errors } from '../../errors/index.mjs';\n/** Decodes a value or throws if error */\nexport function Decode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    if (!Check(schema, references, value))\n        throw new TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());\n    return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { HasPropertyKey, IsObject, IsArray, IsValueType, IsUndefined as IsUndefinedValue } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema, IsUndefined } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// thrown externally\n// prettier-ignore\nexport class TransformDecodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`Unable to decode value as it does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformDecodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(error instanceof Error ? error.message : 'Unknown error');\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Decode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Decode(value) : value;\n    }\n    catch (error) {\n        throw new TransformDecodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    return (IsArray(value))\n        ? Default(schema, path, value.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value)))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    if (!IsObject(value) || IsValueType(value))\n        return Default(schema, path, value);\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...value };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromImport(schema, references, path, value) {\n    const additional = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    const result = Visit(target, [...references, ...additional], path, value);\n    return Default(schema, path, result);\n}\nfunction FromNot(schema, references, path, value) {\n    return Default(schema, path, Visit(schema.not, references, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    if (!IsObject(value))\n        return Default(schema, path, value);\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...value };\n    for (const key of knownKeys) {\n        if (!HasPropertyKey(knownProperties, key))\n            continue;\n        // if the property value is undefined, but the target is not, nor does it satisfy exact optional \n        // property policy, then we need to continue. This is a special case for optional property handling \n        // where a transforms wrapped in a optional modifiers should not run.\n        if (IsUndefinedValue(knownProperties[key]) && (!IsUndefined(schema.properties[key]) ||\n            TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))\n            continue;\n        // decode property\n        knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n    }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    if (!IsObject(value))\n        return Default(schema, path, value);\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...value };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    return (IsArray(value) && IsArray(schema.items))\n        ? Default(schema, path, schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value[index])))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        // note: ensure interior is decoded first\n        const decoded = Visit(subschema, references, path, value);\n        return Default(schema, path, decoded);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Import':\n            return FromImport(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'Symbol':\n            return Default(schema_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Decodes the value and returns the result. This function requires that\n * the caller `Check` the value before use. Passing unchecked values may result in\n * undefined behavior. Refer to the `Value.Decode()` for implementation details.\n */\nexport function TransformDecode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { HasPropertyKey, IsObject, IsArray, IsValueType, IsUndefined as IsUndefinedValue } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema, IsUndefined } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TransformEncodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`The encoded value does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformEncodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(`${error instanceof Error ? error.message : 'Unknown error'}`);\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Encode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Encode(value) : value;\n    }\n    catch (error) {\n        throw new TransformEncodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    return IsArray(defaulted)\n        ? defaulted.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value))\n        : defaulted;\n}\n// prettier-ignore\nfunction FromImport(schema, references, path, value) {\n    const additional = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    const result = Default(schema, path, value);\n    return Visit(target, [...references, ...additional], path, result);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(value) || IsValueType(value))\n        return defaulted;\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...defaulted };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(unevaluatedProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromNot(schema, references, path, value) {\n    return Default(schema.not, path, Default(schema, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...defaulted };\n    for (const key of knownKeys) {\n        if (!HasPropertyKey(knownProperties, key))\n            continue;\n        // if the property value is undefined, but the target is not, nor does it satisfy exact optional \n        // property policy, then we need to continue. This is a special case for optional property handling \n        // where a transforms wrapped in a optional modifiers should not run.\n        if (IsUndefinedValue(knownProperties[key]) && (!IsUndefined(schema.properties[key]) ||\n            TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))\n            continue;\n        // encode property\n        knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n    }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(value))\n        return defaulted;\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...defaulted };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    const value1 = Default(schema, path, value);\n    return IsArray(schema.items) ? schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value1[index])) : [];\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    // test value against union variants\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        const value1 = Visit(subschema, references, path, value);\n        return Default(schema, path, value1);\n    }\n    // test transformed value against union variants\n    for (const subschema of schema.anyOf) {\n        const value1 = Visit(subschema, references, path, value);\n        if (!Check(schema, references, value1))\n            continue;\n        return Default(schema, path, value1);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Import':\n            return FromImport(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Encodes the value and returns the result. This function expects the\n * caller to pass a statically checked value. This function does not check the encoded\n * result, meaning the result should be passed to `Check` before use. Refer to the\n * `Value.Encode()` function for implementation details.\n */\nexport function TransformEncode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromImport(schema, references) {\n    const additional = globalThis.Object.getOwnPropertyNames(schema.$defs).reduce((result, key) => [...result, schema.$defs[key]], []);\n    const target = schema.$defs[schema.$ref];\n    return IsTransform(schema) || Visit(target, [...additional, ...references]);\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n    return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    return (IsTransform(schema) ||\n        Object.values(schema.properties).some((schema) => Visit(schema, references)) ||\n        (IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references)));\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[pattern];\n    return IsTransform(schema) || Visit(property, references) || (IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties));\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    return IsTransform(schema) || (!IsUndefined(schema.items) && schema.items.some((schema) => Visit(schema, references)));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    return IsTransform(schema) || schema.anyOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    if (schema.$id && visited.has(schema.$id))\n        return false;\n    if (schema.$id)\n        visited.add(schema.$id);\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Import':\n            return FromImport(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        default:\n            return IsTransform(schema);\n    }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n    visited.clear();\n    return Visit(schema, references);\n}\n", "import { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsFunction, IsObject, IsUndefined, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsKind } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// ValueOrDefault\n// ------------------------------------------------------------------\nfunction ValueOrDefault(schema, value) {\n    const defaultValue = HasPropertyKey(schema, 'default') ? schema.default : undefined;\n    const clone = IsFunction(defaultValue) ? defaultValue() : Clone(defaultValue);\n    return IsUndefined(value) ? clone : IsObject(value) && IsObject(clone) ? Object.assign(clone, value) : value;\n}\n// ------------------------------------------------------------------\n// HasDefaultProperty\n// ------------------------------------------------------------------\nfunction HasDefaultProperty(schema) {\n    return IsKind(schema) && 'default' in schema;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    // if the value is an array, we attempt to initialize it's elements\n    if (IsArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            value[i] = Visit(schema.items, references, value[i]);\n        }\n        return value;\n    }\n    // ... otherwise use default initialization\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted))\n        return defaulted;\n    for (let i = 0; i < defaulted.length; i++) {\n        defaulted[i] = Visit(schema.items, references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromDate(schema, references, value) {\n    // special case intercept for dates\n    return IsDate(value) ? value : ValueOrDefault(schema, value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromIntersect(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    return schema.allOf.reduce((acc, schema) => {\n        const next = Visit(schema, references, defaulted);\n        return IsObject(next) ? { ...acc, ...next } : next;\n    }, {});\n}\nfunction FromObject(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    // return defaulted\n    if (!IsObject(defaulted))\n        return defaulted;\n    const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);\n    // properties\n    for (const key of knownPropertyKeys) {\n        // note: we need to traverse into the object and test if the return value\n        // yielded a non undefined result. Here we interpret an undefined result as\n        // a non assignable property and continue.\n        const propertyValue = Visit(schema.properties[key], references, defaulted[key]);\n        if (IsUndefined(propertyValue))\n            continue;\n        defaulted[key] = Visit(schema.properties[key], references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!HasDefaultProperty(schema.additionalProperties))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKeys.includes(key))\n            continue;\n        defaulted[key] = Visit(schema.additionalProperties, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRecord(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const knownPropertyKey = new RegExp(propertyKeyPattern);\n    // properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (!(knownPropertyKey.test(key) && HasDefaultProperty(propertySchema)))\n            continue;\n        defaulted[key] = Visit(propertySchema, references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!HasDefaultProperty(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKey.test(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, ValueOrDefault(schema, value));\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted) || IsUndefined(schema.items))\n        return defaulted;\n    const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];\n    for (let i = 0; i < max; i++) {\n        if (i < items.length)\n            defaulted[i] = Visit(items[i], references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromUnion(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    for (const inner of schema.anyOf) {\n        const result = Visit(inner, references, Clone(defaulted));\n        if (Check(inner, references, result)) {\n            return result;\n        }\n    }\n    return defaulted;\n}\nfunction Visit(schema, references, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return ValueOrDefault(schema_, value);\n    }\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasPropertyKey, IsStandardObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Equal } from '../equal/equal.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Literal } from '../../type/literal/index.mjs';\nimport { Object } from '../../type/object/index.mjs';\nimport { String } from '../../type/string/index.mjs';\nimport { Unknown } from '../../type/unknown/index.mjs';\nimport { Union } from '../../type/union/index.mjs';\nexport const Insert = Object({\n    type: Literal('insert'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Update = Object({\n    type: Literal('update'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Delete = Object({\n    type: Literal('delete'),\n    path: String(),\n});\nexport const Edit = Union([Insert, Update, Delete]);\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueDiffError extends TypeBoxError {\n    constructor(value, message) {\n        super(message);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// Command Factory\n// ------------------------------------------------------------------\nfunction CreateUpdate(path, value) {\n    return { type: 'update', path, value };\n}\nfunction CreateInsert(path, value) {\n    return { type: 'insert', path, value };\n}\nfunction CreateDelete(path) {\n    return { type: 'delete', path };\n}\n// ------------------------------------------------------------------\n// AssertDiffable\n// ------------------------------------------------------------------\nfunction AssertDiffable(value) {\n    if (globalThis.Object.getOwnPropertySymbols(value).length > 0)\n        throw new ValueDiffError(value, 'Cannot diff objects with symbols');\n}\n// ------------------------------------------------------------------\n// Diffing Generators\n// ------------------------------------------------------------------\nfunction* ObjectType(path, current, next) {\n    AssertDiffable(current);\n    AssertDiffable(next);\n    if (!IsStandardObject(next))\n        return yield CreateUpdate(path, next);\n    const currentKeys = globalThis.Object.getOwnPropertyNames(current);\n    const nextKeys = globalThis.Object.getOwnPropertyNames(next);\n    // ----------------------------------------------------------------\n    // inserts\n    // ----------------------------------------------------------------\n    for (const key of nextKeys) {\n        if (HasPropertyKey(current, key))\n            continue;\n        yield CreateInsert(`${path}/${key}`, next[key]);\n    }\n    // ----------------------------------------------------------------\n    // updates\n    // ----------------------------------------------------------------\n    for (const key of currentKeys) {\n        if (!HasPropertyKey(next, key))\n            continue;\n        if (Equal(current, next))\n            continue;\n        yield* Visit(`${path}/${key}`, current[key], next[key]);\n    }\n    // ----------------------------------------------------------------\n    // deletes\n    // ----------------------------------------------------------------\n    for (const key of currentKeys) {\n        if (HasPropertyKey(next, key))\n            continue;\n        yield CreateDelete(`${path}/${key}`);\n    }\n}\nfunction* ArrayType(path, current, next) {\n    if (!IsArray(next))\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n    for (let i = 0; i < next.length; i++) {\n        if (i < current.length)\n            continue;\n        yield CreateInsert(`${path}/${i}`, next[i]);\n    }\n    for (let i = current.length - 1; i >= 0; i--) {\n        if (i < next.length)\n            continue;\n        yield CreateDelete(`${path}/${i}`);\n    }\n}\nfunction* TypedArrayType(path, current, next) {\n    if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n}\nfunction* ValueType(path, current, next) {\n    if (current === next)\n        return;\n    yield CreateUpdate(path, next);\n}\nfunction* Visit(path, current, next) {\n    if (IsStandardObject(current))\n        return yield* ObjectType(path, current, next);\n    if (IsArray(current))\n        return yield* ArrayType(path, current, next);\n    if (IsTypedArray(current))\n        return yield* TypedArrayType(path, current, next);\n    if (IsValueType(current))\n        return yield* ValueType(path, current, next);\n    throw new ValueDiffError(current, 'Unable to diff value');\n}\n// ------------------------------------------------------------------\n// Diff\n// ------------------------------------------------------------------\nexport function Diff(current, next) {\n    return [...Visit('', current, next)];\n}\n// ------------------------------------------------------------------\n// Patch\n// ------------------------------------------------------------------\nfunction IsRootUpdate(edits) {\n    return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n}\nfunction IsIdentity(edits) {\n    return edits.length === 0;\n}\nexport function Patch(current, edits) {\n    if (IsRootUpdate(edits)) {\n        return Clone(edits[0].value);\n    }\n    if (IsIdentity(edits)) {\n        return Clone(current);\n    }\n    const clone = Clone(current);\n    for (const edit of edits) {\n        switch (edit.type) {\n            case 'insert': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'update': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'delete': {\n                ValuePointer.Delete(clone, edit.path);\n                break;\n            }\n        }\n    }\n    return clone;\n}\n", "export * as ValuePointer from './pointer.mjs';\n", "import { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValuePointerRootSetError extends TypeBoxError {\n    constructor(value, path, update) {\n        super('Cannot set root value');\n        this.value = value;\n        this.path = path;\n        this.update = update;\n    }\n}\nexport class ValuePointerRootDeleteError extends TypeBoxError {\n    constructor(value, path) {\n        super('Cannot delete root value');\n        this.value = value;\n        this.path = path;\n    }\n}\n// ------------------------------------------------------------------\n// ValuePointer\n// ------------------------------------------------------------------\n/** Provides functionality to update values through RFC6901 string pointers */\n// prettier-ignore\nfunction Escape(component) {\n    return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Formats the given pointer into navigable key components */\n// prettier-ignore\nexport function* Format(pointer) {\n    if (pointer === '')\n        return;\n    let [start, end] = [0, 0];\n    for (let i = 0; i < pointer.length; i++) {\n        const char = pointer.charAt(i);\n        if (char === '/') {\n            if (i === 0) {\n                start = i + 1;\n            }\n            else {\n                end = i;\n                yield Escape(pointer.slice(start, end));\n                start = i + 1;\n            }\n        }\n        else {\n            end = i;\n        }\n    }\n    yield Escape(pointer.slice(start));\n}\n/** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\n// prettier-ignore\nexport function Set(value, pointer, update) {\n    if (pointer === '')\n        throw new ValuePointerRootSetError(value, pointer, update);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            next[component] = {};\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    owner[key] = update;\n}\n/** Deletes a value at the given pointer */\n// prettier-ignore\nexport function Delete(value, pointer) {\n    if (pointer === '')\n        throw new ValuePointerRootDeleteError(value, pointer);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined || next[component] === null)\n            return;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    if (Array.isArray(owner)) {\n        const index = parseInt(key);\n        owner.splice(index, 1);\n    }\n    else {\n        delete owner[key];\n    }\n}\n/** Returns true if a value exists at the given pointer */\n// prettier-ignore\nexport function Has(value, pointer) {\n    if (pointer === '')\n        return true;\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            return false;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    return Object.getOwnPropertyNames(owner).includes(key);\n}\n/** Gets the value at the given pointer */\n// prettier-ignore\nexport function Get(value, pointer) {\n    if (pointer === '')\n        return value;\n    let current = value;\n    for (const component of Format(pointer)) {\n        if (current[component] === undefined)\n            return undefined;\n        current = current[component];\n    }\n    return current;\n}\n", "import { IsObject, IsDate, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Equality Checks\n// ------------------------------------------------------------------\nfunction ObjectType(left, right) {\n    if (!IsObject(right))\n        return false;\n    const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];\n    const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];\n    if (leftKeys.length !== rightKeys.length)\n        return false;\n    return leftKeys.every((key) => Equal(left[key], right[key]));\n}\nfunction DateType(left, right) {\n    return IsDate(right) && left.getTime() === right.getTime();\n}\nfunction ArrayType(left, right) {\n    if (!IsArray(right) || left.length !== right.length)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction TypedArrayType(left, right) {\n    if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction ValueType(left, right) {\n    return left === right;\n}\n// ------------------------------------------------------------------\n// Equal\n// ------------------------------------------------------------------\n/** Returns true if the left value deep-equals the right */\nexport function Equal(left, right) {\n    if (IsDate(left))\n        return DateType(left, right);\n    if (IsTypedArray(left))\n        return TypedArrayType(left, right);\n    if (IsArray(left))\n        return ArrayType(left, right);\n    if (IsObject(left))\n        return ObjectType(left, right);\n    if (IsValueType(left))\n        return ValueType(left, right);\n    throw new Error('ValueEquals: Unable to compare value');\n}\n", "import { HasTransform, TransformEncode, TransformEncodeCheckError } from '../transform/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Errors } from '../../errors/index.mjs';\n/** Encodes a value or throws if error */\nexport function Encode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;\n    if (!Check(schema, references, encoded))\n        throw new TransformEncodeCheckError(schema, encoded, Errors(schema, references, encoded).First());\n    return encoded;\n}\n", "import { IsObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// IsStandardObject\n// ------------------------------------------------------------------\nfunction IsStandardObject(value) {\n    return IsObject(value) && !IsArray(value);\n}\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueMutateError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction ObjectType(root, path, current, next) {\n    if (!IsStandardObject(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        const currentKeys = Object.getOwnPropertyNames(current);\n        const nextKeys = Object.getOwnPropertyNames(next);\n        for (const currentKey of currentKeys) {\n            if (!nextKeys.includes(currentKey)) {\n                delete current[currentKey];\n            }\n        }\n        for (const nextKey of nextKeys) {\n            if (!currentKeys.includes(nextKey)) {\n                current[nextKey] = null;\n            }\n        }\n        for (const nextKey of nextKeys) {\n            Visit(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);\n        }\n    }\n}\nfunction ArrayType(root, path, current, next) {\n    if (!IsArray(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        for (let index = 0; index < next.length; index++) {\n            Visit(root, `${path}/${index}`, current[index], next[index]);\n        }\n        current.splice(next.length);\n    }\n}\nfunction TypedArrayType(root, path, current, next) {\n    if (IsTypedArray(current) && current.length === next.length) {\n        for (let i = 0; i < current.length; i++) {\n            current[i] = next[i];\n        }\n    }\n    else {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n}\nfunction ValueType(root, path, current, next) {\n    if (current === next)\n        return;\n    ValuePointer.Set(root, path, next);\n}\nfunction Visit(root, path, current, next) {\n    if (IsArray(next))\n        return ArrayType(root, path, current, next);\n    if (IsTypedArray(next))\n        return TypedArrayType(root, path, current, next);\n    if (IsStandardObject(next))\n        return ObjectType(root, path, current, next);\n    if (IsValueType(next))\n        return ValueType(root, path, current, next);\n}\n// ------------------------------------------------------------------\n// IsNonMutableValue\n// ------------------------------------------------------------------\nfunction IsNonMutableValue(value) {\n    return IsTypedArray(value) || IsValueType(value);\n}\nfunction IsMismatchedValue(current, next) {\n    // prettier-ignore\n    return ((IsStandardObject(current) && IsArray(next)) ||\n        (IsArray(current) && IsStandardObject(next)));\n}\n// ------------------------------------------------------------------\n// Mutate\n// ------------------------------------------------------------------\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references */\nexport function Mutate(current, next) {\n    if (IsNonMutableValue(current) || IsNonMutableValue(next))\n        throw new ValueMutateError('Only object and array types can be mutated at the root level');\n    if (IsMismatchedValue(current, next))\n        throw new ValueMutateError('Cannot assign due type mismatch of assignable values');\n    Visit(current, '', current, next);\n}\n", "import { TypeBoxError } from '../../type/error/index.mjs';\nimport { TransformDecode, TransformEncode, HasTransform } from '../transform/index.mjs';\nimport { Assert } from '../assert/index.mjs';\nimport { Cast } from '../cast/index.mjs';\nimport { Clean } from '../clean/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Convert } from '../convert/index.mjs';\nimport { Default } from '../default/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nimport { IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Error\n// ------------------------------------------------------------------\nexport class ParseError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\n// prettier-ignore\nexport var ParseRegistry;\n(function (ParseRegistry) {\n    const registry = new Map([\n        ['Assert', (type, references, value) => { Assert(type, references, value); return value; }],\n        ['Cast', (type, references, value) => Cast(type, references, value)],\n        ['Clean', (type, references, value) => Clean(type, references, value)],\n        ['Clone', (_type, _references, value) => Clone(value)],\n        ['Convert', (type, references, value) => Convert(type, references, value)],\n        ['Decode', (type, references, value) => (HasTransform(type, references) ? TransformDecode(type, references, value) : value)],\n        ['Default', (type, references, value) => Default(type, references, value)],\n        ['Encode', (type, references, value) => (HasTransform(type, references) ? TransformEncode(type, references, value) : value)],\n    ]);\n    // Deletes an entry from the registry\n    function Delete(key) {\n        registry.delete(key);\n    }\n    ParseRegistry.Delete = Delete;\n    // Sets an entry in the registry\n    function Set(key, callback) {\n        registry.set(key, callback);\n    }\n    ParseRegistry.Set = Set;\n    // Gets an entry in the registry\n    function Get(key) {\n        return registry.get(key);\n    }\n    ParseRegistry.Get = Get;\n})(ParseRegistry || (ParseRegistry = {}));\n// ------------------------------------------------------------------\n// Default Parse Pipeline\n// ------------------------------------------------------------------\n// prettier-ignore\nexport const ParseDefault = [\n    'Clone',\n    'Clean',\n    'Default',\n    'Convert',\n    'Assert',\n    'Decode'\n];\n// ------------------------------------------------------------------\n// ParseValue\n// ------------------------------------------------------------------\nfunction ParseValue(operations, type, references, value) {\n    return operations.reduce((value, operationKey) => {\n        const operation = ParseRegistry.Get(operationKey);\n        if (IsUndefined(operation))\n            throw new ParseError(`Unable to find Parse operation '${operationKey}'`);\n        return operation(type, references, value);\n    }, value);\n}\n/** Parses a value */\nexport function Parse(...args) {\n    // prettier-ignore\n    const [operations, schema, references, value] = (args.length === 4 ? [args[0], args[1], args[2], args[3]] :\n        args.length === 3 ? IsArray(args[0]) ? [args[0], args[1], [], args[2]] : [ParseDefault, args[0], args[1], args[2]] :\n            args.length === 2 ? [ParseDefault, args[0], [], args[1]] :\n                (() => { throw new ParseError('Invalid Arguments'); })());\n    return ParseValue(operations, schema, references, value);\n}\n", "export * as Value from './value.mjs';\n", "export { Errors, ValueErrorIterator } from '../../errors/index.mjs';\nexport { Assert } from '../assert/index.mjs';\nexport { Cast } from '../cast/index.mjs';\nexport { Check } from '../check/index.mjs';\nexport { Clean } from '../clean/index.mjs';\nexport { Clone } from '../clone/index.mjs';\nexport { Convert } from '../convert/index.mjs';\nexport { Create } from '../create/index.mjs';\nexport { Decode } from '../decode/index.mjs';\nexport { Default } from '../default/index.mjs';\nexport { Diff, Patch, Edit } from '../delta/index.mjs';\nexport { Encode } from '../encode/index.mjs';\nexport { Equal } from '../equal/index.mjs';\nexport { Hash } from '../hash/index.mjs';\nexport { Mutate } from '../mutate/index.mjs';\nexport { Parse } from '../parse/index.mjs';\n", "import { TransformEncode, TransformDecode, HasTransform, TransformDecodeCheckError, TransformEncodeCheckError } from '../value/transform/index.mjs';\nimport { Errors } from '../errors/index.mjs';\nimport { TypeSystemPolicy } from '../system/index.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { Never } from '../type/never/index.mjs';\nimport { Ref } from '../type/ref/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsString, IsNumber, IsBigInt } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// TypeCheck\n// ------------------------------------------------------------------\nexport class TypeCheck {\n    constructor(schema, references, checkFunc, code) {\n        this.schema = schema;\n        this.references = references;\n        this.checkFunc = checkFunc;\n        this.code = code;\n        this.hasTransform = HasTransform(schema, references);\n    }\n    /** Returns the generated assertion code used to validate this type. */\n    Code() {\n        return this.code;\n    }\n    /** Returns the schema type used to validate */\n    Schema() {\n        return this.schema;\n    }\n    /** Returns reference types used to validate */\n    References() {\n        return this.references;\n    }\n    /** Returns an iterator for each error in this value. */\n    Errors(value) {\n        return Errors(this.schema, this.references, value);\n    }\n    /** Returns true if the value matches the compiled type. */\n    Check(value) {\n        return this.checkFunc(value);\n    }\n    /** Decodes a value or throws if error */\n    Decode(value) {\n        if (!this.checkFunc(value))\n            throw new TransformDecodeCheckError(this.schema, value, this.Errors(value).First());\n        return (this.hasTransform ? TransformDecode(this.schema, this.references, value) : value);\n    }\n    /** Encodes a value or throws if error */\n    Encode(value) {\n        const encoded = this.hasTransform ? TransformEncode(this.schema, this.references, value) : value;\n        if (!this.checkFunc(encoded))\n            throw new TransformEncodeCheckError(this.schema, value, this.Errors(value).First());\n        return encoded;\n    }\n}\n// ------------------------------------------------------------------\n// Character\n// ------------------------------------------------------------------\nvar Character;\n(function (Character) {\n    function DollarSign(code) {\n        return code === 36;\n    }\n    Character.DollarSign = DollarSign;\n    function IsUnderscore(code) {\n        return code === 95;\n    }\n    Character.IsUnderscore = IsUnderscore;\n    function IsAlpha(code) {\n        return (code >= 65 && code <= 90) || (code >= 97 && code <= 122);\n    }\n    Character.IsAlpha = IsAlpha;\n    function IsNumeric(code) {\n        return code >= 48 && code <= 57;\n    }\n    Character.IsNumeric = IsNumeric;\n})(Character || (Character = {}));\n// ------------------------------------------------------------------\n// MemberExpression\n// ------------------------------------------------------------------\nvar MemberExpression;\n(function (MemberExpression) {\n    function IsFirstCharacterNumeric(value) {\n        if (value.length === 0)\n            return false;\n        return Character.IsNumeric(value.charCodeAt(0));\n    }\n    function IsAccessor(value) {\n        if (IsFirstCharacterNumeric(value))\n            return false;\n        for (let i = 0; i < value.length; i++) {\n            const code = value.charCodeAt(i);\n            const check = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);\n            if (!check)\n                return false;\n        }\n        return true;\n    }\n    function EscapeHyphen(key) {\n        return key.replace(/'/g, \"\\\\'\");\n    }\n    function Encode(object, key) {\n        return IsAccessor(key) ? `${object}.${key}` : `${object}['${EscapeHyphen(key)}']`;\n    }\n    MemberExpression.Encode = Encode;\n})(MemberExpression || (MemberExpression = {}));\n// ------------------------------------------------------------------\n// Identifier\n// ------------------------------------------------------------------\nvar Identifier;\n(function (Identifier) {\n    function Encode($id) {\n        const buffer = [];\n        for (let i = 0; i < $id.length; i++) {\n            const code = $id.charCodeAt(i);\n            if (Character.IsNumeric(code) || Character.IsAlpha(code)) {\n                buffer.push($id.charAt(i));\n            }\n            else {\n                buffer.push(`_${code}_`);\n            }\n        }\n        return buffer.join('').replace(/__/g, '_');\n    }\n    Identifier.Encode = Encode;\n})(Identifier || (Identifier = {}));\n// ------------------------------------------------------------------\n// LiteralString\n// ------------------------------------------------------------------\nvar LiteralString;\n(function (LiteralString) {\n    function Escape(content) {\n        return content.replace(/'/g, \"\\\\'\");\n    }\n    LiteralString.Escape = Escape;\n})(LiteralString || (LiteralString = {}));\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class TypeCompilerUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\nexport class TypeCompilerTypeGuardError extends TypeBoxError {\n    constructor(schema) {\n        super('Preflight validation check failed to guard for the given schema');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Policy\n// ------------------------------------------------------------------\nexport var Policy;\n(function (Policy) {\n    function IsExactOptionalProperty(value, key, expression) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value} ? ${expression} : true)` : `(${MemberExpression.Encode(value, key)} !== undefined ? ${expression} : true)`;\n    }\n    Policy.IsExactOptionalProperty = IsExactOptionalProperty;\n    function IsObjectLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}))` : `(typeof ${value} === 'object' && ${value} !== null)`;\n    }\n    Policy.IsObjectLike = IsObjectLike;\n    function IsRecordLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject\n            ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}) && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`\n            : `(typeof ${value} === 'object' && ${value} !== null && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`;\n    }\n    Policy.IsRecordLike = IsRecordLike;\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? `typeof ${value} === 'number'` : `Number.isFinite(${value})`;\n    }\n    Policy.IsNumberLike = IsNumberLike;\n    function IsVoidLike(value) {\n        return TypeSystemPolicy.AllowNullVoid ? `(${value} === undefined || ${value} === null)` : `${value} === undefined`;\n    }\n    Policy.IsVoidLike = IsVoidLike;\n})(Policy || (Policy = {}));\n/** Compiles Types for Runtime Type Checking */\nexport var TypeCompiler;\n(function (TypeCompiler) {\n    // ----------------------------------------------------------------\n    // Guards\n    // ----------------------------------------------------------------\n    function IsAnyOrUnknown(schema) {\n        return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n    }\n    // ----------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------\n    function* FromAny(schema, references, value) {\n        yield 'true';\n    }\n    function* FromArgument(schema, references, value) {\n        yield 'true';\n    }\n    function* FromArray(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        const [parameter, accumulator] = [CreateParameter('value', 'any'), CreateParameter('acc', 'number')];\n        if (IsNumber(schema.maxItems))\n            yield `${value}.length <= ${schema.maxItems}`;\n        if (IsNumber(schema.minItems))\n            yield `${value}.length >= ${schema.minItems}`;\n        const elementExpression = CreateExpression(schema.items, references, 'value');\n        yield `${value}.every((${parameter}) => ${elementExpression})`;\n        if (IsSchema(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains)) {\n            const containsSchema = IsSchema(schema.contains) ? schema.contains : Never();\n            const checkExpression = CreateExpression(containsSchema, references, 'value');\n            const checkMinContains = IsNumber(schema.minContains) ? [`(count >= ${schema.minContains})`] : [];\n            const checkMaxContains = IsNumber(schema.maxContains) ? [`(count <= ${schema.maxContains})`] : [];\n            const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;\n            const check = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(' && ');\n            yield `((${parameter}) => { ${checkCount}; return ${check}})(${value})`;\n        }\n        if (schema.uniqueItems === true) {\n            const check = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;\n            const block = `const set = new Set(); for(const element of value) { ${check} }`;\n            yield `((${parameter}) => { ${block} )(${value})`;\n        }\n    }\n    function* FromAsyncIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.asyncIterator in ${value})`;\n    }\n    function* FromBigInt(schema, references, value) {\n        yield `(typeof ${value} === 'bigint')`;\n        if (IsBigInt(schema.exclusiveMaximum))\n            yield `${value} < BigInt(${schema.exclusiveMaximum})`;\n        if (IsBigInt(schema.exclusiveMinimum))\n            yield `${value} > BigInt(${schema.exclusiveMinimum})`;\n        if (IsBigInt(schema.maximum))\n            yield `${value} <= BigInt(${schema.maximum})`;\n        if (IsBigInt(schema.minimum))\n            yield `${value} >= BigInt(${schema.minimum})`;\n        if (IsBigInt(schema.multipleOf))\n            yield `(${value} % BigInt(${schema.multipleOf})) === 0`;\n    }\n    function* FromBoolean(schema, references, value) {\n        yield `(typeof ${value} === 'boolean')`;\n    }\n    function* FromConstructor(schema, references, value) {\n        yield* Visit(schema.returns, references, `${value}.prototype`);\n    }\n    function* FromDate(schema, references, value) {\n        yield `(${value} instanceof Date) && Number.isFinite(${value}.getTime())`;\n        if (IsNumber(schema.exclusiveMaximumTimestamp))\n            yield `${value}.getTime() < ${schema.exclusiveMaximumTimestamp}`;\n        if (IsNumber(schema.exclusiveMinimumTimestamp))\n            yield `${value}.getTime() > ${schema.exclusiveMinimumTimestamp}`;\n        if (IsNumber(schema.maximumTimestamp))\n            yield `${value}.getTime() <= ${schema.maximumTimestamp}`;\n        if (IsNumber(schema.minimumTimestamp))\n            yield `${value}.getTime() >= ${schema.minimumTimestamp}`;\n        if (IsNumber(schema.multipleOfTimestamp))\n            yield `(${value}.getTime() % ${schema.multipleOfTimestamp}) === 0`;\n    }\n    function* FromFunction(schema, references, value) {\n        yield `(typeof ${value} === 'function')`;\n    }\n    function* FromImport(schema, references, value) {\n        const members = globalThis.Object.getOwnPropertyNames(schema.$defs).reduce((result, key) => {\n            return [...result, schema.$defs[key]];\n        }, []);\n        yield* Visit(Ref(schema.$ref), [...references, ...members], value);\n    }\n    function* FromInteger(schema, references, value) {\n        yield `Number.isInteger(${value})`;\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromIntersect(schema, references, value) {\n        const check1 = schema.allOf.map((schema) => CreateExpression(schema, references, value)).join(' && ');\n        if (schema.unevaluatedProperties === false) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key))`;\n            yield `(${check1} && ${check2})`;\n        }\n        else if (IsSchema(schema.unevaluatedProperties)) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema.unevaluatedProperties, references, `${value}[key]`)})`;\n            yield `(${check1} && ${check2})`;\n        }\n        else {\n            yield `(${check1})`;\n        }\n    }\n    function* FromIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.iterator in ${value})`;\n    }\n    function* FromLiteral(schema, references, value) {\n        if (typeof schema.const === 'number' || typeof schema.const === 'boolean') {\n            yield `(${value} === ${schema.const})`;\n        }\n        else {\n            yield `(${value} === '${LiteralString.Escape(schema.const)}')`;\n        }\n    }\n    function* FromNever(schema, references, value) {\n        yield `false`;\n    }\n    function* FromNot(schema, references, value) {\n        const expression = CreateExpression(schema.not, references, value);\n        yield `(!${expression})`;\n    }\n    function* FromNull(schema, references, value) {\n        yield `(${value} === null)`;\n    }\n    function* FromNumber(schema, references, value) {\n        yield Policy.IsNumberLike(value);\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromObject(schema, references, value) {\n        yield Policy.IsObjectLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const knownKeys = Object.getOwnPropertyNames(schema.properties);\n        for (const knownKey of knownKeys) {\n            const memberExpression = MemberExpression.Encode(value, knownKey);\n            const property = schema.properties[knownKey];\n            if (schema.required && schema.required.includes(knownKey)) {\n                yield* Visit(property, references, memberExpression);\n                if (ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property))\n                    yield `('${knownKey}' in ${value})`;\n            }\n            else {\n                const expression = CreateExpression(property, references, memberExpression);\n                yield Policy.IsExactOptionalProperty(value, knownKey, expression);\n            }\n        }\n        if (schema.additionalProperties === false) {\n            if (schema.required && schema.required.length === knownKeys.length) {\n                yield `Object.getOwnPropertyNames(${value}).length === ${knownKeys.length}`;\n            }\n            else {\n                const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n                yield `Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key))`;\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            const expression = CreateExpression(schema.additionalProperties, references, `${value}[key]`);\n            const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n            yield `(Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key) || ${expression}))`;\n        }\n    }\n    function* FromPromise(schema, references, value) {\n        yield `${value} instanceof Promise`;\n    }\n    function* FromRecord(schema, references, value) {\n        yield Policy.IsRecordLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n        const variable = CreateVariable(`${new RegExp(patternKey)}`);\n        const check1 = CreateExpression(patternSchema, references, 'value');\n        const check2 = IsSchema(schema.additionalProperties) ? CreateExpression(schema.additionalProperties, references, value) : schema.additionalProperties === false ? 'false' : 'true';\n        const expression = `(${variable}.test(key) ? ${check1} : ${check2})`;\n        yield `(Object.entries(${value}).every(([key, value]) => ${expression}))`;\n    }\n    function* FromRef(schema, references, value) {\n        const target = Deref(schema, references);\n        // Reference: If we have seen this reference before we can just yield and return the function call.\n        // If this isn't the case we defer to visit to generate and set the function for subsequent passes.\n        if (state.functions.has(schema.$ref))\n            return yield `${CreateFunctionName(schema.$ref)}(${value})`;\n        yield* Visit(target, references, value);\n    }\n    function* FromRegExp(schema, references, value) {\n        const variable = CreateVariable(`${new RegExp(schema.source, schema.flags)};`);\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        yield `${variable}.test(${value})`;\n    }\n    function* FromString(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        if (schema.pattern !== undefined) {\n            const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n            yield `${variable}.test(${value})`;\n        }\n        if (schema.format !== undefined) {\n            yield `format('${schema.format}', ${value})`;\n        }\n    }\n    function* FromSymbol(schema, references, value) {\n        yield `(typeof ${value} === 'symbol')`;\n    }\n    function* FromTemplateLiteral(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n        yield `${variable}.test(${value})`;\n    }\n    function* FromThis(schema, references, value) {\n        // Note: This types are assured to be hoisted prior to this call. Just yield the function.\n        yield `${CreateFunctionName(schema.$ref)}(${value})`;\n    }\n    function* FromTuple(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        if (schema.items === undefined)\n            return yield `${value}.length === 0`;\n        yield `(${value}.length === ${schema.maxItems})`;\n        for (let i = 0; i < schema.items.length; i++) {\n            const expression = CreateExpression(schema.items[i], references, `${value}[${i}]`);\n            yield `${expression}`;\n        }\n    }\n    function* FromUndefined(schema, references, value) {\n        yield `${value} === undefined`;\n    }\n    function* FromUnion(schema, references, value) {\n        const expressions = schema.anyOf.map((schema) => CreateExpression(schema, references, value));\n        yield `(${expressions.join(' || ')})`;\n    }\n    function* FromUint8Array(schema, references, value) {\n        yield `${value} instanceof Uint8Array`;\n        if (IsNumber(schema.maxByteLength))\n            yield `(${value}.length <= ${schema.maxByteLength})`;\n        if (IsNumber(schema.minByteLength))\n            yield `(${value}.length >= ${schema.minByteLength})`;\n    }\n    function* FromUnknown(schema, references, value) {\n        yield 'true';\n    }\n    function* FromVoid(schema, references, value) {\n        yield Policy.IsVoidLike(value);\n    }\n    function* FromKind(schema, references, value) {\n        const instance = state.instances.size;\n        state.instances.set(instance, schema);\n        yield `kind('${schema[Kind]}', ${instance}, ${value})`;\n    }\n    function* Visit(schema, references, value, useHoisting = true) {\n        const references_ = IsString(schema.$id) ? [...references, schema] : references;\n        const schema_ = schema;\n        // --------------------------------------------------------------\n        // Hoisting\n        // --------------------------------------------------------------\n        if (useHoisting && IsString(schema.$id)) {\n            const functionName = CreateFunctionName(schema.$id);\n            if (state.functions.has(functionName)) {\n                return yield `${functionName}(${value})`;\n            }\n            else {\n                // Note: In the case of cyclic types, we need to create a 'functions' record\n                // to prevent infinitely re-visiting the CreateFunction. Subsequent attempts\n                // to visit will be caught by the above condition.\n                state.functions.set(functionName, '<deferred>');\n                const functionCode = CreateFunction(functionName, schema, references, 'value', false);\n                state.functions.set(functionName, functionCode);\n                return yield `${functionName}(${value})`;\n            }\n        }\n        switch (schema_[Kind]) {\n            case 'Any':\n                return yield* FromAny(schema_, references_, value);\n            case 'Argument':\n                return yield* FromArgument(schema_, references_, value);\n            case 'Array':\n                return yield* FromArray(schema_, references_, value);\n            case 'AsyncIterator':\n                return yield* FromAsyncIterator(schema_, references_, value);\n            case 'BigInt':\n                return yield* FromBigInt(schema_, references_, value);\n            case 'Boolean':\n                return yield* FromBoolean(schema_, references_, value);\n            case 'Constructor':\n                return yield* FromConstructor(schema_, references_, value);\n            case 'Date':\n                return yield* FromDate(schema_, references_, value);\n            case 'Function':\n                return yield* FromFunction(schema_, references_, value);\n            case 'Import':\n                return yield* FromImport(schema_, references_, value);\n            case 'Integer':\n                return yield* FromInteger(schema_, references_, value);\n            case 'Intersect':\n                return yield* FromIntersect(schema_, references_, value);\n            case 'Iterator':\n                return yield* FromIterator(schema_, references_, value);\n            case 'Literal':\n                return yield* FromLiteral(schema_, references_, value);\n            case 'Never':\n                return yield* FromNever(schema_, references_, value);\n            case 'Not':\n                return yield* FromNot(schema_, references_, value);\n            case 'Null':\n                return yield* FromNull(schema_, references_, value);\n            case 'Number':\n                return yield* FromNumber(schema_, references_, value);\n            case 'Object':\n                return yield* FromObject(schema_, references_, value);\n            case 'Promise':\n                return yield* FromPromise(schema_, references_, value);\n            case 'Record':\n                return yield* FromRecord(schema_, references_, value);\n            case 'Ref':\n                return yield* FromRef(schema_, references_, value);\n            case 'RegExp':\n                return yield* FromRegExp(schema_, references_, value);\n            case 'String':\n                return yield* FromString(schema_, references_, value);\n            case 'Symbol':\n                return yield* FromSymbol(schema_, references_, value);\n            case 'TemplateLiteral':\n                return yield* FromTemplateLiteral(schema_, references_, value);\n            case 'This':\n                return yield* FromThis(schema_, references_, value);\n            case 'Tuple':\n                return yield* FromTuple(schema_, references_, value);\n            case 'Undefined':\n                return yield* FromUndefined(schema_, references_, value);\n            case 'Union':\n                return yield* FromUnion(schema_, references_, value);\n            case 'Uint8Array':\n                return yield* FromUint8Array(schema_, references_, value);\n            case 'Unknown':\n                return yield* FromUnknown(schema_, references_, value);\n            case 'Void':\n                return yield* FromVoid(schema_, references_, value);\n            default:\n                if (!TypeRegistry.Has(schema_[Kind]))\n                    throw new TypeCompilerUnknownTypeError(schema);\n                return yield* FromKind(schema_, references_, value);\n        }\n    }\n    // ----------------------------------------------------------------\n    // Compiler State\n    // ----------------------------------------------------------------\n    // prettier-ignore\n    const state = {\n        language: 'javascript', // target language\n        functions: new Map(), // local functions\n        variables: new Map(), // local variables\n        instances: new Map() // exterior kind instances\n    };\n    // ----------------------------------------------------------------\n    // Compiler Factory\n    // ----------------------------------------------------------------\n    function CreateExpression(schema, references, value, useHoisting = true) {\n        return `(${[...Visit(schema, references, value, useHoisting)].join(' && ')})`;\n    }\n    function CreateFunctionName($id) {\n        return `check_${Identifier.Encode($id)}`;\n    }\n    function CreateVariable(expression) {\n        const variableName = `local_${state.variables.size}`;\n        state.variables.set(variableName, `const ${variableName} = ${expression}`);\n        return variableName;\n    }\n    function CreateFunction(name, schema, references, value, useHoisting = true) {\n        const [newline, pad] = ['\\n', (length) => ''.padStart(length, ' ')];\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const expression = [...Visit(schema, references, value, useHoisting)].map((expression) => `${pad(4)}${expression}`).join(` &&${newline}`);\n        return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\\n}`;\n    }\n    function CreateParameter(name, type) {\n        const annotation = state.language === 'typescript' ? `: ${type}` : '';\n        return `${name}${annotation}`;\n    }\n    function CreateReturns(type) {\n        return state.language === 'typescript' ? `: ${type}` : '';\n    }\n    // ----------------------------------------------------------------\n    // Compile\n    // ----------------------------------------------------------------\n    function Build(schema, references, options) {\n        const functionCode = CreateFunction('check', schema, references, 'value'); // will populate functions and variables\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const functions = [...state.functions.values()];\n        const variables = [...state.variables.values()];\n        // prettier-ignore\n        const checkFunction = IsString(schema.$id) // ensure top level schemas with $id's are hoisted\n            ? `return function check(${parameter})${returns} {\\n  return ${CreateFunctionName(schema.$id)}(value)\\n}`\n            : `return ${functionCode}`;\n        return [...variables, ...functions, checkFunction].join('\\n');\n    }\n    /** Generates the code used to assert this type and returns it as a string */\n    function Code(...args) {\n        const defaults = { language: 'javascript' };\n        // prettier-ignore\n        const [schema, references, options] = (args.length === 2 && IsArray(args[1]) ? [args[0], args[1], defaults] :\n            args.length === 2 && !IsArray(args[1]) ? [args[0], [], args[1]] :\n                args.length === 3 ? [args[0], args[1], args[2]] :\n                    args.length === 1 ? [args[0], [], defaults] :\n                        [null, [], defaults]);\n        // compiler-reset\n        state.language = options.language;\n        state.variables.clear();\n        state.functions.clear();\n        state.instances.clear();\n        if (!IsSchema(schema))\n            throw new TypeCompilerTypeGuardError(schema);\n        for (const schema of references)\n            if (!IsSchema(schema))\n                throw new TypeCompilerTypeGuardError(schema);\n        return Build(schema, references, options);\n    }\n    TypeCompiler.Code = Code;\n    /** Compiles a TypeBox type for optimal runtime type checking. Types must be valid TypeBox types of TSchema */\n    function Compile(schema, references = []) {\n        const generatedCode = Code(schema, references, { language: 'javascript' });\n        const compiledFunction = globalThis.Function('kind', 'format', 'hash', generatedCode);\n        const instances = new Map(state.instances);\n        function typeRegistryFunction(kind, instance, value) {\n            if (!TypeRegistry.Has(kind) || !instances.has(instance))\n                return false;\n            const checkFunc = TypeRegistry.Get(kind);\n            const schema = instances.get(instance);\n            return checkFunc(schema, value);\n        }\n        function formatRegistryFunction(format, value) {\n            if (!FormatRegistry.Has(format))\n                return false;\n            const checkFunc = FormatRegistry.Get(format);\n            return checkFunc(value);\n        }\n        function hashFunction(value) {\n            return Hash(value);\n        }\n        const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);\n        return new TypeCheck(schema, references, checkFunction, generatedCode);\n    }\n    TypeCompiler.Compile = Compile;\n})(TypeCompiler || (TypeCompiler = {}));\n", "// src/index.ts\nimport { TypeCompiler } from \"@sinclair/typebox/compiler\";\nvar Kind = Symbol.for(\"TypeBox.Kind\");\nvar Hint = Symbol.for(\"TypeBox.Hint\");\nvar isSpecialProperty = (name) => /(\\ |-|\\t|\\n)/.test(name) || !isNaN(+name[0]);\nvar joinProperty = (v1, v2, isOptional = false) => {\n  if (typeof v2 === \"number\") return `${v1}[${v2}]`;\n  if (isSpecialProperty(v2)) return `${v1}${isOptional ? \"?.\" : \"\"}[\"${v2}\"]`;\n  return `${v1}${isOptional ? \"?\" : \"\"}.${v2}`;\n};\nvar encodeProperty = (v) => isSpecialProperty(v) ? `\"${v}\"` : v;\nvar sanitize = (key, sanitize2 = 0, schema) => {\n  if (schema.type !== \"string\" || schema.const || schema.trusted) return key;\n  let hof = \"\";\n  for (let i = sanitize2 - 1; i >= 0; i--) hof += `d.h${i}(`;\n  return hof + key + \")\".repeat(sanitize2);\n};\nvar mergeObjectIntersection = (schema) => {\n  if (!schema.allOf || Kind in schema && (schema[Kind] !== \"Intersect\" || schema.type !== \"object\"))\n    return schema;\n  const { allOf, ...newSchema } = schema;\n  newSchema.properties = {};\n  if (Kind in newSchema) newSchema[Kind] = \"Object\";\n  for (const type of allOf) {\n    if (type.type !== \"object\") continue;\n    const { properties, required, type: _, [Kind]: __, ...rest } = type;\n    if (required)\n      newSchema.required = newSchema.required ? newSchema.required.concat(required) : required;\n    Object.assign(newSchema, rest);\n    for (const property in type.properties)\n      newSchema.properties[property] = mergeObjectIntersection(\n        type.properties[property]\n      );\n  }\n  return newSchema;\n};\nvar handleRecord = (schema, property, instruction) => {\n  const child = schema.patternProperties[\"^(.*)$\"] ?? schema.patternProperties[Object.keys(schema.patternProperties)[0]];\n  if (!child) return property;\n  const i = instruction.array;\n  instruction.array++;\n  let v = `(()=>{const ar${i}s=Object.keys(${property}),ar${i}v={};for(let i=0;i<ar${i}s.length;i++){const ar${i}p=${property}[ar${i}s[i]];ar${i}v[ar${i}s[i]]=${mirror(child, `ar${i}p`, instruction)}`;\n  const optionals = instruction.optionalsInArray[i + 1];\n  if (optionals)\n    for (let oi = 0; oi < optionals.length; oi++) {\n      const target = `ar${i}v[ar${i}s[i]].${optionals[oi]}`;\n      v += `;if(${target}===undefined)delete ${target}`;\n    }\n  v += `}return ar${i}v})()`;\n  return v;\n};\nvar handleTuple = (schema, property, instruction) => {\n  const i = instruction.array;\n  instruction.array++;\n  const isRoot = property === \"v\" && !instruction.unions.length;\n  let v = \"\";\n  if (!isRoot) v = `(()=>{`;\n  v += `const ar${i}v=[`;\n  for (let i2 = 0; i2 < schema.length; i2++) {\n    if (i2 !== 0) v += \",\";\n    v += mirror(\n      schema[i2],\n      joinProperty(property, i2, instruction.parentIsOptional),\n      instruction\n    );\n  }\n  v += `];`;\n  if (!isRoot) v += `return ar${i}v})()`;\n  return v;\n};\nfunction deepClone(source, weak = /* @__PURE__ */ new WeakMap()) {\n  if (source === null || typeof source !== \"object\" || typeof source === \"function\")\n    return source;\n  if (weak.has(source)) return weak.get(source);\n  if (Array.isArray(source)) {\n    const copy = new Array(source.length);\n    weak.set(source, copy);\n    for (let i = 0; i < source.length; i++)\n      copy[i] = deepClone(source[i], weak);\n    return copy;\n  }\n  if (typeof source === \"object\") {\n    const keys = Object.keys(source).concat(\n      Object.getOwnPropertySymbols(source)\n    );\n    const cloned = {};\n    for (const key of keys)\n      cloned[key] = deepClone(source[key], weak);\n    return cloned;\n  }\n  return source;\n}\nvar handleUnion = (schemas, property, instruction) => {\n  if (instruction.TypeCompiler === void 0) {\n    if (!instruction.typeCompilerWanred) {\n      console.warn(\n        new Error(\n          \"[exact-mirror] TypeBox's TypeCompiler is required to use Union\"\n        )\n      );\n      instruction.typeCompilerWanred = true;\n    }\n    return property;\n  }\n  instruction.unionKeys[property] = 1;\n  const ui = instruction.unions.length;\n  const typeChecks = instruction.unions[ui] = [];\n  let v = `(()=>{\n`;\n  const unwrapRef = (type) => {\n    if (!(Kind in type) || !type.$ref) return type;\n    if (type[Kind] === \"This\") {\n      return deepClone(instruction.definitions[type.$ref]);\n    } else if (type[Kind] === \"Ref\") {\n      if (!instruction.modules)\n        console.warn(\n          new Error(\n            \"[exact-mirror] modules is required when using nested cyclic reference\"\n          )\n        );\n      else\n        return instruction.modules.Import(\n          type.$ref\n        );\n    }\n    return type;\n  };\n  for (let i = 0; i < schemas.length; i++) {\n    let type = unwrapRef(schemas[i]);\n    if (Array.isArray(type.anyOf))\n      for (let i2 = 0; i2 < type.anyOf.length; i2++)\n        type.anyOf[i2] = unwrapRef(type.anyOf[i2]);\n    else if (type.items) {\n      if (Array.isArray(type.items))\n        for (let i2 = 0; i2 < type.items.length; i2++)\n          type.items[i2] = unwrapRef(type.items[i2]);\n      else type.items = unwrapRef(type.items);\n    }\n    typeChecks.push(TypeCompiler.Compile(type));\n    v += `if(d.unions[${ui}][${i}].Check(${property})){return ${mirror(\n      type,\n      property,\n      {\n        ...instruction,\n        recursion: instruction.recursion + 1,\n        parentIsOptional: true\n      }\n    )}}\n`;\n  }\n  v += `return ${instruction.removeUnknownUnionType ? \"undefined\" : property}})()`;\n  return v;\n};\nvar mirror = (schema, property, instruction) => {\n  if (!schema) return \"\";\n  const isRoot = property === \"v\" && !instruction.unions.length;\n  if (Kind in schema && schema[Kind] === \"Import\" && schema.$ref in schema.$defs)\n    return mirror(schema.$defs[schema.$ref], property, {\n      ...instruction,\n      definitions: Object.assign(instruction.definitions, schema.$defs)\n    });\n  if (isRoot && schema.type !== \"object\" && schema.type !== \"array\" && !schema.anyOf)\n    return `return ${sanitize(\"v\", instruction.sanitize?.length, schema)}`;\n  if (instruction.recursion >= instruction.recursionLimit) return property;\n  let v = \"\";\n  if (schema.$id && Hint in schema)\n    instruction.definitions[schema.$id] = schema;\n  switch (schema.type) {\n    case \"object\":\n      if (schema[Kind] === \"Record\") {\n        v = handleRecord(schema, property, instruction);\n        break;\n      }\n      schema = mergeObjectIntersection(schema);\n      v += \"{\";\n      if (schema.additionalProperties) v += `...${property},`;\n      const keys = Object.keys(schema.properties);\n      for (let i2 = 0; i2 < keys.length; i2++) {\n        const key = keys[i2];\n        let isOptional = (\n          // all fields are optional\n          !schema.required || // field is explicitly required\n          schema.required && !schema.required.includes(key) || Array.isArray(schema.properties[key].anyOf)\n        );\n        const name = joinProperty(\n          property,\n          key,\n          instruction.parentIsOptional\n        );\n        if (isOptional) {\n          const index = instruction.array;\n          if (property.startsWith(\"ar\")) {\n            const refName = name.slice(name.indexOf(\".\") + 1);\n            const array = instruction.optionalsInArray;\n            if (array[index]) array[index].push(refName);\n            else array[index] = [refName];\n          } else {\n            instruction.optionals.push(name);\n          }\n        }\n        const child = schema.properties[key];\n        if (i2 !== 0) v += \",\";\n        v += `${encodeProperty(key)}:${isOptional ? `${name}===undefined?undefined:` : \"\"}${mirror(\n          child,\n          name,\n          {\n            ...instruction,\n            recursion: instruction.recursion + 1,\n            parentIsOptional: isOptional\n          }\n        )}`;\n      }\n      v += \"}\";\n      break;\n    case \"array\":\n      if (schema.items.type !== \"object\" && schema.items.type !== \"array\") {\n        if (Array.isArray(schema.items)) {\n          v = handleTuple(schema.items, property, instruction);\n          break;\n        } else if (isRoot) return \"return v\";\n        else if (Kind in schema.items && schema.items.$ref && (schema.items[Kind] === \"Ref\" || schema.items[Kind] === \"This\"))\n          v = mirror(\n            deepClone(instruction.definitions[schema.items.$ref]),\n            property,\n            {\n              ...instruction,\n              parentIsOptional: true,\n              recursion: instruction.recursion + 1\n            }\n          );\n        else {\n          v = property;\n          break;\n        }\n      }\n      const i = instruction.array;\n      instruction.array++;\n      let reference = property;\n      if (isRoot) v = `const ar${i}v=new Array(${property}.length);`;\n      else {\n        reference = `ar${i}s`;\n        v = `((${reference})=>{const ar${i}v=new Array(${reference}.length);`;\n      }\n      v += `for(let i=0;i<${reference}.length;i++){const ar${i}p=${reference}[i];ar${i}v[i]=${mirror(schema.items, `ar${i}p`, instruction)}`;\n      const optionals = instruction.optionalsInArray[i + 1];\n      if (optionals) {\n        for (let oi = 0; oi < optionals.length; oi++) {\n          const target = `ar${i}v[i].${optionals[oi]}`;\n          v += `;if(${target}===undefined)delete ${target}`;\n        }\n      }\n      v += `}`;\n      if (!isRoot) v += `return ar${i}v})(${property})`;\n      break;\n    default:\n      if (schema.$ref && schema.$ref in instruction.definitions)\n        return mirror(\n          instruction.definitions[schema.$ref],\n          property,\n          instruction\n        );\n      if (Array.isArray(schema.anyOf)) {\n        v = handleUnion(schema.anyOf, property, instruction);\n        break;\n      }\n      v = sanitize(property, instruction.sanitize?.length, schema);\n      break;\n  }\n  if (!isRoot) return v;\n  if (schema.type === \"array\") {\n    v = `${v}const x=ar0v;`;\n  } else {\n    v = `const x=${v}\n`;\n  }\n  for (let i = 0; i < instruction.optionals.length; i++) {\n    const key = instruction.optionals[i];\n    const prop = key.slice(1);\n    v += `if(${key}===undefined`;\n    if (instruction.unionKeys[key]) v += `||x${prop}===undefined`;\n    const shouldQuestion = prop.charCodeAt(0) !== 63 && schema.type !== \"array\";\n    v += `)delete x${shouldQuestion ? prop.charCodeAt(0) === 91 ? \"?.\" : \"?\" : \"\"}${prop}\n`;\n  }\n  return `${v}return x`;\n};\nvar createMirror = (schema, {\n  TypeCompiler: TypeCompiler2,\n  modules,\n  definitions,\n  sanitize: sanitize2,\n  recursionLimit = 8,\n  removeUnknownUnionType = false\n} = {}) => {\n  const unions = [];\n  if (typeof sanitize2 === \"function\") sanitize2 = [sanitize2];\n  const f = mirror(schema, \"v\", {\n    optionals: [],\n    optionalsInArray: [],\n    array: 0,\n    parentIsOptional: false,\n    unions,\n    unionKeys: {},\n    TypeCompiler: TypeCompiler2,\n    modules,\n    // @ts-ignore private property\n    definitions: definitions ?? modules?.$defs ?? {},\n    sanitize: sanitize2,\n    recursion: 0,\n    recursionLimit,\n    removeUnknownUnionType\n  });\n  if (!unions.length && !sanitize2?.length) return Function(\"v\", f);\n  let hof;\n  if (sanitize2?.length) {\n    hof = {};\n    for (let i = 0; i < sanitize2.length; i++) hof[`h${i}`] = sanitize2[i];\n  }\n  return Function(\n    \"d\",\n    `return function mirror(v){${f}}`\n  )({\n    unions,\n    ...hof\n  });\n};\nvar index_default = createMirror;\nexport {\n  createMirror,\n  deepClone,\n  index_default as default,\n  mergeObjectIntersection\n};\n", "/**\r\n * Todo Controller\r\n *\r\n * @author    Syed Tajamul\r\n * @copyright Eonyx Infotech LLP\r\n * @link      https://eonyx.io\r\n */\r\n\r\nimport Elysia, { error, t } from \"elysia\";\r\nimport { eq } from \"drizzle-orm\";\r\nimport { createInsertSchema, createUpdateSchema } from \"drizzle-typebox\";\r\nimport { todos } from \"../db/schema/todo\";\r\nimport { db } from \"../db/schema\";\r\nimport { failure, success } from \"../utils/response\";\r\nimport { TParamsId } from \"../utils/validation\";\r\nimport { genId } from \"../utils/id\";\r\nimport { omitFields } from \"../db/schema/common\";\r\n\r\n\r\nconst CreateTodoDTO = createInsertSchema(todos);\r\nconst UpdateTodoDTO = createUpdateSchema(todos);\r\n\r\nexport const TodoController = new Elysia({\r\n    prefix: \"todos\",\r\n    detail: {\r\n        tags: [\"Todos\"],\r\n    }\r\n})\r\n    .get(\"\", async () => {\r\n        const rows = await db.select().from(todos);\r\n        return success({ todos: rows });\r\n    })\r\n\r\n    .get(\r\n        \"/:id\",\r\n        async ({ params: { id } }) => {\r\n            const rows = await db\r\n                .select()\r\n                .from(todos)\r\n                .where(eq(todos.id, id))\r\n                .limit(1);\r\n\r\n            if (!rows.length) {\r\n                return error(404, failure(\"Todo not found.\"));\r\n            }\r\n\r\n            return success({ todo: rows[0] });\r\n        },\r\n        { params: TParamsId }\r\n    )\r\n\r\n    .post(\r\n        \"\",\r\n        async ({ body, set }) => {\r\n            const insertData = {\r\n                id: genId(\"todo\"),\r\n                title: body.title,\r\n                description: body.description,\r\n            };\r\n\r\n            const rows = await db\r\n                .insert(todos)\r\n                .values(insertData)\r\n                .returning();\r\n\r\n            set.status = 201;\r\n            return success({ todo: rows[0] });\r\n        },\r\n        {\r\n            body: t.Omit(CreateTodoDTO, omitFields)\r\n        }\r\n    )\r\n\r\n    .put(\r\n        \"/:id\",\r\n        async ({ params: { id }, body }) => {\r\n            const rows = await db\r\n                .update(todos)\r\n                .set(body)\r\n                .where(eq(todos.id, id))\r\n                .returning();\r\n\r\n            if (!rows.length) {\r\n                return error(404, failure(\"Todo not found.\"));\r\n            }\r\n\r\n            return success({ todo: rows[0] });\r\n        },\r\n        { params: TParamsId, body: UpdateTodoDTO }\r\n    )\r\n", "import type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport type { Relation } from './relations.ts';\nimport type { View } from './sql/sql.ts';\nimport { SQL, sql } from './sql/sql.ts';\nimport { Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class ColumnAliasProxyHandler<TColumn extends Column> implements ProxyHandler<TColumn> {\n\tstatic readonly [entityKind]: string = 'ColumnAliasProxyHandler';\n\n\tconstructor(private table: Table | View) {}\n\n\tget(columnObj: TColumn, prop: string | symbol): any {\n\t\tif (prop === 'table') {\n\t\t\treturn this.table;\n\t\t}\n\n\t\treturn columnObj[prop as keyof TColumn];\n\t}\n}\n\nexport class TableAliasProxyHandler<T extends Table | View> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'TableAliasProxyHandler';\n\n\tconstructor(private alias: string, private replaceOriginalName: boolean) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === Table.Symbol.IsAlias) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (prop === Table.Symbol.Name) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (this.replaceOriginalName && prop === Table.Symbol.OriginalName) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...target[ViewBaseConfig as keyof typeof target],\n\t\t\t\tname: this.alias,\n\t\t\t\tisAlias: true,\n\t\t\t};\n\t\t}\n\n\t\tif (prop === Table.Symbol.Columns) {\n\t\t\tconst columns = (target as Table)[Table.Symbol.Columns];\n\t\t\tif (!columns) {\n\t\t\t\treturn columns;\n\t\t\t}\n\n\t\t\tconst proxiedColumns: { [key: string]: any } = {};\n\n\t\t\tObject.keys(columns).map((key) => {\n\t\t\t\tproxiedColumns[key] = new Proxy(\n\t\t\t\t\tcolumns[key]!,\n\t\t\t\t\tnew ColumnAliasProxyHandler(new Proxy(target, this)),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn proxiedColumns;\n\t\t}\n\n\t\tconst value = target[prop as keyof typeof target];\n\t\tif (is(value, Column)) {\n\t\t\treturn new Proxy(value as AnyColumn, new ColumnAliasProxyHandler(new Proxy(target, this)));\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\nexport class RelationTableAliasProxyHandler<T extends Relation> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'RelationTableAliasProxyHandler';\n\n\tconstructor(private alias: string) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === 'sourceTable') {\n\t\t\treturn aliasedTable(target.sourceTable, this.alias);\n\t\t}\n\n\t\treturn target[prop as keyof typeof target];\n\t}\n}\n\nexport function aliasedTable<T extends Table | View>(\n\ttable: T,\n\ttableAlias: string,\n): T {\n\treturn new Proxy(table, new TableAliasProxyHandler(tableAlias, false)) as any;\n}\n\nexport function aliasedRelation<T extends Relation>(relation: T, tableAlias: string): T {\n\treturn new Proxy(relation, new RelationTableAliasProxyHandler(tableAlias));\n}\n\nexport function aliasedTableColumn<T extends AnyColumn>(column: T, tableAlias: string): T {\n\treturn new Proxy(\n\t\tcolumn,\n\t\tnew ColumnAliasProxyHandler(new Proxy(column.table, new TableAliasProxyHandler(tableAlias, false))),\n\t);\n}\n\nexport function mapColumnsInAliasedSQLToAlias(query: SQL.Aliased, alias: string): SQL.Aliased {\n\treturn new SQL.Aliased(mapColumnsInSQLToAlias(query.sql, alias), query.fieldAlias);\n}\n\nexport function mapColumnsInSQLToAlias(query: SQL, alias: string): SQL {\n\treturn sql.join(query.queryChunks.map((c) => {\n\t\tif (is(c, Column)) {\n\t\t\treturn aliasedTableColumn(c, alias);\n\t\t}\n\t\tif (is(c, SQL)) {\n\t\t\treturn mapColumnsInSQLToAlias(c, alias);\n\t\t}\n\t\tif (is(c, SQL.Aliased)) {\n\t\t\treturn mapColumnsInAliasedSQLToAlias(c, alias);\n\t\t}\n\t\treturn c;\n\t}));\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tGeneratedColumnConfig,\n\tGeneratedIdentityConfig,\n} from './column-builder.ts';\nimport { entityKind } from './entity.ts';\nimport type { DriverValueMapper, SQL, SQLWrapper } from './sql/sql.ts';\nimport type { Table } from './table.ts';\nimport type { Update } from './utils.ts';\n\nexport interface ColumnBaseConfig<\n\tTDataType extends ColumnDataType,\n\tTColumnType extends string,\n> extends ColumnBuilderBaseConfig<TDataType, TColumnType> {\n\ttableName: string;\n\tnotNull: boolean;\n\thasDefault: boolean;\n\tisPrimaryKey: boolean;\n\tisAutoincrement: boolean;\n\thasRuntimeDefault: boolean;\n}\n\nexport type ColumnTypeConfig<T extends ColumnBaseConfig<ColumnDataType, string>, TTypeConfig extends object> = T & {\n\tbrand: 'Column';\n\ttableName: T['tableName'];\n\tname: T['name'];\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: T['data'];\n\tdriverParam: T['driverParam'];\n\tnotNull: T['notNull'];\n\thasDefault: T['hasDefault'];\n\tisPrimaryKey: T['isPrimaryKey'];\n\tisAutoincrement: T['isAutoincrement'];\n\thasRuntimeDefault: T['hasRuntimeDefault'];\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseColumn: infer U } ? U : unknown;\n\tgenerated: GeneratedColumnConfig<T['data']> | undefined;\n\tidentity: undefined | 'always' | 'byDefault';\n} & TTypeConfig;\n\nexport type ColumnRuntimeConfig<TData, TRuntimeConfig extends object> = ColumnBuilderRuntimeConfig<\n\tTData,\n\tTRuntimeConfig\n>;\n\nexport interface Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTRuntimeConfig extends object = object,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTTypeConfig extends object = object,\n> extends DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n/*\n\t`Column` only accepts a full `ColumnConfig` as its generic.\n\tTo infer parts of the config, use `AnyColumn` that accepts a partial config.\n\tSee `GetColumnData` for example usage of inferring.\n*/\nexport abstract class Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n> implements DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Column';\n\n\tdeclare readonly _: ColumnTypeConfig<T, TTypeConfig>;\n\n\treadonly name: string;\n\treadonly keyAsName: boolean;\n\treadonly primary: boolean;\n\treadonly notNull: boolean;\n\treadonly default: T['data'] | SQL | undefined;\n\treadonly defaultFn: (() => T['data'] | SQL) | undefined;\n\treadonly onUpdateFn: (() => T['data'] | SQL) | undefined;\n\treadonly hasDefault: boolean;\n\treadonly isUnique: boolean;\n\treadonly uniqueName: string | undefined;\n\treadonly uniqueType: string | undefined;\n\treadonly dataType: T['dataType'];\n\treadonly columnType: T['columnType'];\n\treadonly enumValues: T['enumValues'] = undefined;\n\treadonly generated: GeneratedColumnConfig<T['data']> | undefined = undefined;\n\treadonly generatedIdentity: GeneratedIdentityConfig | undefined = undefined;\n\n\tprotected config: ColumnRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(\n\t\treadonly table: Table,\n\t\tconfig: ColumnRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tthis.config = config;\n\t\tthis.name = config.name;\n\t\tthis.keyAsName = config.keyAsName;\n\t\tthis.notNull = config.notNull;\n\t\tthis.default = config.default;\n\t\tthis.defaultFn = config.defaultFn;\n\t\tthis.onUpdateFn = config.onUpdateFn;\n\t\tthis.hasDefault = config.hasDefault;\n\t\tthis.primary = config.primaryKey;\n\t\tthis.isUnique = config.isUnique;\n\t\tthis.uniqueName = config.uniqueName;\n\t\tthis.uniqueType = config.uniqueType;\n\t\tthis.dataType = config.dataType as T['dataType'];\n\t\tthis.columnType = config.columnType;\n\t\tthis.generated = config.generated;\n\t\tthis.generatedIdentity = config.generatedIdentity;\n\t}\n\n\tabstract getSQLType(): string;\n\n\tmapFromDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\tmapToDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\t// ** @internal */\n\tshouldDisableInsert(): boolean {\n\t\treturn this.config.generated !== undefined && this.config.generated.type !== 'byDefault';\n\t}\n}\n\nexport type UpdateColConfig<\n\tT extends ColumnBaseConfig<ColumnDataType, string>,\n\tTUpdate extends Partial<ColumnBaseConfig<ColumnDataType, string>>,\n> = Update<T, TUpdate>;\n\nexport type AnyColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = Column<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport type GetColumnData<TColumn extends Column, TInferMode extends 'query' | 'raw' = 'query'> =\n\t// dprint-ignore\n\tTInferMode extends 'raw' // Raw mode\n\t\t? TColumn['_']['data'] // Just return the underlying type\n\t\t: TColumn['_']['notNull'] extends true // Query mode\n\t\t? TColumn['_']['data'] // Query mode, not null\n\t\t: TColumn['_']['data'] | null; // Query mode, nullable\n\nexport type InferColumnsDataTypes<TColumns extends Record<string, Column>> = {\n\t[Key in keyof TColumns]: GetColumnData<TColumns[Key], 'query'>;\n};\n", "export const entityKind = Symbol.for('drizzle:entityKind');\nexport const hasOwnEntityKind = Symbol.for('drizzle:hasOwnEntityKind');\n\nexport interface DrizzleEntity {\n\t[entityKind]: string;\n}\n\nexport type DrizzleEntityClass<T> =\n\t& ((abstract new(...args: any[]) => T) | (new(...args: any[]) => T))\n\t& DrizzleEntity;\n\nexport function is<T extends DrizzleEntityClass<any>>(value: any, type: T): value is InstanceType<T> {\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (value instanceof type) { // eslint-disable-line no-instanceof/no-instanceof\n\t\treturn true;\n\t}\n\n\tif (!Object.prototype.hasOwnProperty.call(type, entityKind)) {\n\t\tthrow new Error(\n\t\t\t`Class \"${\n\t\t\t\ttype.name ?? '<unknown>'\n\t\t\t}\" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`,\n\t\t);\n\t}\n\n\tlet cls = Object.getPrototypeOf(value).constructor;\n\tif (cls) {\n\t\t// Traverse the prototype chain to find the entityKind\n\t\twhile (cls) {\n\t\t\tif (entityKind in cls && cls[entityKind] === type[entityKind]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcls = Object.getPrototypeOf(cls);\n\t\t}\n\t}\n\n\treturn false;\n}\n", "import type { CasingCache } from '~/casing.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { isPgEnum } from '~/pg-core/columns/enum.ts';\nimport type { SelectResult } from '~/query-builders/select.types.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { Assume, Equal } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { AnyColumn } from '../column.ts';\nimport { Column } from '../column.ts';\nimport { IsAlias, Table } from '../table.ts';\n\n/**\n * This class is used to indicate a primitive param value that is used in `sql` tag.\n * It is only used on type level and is never instantiated at runtime.\n * If you see a value of this type in the code, its runtime value is actually the primitive param value.\n */\nexport class FakePrimitiveParam {\n\tstatic readonly [entityKind]: string = 'FakePrimitiveParam';\n}\n\nexport type Chunk =\n\t| string\n\t| Table\n\t| View\n\t| AnyColumn\n\t| Name\n\t| Param\n\t| Placeholder\n\t| SQL;\n\nexport interface BuildQueryConfig {\n\tcasing: CasingCache;\n\tescapeName(name: string): string;\n\tescapeParam(num: number, value: unknown): string;\n\tescapeString(str: string): string;\n\tprepareTyping?: (encoder: DriverValueEncoder<unknown, unknown>) => QueryTypingsValue;\n\tparamStartIndex?: { value: number };\n\tinlineParams?: boolean;\n\tinvokeSource?: 'indexes' | undefined;\n}\n\nexport type QueryTypingsValue = 'json' | 'decimal' | 'time' | 'timestamp' | 'uuid' | 'date' | 'none';\n\nexport interface Query {\n\tsql: string;\n\tparams: unknown[];\n}\n\nexport interface QueryWithTypings extends Query {\n\ttypings?: QueryTypingsValue[];\n}\n\n/**\n * Any value that implements the `getSQL` method. The implementations include:\n * - `Table`\n * - `Column`\n * - `View`\n * - `Subquery`\n * - `SQL`\n * - `SQL.Aliased`\n * - `Placeholder`\n * - `Param`\n */\nexport interface SQLWrapper {\n\tgetSQL(): SQL;\n\tshouldOmitSQLParens?(): boolean;\n}\n\nexport function isSQLWrapper(value: unknown): value is SQLWrapper {\n\treturn value !== null && value !== undefined && typeof (value as any).getSQL === 'function';\n}\n\nfunction mergeQueries(queries: QueryWithTypings[]): QueryWithTypings {\n\tconst result: QueryWithTypings = { sql: '', params: [] };\n\tfor (const query of queries) {\n\t\tresult.sql += query.sql;\n\t\tresult.params.push(...query.params);\n\t\tif (query.typings?.length) {\n\t\t\tif (!result.typings) {\n\t\t\t\tresult.typings = [];\n\t\t\t}\n\t\t\tresult.typings.push(...query.typings);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class StringChunk implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'StringChunk';\n\n\treadonly value: string[];\n\n\tconstructor(value: string | string[]) {\n\t\tthis.value = Array.isArray(value) ? value : [value];\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\nexport class SQL<T = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'SQL';\n\n\tdeclare _: {\n\t\tbrand: 'SQL';\n\t\ttype: T;\n\t};\n\n\t/** @internal */\n\tdecoder: DriverValueDecoder<T, any> = noopDecoder;\n\tprivate shouldInlineParams = false;\n\n\t/** @internal */\n\tusedTables: string[] = [];\n\n\tconstructor(readonly queryChunks: SQLChunk[]) {\n\t\tfor (const chunk of queryChunks) {\n\t\t\tif (is(chunk, Table)) {\n\t\t\t\tconst schemaName = chunk[Table.Symbol.Schema];\n\n\t\t\t\tthis.usedTables.push(\n\t\t\t\t\tschemaName === undefined\n\t\t\t\t\t\t? chunk[Table.Symbol.Name]\n\t\t\t\t\t\t: schemaName + '.' + chunk[Table.Symbol.Name],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tappend(query: SQL): this {\n\t\tthis.queryChunks.push(...query.queryChunks);\n\t\treturn this;\n\t}\n\n\ttoQuery(config: BuildQueryConfig): QueryWithTypings {\n\t\treturn tracer.startActiveSpan('drizzle.buildSQL', (span) => {\n\t\t\tconst query = this.buildQueryFromSourceParams(this.queryChunks, config);\n\t\t\tspan?.setAttributes({\n\t\t\t\t'drizzle.query.text': query.sql,\n\t\t\t\t'drizzle.query.params': JSON.stringify(query.params),\n\t\t\t});\n\t\t\treturn query;\n\t\t});\n\t}\n\n\tbuildQueryFromSourceParams(chunks: SQLChunk[], _config: BuildQueryConfig): Query {\n\t\tconst config = Object.assign({}, _config, {\n\t\t\tinlineParams: _config.inlineParams || this.shouldInlineParams,\n\t\t\tparamStartIndex: _config.paramStartIndex || { value: 0 },\n\t\t});\n\n\t\tconst {\n\t\t\tcasing,\n\t\t\tescapeName,\n\t\t\tescapeParam,\n\t\t\tprepareTyping,\n\t\t\tinlineParams,\n\t\t\tparamStartIndex,\n\t\t} = config;\n\n\t\treturn mergeQueries(chunks.map((chunk): QueryWithTypings => {\n\t\t\tif (is(chunk, StringChunk)) {\n\t\t\t\treturn { sql: chunk.value.join(''), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Name)) {\n\t\t\t\treturn { sql: escapeName(chunk.value), params: [] };\n\t\t\t}\n\n\t\t\tif (chunk === undefined) {\n\t\t\t\treturn { sql: '', params: [] };\n\t\t\t}\n\n\t\t\tif (Array.isArray(chunk)) {\n\t\t\t\tconst result: SQLChunk[] = [new StringChunk('(')];\n\t\t\t\tfor (const [i, p] of chunk.entries()) {\n\t\t\t\t\tresult.push(p);\n\t\t\t\t\tif (i < chunk.length - 1) {\n\t\t\t\t\t\tresult.push(new StringChunk(', '));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(new StringChunk(')'));\n\t\t\t\treturn this.buildQueryFromSourceParams(result, config);\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL)) {\n\t\t\t\treturn this.buildQueryFromSourceParams(chunk.queryChunks, {\n\t\t\t\t\t...config,\n\t\t\t\t\tinlineParams: inlineParams || chunk.shouldInlineParams,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (is(chunk, Table)) {\n\t\t\t\tconst schemaName = chunk[Table.Symbol.Schema];\n\t\t\t\tconst tableName = chunk[Table.Symbol.Name];\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined || chunk[IsAlias]\n\t\t\t\t\t\t? escapeName(tableName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(tableName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Column)) {\n\t\t\t\tconst columnName = casing.getColumnCasing(chunk);\n\t\t\t\tif (_config.invokeSource === 'indexes') {\n\t\t\t\t\treturn { sql: escapeName(columnName), params: [] };\n\t\t\t\t}\n\n\t\t\t\tconst schemaName = chunk.table[Table.Symbol.Schema];\n\t\t\t\treturn {\n\t\t\t\t\tsql: chunk.table[IsAlias] || schemaName === undefined\n\t\t\t\t\t\t? escapeName(chunk.table[Table.Symbol.Name]) + '.' + escapeName(columnName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(chunk.table[Table.Symbol.Name]) + '.'\n\t\t\t\t\t\t\t+ escapeName(columnName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, View)) {\n\t\t\t\tconst schemaName = chunk[ViewBaseConfig].schema;\n\t\t\t\tconst viewName = chunk[ViewBaseConfig].name;\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined || chunk[ViewBaseConfig].isAlias\n\t\t\t\t\t\t? escapeName(viewName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(viewName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Param)) {\n\t\t\t\tif (is(chunk.value, Placeholder)) {\n\t\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t\t}\n\n\t\t\t\tconst mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);\n\n\t\t\t\tif (is(mappedValue, SQL)) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([mappedValue], config);\n\t\t\t\t}\n\n\t\t\t\tif (inlineParams) {\n\t\t\t\t\treturn { sql: this.mapInlineParam(mappedValue, config), params: [] };\n\t\t\t\t}\n\n\t\t\t\tlet typings: QueryTypingsValue[] = ['none'];\n\t\t\t\tif (prepareTyping) {\n\t\t\t\t\ttypings = [prepareTyping(chunk.encoder)];\n\t\t\t\t}\n\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };\n\t\t\t}\n\n\t\t\tif (is(chunk, Placeholder)) {\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL.Aliased) && chunk.fieldAlias !== undefined) {\n\t\t\t\treturn { sql: escapeName(chunk.fieldAlias), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Subquery)) {\n\t\t\t\tif (chunk._.isWith) {\n\t\t\t\t\treturn { sql: escapeName(chunk._.alias), params: [] };\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk._.sql,\n\t\t\t\t\tnew StringChunk(') '),\n\t\t\t\t\tnew Name(chunk._.alias),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (isPgEnum(chunk)) {\n\t\t\t\tif (chunk.schema) {\n\t\t\t\t\treturn { sql: escapeName(chunk.schema) + '.' + escapeName(chunk.enumName), params: [] };\n\t\t\t\t}\n\t\t\t\treturn { sql: escapeName(chunk.enumName), params: [] };\n\t\t\t}\n\n\t\t\tif (isSQLWrapper(chunk)) {\n\t\t\t\tif (chunk.shouldOmitSQLParens?.()) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([chunk.getSQL()], config);\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk.getSQL(),\n\t\t\t\t\tnew StringChunk(')'),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (inlineParams) {\n\t\t\t\treturn { sql: this.mapInlineParam(chunk, config), params: [] };\n\t\t\t}\n\n\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t}));\n\t}\n\n\tprivate mapInlineParam(\n\t\tchunk: unknown,\n\t\t{ escapeString }: BuildQueryConfig,\n\t): string {\n\t\tif (chunk === null) {\n\t\t\treturn 'null';\n\t\t}\n\t\tif (typeof chunk === 'number' || typeof chunk === 'boolean') {\n\t\t\treturn chunk.toString();\n\t\t}\n\t\tif (typeof chunk === 'string') {\n\t\t\treturn escapeString(chunk);\n\t\t}\n\t\tif (typeof chunk === 'object') {\n\t\t\tconst mappedValueAsString = chunk.toString();\n\t\t\tif (mappedValueAsString === '[object Object]') {\n\t\t\t\treturn escapeString(JSON.stringify(chunk));\n\t\t\t}\n\t\t\treturn escapeString(mappedValueAsString);\n\t\t}\n\t\tthrow new Error('Unexpected param value: ' + chunk);\n\t}\n\n\tgetSQL(): SQL {\n\t\treturn this;\n\t}\n\n\tas(alias: string): SQL.Aliased<T>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(): SQL<TData>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(alias: string): SQL.Aliased<TData>;\n\tas(alias?: string): SQL<T> | SQL.Aliased<T> {\n\t\t// TODO: remove with deprecated overloads\n\t\tif (alias === undefined) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new SQL.Aliased(this, alias);\n\t}\n\n\tmapWith<\n\t\tTDecoder extends\n\t\t\t| DriverValueDecoder<any, any>\n\t\t\t| DriverValueDecoder<any, any>['mapFromDriverValue'],\n\t>(decoder: TDecoder): SQL<GetDecoderResult<TDecoder>> {\n\t\tthis.decoder = typeof decoder === 'function' ? { mapFromDriverValue: decoder } : decoder;\n\t\treturn this as SQL<GetDecoderResult<TDecoder>>;\n\t}\n\n\tinlineParams(): this {\n\t\tthis.shouldInlineParams = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * This method is used to conditionally include a part of the query.\n\t *\n\t * @param condition - Condition to check\n\t * @returns itself if the condition is `true`, otherwise `undefined`\n\t */\n\tif(condition: any | undefined): this | undefined {\n\t\treturn condition ? this : undefined;\n\t}\n}\n\nexport type GetDecoderResult<T> = T extends Column ? T['_']['data'] : T extends\n\t| DriverValueDecoder<infer TData, any>\n\t| DriverValueDecoder<infer TData, any>['mapFromDriverValue'] ? TData\n: never;\n\n/**\n * Any DB name (table, column, index etc.)\n */\nexport class Name implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Name';\n\n\tprotected brand!: 'Name';\n\n\tconstructor(readonly value: string) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/**\n * Any DB name (table, column, index etc.)\n * @deprecated Use `sql.identifier` instead.\n */\nexport function name(value: string): Name {\n\treturn new Name(value);\n}\n\nexport interface DriverValueDecoder<TData, TDriverParam> {\n\tmapFromDriverValue(value: TDriverParam): TData;\n}\n\nexport interface DriverValueEncoder<TData, TDriverParam> {\n\tmapToDriverValue(value: TData): TDriverParam | SQL;\n}\n\nexport function isDriverValueEncoder(value: unknown): value is DriverValueEncoder<any, any> {\n\treturn typeof value === 'object' && value !== null && 'mapToDriverValue' in value\n\t\t&& typeof (value as any).mapToDriverValue === 'function';\n}\n\nexport const noopDecoder: DriverValueDecoder<any, any> = {\n\tmapFromDriverValue: (value) => value,\n};\n\nexport const noopEncoder: DriverValueEncoder<any, any> = {\n\tmapToDriverValue: (value) => value,\n};\n\nexport interface DriverValueMapper<TData, TDriverParam>\n\textends DriverValueDecoder<TData, TDriverParam>, DriverValueEncoder<TData, TDriverParam>\n{}\n\nexport const noopMapper: DriverValueMapper<any, any> = {\n\t...noopDecoder,\n\t...noopEncoder,\n};\n\n/** Parameter value that is optionally bound to an encoder (for example, a column). */\nexport class Param<TDataType = unknown, TDriverParamType = TDataType> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Param';\n\n\tprotected brand!: 'BoundParamValue';\n\n\t/**\n\t * @param value - Parameter value\n\t * @param encoder - Encoder to convert the value to a driver parameter\n\t */\n\tconstructor(\n\t\treadonly value: TDataType,\n\t\treadonly encoder: DriverValueEncoder<TDataType, TDriverParamType> = noopEncoder,\n\t) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.param` instead. */\nexport function param<TData, TDriver>(\n\tvalue: TData,\n\tencoder?: DriverValueEncoder<TData, TDriver>,\n): Param<TData, TDriver> {\n\treturn new Param(value, encoder);\n}\n\n/**\n * Anything that can be passed to the `` sql`...` `` tagged function.\n */\nexport type SQLChunk =\n\t| StringChunk\n\t| SQLChunk[]\n\t| SQLWrapper\n\t| SQL\n\t| Table\n\t| View\n\t| Subquery\n\t| AnyColumn\n\t| Param\n\t| Name\n\t| undefined\n\t| FakePrimitiveParam\n\t| Placeholder;\n\nexport function sql<T>(strings: TemplateStringsArray, ...params: any[]): SQL<T>;\n/*\n\tThe type of `params` is specified as `SQLChunk[]`, but that's slightly incorrect -\n\tin runtime, users won't pass `FakePrimitiveParam` instances as `params` - they will pass primitive values\n\twhich will be wrapped in `Param`. That's why the overload specifies `params` as `any[]` and not as `SQLSourceParam[]`.\n\tThis type is used to make our lives easier and the type checker happy.\n*/\nexport function sql(strings: TemplateStringsArray, ...params: SQLChunk[]): SQL {\n\tconst queryChunks: SQLChunk[] = [];\n\tif (params.length > 0 || (strings.length > 0 && strings[0] !== '')) {\n\t\tqueryChunks.push(new StringChunk(strings[0]!));\n\t}\n\tfor (const [paramIndex, param] of params.entries()) {\n\t\tqueryChunks.push(param, new StringChunk(strings[paramIndex + 1]!));\n\t}\n\n\treturn new SQL(queryChunks);\n}\n\nexport namespace sql {\n\texport function empty(): SQL {\n\t\treturn new SQL([]);\n\t}\n\n\t/** @deprecated - use `sql.join()` */\n\texport function fromList(list: SQLChunk[]): SQL {\n\t\treturn new SQL(list);\n\t}\n\n\t/**\n\t * Convenience function to create an SQL query from a raw string.\n\t * @param str The raw SQL query string.\n\t */\n\texport function raw(str: string): SQL {\n\t\treturn new SQL([new StringChunk(str)]);\n\t}\n\n\t/**\n\t * Join a list of SQL chunks with a separator.\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`]);\n\t * // sql`abc`\n\t * ```\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`], sql`, `);\n\t * // sql`a, b, c`\n\t * ```\n\t */\n\texport function join(chunks: SQLChunk[], separator?: SQLChunk): SQL {\n\t\tconst result: SQLChunk[] = [];\n\t\tfor (const [i, chunk] of chunks.entries()) {\n\t\t\tif (i > 0 && separator !== undefined) {\n\t\t\t\tresult.push(separator);\n\t\t\t}\n\t\t\tresult.push(chunk);\n\t\t}\n\t\treturn new SQL(result);\n\t}\n\n\t/**\n\t * Create a SQL chunk that represents a DB identifier (table, column, index etc.).\n\t * When used in a query, the identifier will be escaped based on the DB engine.\n\t * For example, in PostgreSQL, identifiers are escaped with double quotes.\n\t *\n\t * **WARNING: This function does not offer any protection against SQL injections, so you must validate any user input beforehand.**\n\t *\n\t * @example ```ts\n\t * const query = sql`SELECT * FROM ${sql.identifier('my-table')}`;\n\t * // 'SELECT * FROM \"my-table\"'\n\t * ```\n\t */\n\texport function identifier(value: string): Name {\n\t\treturn new Name(value);\n\t}\n\n\texport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\t\treturn new Placeholder(name);\n\t}\n\n\texport function param<TData, TDriver>(\n\t\tvalue: TData,\n\t\tencoder?: DriverValueEncoder<TData, TDriver>,\n\t): Param<TData, TDriver> {\n\t\treturn new Param(value, encoder);\n\t}\n}\n\nexport namespace SQL {\n\texport class Aliased<T = unknown> implements SQLWrapper {\n\t\tstatic readonly [entityKind]: string = 'SQL.Aliased';\n\n\t\tdeclare _: {\n\t\t\tbrand: 'SQL.Aliased';\n\t\t\ttype: T;\n\t\t};\n\n\t\t/** @internal */\n\t\tisSelectionField = false;\n\n\t\tconstructor(\n\t\t\treadonly sql: SQL,\n\t\t\treadonly fieldAlias: string,\n\t\t) {}\n\n\t\tgetSQL(): SQL {\n\t\t\treturn this.sql;\n\t\t}\n\n\t\t/** @internal */\n\t\tclone() {\n\t\t\treturn new Aliased(this.sql, this.fieldAlias);\n\t\t}\n\t}\n}\n\nexport class Placeholder<TName extends string = string, TValue = any> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Placeholder';\n\n\tdeclare protected: TValue;\n\n\tconstructor(readonly name: TName) {}\n\n\tgetSQL(): SQL {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.placeholder` instead. */\nexport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\treturn new Placeholder(name);\n}\n\nexport function fillPlaceholders(params: unknown[], values: Record<string, unknown>): unknown[] {\n\treturn params.map((p) => {\n\t\tif (is(p, Placeholder)) {\n\t\t\tif (!(p.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn values[p.name];\n\t\t}\n\n\t\tif (is(p, Param) && is(p.value, Placeholder)) {\n\t\t\tif (!(p.value.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.value.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn p.encoder.mapToDriverValue(values[p.value.name]);\n\t\t}\n\n\t\treturn p;\n\t});\n}\n\nexport type ColumnsSelection = Record<string, unknown>;\n\nconst IsDrizzleView = Symbol.for('drizzle:IsDrizzleView');\n\nexport abstract class View<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelection extends ColumnsSelection = ColumnsSelection,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'View';\n\n\tdeclare _: {\n\t\tbrand: 'View';\n\t\tviewBrand: string;\n\t\tname: TName;\n\t\texisting: TExisting;\n\t\tselectedFields: TSelection;\n\t};\n\n\t/** @internal */\n\t[ViewBaseConfig]: {\n\t\tname: TName;\n\t\toriginalName: TName;\n\t\tschema: string | undefined;\n\t\tselectedFields: ColumnsSelection;\n\t\tisExisting: TExisting;\n\t\tquery: TExisting extends true ? undefined : SQL;\n\t\tisAlias: boolean;\n\t};\n\n\t/** @internal */\n\t[IsDrizzleView] = true;\n\n\tdeclare readonly $inferSelect: InferSelectViewModel<View<Assume<TName, string>, TExisting, TSelection>>;\n\n\tconstructor(\n\t\t{ name, schema, selectedFields, query }: {\n\t\t\tname: TName;\n\t\t\tschema: string | undefined;\n\t\t\tselectedFields: ColumnsSelection;\n\t\t\tquery: SQL | undefined;\n\t\t},\n\t) {\n\t\tthis[ViewBaseConfig] = {\n\t\t\tname,\n\t\t\toriginalName: name,\n\t\t\tschema,\n\t\t\tselectedFields,\n\t\t\tquery: query as (TExisting extends true ? undefined : SQL),\n\t\t\tisExisting: !query as TExisting,\n\t\t\tisAlias: false,\n\t\t};\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\nexport function isView(view: unknown): view is View {\n\treturn typeof view === 'object' && view !== null && IsDrizzleView in view;\n}\n\nexport function getViewName<T extends View>(view: T): T['_']['name'] {\n\treturn view[ViewBaseConfig].name;\n}\n\nexport type InferSelectViewModel<TView extends View> =\n\tEqual<TView['_']['selectedFields'], { [x: string]: unknown }> extends true ? { [x: string]: unknown }\n\t\t: SelectResult<\n\t\t\tTView['_']['selectedFields'],\n\t\t\t'single',\n\t\t\tRecord<TView['_']['name'], 'not-null'>\n\t\t>;\n\n// Defined separately from the Column class to resolve circular dependency\nColumn.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Table class to resolve circular dependency\nTable.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Column class to resolve circular dependency\nSubquery.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { NonArray, Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\n// Enum as ts enum\n\nexport type PgEnumObjectColumnBuilderInitial<TName extends string, TValues extends object> = PgEnumObjectColumnBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgEnumObjectColumn';\n\tdata: TValues[keyof TValues];\n\tenumValues: string[];\n\tdriverParam: string;\n}>;\n\nexport interface PgEnumObject<TValues extends object> {\n\t(): PgEnumObjectColumnBuilderInitial<'', TValues>;\n\t<TName extends string>(name: TName): PgEnumObjectColumnBuilderInitial<TName, TValues>;\n\t<TName extends string>(name?: TName): PgEnumObjectColumnBuilderInitial<TName, TValues>;\n\n\treadonly enumName: string;\n\treadonly enumValues: string[];\n\treadonly schema: string | undefined;\n\t/** @internal */\n\t[isPgEnumSym]: true;\n}\n\nexport class PgEnumObjectColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgEnumObjectColumn'> & { enumValues: string[] },\n> extends PgColumnBuilder<T, { enum: PgEnumObject<any> }> {\n\tstatic override readonly [entityKind]: string = 'PgEnumObjectColumnBuilder';\n\n\tconstructor(name: T['name'], enumInstance: PgEnumObject<any>) {\n\t\tsuper(name, 'string', 'PgEnumObjectColumn');\n\t\tthis.config.enum = enumInstance;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgEnumObjectColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgEnumObjectColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgEnumObjectColumn<T extends ColumnBaseConfig<'string', 'PgEnumObjectColumn'> & { enumValues: object }>\n\textends PgColumn<T, { enum: PgEnumObject<object> }>\n{\n\tstatic override readonly [entityKind]: string = 'PgEnumObjectColumn';\n\n\treadonly enum;\n\toverride readonly enumValues = this.config.enum.enumValues;\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgEnumObjectColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.enum = config.enum;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.enum.enumName;\n\t}\n}\n\n// Enum as string union\n\nexport type PgEnumColumnBuilderInitial<TName extends string, TValues extends [string, ...string[]]> =\n\tPgEnumColumnBuilder<{\n\t\tname: TName;\n\t\tdataType: 'string';\n\t\tcolumnType: 'PgEnumColumn';\n\t\tdata: TValues[number];\n\t\tenumValues: TValues;\n\t\tdriverParam: string;\n\t}>;\n\nconst isPgEnumSym = Symbol.for('drizzle:isPgEnum');\nexport interface PgEnum<TValues extends [string, ...string[]]> {\n\t(): PgEnumColumnBuilderInitial<'', TValues>;\n\t<TName extends string>(name: TName): PgEnumColumnBuilderInitial<TName, TValues>;\n\t<TName extends string>(name?: TName): PgEnumColumnBuilderInitial<TName, TValues>;\n\n\treadonly enumName: string;\n\treadonly enumValues: TValues;\n\treadonly schema: string | undefined;\n\t/** @internal */\n\t[isPgEnumSym]: true;\n}\n\nexport function isPgEnum(obj: unknown): obj is PgEnum<[string, ...string[]]> {\n\treturn !!obj && typeof obj === 'function' && isPgEnumSym in obj && obj[isPgEnumSym] === true;\n}\n\nexport class PgEnumColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] },\n> extends PgColumnBuilder<T, { enum: PgEnum<T['enumValues']> }> {\n\tstatic override readonly [entityKind]: string = 'PgEnumColumnBuilder';\n\n\tconstructor(name: T['name'], enumInstance: PgEnum<T['enumValues']>) {\n\t\tsuper(name, 'string', 'PgEnumColumn');\n\t\tthis.config.enum = enumInstance;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgEnumColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgEnumColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgEnumColumn<T extends ColumnBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] }>\n\textends PgColumn<T, { enum: PgEnum<T['enumValues']> }>\n{\n\tstatic override readonly [entityKind]: string = 'PgEnumColumn';\n\n\treadonly enum = this.config.enum;\n\toverride readonly enumValues = this.config.enum.enumValues;\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgEnumColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.enum = config.enum;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.enum.enumName;\n\t}\n}\n\nexport function pgEnum<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n): PgEnum<Writable<T>>;\n\nexport function pgEnum<E extends Record<string, string>>(\n\tenumName: string,\n\tenumObj: NonArray<E>,\n): PgEnumObject<E>;\n\nexport function pgEnum(\n\tenumName: any,\n\tinput: any,\n): any {\n\treturn Array.isArray(input)\n\t\t? pgEnumWithSchema(enumName, [...input] as [string, ...string[]], undefined)\n\t\t: pgEnumObjectWithSchema(enumName, input, undefined);\n}\n\n/** @internal */\nexport function pgEnumWithSchema<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n\tschema?: string,\n): PgEnum<Writable<T>> {\n\tconst enumInstance: PgEnum<Writable<T>> = Object.assign(\n\t\t<TName extends string>(name?: TName): PgEnumColumnBuilderInitial<TName, Writable<T>> =>\n\t\t\tnew PgEnumColumnBuilder(name ?? '' as TName, enumInstance),\n\t\t{\n\t\t\tenumName,\n\t\t\tenumValues: values,\n\t\t\tschema,\n\t\t\t[isPgEnumSym]: true,\n\t\t} as const,\n\t);\n\n\treturn enumInstance;\n}\n\n/** @internal */\nexport function pgEnumObjectWithSchema<T extends object>(\n\tenumName: string,\n\tvalues: T,\n\tschema?: string,\n): PgEnumObject<T> {\n\tconst enumInstance: PgEnumObject<T> = Object.assign(\n\t\t<TName extends string>(name?: TName): PgEnumObjectColumnBuilderInitial<TName, T> =>\n\t\t\tnew PgEnumObjectColumnBuilder(name ?? '' as TName, enumInstance),\n\t\t{\n\t\t\tenumName,\n\t\t\tenumValues: Object.values(values),\n\t\t\tschema,\n\t\t\t[isPgEnumSym]: true,\n\t\t} as const,\n\t);\n\n\treturn enumInstance;\n}\n", "import type {\n\tColumnBuilderBase,\n\tColumnBuilderBaseConfig,\n\tColumnBuilderExtraConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tHasGenerated,\n\tMakeColumnConfig,\n} from '~/column-builder.ts';\nimport { ColumnBuilder } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { Simplify, Update } from '~/utils.ts';\n\nimport type { ForeignKey, UpdateDeleteAction } from '~/pg-core/foreign-keys.ts';\nimport { ForeignKeyBuilder } from '~/pg-core/foreign-keys.ts';\nimport type { AnyPgTable, PgTable } from '~/pg-core/table.ts';\nimport type { SQL } from '~/sql/sql.ts';\nimport { iife } from '~/tracing-utils.ts';\nimport type { PgIndexOpClass } from '../indexes.ts';\nimport { uniqueKeyName } from '../unique-constraint.ts';\nimport { makePgArray, parsePgArray } from '../utils/array.ts';\n\nexport interface ReferenceConfig {\n\tref: () => PgColumn;\n\tactions: {\n\t\tonUpdate?: UpdateDeleteAction;\n\t\tonDelete?: UpdateDeleteAction;\n\t};\n}\n\nexport interface PgColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> extends ColumnBuilderBase<T, TTypeConfig & { dialect: 'pg' }> {}\n\nexport abstract class PgColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> extends ColumnBuilder<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }, TExtraConfig>\n\timplements PgColumnBuilderBase<T, TTypeConfig>\n{\n\tprivate foreignKeyConfigs: ReferenceConfig[] = [];\n\n\tstatic override readonly [entityKind]: string = 'PgColumnBuilder';\n\n\tarray<TSize extends number | undefined = undefined>(size?: TSize): PgArrayBuilder<\n\t\t& {\n\t\t\tname: T['name'];\n\t\t\tdataType: 'array';\n\t\t\tcolumnType: 'PgArray';\n\t\t\tdata: T['data'][];\n\t\t\tdriverParam: T['driverParam'][] | string;\n\t\t\tenumValues: T['enumValues'];\n\t\t\tsize: TSize;\n\t\t\tbaseBuilder: T;\n\t\t}\n\t\t& (T extends { notNull: true } ? { notNull: true } : {})\n\t\t& (T extends { hasDefault: true } ? { hasDefault: true } : {}),\n\t\tT\n\t> {\n\t\treturn new PgArrayBuilder(this.config.name, this as PgColumnBuilder<any, any>, size as any);\n\t}\n\n\treferences(\n\t\tref: ReferenceConfig['ref'],\n\t\tactions: ReferenceConfig['actions'] = {},\n\t): this {\n\t\tthis.foreignKeyConfigs.push({ ref, actions });\n\t\treturn this;\n\t}\n\n\tunique(\n\t\tname?: string,\n\t\tconfig?: { nulls: 'distinct' | 'not distinct' },\n\t): this {\n\t\tthis.config.isUnique = true;\n\t\tthis.config.uniqueName = name;\n\t\tthis.config.uniqueType = config?.nulls;\n\t\treturn this;\n\t}\n\n\tgeneratedAlwaysAs(as: SQL | T['data'] | (() => SQL)): HasGenerated<this, {\n\t\ttype: 'always';\n\t}> {\n\t\tthis.config.generated = {\n\t\t\tas,\n\t\t\ttype: 'always',\n\t\t\tmode: 'stored',\n\t\t};\n\t\treturn this as HasGenerated<this, {\n\t\t\ttype: 'always';\n\t\t}>;\n\t}\n\n\t/** @internal */\n\tbuildForeignKeys(column: PgColumn, table: PgTable): ForeignKey[] {\n\t\treturn this.foreignKeyConfigs.map(({ ref, actions }) => {\n\t\t\treturn iife(\n\t\t\t\t(ref, actions) => {\n\t\t\t\t\tconst builder = new ForeignKeyBuilder(() => {\n\t\t\t\t\t\tconst foreignColumn = ref();\n\t\t\t\t\t\treturn { columns: [column], foreignColumns: [foreignColumn] };\n\t\t\t\t\t});\n\t\t\t\t\tif (actions.onUpdate) {\n\t\t\t\t\t\tbuilder.onUpdate(actions.onUpdate);\n\t\t\t\t\t}\n\t\t\t\t\tif (actions.onDelete) {\n\t\t\t\t\t\tbuilder.onDelete(actions.onDelete);\n\t\t\t\t\t}\n\t\t\t\t\treturn builder.build(table);\n\t\t\t\t},\n\t\t\t\tref,\n\t\t\t\tactions,\n\t\t\t);\n\t\t});\n\t}\n\n\t/** @internal */\n\tabstract build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgColumn<MakeColumnConfig<T, TTableName>>;\n\n\t/** @internal */\n\tbuildExtraConfigColumn<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): ExtraConfigColumn {\n\t\treturn new ExtraConfigColumn(table, this.config);\n\t}\n}\n\n// To understand how to use `PgColumn` and `PgColumn`, see `Column` and `AnyColumn` documentation.\nexport abstract class PgColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = {},\n\tTTypeConfig extends object = {},\n> extends Column<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }> {\n\tstatic override readonly [entityKind]: string = 'PgColumn';\n\n\tconstructor(\n\t\toverride readonly table: PgTable,\n\t\tconfig: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tif (!config.uniqueName) {\n\t\t\tconfig.uniqueName = uniqueKeyName(table, [config.name]);\n\t\t}\n\t\tsuper(table, config);\n\t}\n}\n\nexport type IndexedExtraConfigType = { order?: 'asc' | 'desc'; nulls?: 'first' | 'last'; opClass?: string };\n\nexport class ExtraConfigColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T, IndexedExtraConfigType> {\n\tstatic override readonly [entityKind]: string = 'ExtraConfigColumn';\n\n\toverride getSQLType(): string {\n\t\treturn this.getSQLType();\n\t}\n\n\tindexConfig: IndexedExtraConfigType = {\n\t\torder: this.config.order ?? 'asc',\n\t\tnulls: this.config.nulls ?? 'last',\n\t\topClass: this.config.opClass,\n\t};\n\tdefaultConfig: IndexedExtraConfigType = {\n\t\torder: 'asc',\n\t\tnulls: 'last',\n\t\topClass: undefined,\n\t};\n\n\tasc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'asc';\n\t\treturn this;\n\t}\n\n\tdesc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'desc';\n\t\treturn this;\n\t}\n\n\tnullsFirst(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'first';\n\t\treturn this;\n\t}\n\n\tnullsLast(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'last';\n\t\treturn this;\n\t}\n\n\t/**\n\t * ### PostgreSQL documentation quote\n\t *\n\t * > An operator class with optional parameters can be specified for each column of an index.\n\t * The operator class identifies the operators to be used by the index for that column.\n\t * For example, a B-tree index on four-byte integers would use the int4_ops class;\n\t * this operator class includes comparison functions for four-byte integers.\n\t * In practice the default operator class for the column's data type is usually sufficient.\n\t * The main point of having operator classes is that for some data types, there could be more than one meaningful ordering.\n\t * For example, we might want to sort a complex-number data type either by absolute value or by real part.\n\t * We could do this by defining two operator classes for the data type and then selecting the proper class when creating an index.\n\t * More information about operator classes check:\n\t *\n\t * ### Useful links\n\t * https://www.postgresql.org/docs/current/sql-createindex.html\n\t *\n\t * https://www.postgresql.org/docs/current/indexes-opclass.html\n\t *\n\t * https://www.postgresql.org/docs/current/xindex.html\n\t *\n\t * ### Additional types\n\t * If you have the `pg_vector` extension installed in your database, you can use the\n\t * `vector_l2_ops`, `vector_ip_ops`, `vector_cosine_ops`, `vector_l1_ops`, `bit_hamming_ops`, `bit_jaccard_ops`, `halfvec_l2_ops`, `sparsevec_l2_ops` options, which are predefined types.\n\t *\n\t * **You can always specify any string you want in the operator class, in case Drizzle doesn't have it natively in its types**\n\t *\n\t * @param opClass\n\t * @returns\n\t */\n\top(opClass: PgIndexOpClass): Omit<this, 'op'> {\n\t\tthis.indexConfig.opClass = opClass;\n\t\treturn this;\n\t}\n}\n\nexport class IndexedColumn {\n\tstatic readonly [entityKind]: string = 'IndexedColumn';\n\tconstructor(\n\t\tname: string | undefined,\n\t\tkeyAsName: boolean,\n\t\ttype: string,\n\t\tindexConfig: IndexedExtraConfigType,\n\t) {\n\t\tthis.name = name;\n\t\tthis.keyAsName = keyAsName;\n\t\tthis.type = type;\n\t\tthis.indexConfig = indexConfig;\n\t}\n\n\tname: string | undefined;\n\tkeyAsName: boolean;\n\ttype: string;\n\tindexConfig: IndexedExtraConfigType;\n}\n\nexport type AnyPgColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = PgColumn<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport type PgArrayColumnBuilderBaseConfig = ColumnBuilderBaseConfig<'array', 'PgArray'> & {\n\tsize: number | undefined;\n\tbaseBuilder: ColumnBuilderBaseConfig<ColumnDataType, string>;\n};\n\nexport class PgArrayBuilder<\n\tT extends PgArrayColumnBuilderBaseConfig,\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string> | PgArrayColumnBuilderBaseConfig,\n> extends PgColumnBuilder<\n\tT,\n\t{\n\t\tbaseBuilder: TBase extends PgArrayColumnBuilderBaseConfig ? PgArrayBuilder<\n\t\t\t\tTBase,\n\t\t\t\tTBase extends { baseBuilder: infer TBaseBuilder extends ColumnBuilderBaseConfig<any, any> } ? TBaseBuilder\n\t\t\t\t\t: never\n\t\t\t>\n\t\t\t: PgColumnBuilder<TBase, {}, Simplify<Omit<TBase, keyof ColumnBuilderBaseConfig<any, any>>>>;\n\t\tsize: T['size'];\n\t},\n\t{\n\t\tbaseBuilder: TBase extends PgArrayColumnBuilderBaseConfig ? PgArrayBuilder<\n\t\t\t\tTBase,\n\t\t\t\tTBase extends { baseBuilder: infer TBaseBuilder extends ColumnBuilderBaseConfig<any, any> } ? TBaseBuilder\n\t\t\t\t\t: never\n\t\t\t>\n\t\t\t: PgColumnBuilder<TBase, {}, Simplify<Omit<TBase, keyof ColumnBuilderBaseConfig<any, any>>>>;\n\t\tsize: T['size'];\n\t}\n> {\n\tstatic override readonly [entityKind] = 'PgArrayBuilder';\n\n\tconstructor(\n\t\tname: string,\n\t\tbaseBuilder: PgArrayBuilder<T, TBase>['config']['baseBuilder'],\n\t\tsize: T['size'],\n\t) {\n\t\tsuper(name, 'array', 'PgArray');\n\t\tthis.config.baseBuilder = baseBuilder;\n\t\tthis.config.size = size;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgArray<MakeColumnConfig<T, TTableName> & { size: T['size']; baseBuilder: T['baseBuilder'] }, TBase> {\n\t\tconst baseColumn = this.config.baseBuilder.build(table);\n\t\treturn new PgArray<MakeColumnConfig<T, TTableName> & { size: T['size']; baseBuilder: T['baseBuilder'] }, TBase>(\n\t\t\ttable as AnyPgTable<{ name: MakeColumnConfig<T, TTableName>['tableName'] }>,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t\tbaseColumn,\n\t\t);\n\t}\n}\n\nexport class PgArray<\n\tT extends ColumnBaseConfig<'array', 'PgArray'> & {\n\t\tsize: number | undefined;\n\t\tbaseBuilder: ColumnBuilderBaseConfig<ColumnDataType, string>;\n\t},\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T, {}, { size: T['size']; baseBuilder: T['baseBuilder'] }> {\n\treadonly size: T['size'];\n\n\tstatic override readonly [entityKind]: string = 'PgArray';\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgArrayBuilder<T, TBase>['config'],\n\t\treadonly baseColumn: PgColumn,\n\t\treadonly range?: [number | undefined, number | undefined],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.size = config.size;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn `${this.baseColumn.getSQLType()}[${typeof this.size === 'number' ? this.size : ''}]`;\n\t}\n\n\toverride mapFromDriverValue(value: unknown[] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\t// Thank you node-postgres for not parsing enum arrays\n\t\t\tvalue = parsePgArray(value);\n\t\t}\n\t\treturn value.map((v) => this.baseColumn.mapFromDriverValue(v));\n\t}\n\n\toverride mapToDriverValue(value: unknown[], isNestedArray = false): unknown[] | string {\n\t\tconst a = value.map((v) =>\n\t\t\tv === null\n\t\t\t\t? null\n\t\t\t\t: is(this.baseColumn, PgArray)\n\t\t\t\t? this.baseColumn.mapToDriverValue(v as unknown[], true)\n\t\t\t\t: this.baseColumn.mapToDriverValue(v)\n\t\t);\n\t\tif (isNestedArray) return a;\n\t\treturn makePgArray(a);\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { Column } from './column.ts';\nimport type { GelColumn, GelExtraConfigColumn } from './gel-core/index.ts';\nimport type { MySqlColumn } from './mysql-core/index.ts';\nimport type { ExtraConfigColumn, PgColumn, PgSequenceOptions } from './pg-core/index.ts';\nimport type { SingleStoreColumn } from './singlestore-core/index.ts';\nimport type { SQL } from './sql/sql.ts';\nimport type { SQLiteColumn } from './sqlite-core/index.ts';\nimport type { Assume, Simplify } from './utils.ts';\n\nexport type ColumnDataType =\n\t| 'string'\n\t| 'number'\n\t| 'boolean'\n\t| 'array'\n\t| 'json'\n\t| 'date'\n\t| 'bigint'\n\t| 'custom'\n\t| 'buffer'\n\t| 'dateDuration'\n\t| 'duration'\n\t| 'relDuration'\n\t| 'localTime'\n\t| 'localDate'\n\t| 'localDateTime';\n\nexport type Dialect = 'pg' | 'mysql' | 'sqlite' | 'singlestore' | 'common' | 'gel';\n\nexport type GeneratedStorageMode = 'virtual' | 'stored';\n\nexport type GeneratedType = 'always' | 'byDefault';\n\nexport type GeneratedColumnConfig<TDataType> = {\n\tas: TDataType | SQL | (() => SQL);\n\ttype?: GeneratedType;\n\tmode?: GeneratedStorageMode;\n};\n\nexport type GeneratedIdentityConfig = {\n\tsequenceName?: string;\n\tsequenceOptions?: PgSequenceOptions;\n\ttype: 'always' | 'byDefault';\n};\n\nexport interface ColumnBuilderBaseConfig<TDataType extends ColumnDataType, TColumnType extends string> {\n\tname: string;\n\tdataType: TDataType;\n\tcolumnType: TColumnType;\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: string[] | undefined;\n}\n\nexport type MakeColumnConfig<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTableName extends string,\n\tTData = T extends { $type: infer U } ? U : T['data'],\n> = {\n\tname: T['name'];\n\ttableName: TTableName;\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: TData;\n\tdriverParam: T['driverParam'];\n\tnotNull: T extends { notNull: true } ? true : false;\n\thasDefault: T extends { hasDefault: true } ? true : false;\n\tisPrimaryKey: T extends { isPrimaryKey: true } ? true : false;\n\tisAutoincrement: T extends { isAutoincrement: true } ? true : false;\n\thasRuntimeDefault: T extends { hasRuntimeDefault: true } ? true : false;\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseBuilder: infer U extends ColumnBuilderBase } ? BuildColumn<TTableName, U, 'common'>\n\t\t: never;\n\tidentity: T extends { identity: 'always' } ? 'always' : T extends { identity: 'byDefault' } ? 'byDefault' : undefined;\n\tgenerated: T extends { generated: infer G } ? unknown extends G ? undefined\n\t\t: G extends undefined ? undefined\n\t\t: G\n\t\t: undefined;\n} & {};\n\nexport type ColumnBuilderTypeConfig<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> = Simplify<\n\t& {\n\t\tbrand: 'ColumnBuilder';\n\t\tname: T['name'];\n\t\tdataType: T['dataType'];\n\t\tcolumnType: T['columnType'];\n\t\tdata: T['data'];\n\t\tdriverParam: T['driverParam'];\n\t\tnotNull: T extends { notNull: infer U } ? U : boolean;\n\t\thasDefault: T extends { hasDefault: infer U } ? U : boolean;\n\t\tenumValues: T['enumValues'];\n\t\tidentity: T extends { identity: infer U } ? U : unknown;\n\t\tgenerated: T extends { generated: infer G } ? G extends undefined ? unknown : G : unknown;\n\t}\n\t& TTypeConfig\n>;\n\nexport type ColumnBuilderRuntimeConfig<TData, TRuntimeConfig extends object = object> = {\n\tname: string;\n\tkeyAsName: boolean;\n\tnotNull: boolean;\n\tdefault: TData | SQL | undefined;\n\tdefaultFn: (() => TData | SQL) | undefined;\n\tonUpdateFn: (() => TData | SQL) | undefined;\n\thasDefault: boolean;\n\tprimaryKey: boolean;\n\tisUnique: boolean;\n\tuniqueName: string | undefined;\n\tuniqueType: string | undefined;\n\tdataType: string;\n\tcolumnType: string;\n\tgenerated: GeneratedColumnConfig<TData> | undefined;\n\tgeneratedIdentity: GeneratedIdentityConfig | undefined;\n} & TRuntimeConfig;\n\nexport interface ColumnBuilderExtraConfig {\n\tprimaryKeyHasDefault?: boolean;\n}\n\nexport type NotNull<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tnotNull: true;\n\t};\n};\n\nexport type HasDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasDefault: true;\n\t};\n};\n\nexport type IsPrimaryKey<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisPrimaryKey: true;\n\t};\n};\n\nexport type IsAutoincrement<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisAutoincrement: true;\n\t};\n};\n\nexport type HasRuntimeDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasRuntimeDefault: true;\n\t};\n};\n\nexport type $Type<T extends ColumnBuilderBase, TType> = T & {\n\t_: {\n\t\t$type: TType;\n\t};\n};\n\nexport type HasGenerated<T extends ColumnBuilderBase, TGenerated extends {} = {}> = T & {\n\t_: {\n\t\thasDefault: true;\n\t\tgenerated: TGenerated;\n\t};\n};\n\nexport type IsIdentity<\n\tT extends ColumnBuilderBase,\n\tTType extends 'always' | 'byDefault',\n> = T & {\n\t_: {\n\t\tnotNull: true;\n\t\thasDefault: true;\n\t\tidentity: TType;\n\t};\n};\nexport interface ColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> {\n\t_: ColumnBuilderTypeConfig<T, TTypeConfig>;\n}\n\n// To understand how to use `ColumnBuilder` and `AnyColumnBuilder`, see `Column` and `AnyColumn` documentation.\nexport abstract class ColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> implements ColumnBuilderBase<T, TTypeConfig> {\n\tstatic readonly [entityKind]: string = 'ColumnBuilder';\n\n\tdeclare _: ColumnBuilderTypeConfig<T, TTypeConfig>;\n\n\tprotected config: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(name: T['name'], dataType: T['dataType'], columnType: T['columnType']) {\n\t\tthis.config = {\n\t\t\tname,\n\t\t\tkeyAsName: name === '',\n\t\t\tnotNull: false,\n\t\t\tdefault: undefined,\n\t\t\thasDefault: false,\n\t\t\tprimaryKey: false,\n\t\t\tisUnique: false,\n\t\t\tuniqueName: undefined,\n\t\t\tuniqueType: undefined,\n\t\t\tdataType,\n\t\t\tcolumnType,\n\t\t\tgenerated: undefined,\n\t\t} as ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\t}\n\n\t/**\n\t * Changes the data type of the column. Commonly used with `json` columns. Also, useful for branded types.\n\t *\n\t * @example\n\t * ```ts\n\t * const users = pgTable('users', {\n\t * \tid: integer('id').$type<UserId>().primaryKey(),\n\t * \tdetails: json('details').$type<UserDetails>().notNull(),\n\t * });\n\t * ```\n\t */\n\t$type<TType>(): $Type<this, TType> {\n\t\treturn this as $Type<this, TType>;\n\t}\n\n\t/**\n\t * Adds a `not null` clause to the column definition.\n\t *\n\t * Affects the `select` model of the table - columns *without* `not null` will be nullable on select.\n\t */\n\tnotNull(): NotNull<this> {\n\t\tthis.config.notNull = true;\n\t\treturn this as NotNull<this>;\n\t}\n\n\t/**\n\t * Adds a `default <value>` clause to the column definition.\n\t *\n\t * Affects the `insert` model of the table - columns *with* `default` are optional on insert.\n\t *\n\t * If you need to set a dynamic default value, use {@link $defaultFn} instead.\n\t */\n\tdefault(value: (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL): HasDefault<this> {\n\t\tthis.config.default = value;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Adds a dynamic default value to the column.\n\t * The function will be called when the row is inserted, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$defaultFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasRuntimeDefault<HasDefault<this>> {\n\t\tthis.config.defaultFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasRuntimeDefault<HasDefault<this>>;\n\t}\n\n\t/**\n\t * Alias for {@link $defaultFn}.\n\t */\n\t$default = this.$defaultFn;\n\n\t/**\n\t * Adds a dynamic update value to the column.\n\t * The function will be called when the row is updated, and the returned value will be used as the column value if none is provided.\n\t * If no `default` (or `$defaultFn`) value is provided, the function will be called when the row is inserted as well, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$onUpdateFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasDefault<this> {\n\t\tthis.config.onUpdateFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Alias for {@link $onUpdateFn}.\n\t */\n\t$onUpdate = this.$onUpdateFn;\n\n\t/**\n\t * Adds a `primary key` clause to the column definition. This implicitly makes the column `not null`.\n\t *\n\t * In SQLite, `integer primary key` implicitly makes the column auto-incrementing.\n\t */\n\tprimaryKey(): TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t: IsPrimaryKey<NotNull<this>>\n\t{\n\t\tthis.config.primaryKey = true;\n\t\tthis.config.notNull = true;\n\t\treturn this as TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t\t: IsPrimaryKey<NotNull<this>>;\n\t}\n\n\tabstract generatedAlwaysAs(\n\t\tas: SQL | T['data'] | (() => SQL),\n\t\tconfig?: Partial<GeneratedColumnConfig<unknown>>,\n\t): HasGenerated<this, {\n\t\ttype: 'always';\n\t}>;\n\n\t/** @internal Sets the name of the column to the key within the table definition if a name was not given. */\n\tsetName(name: string) {\n\t\tif (this.config.name !== '') return;\n\t\tthis.config.name = name;\n\t}\n}\n\nexport type BuildColumn<\n\tTTableName extends string,\n\tTBuilder extends ColumnBuilderBase,\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? PgColumn<\n\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t{},\n\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t>\n\t: TDialect extends 'mysql' ? MySqlColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<\n\t\t\t\tOmit<\n\t\t\t\t\tTBuilder['_'],\n\t\t\t\t\t| keyof MakeColumnConfig<TBuilder['_'], TTableName>\n\t\t\t\t\t| 'brand'\n\t\t\t\t\t| 'dialect'\n\t\t\t\t\t| 'primaryKeyHasDefault'\n\t\t\t\t\t| 'mysqlColumnBuilderBrand'\n\t\t\t\t>\n\t\t\t>\n\t\t>\n\t: TDialect extends 'sqlite' ? SQLiteColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: TDialect extends 'common' ? Column<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: TDialect extends 'singlestore' ? SingleStoreColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<\n\t\t\t\tOmit<\n\t\t\t\t\tTBuilder['_'],\n\t\t\t\t\t| keyof MakeColumnConfig<TBuilder['_'], TTableName>\n\t\t\t\t\t| 'brand'\n\t\t\t\t\t| 'dialect'\n\t\t\t\t\t| 'primaryKeyHasDefault'\n\t\t\t\t\t| 'singlestoreColumnBuilderBrand'\n\t\t\t\t>\n\t\t\t>\n\t\t>\n\t: TDialect extends 'gel' ? GelColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: never;\n\nexport type BuildIndexColumn<\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? ExtraConfigColumn\n\t: TDialect extends 'gel' ? GelExtraConfigColumn\n\t: never;\n\n// TODO\n// try to make sql as well + indexRaw\n\n// optional after everything will be working as expected\n// also try to leave only needed methods for extraConfig\n// make an error if I pass .asc() to fk and so on\n\nexport type BuildColumns<\n\tTTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildColumn<TTableName, {\n\t\t\t_:\n\t\t\t\t& Omit<TConfigMap[Key]['_'], 'name'>\n\t\t\t\t& { name: TConfigMap[Key]['_']['name'] extends '' ? Assume<Key, string> : TConfigMap[Key]['_']['name'] };\n\t\t}, TDialect>;\n\t}\n\t& {};\n\nexport type BuildExtraConfigColumns<\n\t_TTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildIndexColumn<TDialect>;\n\t}\n\t& {};\n\nexport type ChangeColumnTableName<TColumn extends Column, TAlias extends string, TDialect extends Dialect> =\n\tTDialect extends 'pg' ? PgColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'mysql' ? MySqlColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'singlestore' ? SingleStoreColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'sqlite' ? SQLiteColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'gel' ? GelColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: never;\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\nexport type UpdateDeleteAction = 'cascade' | 'restrict' | 'no action' | 'set null' | 'set default';\n\nexport type Reference = () => {\n\treadonly name?: string;\n\treadonly columns: PgColumn[];\n\treadonly foreignTable: PgTable;\n\treadonly foreignColumns: PgColumn[];\n};\n\nexport class ForeignKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgForeignKeyBuilder';\n\n\t/** @internal */\n\treference: Reference;\n\n\t/** @internal */\n\t_onUpdate: UpdateDeleteAction | undefined = 'no action';\n\n\t/** @internal */\n\t_onDelete: UpdateDeleteAction | undefined = 'no action';\n\n\tconstructor(\n\t\tconfig: () => {\n\t\t\tname?: string;\n\t\t\tcolumns: PgColumn[];\n\t\t\tforeignColumns: PgColumn[];\n\t\t},\n\t\tactions?: {\n\t\t\tonUpdate?: UpdateDeleteAction;\n\t\t\tonDelete?: UpdateDeleteAction;\n\t\t} | undefined,\n\t) {\n\t\tthis.reference = () => {\n\t\t\tconst { name, columns, foreignColumns } = config();\n\t\t\treturn { name, columns, foreignTable: foreignColumns[0]!.table as PgTable, foreignColumns };\n\t\t};\n\t\tif (actions) {\n\t\t\tthis._onUpdate = actions.onUpdate;\n\t\t\tthis._onDelete = actions.onDelete;\n\t\t}\n\t}\n\n\tonUpdate(action: UpdateDeleteAction): this {\n\t\tthis._onUpdate = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\tonDelete(action: UpdateDeleteAction): this {\n\t\tthis._onDelete = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): ForeignKey {\n\t\treturn new ForeignKey(table, this);\n\t}\n}\n\nexport type AnyForeignKeyBuilder = ForeignKeyBuilder;\n\nexport class ForeignKey {\n\tstatic readonly [entityKind]: string = 'PgForeignKey';\n\n\treadonly reference: Reference;\n\treadonly onUpdate: UpdateDeleteAction | undefined;\n\treadonly onDelete: UpdateDeleteAction | undefined;\n\n\tconstructor(readonly table: PgTable, builder: ForeignKeyBuilder) {\n\t\tthis.reference = builder.reference;\n\t\tthis.onUpdate = builder._onUpdate;\n\t\tthis.onDelete = builder._onDelete;\n\t}\n\n\tgetName(): string {\n\t\tconst { name, columns, foreignColumns } = this.reference();\n\t\tconst columnNames = columns.map((column) => column.name);\n\t\tconst foreignColumnNames = foreignColumns.map((column) => column.name);\n\t\tconst chunks = [\n\t\t\tthis.table[TableName],\n\t\t\t...columnNames,\n\t\t\tforeignColumns[0]!.table[TableName],\n\t\t\t...foreignColumnNames,\n\t\t];\n\t\treturn name ?? `${chunks.join('_')}_fk`;\n\t}\n}\n\ntype ColumnsWithTable<\n\tTTableName extends string,\n\tTColumns extends PgColumn[],\n> = { [Key in keyof TColumns]: AnyPgColumn<{ tableName: TTableName }> };\n\nexport function foreignKey<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends [AnyPgColumn<{ tableName: TTableName }>, ...AnyPgColumn<{ tableName: TTableName }>[]],\n>(\n\tconfig: {\n\t\tname?: string;\n\t\tcolumns: TColumns;\n\t\tforeignColumns: ColumnsWithTable<TForeignTableName, TColumns>;\n\t},\n): ForeignKeyBuilder {\n\tfunction mappedConfig() {\n\t\tconst { name, columns, foreignColumns } = config;\n\t\treturn {\n\t\t\tname,\n\t\t\tcolumns,\n\t\t\tforeignColumns,\n\t\t};\n\t}\n\n\treturn new ForeignKeyBuilder(mappedConfig);\n}\n", "/** @internal */\nexport const TableName = Symbol.for('drizzle:Name');\n", "export function iife<T extends unknown[], U>(fn: (...args: T) => U, ...args: T): U {\n\treturn fn(...args);\n}\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { PgColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\nexport function unique(name?: string): UniqueOnConstraintBuilder {\n\treturn new UniqueOnConstraintBuilder(name);\n}\n\nexport function uniqueKeyName(table: PgTable, columns: string[]) {\n\treturn `${table[TableName]}_${columns.join('_')}_unique`;\n}\n\nexport class UniqueConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraintBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\t/** @internal */\n\tnullsNotDistinctConfig = false;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tprivate name?: string,\n\t) {\n\t\tthis.columns = columns;\n\t}\n\n\tnullsNotDistinct() {\n\t\tthis.nullsNotDistinctConfig = true;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): UniqueConstraint {\n\t\treturn new UniqueConstraint(table, this.columns, this.nullsNotDistinctConfig, this.name);\n\t}\n}\n\nexport class UniqueOnConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueOnConstraintBuilder';\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tname?: string,\n\t) {\n\t\tthis.name = name;\n\t}\n\n\ton(...columns: [PgColumn, ...PgColumn[]]) {\n\t\treturn new UniqueConstraintBuilder(columns, this.name);\n\t}\n}\n\nexport class UniqueConstraint {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraint';\n\n\treadonly columns: PgColumn[];\n\treadonly name?: string;\n\treadonly nullsNotDistinct: boolean = false;\n\n\tconstructor(readonly table: PgTable, columns: PgColumn[], nullsNotDistinct: boolean, name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name ?? uniqueKeyName(this.table, this.columns.map((column) => column.name));\n\t\tthis.nullsNotDistinct = nullsNotDistinct;\n\t}\n\n\tgetName() {\n\t\treturn this.name;\n\t}\n}\n", "function parsePgArrayValue(arrayString: string, startFrom: number, inQuotes: boolean): [string, number] {\n\tfor (let i = startFrom; i < arrayString.length; i++) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === '\\\\') {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i + 1];\n\t\t}\n\n\t\tif (inQuotes) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === ',' || char === '}') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i];\n\t\t}\n\t}\n\n\treturn [arrayString.slice(startFrom).replace(/\\\\/g, ''), arrayString.length];\n}\n\nexport function parsePgNestedArray(arrayString: string, startFrom = 0): [any[], number] {\n\tconst result: any[] = [];\n\tlet i = startFrom;\n\tlet lastCharIsComma = false;\n\n\twhile (i < arrayString.length) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === ',') {\n\t\t\tif (lastCharIsComma || i === startFrom) {\n\t\t\t\tresult.push('');\n\t\t\t}\n\t\t\tlastCharIsComma = true;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tlastCharIsComma = false;\n\n\t\tif (char === '\\\\') {\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\tconst [value, startFrom] = parsePgArrayValue(arrayString, i + 1, true);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '}') {\n\t\t\treturn [result, i + 1];\n\t\t}\n\n\t\tif (char === '{') {\n\t\t\tconst [value, startFrom] = parsePgNestedArray(arrayString, i + 1);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [value, newStartFrom] = parsePgArrayValue(arrayString, i, false);\n\t\tresult.push(value);\n\t\ti = newStartFrom;\n\t}\n\n\treturn [result, i];\n}\n\nexport function parsePgArray(arrayString: string): any[] {\n\tconst [result] = parsePgNestedArray(arrayString, 1);\n\treturn result;\n}\n\nexport function makePgArray(array: any[]): string {\n\treturn `{${\n\t\tarray.map((item) => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn makePgArray(item);\n\t\t\t}\n\n\t\t\tif (typeof item === 'string') {\n\t\t\t\treturn `\"${item.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\"`;\n\t\t\t}\n\n\t\t\treturn `${item}`;\n\t\t}).join(',')\n\t}}`;\n}\n", "import { entityKind } from './entity.ts';\nimport type { SQL, SQLWrapper } from './sql/sql.ts';\n\nexport interface Subquery<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTAlias extends string = string,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\nexport class Subquery<\n\tTAlias extends string = string,\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Subquery';\n\n\tdeclare _: {\n\t\tbrand: 'Subquery';\n\t\tsql: SQL;\n\t\tselectedFields: TSelectedFields;\n\t\talias: TAlias;\n\t\tisWith: boolean;\n\t\tusedTables?: string[];\n\t};\n\n\tconstructor(sql: SQL, fields: TSelectedFields, alias: string, isWith = false, usedTables: string[] = []) {\n\t\tthis._ = {\n\t\t\tbrand: 'Subquery',\n\t\t\tsql,\n\t\t\tselectedFields: fields as TSelectedFields,\n\t\t\talias: alias as TAlias,\n\t\t\tisWith,\n\t\t\tusedTables,\n\t\t};\n\t}\n\n\t// getSQL(): SQL<unknown> {\n\t// \treturn new SQL([this]);\n\t// }\n}\n\nexport class WithSubquery<\n\tTAlias extends string = string,\n\tTSelection extends Record<string, unknown> = Record<string, unknown>,\n> extends Subquery<TAlias, TSelection> {\n\tstatic override readonly [entityKind]: string = 'WithSubquery';\n}\n\nexport type WithSubqueryWithoutSelection<TAlias extends string> = WithSubquery<TAlias, {}>;\n", "import type { Span, Tracer } from '@opentelemetry/api';\nimport { iife } from '~/tracing-utils.ts';\nimport { npmVersion } from '~/version.ts';\n\nlet otel: typeof import('@opentelemetry/api') | undefined;\nlet rawTracer: Tracer | undefined;\n// try {\n// \totel = await import('@opentelemetry/api');\n// } catch (err: any) {\n// \tif (err.code !== 'MODULE_NOT_FOUND' && err.code !== 'ERR_MODULE_NOT_FOUND') {\n// \t\tthrow err;\n// \t}\n// }\n\ntype SpanName =\n\t| 'drizzle.operation'\n\t| 'drizzle.prepareQuery'\n\t| 'drizzle.buildSQL'\n\t| 'drizzle.execute'\n\t| 'drizzle.driver.execute'\n\t| 'drizzle.mapResponse';\n\n/** @internal */\nexport const tracer = {\n\tstartActiveSpan<F extends (span?: Span) => unknown>(name: SpanName, fn: F): ReturnType<F> {\n\t\tif (!otel) {\n\t\t\treturn fn() as ReturnType<F>;\n\t\t}\n\n\t\tif (!rawTracer) {\n\t\t\trawTracer = otel.trace.getTracer('drizzle-orm', npmVersion);\n\t\t}\n\n\t\treturn iife(\n\t\t\t(otel, rawTracer) =>\n\t\t\t\trawTracer.startActiveSpan(\n\t\t\t\t\tname,\n\t\t\t\t\t((span: Span) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn fn(span);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tspan.setStatus({\n\t\t\t\t\t\t\t\tcode: otel.SpanStatusCode.ERROR,\n\t\t\t\t\t\t\t\tmessage: e instanceof Error ? e.message : 'Unknown error', // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tspan.end();\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as F,\n\t\t\t\t),\n\t\t\totel,\n\t\t\trawTracer,\n\t\t);\n\t},\n};\n", "// package.json\nvar version = \"0.44.5\";\n\n// src/version.ts\nvar compatibilityVersion = 10;\nexport {\n  compatibilityVersion,\n  version as npmVersion\n};\n", "export const ViewBaseConfig = Symbol.for('drizzle:ViewBaseConfig');\n", "import type { Column, GetColumnData } from './column.ts';\nimport { entityKind } from './entity.ts';\nimport type { OptionalKeyOnly, RequiredKeyOnly } from './operations.ts';\nimport type { SQLWrapper } from './sql/sql.ts';\nimport { TableName } from './table.utils.ts';\nimport type { Simplify, Update } from './utils.ts';\n\nexport interface TableConfig<TColumn extends Column = Column<any>> {\n\tname: string;\n\tschema: string | undefined;\n\tcolumns: Record<string, TColumn>;\n\tdialect: string;\n}\n\nexport type UpdateTableConfig<T extends TableConfig, TUpdate extends Partial<TableConfig>> = Required<\n\tUpdate<T, TUpdate>\n>;\n\n/** @internal */\nexport const Schema = Symbol.for('drizzle:Schema');\n\n/** @internal */\nexport const Columns = Symbol.for('drizzle:Columns');\n\n/** @internal */\nexport const ExtraConfigColumns = Symbol.for('drizzle:ExtraConfigColumns');\n\n/** @internal */\nexport const OriginalName = Symbol.for('drizzle:OriginalName');\n\n/** @internal */\nexport const BaseName = Symbol.for('drizzle:BaseName');\n\n/** @internal */\nexport const IsAlias = Symbol.for('drizzle:IsAlias');\n\n/** @internal */\nexport const ExtraConfigBuilder = Symbol.for('drizzle:ExtraConfigBuilder');\n\nconst IsDrizzleTable = Symbol.for('drizzle:IsDrizzleTable');\n\nexport interface Table<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends TableConfig = TableConfig,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n\nexport class Table<T extends TableConfig = TableConfig> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Table';\n\n\tdeclare readonly _: {\n\t\treadonly brand: 'Table';\n\t\treadonly config: T;\n\t\treadonly name: T['name'];\n\t\treadonly schema: T['schema'];\n\t\treadonly columns: T['columns'];\n\t\treadonly inferSelect: InferSelectModel<Table<T>>;\n\t\treadonly inferInsert: InferInsertModel<Table<T>>;\n\t};\n\n\tdeclare readonly $inferSelect: InferSelectModel<Table<T>>;\n\tdeclare readonly $inferInsert: InferInsertModel<Table<T>>;\n\n\t/** @internal */\n\tstatic readonly Symbol = {\n\t\tName: TableName as typeof TableName,\n\t\tSchema: Schema as typeof Schema,\n\t\tOriginalName: OriginalName as typeof OriginalName,\n\t\tColumns: Columns as typeof Columns,\n\t\tExtraConfigColumns: ExtraConfigColumns as typeof ExtraConfigColumns,\n\t\tBaseName: BaseName as typeof BaseName,\n\t\tIsAlias: IsAlias as typeof IsAlias,\n\t\tExtraConfigBuilder: ExtraConfigBuilder as typeof ExtraConfigBuilder,\n\t};\n\n\t/**\n\t * @internal\n\t * Can be changed if the table is aliased.\n\t */\n\t[TableName]: string;\n\n\t/**\n\t * @internal\n\t * Used to store the original name of the table, before any aliasing.\n\t */\n\t[OriginalName]: string;\n\n\t/** @internal */\n\t[Schema]: string | undefined;\n\n\t/** @internal */\n\t[Columns]!: T['columns'];\n\n\t/** @internal */\n\t[ExtraConfigColumns]!: Record<string, unknown>;\n\n\t/**\n\t *  @internal\n\t * Used to store the table name before the transformation via the `tableCreator` functions.\n\t */\n\t[BaseName]: string;\n\n\t/** @internal */\n\t[IsAlias] = false;\n\n\t/** @internal */\n\t[IsDrizzleTable] = true;\n\n\t/** @internal */\n\t[ExtraConfigBuilder]: ((self: any) => Record<string, unknown> | unknown[]) | undefined = undefined;\n\n\tconstructor(name: string, schema: string | undefined, baseName: string) {\n\t\tthis[TableName] = this[OriginalName] = name;\n\t\tthis[Schema] = schema;\n\t\tthis[BaseName] = baseName;\n\t}\n}\n\nexport function isTable(table: unknown): table is Table {\n\treturn typeof table === 'object' && table !== null && IsDrizzleTable in table;\n}\n\n/**\n * Any table with a specified boundary.\n *\n * @example\n\t```ts\n\t// Any table with a specific name\n\ttype AnyUsersTable = AnyTable<{ name: 'users' }>;\n\t```\n *\n * To describe any table with any config, simply use `Table` without any type arguments, like this:\n *\n\t```ts\n\tfunction needsTable(table: Table) {\n\t\t...\n\t}\n\t```\n */\nexport type AnyTable<TPartial extends Partial<TableConfig>> = Table<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport function getTableName<T extends Table>(table: T): T['_']['name'] {\n\treturn table[TableName];\n}\n\nexport function getTableUniqueName<T extends Table>(table: T): `${T['_']['schema']}.${T['_']['name']}` {\n\treturn `${table[Schema] ?? 'public'}.${table[TableName]}`;\n}\n\nexport type MapColumnName<TName extends string, TColumn extends Column, TDBColumNames extends boolean> =\n\tTDBColumNames extends true ? TColumn['_']['name']\n\t\t: TName;\n\nexport type InferModelFromColumns<\n\tTColumns extends Record<string, Column>,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean; override?: boolean } = { dbColumnNames: false; override: false },\n> = Simplify<\n\tTInferMode extends 'insert' ?\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as RequiredKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key]\n\t\t\t\t\t>\n\t\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t\t}\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as OptionalKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key],\n\t\t\t\t\t\tTConfig['override']\n\t\t\t\t\t>\n\t\t\t\t]?: GetColumnData<TColumns[Key], 'query'> | undefined;\n\t\t\t}\n\t\t: {\n\t\t\t[\n\t\t\t\tKey in keyof TColumns & string as MapColumnName<\n\t\t\t\t\tKey,\n\t\t\t\t\tTColumns[Key],\n\t\t\t\t\tTConfig['dbColumnNames']\n\t\t\t\t>\n\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t}\n>;\n\n/** @deprecated Use one of the alternatives: {@link InferSelectModel} / {@link InferInsertModel}, or `table.$inferSelect` / `table.$inferInsert`\n */\nexport type InferModel<\n\tTTable extends Table,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], TInferMode, TConfig>;\n\nexport type InferSelectModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'select', TConfig>;\n\nexport type InferInsertModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean; override?: boolean } = { dbColumnNames: false; override: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'insert', TConfig>;\n\nexport type InferEnum<T> = T extends { enumValues: readonly (infer U)[] } ? U\n\t: never;\n", "import { entityKind } from '~/entity.ts';\n\nexport class DrizzleError extends Error {\n\tstatic readonly [entityKind]: string = 'DrizzleError';\n\n\tconstructor({ message, cause }: { message?: string; cause?: unknown }) {\n\t\tsuper(message);\n\t\tthis.name = 'DrizzleError';\n\t\tthis.cause = cause;\n\t}\n}\n\nexport class DrizzleQueryError extends Error {\n\tconstructor(\n\t\tpublic query: string,\n\t\tpublic params: any[],\n\t\tpublic override cause?: Error,\n\t) {\n\t\tsuper(`Failed query: ${query}\\nparams: ${params}`);\n\t\tError.captureStackTrace(this, DrizzleQueryError);\n\n\t\t// ES2022+: preserves original error on `.cause`\n\t\tif (cause) (this as any).cause = cause;\n\t}\n}\n\nexport class TransactionRollbackError extends DrizzleError {\n\tstatic override readonly [entityKind]: string = 'TransactionRollbackError';\n\n\tconstructor() {\n\t\tsuper({ message: 'Rollback' });\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\n\nexport interface Logger {\n\tlogQuery(query: string, params: unknown[]): void;\n}\n\nexport interface LogWriter {\n\twrite(message: string): void;\n}\n\nexport class ConsoleLogWriter implements LogWriter {\n\tstatic readonly [entityKind]: string = 'ConsoleLogWriter';\n\n\twrite(message: string) {\n\t\tconsole.log(message);\n\t}\n}\n\nexport class DefaultLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'DefaultLogger';\n\n\treadonly writer: LogWriter;\n\n\tconstructor(config?: { writer: LogWriter }) {\n\t\tthis.writer = config?.writer ?? new ConsoleLogWriter();\n\t}\n\n\tlogQuery(query: string, params: unknown[]): void {\n\t\tconst stringifiedParams = params.map((p) => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(p);\n\t\t\t} catch {\n\t\t\t\treturn String(p);\n\t\t\t}\n\t\t});\n\t\tconst paramsStr = stringifiedParams.length ? ` -- params: [${stringifiedParams.join(', ')}]` : '';\n\t\tthis.writer.write(`Query: ${query}${paramsStr}`);\n\t}\n}\n\nexport class NoopLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'NoopLogger';\n\n\tlogQuery(): void {\n\t\t// noop\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\n\nexport abstract class QueryPromise<T> implements Promise<T> {\n\tstatic readonly [entityKind]: string = 'QueryPromise';\n\n\t[Symbol.toStringTag] = 'QueryPromise';\n\n\tcatch<TResult = never>(\n\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null | undefined,\n\t): Promise<T | TResult> {\n\t\treturn this.then(undefined, onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | null | undefined): Promise<T> {\n\t\treturn this.then(\n\t\t\t(value) => {\n\t\t\t\tonFinally?.();\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reason) => {\n\t\t\t\tonFinally?.();\n\t\t\t\tthrow reason;\n\t\t\t},\n\t\t);\n\t}\n\n\tthen<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.execute().then(onFulfilled, onRejected);\n\t}\n\n\tabstract execute(): Promise<T>;\n}\n", "import { type AnyTable, getTableUniqueName, type InferModelFromColumns, Table } from '~/table.ts';\nimport { type AnyColumn, Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { PrimaryKeyBuilder } from './pg-core/primary-keys.ts';\nimport {\n\tand,\n\tasc,\n\tbetween,\n\tdesc,\n\teq,\n\texists,\n\tgt,\n\tgte,\n\tilike,\n\tinArray,\n\tisNotNull,\n\tisNull,\n\tlike,\n\tlt,\n\tlte,\n\tne,\n\tnot,\n\tnotBetween,\n\tnotExists,\n\tnotIlike,\n\tnotInArray,\n\tnotLike,\n\tor,\n} from './sql/expressions/index.ts';\nimport { type Placeholder, SQL, sql } from './sql/sql.ts';\nimport type { Assume, ColumnsWithTable, Equal, Simplify, ValueOrArray } from './utils.ts';\n\nexport abstract class Relation<TTableName extends string = string> {\n\tstatic readonly [entityKind]: string = 'Relation';\n\n\tdeclare readonly $brand: 'Relation';\n\treadonly referencedTableName: TTableName;\n\tfieldName!: string;\n\n\tconstructor(\n\t\treadonly sourceTable: Table,\n\t\treadonly referencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly relationName: string | undefined,\n\t) {\n\t\tthis.referencedTableName = referencedTable[Table.Symbol.Name] as TTableName;\n\t}\n\n\tabstract withFieldName(fieldName: string): Relation<TTableName>;\n}\n\nexport class Relations<\n\tTTableName extends string = string,\n\tTConfig extends Record<string, Relation> = Record<string, Relation>,\n> {\n\tstatic readonly [entityKind]: string = 'Relations';\n\n\tdeclare readonly $brand: 'Relations';\n\n\tconstructor(\n\t\treadonly table: AnyTable<{ name: TTableName }>,\n\t\treadonly config: (helpers: TableRelationsHelpers<TTableName>) => TConfig,\n\t) {}\n}\n\nexport class One<\n\tTTableName extends string = string,\n\tTIsNullable extends boolean = boolean,\n> extends Relation<TTableName> {\n\tstatic override readonly [entityKind]: string = 'One';\n\n\tdeclare protected $relationBrand: 'One';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config:\n\t\t\t| RelationConfig<\n\t\t\t\tTTableName,\n\t\t\t\tstring,\n\t\t\t\tAnyColumn<{ tableName: TTableName }>[]\n\t\t\t>\n\t\t\t| undefined,\n\t\treadonly isNullable: TIsNullable,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): One<TTableName> {\n\t\tconst relation = new One(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t\tthis.isNullable,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport class Many<TTableName extends string> extends Relation<TTableName> {\n\tstatic override readonly [entityKind]: string = 'Many';\n\n\tdeclare protected $relationBrand: 'Many';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config: { relationName: string } | undefined,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): Many<TTableName> {\n\t\tconst relation = new Many(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport type TableRelationsKeysOnly<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n\tK extends keyof TSchema,\n> = TSchema[K] extends Relations<TTableName> ? K : never;\n\nexport type ExtractTableRelationsFromSchema<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TableRelationsKeysOnly<\n\t\t\t\tTSchema,\n\t\t\t\tTTableName,\n\t\t\t\tK\n\t\t\t>\n\t\t]: TSchema[K] extends Relations<TTableName, infer TConfig> ? TConfig : never;\n\t}\n>;\n\nexport type ExtractObjectValues<T> = T[keyof T];\n\nexport type ExtractRelationsFromTableExtraConfigSchema<\n\tTConfig extends unknown[],\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TConfig as TConfig[K] extends Relations<any> ? K\n\t\t\t\t: never\n\t\t]: TConfig[K] extends Relations<infer TRelationConfig> ? TRelationConfig\n\t\t\t: never;\n\t}\n>;\n\nexport function getOperators() {\n\treturn {\n\t\tand,\n\t\tbetween,\n\t\teq,\n\t\texists,\n\t\tgt,\n\t\tgte,\n\t\tilike,\n\t\tinArray,\n\t\tisNull,\n\t\tisNotNull,\n\t\tlike,\n\t\tlt,\n\t\tlte,\n\t\tne,\n\t\tnot,\n\t\tnotBetween,\n\t\tnotExists,\n\t\tnotLike,\n\t\tnotIlike,\n\t\tnotInArray,\n\t\tor,\n\t\tsql,\n\t};\n}\n\nexport type Operators = ReturnType<typeof getOperators>;\n\nexport function getOrderByOperators() {\n\treturn {\n\t\tsql,\n\t\tasc,\n\t\tdesc,\n\t};\n}\n\nexport type OrderByOperators = ReturnType<typeof getOrderByOperators>;\n\nexport type FindTableByDBName<\n\tTSchema extends TablesRelationalConfig,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TSchema[K]['dbName'] extends TTableName ? K\n\t\t\t\t: never\n\t\t]: TSchema[K];\n\t}\n>;\n\nexport type DBQueryConfig<\n\tTRelationType extends 'one' | 'many' = 'one' | 'many',\n\tTIsRoot extends boolean = boolean,\n\tTSchema extends TablesRelationalConfig = TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig = TableRelationalConfig,\n> =\n\t& {\n\t\tcolumns?:\n\t\t\t| {\n\t\t\t\t[K in keyof TTableConfig['columns']]?: boolean;\n\t\t\t}\n\t\t\t| undefined;\n\t\twith?:\n\t\t\t| {\n\t\t\t\t[K in keyof TTableConfig['relations']]?:\n\t\t\t\t\t| true\n\t\t\t\t\t| DBQueryConfig<\n\t\t\t\t\t\tTTableConfig['relations'][K] extends One ? 'one' : 'many',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tTSchema,\n\t\t\t\t\t\tFindTableByDBName<\n\t\t\t\t\t\t\tTSchema,\n\t\t\t\t\t\t\tTTableConfig['relations'][K]['referencedTableName']\n\t\t\t\t\t\t>\n\t\t\t\t\t>\n\t\t\t\t\t| undefined;\n\t\t\t}\n\t\t\t| undefined;\n\t\textras?:\n\t\t\t| Record<string, SQL.Aliased>\n\t\t\t| ((\n\t\t\t\tfields: Simplify<\n\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t>,\n\t\t\t\toperators: { sql: Operators['sql'] },\n\t\t\t) => Record<string, SQL.Aliased>)\n\t\t\t| undefined;\n\t}\n\t& (TRelationType extends 'many' ?\n\t\t\t& {\n\t\t\t\twhere?:\n\t\t\t\t\t| SQL\n\t\t\t\t\t| undefined\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: Operators,\n\t\t\t\t\t) => SQL | undefined);\n\t\t\t\torderBy?:\n\t\t\t\t\t| ValueOrArray<AnyColumn | SQL>\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: OrderByOperators,\n\t\t\t\t\t) => ValueOrArray<AnyColumn | SQL>)\n\t\t\t\t\t| undefined;\n\t\t\t\tlimit?: number | Placeholder | undefined;\n\t\t\t}\n\t\t\t& (TIsRoot extends true ? {\n\t\t\t\t\toffset?: number | Placeholder | undefined;\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t: {});\n\nexport interface TableRelationalConfig {\n\ttsName: string;\n\tdbName: string;\n\tcolumns: Record<string, Column>;\n\trelations: Record<string, Relation>;\n\tprimaryKey: AnyColumn[];\n\tschema?: string;\n}\n\nexport type TablesRelationalConfig = Record<string, TableRelationalConfig>;\n\nexport interface RelationalSchemaConfig<\n\tTSchema extends TablesRelationalConfig,\n> {\n\tfullSchema: Record<string, unknown>;\n\tschema: TSchema;\n\ttableNamesMap: Record<string, string>;\n}\n\nexport type ExtractTablesWithRelations<\n\tTSchema extends Record<string, unknown>,\n> = {\n\t[\n\t\tK in keyof TSchema as TSchema[K] extends Table ? K\n\t\t\t: never\n\t]: TSchema[K] extends Table ? {\n\t\t\ttsName: K & string;\n\t\t\tdbName: TSchema[K]['_']['name'];\n\t\t\tcolumns: TSchema[K]['_']['columns'];\n\t\t\trelations: ExtractTableRelationsFromSchema<\n\t\t\t\tTSchema,\n\t\t\t\tTSchema[K]['_']['name']\n\t\t\t>;\n\t\t\tprimaryKey: AnyColumn[];\n\t\t}\n\t\t: never;\n};\n\nexport type ReturnTypeOrValue<T> = T extends (...args: any[]) => infer R ? R\n\t: T;\n\nexport type BuildRelationResult<\n\tTSchema extends TablesRelationalConfig,\n\tTInclude,\n\tTRelations extends Record<string, Relation>,\n> = {\n\t[\n\t\tK in\n\t\t\t& NonUndefinedKeysOnly<TInclude>\n\t\t\t& keyof TRelations\n\t]: TRelations[K] extends infer TRel extends Relation ? BuildQueryResult<\n\t\t\tTSchema,\n\t\t\tFindTableByDBName<TSchema, TRel['referencedTableName']>,\n\t\t\tAssume<TInclude[K], true | Record<string, unknown>>\n\t\t> extends infer TResult ? TRel extends One ?\n\t\t\t\t\t| TResult\n\t\t\t\t\t| (Equal<TRel['isNullable'], false> extends true ? null : never)\n\t\t\t: TResult[]\n\t\t: never\n\t\t: never;\n};\n\nexport type NonUndefinedKeysOnly<T> =\n\t& ExtractObjectValues<\n\t\t{\n\t\t\t[K in keyof T as T[K] extends undefined ? never : K]: K;\n\t\t}\n\t>\n\t& keyof T;\n\nexport type BuildQueryResult<\n\tTSchema extends TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig,\n\tTFullSelection extends true | Record<string, unknown>,\n> = Equal<TFullSelection, true> extends true ? InferModelFromColumns<TTableConfig['columns']>\n\t: TFullSelection extends Record<string, unknown> ? Simplify<\n\t\t\t& (TFullSelection['columns'] extends Record<string, unknown> ? InferModelFromColumns<\n\t\t\t\t\t{\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tK in Equal<\n\t\t\t\t\t\t\t\tExclude<\n\t\t\t\t\t\t\t\t\tTFullSelection['columns'][\n\t\t\t\t\t\t\t\t\t\t& keyof TFullSelection['columns']\n\t\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t>,\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t> extends true ? Exclude<\n\t\t\t\t\t\t\t\t\tkeyof TTableConfig['columns'],\n\t\t\t\t\t\t\t\t\tNonUndefinedKeysOnly<TFullSelection['columns']>\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t& {\n\t\t\t\t\t\t\t\t\t\t[K in keyof TFullSelection['columns']]: Equal<\n\t\t\t\t\t\t\t\t\t\t\tTFullSelection['columns'][K],\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t> extends true ? K\n\t\t\t\t\t\t\t\t\t\t\t: never;\n\t\t\t\t\t\t\t\t\t}[keyof TFullSelection['columns']]\n\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t]: TTableConfig['columns'][K];\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t: InferModelFromColumns<TTableConfig['columns']>)\n\t\t\t& (TFullSelection['extras'] extends\n\t\t\t\t| Record<string, unknown>\n\t\t\t\t| ((...args: any[]) => Record<string, unknown>) ? {\n\t\t\t\t\t[\n\t\t\t\t\t\tK in NonUndefinedKeysOnly<\n\t\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>\n\t\t\t\t\t\t>\n\t\t\t\t\t]: Assume<\n\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>[K],\n\t\t\t\t\t\tSQL.Aliased\n\t\t\t\t\t>['_']['type'];\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t\t& (TFullSelection['with'] extends Record<string, unknown> ? BuildRelationResult<\n\t\t\t\t\tTSchema,\n\t\t\t\t\tTFullSelection['with'],\n\t\t\t\t\tTTableConfig['relations']\n\t\t\t\t>\n\t\t\t\t: {})\n\t\t>\n\t: never;\n\nexport interface RelationConfig<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> {\n\trelationName?: string;\n\tfields: TColumns;\n\treferences: ColumnsWithTable<TTableName, TForeignTableName, TColumns>;\n}\n\nexport function extractTablesRelationalConfig<\n\tTTables extends TablesRelationalConfig,\n>(\n\tschema: Record<string, unknown>,\n\tconfigHelpers: (table: Table) => any,\n): { tables: TTables; tableNamesMap: Record<string, string> } {\n\tif (\n\t\tObject.keys(schema).length === 1\n\t\t&& 'default' in schema\n\t\t&& !is(schema['default'], Table)\n\t) {\n\t\tschema = schema['default'] as Record<string, unknown>;\n\t}\n\n\t// table DB name -> schema table key\n\tconst tableNamesMap: Record<string, string> = {};\n\t// Table relations found before their tables - need to buffer them until we know the schema table key\n\tconst relationsBuffer: Record<\n\t\tstring,\n\t\t{ relations: Record<string, Relation>; primaryKey?: AnyColumn[] }\n\t> = {};\n\tconst tablesConfig: TablesRelationalConfig = {};\n\tfor (const [key, value] of Object.entries(schema)) {\n\t\tif (is(value, Table)) {\n\t\t\tconst dbName = getTableUniqueName(value);\n\t\t\tconst bufferedRelations = relationsBuffer[dbName];\n\t\t\ttableNamesMap[dbName] = key;\n\t\t\ttablesConfig[key] = {\n\t\t\t\ttsName: key,\n\t\t\t\tdbName: value[Table.Symbol.Name],\n\t\t\t\tschema: value[Table.Symbol.Schema],\n\t\t\t\tcolumns: value[Table.Symbol.Columns],\n\t\t\t\trelations: bufferedRelations?.relations ?? {},\n\t\t\t\tprimaryKey: bufferedRelations?.primaryKey ?? [],\n\t\t\t};\n\n\t\t\t// Fill in primary keys\n\t\t\tfor (\n\t\t\t\tconst column of Object.values(\n\t\t\t\t\t(value as Table)[Table.Symbol.Columns],\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (column.primary) {\n\t\t\t\t\ttablesConfig[key]!.primaryKey.push(column);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extraConfig = value[Table.Symbol.ExtraConfigBuilder]?.((value as Table)[Table.Symbol.ExtraConfigColumns]);\n\t\t\tif (extraConfig) {\n\t\t\t\tfor (const configEntry of Object.values(extraConfig)) {\n\t\t\t\t\tif (is(configEntry, PrimaryKeyBuilder)) {\n\t\t\t\t\t\ttablesConfig[key]!.primaryKey.push(...configEntry.columns);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (is(value, Relations)) {\n\t\t\tconst dbName = getTableUniqueName(value.table);\n\t\t\tconst tableName = tableNamesMap[dbName];\n\t\t\tconst relations: Record<string, Relation> = value.config(\n\t\t\t\tconfigHelpers(value.table),\n\t\t\t);\n\t\t\tlet primaryKey: AnyColumn[] | undefined;\n\n\t\t\tfor (const [relationName, relation] of Object.entries(relations)) {\n\t\t\t\tif (tableName) {\n\t\t\t\t\tconst tableConfig = tablesConfig[tableName]!;\n\t\t\t\t\ttableConfig.relations[relationName] = relation;\n\t\t\t\t\tif (primaryKey) {\n\t\t\t\t\t\ttableConfig.primaryKey.push(...primaryKey);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!(dbName in relationsBuffer)) {\n\t\t\t\t\t\trelationsBuffer[dbName] = {\n\t\t\t\t\t\t\trelations: {},\n\t\t\t\t\t\t\tprimaryKey,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\trelationsBuffer[dbName]!.relations[relationName] = relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { tables: tablesConfig as TTables, tableNamesMap };\n}\n\nexport function relations<\n\tTTableName extends string,\n\tTRelations extends Record<string, Relation<any>>,\n>(\n\ttable: AnyTable<{ name: TTableName }>,\n\trelations: (helpers: TableRelationsHelpers<TTableName>) => TRelations,\n): Relations<TTableName, TRelations> {\n\treturn new Relations<TTableName, TRelations>(\n\t\ttable,\n\t\t(helpers: TableRelationsHelpers<TTableName>) =>\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.entries(relations(helpers)).map(([key, value]) => [\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue.withFieldName(key),\n\t\t\t\t]),\n\t\t\t) as TRelations,\n\t);\n}\n\nexport function createOne<TTableName extends string>(sourceTable: Table) {\n\treturn function one<\n\t\tTForeignTable extends Table,\n\t\tTColumns extends [\n\t\t\tAnyColumn<{ tableName: TTableName }>,\n\t\t\t...AnyColumn<{ tableName: TTableName }>[],\n\t\t],\n\t>(\n\t\ttable: TForeignTable,\n\t\tconfig?: RelationConfig<TTableName, TForeignTable['_']['name'], TColumns>,\n\t): One<\n\t\tTForeignTable['_']['name'],\n\t\tEqual<TColumns[number]['_']['notNull'], true>\n\t> {\n\t\treturn new One(\n\t\t\tsourceTable,\n\t\t\ttable,\n\t\t\tconfig,\n\t\t\t(config?.fields.reduce<boolean>((res, f) => res && f.notNull, true)\n\t\t\t\t?? false) as Equal<TColumns[number]['_']['notNull'], true>,\n\t\t);\n\t};\n}\n\nexport function createMany(sourceTable: Table) {\n\treturn function many<TForeignTable extends Table>(\n\t\treferencedTable: TForeignTable,\n\t\tconfig?: { relationName: string },\n\t): Many<TForeignTable['_']['name']> {\n\t\treturn new Many(sourceTable, referencedTable, config);\n\t};\n}\n\nexport interface NormalizedRelation {\n\tfields: AnyColumn[];\n\treferences: AnyColumn[];\n}\n\nexport function normalizeRelation(\n\tschema: TablesRelationalConfig,\n\ttableNamesMap: Record<string, string>,\n\trelation: Relation,\n): NormalizedRelation {\n\tif (is(relation, One) && relation.config) {\n\t\treturn {\n\t\t\tfields: relation.config.fields,\n\t\t\treferences: relation.config.references,\n\t\t};\n\t}\n\n\tconst referencedTableTsName = tableNamesMap[getTableUniqueName(relation.referencedTable)];\n\tif (!referencedTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${relation.referencedTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst referencedTableConfig = schema[referencedTableTsName];\n\tif (!referencedTableConfig) {\n\t\tthrow new Error(`Table \"${referencedTableTsName}\" not found in schema`);\n\t}\n\n\tconst sourceTable = relation.sourceTable;\n\tconst sourceTableTsName = tableNamesMap[getTableUniqueName(sourceTable)];\n\tif (!sourceTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${sourceTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst reverseRelations: Relation[] = [];\n\tfor (\n\t\tconst referencedTableRelation of Object.values(\n\t\t\treferencedTableConfig.relations,\n\t\t)\n\t) {\n\t\tif (\n\t\t\t(relation.relationName\n\t\t\t\t&& relation !== referencedTableRelation\n\t\t\t\t&& referencedTableRelation.relationName === relation.relationName)\n\t\t\t|| (!relation.relationName\n\t\t\t\t&& referencedTableRelation.referencedTable === relation.sourceTable)\n\t\t) {\n\t\t\treverseRelations.push(referencedTableRelation);\n\t\t}\n\t}\n\n\tif (reverseRelations.length > 1) {\n\t\tthrow relation.relationName\n\t\t\t? new Error(\n\t\t\t\t`There are multiple relations with name \"${relation.relationName}\" in table \"${referencedTableTsName}\"`,\n\t\t\t)\n\t\t\t: new Error(\n\t\t\t\t`There are multiple relations between \"${referencedTableTsName}\" and \"${\n\t\t\t\t\trelation.sourceTable[Table.Symbol.Name]\n\t\t\t\t}\". Please specify relation name`,\n\t\t\t);\n\t}\n\n\tif (\n\t\treverseRelations[0]\n\t\t&& is(reverseRelations[0], One)\n\t\t&& reverseRelations[0].config\n\t) {\n\t\treturn {\n\t\t\tfields: reverseRelations[0].config.references,\n\t\t\treferences: reverseRelations[0].config.fields,\n\t\t};\n\t}\n\n\tthrow new Error(\n\t\t`There is not enough information to infer relation \"${sourceTableTsName}.${relation.fieldName}\"`,\n\t);\n}\n\nexport function createTableRelationsHelpers<TTableName extends string>(\n\tsourceTable: AnyTable<{ name: TTableName }>,\n) {\n\treturn {\n\t\tone: createOne<TTableName>(sourceTable),\n\t\tmany: createMany(sourceTable),\n\t};\n}\n\nexport type TableRelationsHelpers<TTableName extends string> = ReturnType<\n\ttypeof createTableRelationsHelpers<TTableName>\n>;\n\nexport interface BuildRelationalQueryResult<\n\tTTable extends Table = Table,\n\tTColumn extends Column = Column,\n> {\n\ttableTsKey: string;\n\tselection: {\n\t\tdbKey: string;\n\t\ttsKey: string;\n\t\tfield: TColumn | SQL | SQL.Aliased;\n\t\trelationTableTsKey: string | undefined;\n\t\tisJson: boolean;\n\t\tisExtra?: boolean;\n\t\tselection: BuildRelationalQueryResult<TTable>['selection'];\n\t}[];\n\tsql: TTable | SQL;\n}\n\nexport function mapRelationalRow(\n\ttablesConfig: TablesRelationalConfig,\n\ttableConfig: TableRelationalConfig,\n\trow: unknown[],\n\tbuildQueryResultSelection: BuildRelationalQueryResult['selection'],\n\tmapColumnValue: (value: unknown) => unknown = (value) => value,\n): Record<string, unknown> {\n\tconst result: Record<string, unknown> = {};\n\n\tfor (\n\t\tconst [\n\t\t\tselectionItemIndex,\n\t\t\tselectionItem,\n\t\t] of buildQueryResultSelection.entries()\n\t) {\n\t\tif (selectionItem.isJson) {\n\t\t\tconst relation = tableConfig.relations[selectionItem.tsKey]!;\n\t\t\tconst rawSubRows = row[selectionItemIndex] as\n\t\t\t\t| unknown[]\n\t\t\t\t| null\n\t\t\t\t| [null]\n\t\t\t\t| string;\n\t\t\tconst subRows = typeof rawSubRows === 'string'\n\t\t\t\t? (JSON.parse(rawSubRows) as unknown[])\n\t\t\t\t: rawSubRows;\n\t\t\tresult[selectionItem.tsKey] = is(relation, One)\n\t\t\t\t? subRows\n\t\t\t\t\t&& mapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRows,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t: (subRows as unknown[][]).map((subRow) =>\n\t\t\t\t\tmapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRow,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} else {\n\t\t\tconst value = mapColumnValue(row[selectionItemIndex]);\n\t\t\tconst field = selectionItem.field!;\n\t\t\tlet decoder;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tresult[selectionItem.tsKey] = value === null ? null : decoder.mapFromDriverValue(value);\n\t\t}\n\t}\n\n\treturn result;\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport { PgTable } from './table.ts';\n\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumn extends AnyPgColumn<{ tableName: TTableName }>,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(config: { name?: string; columns: [TColumn, ...TColumns] }): PrimaryKeyBuilder;\n/**\n * @deprecated: Please use primaryKey({ columns: [] }) instead of this function\n * @param columns\n */\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(...columns: TColumns): PrimaryKeyBuilder;\nexport function primaryKey(...config: any) {\n\tif (config[0].columns) {\n\t\treturn new PrimaryKeyBuilder(config[0].columns, config[0].name);\n\t}\n\treturn new PrimaryKeyBuilder(config);\n}\n\nexport class PrimaryKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKeyBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tname?: string,\n\t) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): PrimaryKey {\n\t\treturn new PrimaryKey(table, this.columns, this.name);\n\t}\n}\n\nexport class PrimaryKey {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKey';\n\n\treadonly columns: AnyPgColumn<{}>[];\n\treadonly name?: string;\n\n\tconstructor(readonly table: PgTable, columns: AnyPgColumn<{}>[], name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column) => column.name).join('_')}_pk`;\n\t}\n}\n", "import type { BuildColumns, BuildExtraConfigColumns } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { Table, type TableConfig as TableConfigBase, type UpdateTableConfig } from '~/table.ts';\nimport type { CheckBuilder } from './checks.ts';\nimport { getPgColumnBuilders, type PgColumnsBuilders } from './columns/all.ts';\nimport type { ExtraConfigColumn, PgColumn, PgColumnBuilder, PgColumnBuilderBase } from './columns/common.ts';\nimport type { ForeignKey, ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { AnyIndexBuilder } from './indexes.ts';\nimport type { PgPolicy } from './policies.ts';\nimport type { PrimaryKeyBuilder } from './primary-keys.ts';\nimport type { UniqueConstraintBuilder } from './unique-constraint.ts';\n\nexport type PgTableExtraConfigValue =\n\t| AnyIndexBuilder\n\t| CheckBuilder\n\t| ForeignKeyBuilder\n\t| PrimaryKeyBuilder\n\t| UniqueConstraintBuilder\n\t| PgPolicy;\n\nexport type PgTableExtraConfig = Record<\n\tstring,\n\tPgTableExtraConfigValue\n>;\n\nexport type TableConfig = TableConfigBase<PgColumn>;\n\n/** @internal */\nexport const InlineForeignKeys = Symbol.for('drizzle:PgInlineForeignKeys');\n/** @internal */\nexport const EnableRLS = Symbol.for('drizzle:EnableRLS');\n\nexport class PgTable<T extends TableConfig = TableConfig> extends Table<T> {\n\tstatic override readonly [entityKind]: string = 'PgTable';\n\n\t/** @internal */\n\tstatic override readonly Symbol = Object.assign({}, Table.Symbol, {\n\t\tInlineForeignKeys: InlineForeignKeys as typeof InlineForeignKeys,\n\t\tEnableRLS: EnableRLS as typeof EnableRLS,\n\t});\n\n\t/**@internal */\n\t[InlineForeignKeys]: ForeignKey[] = [];\n\n\t/** @internal */\n\t[EnableRLS]: boolean = false;\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigBuilder]: ((self: Record<string, PgColumn>) => PgTableExtraConfig) | undefined =\n\t\tundefined;\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigColumns]: Record<string, ExtraConfigColumn> = {};\n}\n\nexport type AnyPgTable<TPartial extends Partial<TableConfig> = {}> = PgTable<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport type PgTableWithColumns<T extends TableConfig> =\n\t& PgTable<T>\n\t& {\n\t\t[Key in keyof T['columns']]: T['columns'][Key];\n\t}\n\t& {\n\t\tenableRLS: () => Omit<\n\t\t\tPgTableWithColumns<T>,\n\t\t\t'enableRLS'\n\t\t>;\n\t};\n\n/** @internal */\nexport function pgTableWithSchema<\n\tTTableName extends string,\n\tTSchemaName extends string | undefined,\n\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n>(\n\tname: TTableName,\n\tcolumns: TColumnsMap | ((columnTypes: PgColumnsBuilders) => TColumnsMap),\n\textraConfig:\n\t\t| ((self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig | PgTableExtraConfigValue[])\n\t\t| undefined,\n\tschema: TSchemaName,\n\tbaseName = name,\n): PgTableWithColumns<{\n\tname: TTableName;\n\tschema: TSchemaName;\n\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\tdialect: 'pg';\n}> {\n\tconst rawTable = new PgTable<{\n\t\tname: TTableName;\n\t\tschema: TSchemaName;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>(name, schema, baseName);\n\n\tconst parsedColumns: TColumnsMap = typeof columns === 'function' ? columns(getPgColumnBuilders()) : columns;\n\n\tconst builtColumns = Object.fromEntries(\n\t\tObject.entries(parsedColumns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tcolBuilder.setName(name);\n\t\t\tconst column = colBuilder.build(rawTable);\n\t\t\trawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst builtColumnsForExtraConfig = Object.fromEntries(\n\t\tObject.entries(parsedColumns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tcolBuilder.setName(name);\n\t\t\tconst column = colBuilder.buildExtraConfigColumn(rawTable);\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst table = Object.assign(rawTable, builtColumns);\n\n\ttable[Table.Symbol.Columns] = builtColumns;\n\ttable[Table.Symbol.ExtraConfigColumns] = builtColumnsForExtraConfig;\n\n\tif (extraConfig) {\n\t\ttable[PgTable.Symbol.ExtraConfigBuilder] = extraConfig as any;\n\t}\n\n\treturn Object.assign(table, {\n\t\tenableRLS: () => {\n\t\t\ttable[PgTable.Symbol.EnableRLS] = true;\n\t\t\treturn table as PgTableWithColumns<{\n\t\t\t\tname: TTableName;\n\t\t\t\tschema: TSchemaName;\n\t\t\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\t\t\tdialect: 'pg';\n\t\t\t}>;\n\t\t},\n\t});\n}\n\nexport interface PgTableFn<TSchema extends string | undefined = undefined> {\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig?: (\n\t\t\tself: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>,\n\t\t) => PgTableExtraConfigValue[],\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: PgColumnsBuilders) => TColumnsMap,\n\t\textraConfig?: (self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfigValue[],\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\t/**\n\t * @deprecated The third parameter of pgTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig: (\n\t\t\tself: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>,\n\t\t) => PgTableExtraConfig,\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\n\t/**\n\t * @deprecated The third parameter of pgTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: PgColumnsBuilders) => TColumnsMap,\n\t\textraConfig: (self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig,\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n}\n\nexport const pgTable: PgTableFn = (name, columns, extraConfig) => {\n\treturn pgTableWithSchema(name, columns, extraConfig, undefined);\n};\n\nexport function pgTableCreator(customizeTableName: (name: string) => string): PgTableFn {\n\treturn (name, columns, extraConfig) => {\n\t\treturn pgTableWithSchema(customizeTableName(name) as typeof name, columns, extraConfig, undefined, name);\n\t};\n}\n", "import type { Cache } from './cache/core/cache.ts';\nimport type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { is } from './entity.ts';\nimport type { Logger } from './logger.ts';\nimport type { SelectedFieldsOrdered } from './operations.ts';\nimport type { TableLike } from './query-builders/select.types.ts';\nimport { Param, SQL, View } from './sql/sql.ts';\nimport type { DriverValueDecoder } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { getTableName, Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\n/** @internal */\nexport function mapResultRow<TResult>(\n\tcolumns: SelectedFieldsOrdered<AnyColumn>,\n\trow: unknown[],\n\tjoinsNotNullableMap: Record<string, boolean> | undefined,\n): TResult {\n\t// Key -> nested object key, value -> table name if all fields in the nested object are from the same table, false otherwise\n\tconst nullifyMap: Record<string, string | false> = {};\n\n\tconst result = columns.reduce<Record<string, any>>(\n\t\t(result, { path, field }, columnIndex) => {\n\t\t\tlet decoder: DriverValueDecoder<unknown, unknown>;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tlet node = result;\n\t\t\tfor (const [pathChunkIndex, pathChunk] of path.entries()) {\n\t\t\t\tif (pathChunkIndex < path.length - 1) {\n\t\t\t\t\tif (!(pathChunk in node)) {\n\t\t\t\t\t\tnode[pathChunk] = {};\n\t\t\t\t\t}\n\t\t\t\t\tnode = node[pathChunk];\n\t\t\t\t} else {\n\t\t\t\t\tconst rawValue = row[columnIndex]!;\n\t\t\t\t\tconst value = node[pathChunk] = rawValue === null ? null : decoder.mapFromDriverValue(rawValue);\n\n\t\t\t\t\tif (joinsNotNullableMap && is(field, Column) && path.length === 2) {\n\t\t\t\t\t\tconst objectName = path[0]!;\n\t\t\t\t\t\tif (!(objectName in nullifyMap)) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = value === null ? getTableName(field.table) : false;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof nullifyMap[objectName] === 'string' && nullifyMap[objectName] !== getTableName(field.table)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t{},\n\t);\n\n\t// Nullify all nested objects from nullifyMap that are nullable\n\tif (joinsNotNullableMap && Object.keys(nullifyMap).length > 0) {\n\t\tfor (const [objectName, tableName] of Object.entries(nullifyMap)) {\n\t\t\tif (typeof tableName === 'string' && !joinsNotNullableMap[tableName]) {\n\t\t\t\tresult[objectName] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result as TResult;\n}\n\n/** @internal */\nexport function orderSelectedFields<TColumn extends AnyColumn>(\n\tfields: Record<string, unknown>,\n\tpathPrefix?: string[],\n): SelectedFieldsOrdered<TColumn> {\n\treturn Object.entries(fields).reduce<SelectedFieldsOrdered<AnyColumn>>((result, [name, field]) => {\n\t\tif (typeof name !== 'string') {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst newPath = pathPrefix ? [...pathPrefix, name] : [name];\n\t\tif (is(field, Column) || is(field, SQL) || is(field, SQL.Aliased)) {\n\t\t\tresult.push({ path: newPath, field });\n\t\t} else if (is(field, Table)) {\n\t\t\tresult.push(...orderSelectedFields(field[Table.Symbol.Columns], newPath));\n\t\t} else {\n\t\t\tresult.push(...orderSelectedFields(field as Record<string, unknown>, newPath));\n\t\t}\n\t\treturn result;\n\t}, []) as SelectedFieldsOrdered<TColumn>;\n}\n\nexport function haveSameKeys(left: Record<string, unknown>, right: Record<string, unknown>) {\n\tconst leftKeys = Object.keys(left);\n\tconst rightKeys = Object.keys(right);\n\n\tif (leftKeys.length !== rightKeys.length) {\n\t\treturn false;\n\t}\n\n\tfor (const [index, key] of leftKeys.entries()) {\n\t\tif (key !== rightKeys[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/** @internal */\nexport function mapUpdateSet(table: Table, values: Record<string, unknown>): UpdateSet {\n\tconst entries: [string, UpdateSet[string]][] = Object.entries(values)\n\t\t.filter(([, value]) => value !== undefined)\n\t\t.map(([key, value]) => {\n\t\t\t// eslint-disable-next-line unicorn/prefer-ternary\n\t\t\tif (is(value, SQL) || is(value, Column)) {\n\t\t\t\treturn [key, value];\n\t\t\t} else {\n\t\t\t\treturn [key, new Param(value, table[Table.Symbol.Columns][key])];\n\t\t\t}\n\t\t});\n\n\tif (entries.length === 0) {\n\t\tthrow new Error('No values to set');\n\t}\n\n\treturn Object.fromEntries(entries);\n}\n\nexport type UpdateSet = Record<string, SQL | Param | AnyColumn | null | undefined>;\n\nexport type OneOrMany<T> = T | T[];\n\nexport type Update<T, TUpdate> =\n\t& {\n\t\t[K in Exclude<keyof T, keyof TUpdate>]: T[K];\n\t}\n\t& TUpdate;\n\nexport type Simplify<T> =\n\t& {\n\t\t// @ts-ignore - \"Type parameter 'K' has a circular constraint\", not sure why\n\t\t[K in keyof T]: T[K];\n\t}\n\t& {};\n\nexport type SimplifyMappedType<T> = [T] extends [unknown] ? T : never;\n\nexport type ShallowRecord<K extends keyof any, T> = SimplifyMappedType<{ [P in K]: T }>;\n\nexport type Assume<T, U> = T extends U ? T : U;\n\nexport type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends (<T>() => T extends Y ? 1 : 2) ? true : false;\n\nexport interface DrizzleTypeError<T extends string> {\n\t$drizzleTypeError: T;\n}\n\nexport type ValueOrArray<T> = T | T[];\n\n/** @internal */\nexport function applyMixins(baseClass: any, extendedClasses: any[]) {\n\tfor (const extendedClass of extendedClasses) {\n\t\tfor (const name of Object.getOwnPropertyNames(extendedClass.prototype)) {\n\t\t\tif (name === 'constructor') continue;\n\n\t\t\tObject.defineProperty(\n\t\t\t\tbaseClass.prototype,\n\t\t\t\tname,\n\t\t\t\tObject.getOwnPropertyDescriptor(extendedClass.prototype, name) || Object.create(null),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport type Or<T1, T2> = T1 extends true ? true : T2 extends true ? true : false;\n\nexport type IfThenElse<If, Then, Else> = If extends true ? Then : Else;\n\nexport type PromiseOf<T> = T extends Promise<infer U> ? U : T;\n\nexport type Writable<T> = {\n\t-readonly [P in keyof T]: T[P];\n};\n\nexport type NonArray<T> = T extends any[] ? never : T;\n\nexport function getTableColumns<T extends Table>(table: T): T['_']['columns'] {\n\treturn table[Table.Symbol.Columns];\n}\n\nexport function getViewSelectedFields<T extends View>(view: T): T['_']['selectedFields'] {\n\treturn view[ViewBaseConfig].selectedFields;\n}\n\n/** @internal */\nexport function getTableLikeName(table: TableLike): string | undefined {\n\treturn is(table, Subquery)\n\t\t? table._.alias\n\t\t: is(table, View)\n\t\t? table[ViewBaseConfig].name\n\t\t: is(table, SQL)\n\t\t? undefined\n\t\t: table[Table.Symbol.IsAlias]\n\t\t? table[Table.Symbol.Name]\n\t\t: table[Table.Symbol.BaseName];\n}\n\nexport type ColumnsWithTable<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> = { [Key in keyof TColumns]: AnyColumn<{ tableName: TForeignTableName }> };\n\nexport type Casing = 'snake_case' | 'camelCase';\n\nexport interface DrizzleConfig<TSchema extends Record<string, unknown> = Record<string, never>> {\n\tlogger?: boolean | Logger;\n\tschema?: TSchema;\n\tcasing?: Casing;\n\tcache?: Cache;\n}\nexport type ValidateShape<T, ValidShape, TResult = T> = T extends ValidShape\n\t? Exclude<keyof T, keyof ValidShape> extends never ? TResult\n\t: DrizzleTypeError<\n\t\t`Invalid key(s): ${Exclude<(keyof T) & (string | number | bigint | boolean | null | undefined), keyof ValidShape>}`\n\t>\n\t: never;\n\nexport type KnownKeysOnly<T, U> = {\n\t[K in keyof T]: K extends keyof U ? T[K] : never;\n};\n\nexport type IsAny<T> = 0 extends (1 & T) ? true : false;\n\n/** @internal */\nexport function getColumnNameAndConfig<\n\tTConfig extends Record<string, any> | undefined,\n>(a: string | TConfig | undefined, b: TConfig | undefined) {\n\treturn {\n\t\tname: typeof a === 'string' && a.length > 0 ? a : '' as string,\n\t\tconfig: typeof a === 'object' ? a : b as TConfig,\n\t};\n}\n\nexport type IfNotImported<T, Y, N> = unknown extends T ? Y : N;\n\nexport type ImportTypeError<TPackageName extends string> =\n\t`Please install \\`${TPackageName}\\` to allow Drizzle ORM to connect to the database`;\n\nexport type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Keys extends any\n\t? Required<Pick<T, Keys>> & Partial<Omit<T, Keys>>\n\t: never;\n\ntype ExpectedConfigShape = {\n\tlogger?: boolean | {\n\t\tlogQuery(query: string, params: unknown[]): void;\n\t};\n\tschema?: Record<string, never>;\n\tcasing?: 'snake_case' | 'camelCase';\n};\n\n// If this errors, you must update config shape checker function with new config specs\nconst _: DrizzleConfig = {} as ExpectedConfigShape;\nconst __: ExpectedConfigShape = {} as DrizzleConfig;\n\nexport function isConfig(data: any): boolean {\n\tif (typeof data !== 'object' || data === null) return false;\n\n\tif (data.constructor.name !== 'Object') return false;\n\n\tif ('logger' in data) {\n\t\tconst type = typeof data['logger'];\n\t\tif (\n\t\t\ttype !== 'boolean' && (type !== 'object' || typeof data['logger']['logQuery'] !== 'function')\n\t\t\t&& type !== 'undefined'\n\t\t) return false;\n\n\t\treturn true;\n\t}\n\n\tif ('schema' in data) {\n\t\tconst type = typeof data['schema'];\n\t\tif (type !== 'object' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('casing' in data) {\n\t\tconst type = typeof data['casing'];\n\t\tif (type !== 'string' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('mode' in data) {\n\t\tif (data['mode'] !== 'default' || data['mode'] !== 'planetscale' || data['mode'] !== undefined) return false;\n\n\t\treturn true;\n\t}\n\n\tif ('connection' in data) {\n\t\tconst type = typeof data['connection'];\n\t\tif (type !== 'string' && type !== 'object' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('client' in data) {\n\t\tconst type = typeof data['client'];\n\t\tif (type !== 'object' && type !== 'function' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif (Object.keys(data).length === 0) return true;\n\n\treturn false;\n}\n\nexport type NeonAuthToken = string | (() => string | Promise<string>);\n\nexport const textDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder();\n", "import { type AnyColumn, Column, type GetColumnData } from '~/column.ts';\nimport { is } from '~/entity.ts';\nimport { Table } from '~/table.ts';\nimport {\n\tisDriverValueEncoder,\n\tisSQLWrapper,\n\tParam,\n\tPlaceholder,\n\tSQL,\n\tsql,\n\ttype SQLChunk,\n\ttype SQLWrapper,\n\tStringChunk,\n\tView,\n} from '../sql.ts';\n\nexport function bindIfParam(value: unknown, column: SQLWrapper): SQLChunk {\n\tif (\n\t\tisDriverValueEncoder(column)\n\t\t&& !isSQLWrapper(value)\n\t\t&& !is(value, Param)\n\t\t&& !is(value, Placeholder)\n\t\t&& !is(value, Column)\n\t\t&& !is(value, Table)\n\t\t&& !is(value, View)\n\t) {\n\t\treturn new Param(value, column);\n\t}\n\treturn value as SQLChunk;\n}\n\nexport interface BinaryOperator {\n\t<TColumn extends Column>(\n\t\tleft: TColumn,\n\t\tright: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\t): SQL;\n\t<T>(left: SQL.Aliased<T>, right: T | SQLWrapper): SQL;\n\t<T extends SQLWrapper>(\n\t\tleft: Exclude<T, SQL.Aliased | Column>,\n\t\tright: unknown,\n\t): SQL;\n}\n\n/**\n * Test that two values are equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is null, you may want to use\n * `isNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford\n * db.select().from(cars)\n *   .where(eq(cars.make, 'Ford'))\n * ```\n *\n * @see isNull for a way to test equality to NULL.\n */\nexport const eq: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} = ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that two values are not equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is not null, you may want to use\n * `isNotNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars not made by Ford\n * db.select().from(cars)\n *   .where(ne(cars.make, 'Ford'))\n * ```\n *\n * @see isNotNull for a way to test whether a value is not null.\n */\nexport const ne: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <> ${bindIfParam(right, left)}`;\n};\n\n/**\n * Combine a list of conditions with the `and` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     and(\n *       eq(cars.make, 'Volvo'),\n *       eq(cars.year, 1950),\n *     )\n *   )\n * ```\n */\nexport function and(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function and(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' and ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Combine a list of conditions with the `or` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     or(\n *       eq(cars.make, 'GM'),\n *       eq(cars.make, 'Ford'),\n *     )\n *   )\n * ```\n */\nexport function or(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function or(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' or ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Negate the meaning of an expression using the `not` keyword.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars _not_ made by GM or Ford.\n * db.select().from(cars)\n *   .where(not(inArray(cars.make, ['GM', 'Ford'])))\n * ```\n */\nexport function not(condition: SQLWrapper): SQL {\n\treturn sql`not ${condition}`;\n}\n\n/**\n * Test that the first expression passed is greater than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made after 2000.\n * db.select().from(cars)\n *   .where(gt(cars.year, 2000))\n * ```\n *\n * @see gte for greater-than-or-equal\n */\nexport const gt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} > ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is greater than\n * or equal to the second expression. Use `gt` to\n * test whether an expression is strictly greater\n * than another.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made on or after 2000.\n * db.select().from(cars)\n *   .where(gte(cars.year, 2000))\n * ```\n *\n * @see gt for a strictly greater-than condition\n */\nexport const gte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} >= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lt(cars.year, 2000))\n * ```\n *\n * @see lte for less-than-or-equal\n */\nexport const lt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} < ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * or equal to the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lte(cars.year, 2000))\n * ```\n *\n * @see lt for a strictly less-than condition\n */\nexport const lte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value from a list passed as the second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford or GM.\n * db.select().from(cars)\n *   .where(inArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see notInArray for the inverse of this test\n */\nexport function inArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function inArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: ReadonlyArray<GetColumnData<TColumn, 'raw'> | Placeholder> | SQLWrapper,\n): SQL;\nexport function inArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: ReadonlyArray<unknown | Placeholder> | SQLWrapper,\n): SQL;\nexport function inArray(\n\tcolumn: SQLWrapper,\n\tvalues: ReadonlyArray<unknown | Placeholder> | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`false`;\n\t\t}\n\t\treturn sql`${column} in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value that is not present in a list passed as the\n * second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by any company except Ford or GM.\n * db.select().from(cars)\n *   .where(notInArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see inArray for the inverse of this test\n */\nexport function notInArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`true`;\n\t\t}\n\t\treturn sql`${column} not in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} not in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether an expression is NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have no discontinuedAt date.\n * db.select().from(cars)\n *   .where(isNull(cars.discontinuedAt))\n * ```\n *\n * @see isNotNull for the inverse of this test\n */\nexport function isNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is null`;\n}\n\n/**\n * Test whether an expression is not NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have been discontinued.\n * db.select().from(cars)\n *   .where(isNotNull(cars.discontinuedAt))\n * ```\n *\n * @see isNull for the inverse of this test\n */\nexport function isNotNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is not null`;\n}\n\n/**\n * Test whether a subquery evaluates to have any rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column has a match in a cities\n * // table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     exists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see notExists for the inverse of this test\n */\nexport function exists(subquery: SQLWrapper): SQL {\n\treturn sql`exists ${subquery}`;\n}\n\n/**\n * Test whether a subquery doesn't include any result\n * rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column doesn't match\n * // a row in the cities table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     notExists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see exists for the inverse of this test\n */\nexport function notExists(subquery: SQLWrapper): SQL {\n\treturn sql`not exists ${subquery}`;\n}\n\n/**\n * Test whether an expression is between two values. This\n * is an easier way to express range tests, which would be\n * expressed mathematically as `x <= a <= y` but in SQL\n * would have to be like `a >= x AND a <= y`.\n *\n * Between is inclusive of the endpoints: if `column`\n * is equal to `min` or `max`, it will be TRUE.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made between 1990 and 2000\n * db.select().from(cars)\n *   .where(between(cars.year, 1990, 2000))\n * ```\n *\n * @see notBetween for the inverse of this test\n */\nexport function between<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function between<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function between<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function between(column: SQLWrapper, min: unknown, max: unknown): SQL {\n\treturn sql`${column} between ${bindIfParam(min, column)} and ${\n\t\tbindIfParam(\n\t\t\tmax,\n\t\t\tcolumn,\n\t\t)\n\t}`;\n}\n\n/**\n * Test whether an expression is not between two values.\n *\n * This, like `between`, includes its endpoints, so if\n * the `column` is equal to `min` or `max`, in this case\n * it will evaluate to FALSE.\n *\n * ## Examples\n *\n * ```ts\n * // Exclude cars made in the 1970s\n * db.select().from(cars)\n *   .where(notBetween(cars.year, 1970, 1979))\n * ```\n *\n * @see between for the inverse of this test\n */\nexport function notBetween<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function notBetween<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function notBetween<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function notBetween(\n\tcolumn: SQLWrapper,\n\tmin: unknown,\n\tmax: unknown,\n): SQL {\n\treturn sql`${column} not between ${\n\t\tbindIfParam(\n\t\t\tmin,\n\t\t\tcolumn,\n\t\t)\n\t} and ${bindIfParam(max, column)}`;\n}\n\n/**\n * Compare a column to a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(like(cars.name, '%Turbo%'))\n * ```\n *\n * @see ilike for a case-insensitive version of this condition\n */\nexport function like(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} like ${value}`;\n}\n\n/**\n * The inverse of like - this tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"ROver\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see like for the inverse condition\n * @see notIlike for a case-insensitive version of this condition\n */\nexport function notLike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not like ${value}`;\n}\n\n/**\n * Case-insensitively compare a column to a pattern,\n * which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * Unlike like, this performs a case-insensitive comparison.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(ilike(cars.name, '%Turbo%'))\n * ```\n *\n * @see like for a case-sensitive version of this condition\n */\nexport function ilike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} ilike ${value}`;\n}\n\n/**\n * The inverse of ilike - this case-insensitively tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"Rover\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see ilike for the inverse condition\n * @see notLike for a case-sensitive version of this condition\n */\nexport function notIlike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not ilike ${value}`;\n}\n\n/**\n * Test that a column or expression contains all elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\" and \"ORM\".\n * db.select().from(posts)\n *   .where(arrayContains(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContained to find if an array contains all elements of a column or expression\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContains<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContains(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContains requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} @> ${array}`;\n\t}\n\n\treturn sql`${column} @> ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that the list passed as the second argument contains\n * all elements of a column or expression.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both,\n * // but filtering posts that have additional tags.\n * db.select().from(posts)\n *   .where(arrayContained(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContained<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContained(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContained requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} <@ ${array}`;\n\t}\n\n\treturn sql`${column} <@ ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that a column or expression contains any elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both.\n * db.select().from(posts)\n *   .where(arrayOverlaps(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayContained to find if an array contains all elements of a column or expression\n */\nexport function arrayOverlaps<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayOverlaps(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayOverlaps requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} && ${array}`;\n\t}\n\n\treturn sql`${column} && ${bindIfParam(values, column)}`;\n}\n", "import type { AnyColumn } from '../../column.ts';\nimport type { SQL, SQLWrapper } from '../sql.ts';\nimport { sql } from '../sql.ts';\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in ascending\n * order. By the SQL standard, ascending order is the\n * default, so it is not usually necessary to specify\n * ascending sort order.\n *\n * ## Examples\n *\n * ```ts\n * // Return cars, starting with the oldest models\n * // and going in ascending order to the newest.\n * db.select().from(cars)\n *   .orderBy(asc(cars.year));\n * ```\n *\n * @see desc to sort in descending order\n */\nexport function asc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} asc`;\n}\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in descending\n * order.\n *\n * ## Examples\n *\n * ```ts\n * // Select users, with the most recently created\n * // records coming first.\n * db.select().from(users)\n *   .orderBy(desc(users.createdAt));\n * ```\n *\n * @see asc to sort in ascending order\n */\nexport function desc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} desc`;\n}\n", null, null, null, null, "/**\r\n * MockEx Core\r\n *\r\n * @author    Lateef Ahmad Baba\r\n * @copyright Eonyx Infotech LLP\r\n * @link      https://eonyx.io\r\n */\r\n\r\nimport { sqliteTable, text } from \"drizzle-orm/sqlite-core\";\r\nimport { commonFields } from \"./common\";\r\n\r\nexport const todos = sqliteTable(\"todos\", {\r\n    ...commonFields,\r\n    title: text().notNull(),\r\n    description: text(),\r\n});\r\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnySQLiteTable } from '~/sqlite-core/table.ts';\nimport { type Equal, getColumnNameAndConfig, textDecoder } from '~/utils.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\ntype BlobMode = 'buffer' | 'json' | 'bigint';\n\nexport type SQLiteBigIntBuilderInitial<TName extends string> = SQLiteBigIntBuilder<{\n\tname: TName;\n\tdataType: 'bigint';\n\tcolumnType: 'SQLiteBigInt';\n\tdata: bigint;\n\tdriverParam: Buffer;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteBigIntBuilder<T extends ColumnBuilderBaseConfig<'bigint', 'SQLiteBigInt'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteBigIntBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'bigint', 'SQLiteBigInt');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteBigInt<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteBigInt<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any>);\n\t}\n}\n\nexport class SQLiteBigInt<T extends ColumnBaseConfig<'bigint', 'SQLiteBigInt'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteBigInt';\n\n\tgetSQLType(): string {\n\t\treturn 'blob';\n\t}\n\n\toverride mapFromDriverValue(value: Buffer | Uint8Array | ArrayBuffer): bigint {\n\t\tif (typeof Buffer !== 'undefined' && Buffer.from) {\n\t\t\tconst buf = Buffer.isBuffer(value)\n\t\t\t\t? value\n\t\t\t\t// eslint-disable-next-line no-instanceof/no-instanceof\n\t\t\t\t: value instanceof ArrayBuffer\n\t\t\t\t? Buffer.from(value)\n\t\t\t\t: value.buffer\n\t\t\t\t? Buffer.from(value.buffer, value.byteOffset, value.byteLength)\n\t\t\t\t: Buffer.from(value);\n\t\t\treturn BigInt(buf.toString('utf8'));\n\t\t}\n\n\t\treturn BigInt(textDecoder!.decode(value));\n\t}\n\n\toverride mapToDriverValue(value: bigint): Buffer {\n\t\treturn Buffer.from(value.toString());\n\t}\n}\n\nexport type SQLiteBlobJsonBuilderInitial<TName extends string> = SQLiteBlobJsonBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'SQLiteBlobJson';\n\tdata: unknown;\n\tdriverParam: Buffer;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteBlobJsonBuilder<T extends ColumnBuilderBaseConfig<'json', 'SQLiteBlobJson'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteBlobJsonBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'SQLiteBlobJson');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteBlobJson<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteBlobJson<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteBlobJson<T extends ColumnBaseConfig<'json', 'SQLiteBlobJson'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteBlobJson';\n\n\tgetSQLType(): string {\n\t\treturn 'blob';\n\t}\n\n\toverride mapFromDriverValue(value: Buffer | Uint8Array | ArrayBuffer): T['data'] {\n\t\tif (typeof Buffer !== 'undefined' && Buffer.from) {\n\t\t\tconst buf = Buffer.isBuffer(value)\n\t\t\t\t? value\n\t\t\t\t// eslint-disable-next-line no-instanceof/no-instanceof\n\t\t\t\t: value instanceof ArrayBuffer\n\t\t\t\t? Buffer.from(value)\n\t\t\t\t: value.buffer\n\t\t\t\t? Buffer.from(value.buffer, value.byteOffset, value.byteLength)\n\t\t\t\t: Buffer.from(value);\n\t\t\treturn JSON.parse(buf.toString('utf8'));\n\t\t}\n\n\t\treturn JSON.parse(textDecoder!.decode(value));\n\t}\n\n\toverride mapToDriverValue(value: T['data']): Buffer {\n\t\treturn Buffer.from(JSON.stringify(value));\n\t}\n}\n\nexport type SQLiteBlobBufferBuilderInitial<TName extends string> = SQLiteBlobBufferBuilder<{\n\tname: TName;\n\tdataType: 'buffer';\n\tcolumnType: 'SQLiteBlobBuffer';\n\tdata: Buffer;\n\tdriverParam: Buffer;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteBlobBufferBuilder<T extends ColumnBuilderBaseConfig<'buffer', 'SQLiteBlobBuffer'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteBlobBufferBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'buffer', 'SQLiteBlobBuffer');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteBlobBuffer<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteBlobBuffer<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any>);\n\t}\n}\n\nexport class SQLiteBlobBuffer<T extends ColumnBaseConfig<'buffer', 'SQLiteBlobBuffer'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteBlobBuffer';\n\n\toverride mapFromDriverValue(value: Buffer | Uint8Array | ArrayBuffer): T['data'] {\n\t\tif (Buffer.isBuffer(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn Buffer.from(value as Uint8Array);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'blob';\n\t}\n}\n\nexport interface BlobConfig<TMode extends BlobMode = BlobMode> {\n\tmode: TMode;\n}\n\n/**\n *  It's recommended to use `text('...', { mode: 'json' })` instead of `blob` in JSON mode, because it supports JSON functions:\n * >All JSON functions currently throw an error if any of their arguments are BLOBs because BLOBs are reserved for a future enhancement in which BLOBs will store the binary encoding for JSON.\n *\n * https://www.sqlite.org/json1.html\n */\nexport function blob(): SQLiteBlobJsonBuilderInitial<''>;\nexport function blob<TMode extends BlobMode = BlobMode>(\n\tconfig?: BlobConfig<TMode>,\n): Equal<TMode, 'bigint'> extends true ? SQLiteBigIntBuilderInitial<''>\n\t: Equal<TMode, 'buffer'> extends true ? SQLiteBlobBufferBuilderInitial<''>\n\t: SQLiteBlobJsonBuilderInitial<''>;\nexport function blob<TName extends string, TMode extends BlobMode = BlobMode>(\n\tname: TName,\n\tconfig?: BlobConfig<TMode>,\n): Equal<TMode, 'bigint'> extends true ? SQLiteBigIntBuilderInitial<TName>\n\t: Equal<TMode, 'buffer'> extends true ? SQLiteBlobBufferBuilderInitial<TName>\n\t: SQLiteBlobJsonBuilderInitial<TName>;\nexport function blob(a?: string | BlobConfig, b?: BlobConfig) {\n\tconst { name, config } = getColumnNameAndConfig<BlobConfig | undefined>(a, b);\n\tif (config?.mode === 'json') {\n\t\treturn new SQLiteBlobJsonBuilder(name);\n\t}\n\tif (config?.mode === 'bigint') {\n\t\treturn new SQLiteBigIntBuilder(name);\n\t}\n\treturn new SQLiteBlobBufferBuilder(name);\n}\n", "import type {\n\tColumnBuilderBase,\n\tColumnBuilderBaseConfig,\n\tColumnBuilderExtraConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tHasGenerated,\n\tMakeColumnConfig,\n} from '~/column-builder.ts';\nimport { ColumnBuilder } from '~/column-builder.ts';\nimport { Column } from '~/column.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { SQL } from '~/sql/sql.ts';\nimport type { ForeignKey, UpdateDeleteAction } from '~/sqlite-core/foreign-keys.ts';\nimport { ForeignKeyBuilder } from '~/sqlite-core/foreign-keys.ts';\nimport type { AnySQLiteTable, SQLiteTable } from '~/sqlite-core/table.ts';\nimport type { Update } from '~/utils.ts';\nimport { uniqueKeyName } from '../unique-constraint.ts';\n\nexport interface ReferenceConfig {\n\tref: () => SQLiteColumn;\n\tactions: {\n\t\tonUpdate?: UpdateDeleteAction;\n\t\tonDelete?: UpdateDeleteAction;\n\t};\n}\n\nexport interface SQLiteColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> extends ColumnBuilderBase<T, TTypeConfig & { dialect: 'sqlite' }> {}\n\nexport interface SQLiteGeneratedColumnConfig {\n\tmode?: 'virtual' | 'stored';\n}\n\nexport abstract class SQLiteColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = object,\n> extends ColumnBuilder<T, TRuntimeConfig, TTypeConfig & { dialect: 'sqlite' }, TExtraConfig>\n\timplements SQLiteColumnBuilderBase<T, TTypeConfig>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteColumnBuilder';\n\n\tprivate foreignKeyConfigs: ReferenceConfig[] = [];\n\n\treferences(\n\t\tref: ReferenceConfig['ref'],\n\t\tactions: ReferenceConfig['actions'] = {},\n\t): this {\n\t\tthis.foreignKeyConfigs.push({ ref, actions });\n\t\treturn this;\n\t}\n\n\tunique(\n\t\tname?: string,\n\t): this {\n\t\tthis.config.isUnique = true;\n\t\tthis.config.uniqueName = name;\n\t\treturn this;\n\t}\n\n\tgeneratedAlwaysAs(as: SQL | T['data'] | (() => SQL), config?: SQLiteGeneratedColumnConfig): HasGenerated<this, {\n\t\ttype: 'always';\n\t}> {\n\t\tthis.config.generated = {\n\t\t\tas,\n\t\t\ttype: 'always',\n\t\t\tmode: config?.mode ?? 'virtual',\n\t\t};\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tbuildForeignKeys(column: SQLiteColumn, table: SQLiteTable): ForeignKey[] {\n\t\treturn this.foreignKeyConfigs.map(({ ref, actions }) => {\n\t\t\treturn ((ref, actions) => {\n\t\t\t\tconst builder = new ForeignKeyBuilder(() => {\n\t\t\t\t\tconst foreignColumn = ref();\n\t\t\t\t\treturn { columns: [column], foreignColumns: [foreignColumn] };\n\t\t\t\t});\n\t\t\t\tif (actions.onUpdate) {\n\t\t\t\t\tbuilder.onUpdate(actions.onUpdate);\n\t\t\t\t}\n\t\t\t\tif (actions.onDelete) {\n\t\t\t\t\tbuilder.onDelete(actions.onDelete);\n\t\t\t\t}\n\t\t\t\treturn builder.build(table);\n\t\t\t})(ref, actions);\n\t\t});\n\t}\n\n\t/** @internal */\n\tabstract build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteColumn<MakeColumnConfig<T, TTableName>>;\n}\n\n// To understand how to use `SQLiteColumn` and `AnySQLiteColumn`, see `Column` and `AnyColumn` documentation.\nexport abstract class SQLiteColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = {},\n\tTTypeConfig extends object = {},\n> extends Column<T, TRuntimeConfig, TTypeConfig & { dialect: 'sqlite' }> {\n\tstatic override readonly [entityKind]: string = 'SQLiteColumn';\n\n\tconstructor(\n\t\toverride readonly table: SQLiteTable,\n\t\tconfig: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tif (!config.uniqueName) {\n\t\t\tconfig.uniqueName = uniqueKeyName(table, [config.name]);\n\t\t}\n\t\tsuper(table, config);\n\t}\n}\n\nexport type AnySQLiteColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = SQLiteColumn<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { AnySQLiteColumn, SQLiteColumn } from './columns/index.ts';\nimport type { SQLiteTable } from './table.ts';\n\nexport type UpdateDeleteAction = 'cascade' | 'restrict' | 'no action' | 'set null' | 'set default';\n\nexport type Reference = () => {\n\treadonly name?: string;\n\treadonly columns: SQLiteColumn[];\n\treadonly foreignTable: SQLiteTable;\n\treadonly foreignColumns: SQLiteColumn[];\n};\n\nexport class ForeignKeyBuilder {\n\tstatic readonly [entityKind]: string = 'SQLiteForeignKeyBuilder';\n\n\tdeclare _: {\n\t\tbrand: 'SQLiteForeignKeyBuilder';\n\t\tforeignTableName: 'TForeignTableName';\n\t};\n\n\t/** @internal */\n\treference: Reference;\n\n\t/** @internal */\n\t_onUpdate: UpdateDeleteAction | undefined;\n\n\t/** @internal */\n\t_onDelete: UpdateDeleteAction | undefined;\n\n\tconstructor(\n\t\tconfig: () => {\n\t\t\tname?: string;\n\t\t\tcolumns: SQLiteColumn[];\n\t\t\tforeignColumns: SQLiteColumn[];\n\t\t},\n\t\tactions?: {\n\t\t\tonUpdate?: UpdateDeleteAction;\n\t\t\tonDelete?: UpdateDeleteAction;\n\t\t} | undefined,\n\t) {\n\t\tthis.reference = () => {\n\t\t\tconst { name, columns, foreignColumns } = config();\n\t\t\treturn { name, columns, foreignTable: foreignColumns[0]!.table as SQLiteTable, foreignColumns };\n\t\t};\n\t\tif (actions) {\n\t\t\tthis._onUpdate = actions.onUpdate;\n\t\t\tthis._onDelete = actions.onDelete;\n\t\t}\n\t}\n\n\tonUpdate(action: UpdateDeleteAction): this {\n\t\tthis._onUpdate = action;\n\t\treturn this;\n\t}\n\n\tonDelete(action: UpdateDeleteAction): this {\n\t\tthis._onDelete = action;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: SQLiteTable): ForeignKey {\n\t\treturn new ForeignKey(table, this);\n\t}\n}\n\nexport class ForeignKey {\n\tstatic readonly [entityKind]: string = 'SQLiteForeignKey';\n\n\treadonly reference: Reference;\n\treadonly onUpdate: UpdateDeleteAction | undefined;\n\treadonly onDelete: UpdateDeleteAction | undefined;\n\n\tconstructor(readonly table: SQLiteTable, builder: ForeignKeyBuilder) {\n\t\tthis.reference = builder.reference;\n\t\tthis.onUpdate = builder._onUpdate;\n\t\tthis.onDelete = builder._onDelete;\n\t}\n\n\tgetName(): string {\n\t\tconst { name, columns, foreignColumns } = this.reference();\n\t\tconst columnNames = columns.map((column) => column.name);\n\t\tconst foreignColumnNames = foreignColumns.map((column) => column.name);\n\t\tconst chunks = [\n\t\t\tthis.table[TableName],\n\t\t\t...columnNames,\n\t\t\tforeignColumns[0]!.table[TableName],\n\t\t\t...foreignColumnNames,\n\t\t];\n\t\treturn name ?? `${chunks.join('_')}_fk`;\n\t}\n}\n\ntype ColumnsWithTable<\n\tTTableName extends string,\n\tTColumns extends SQLiteColumn[],\n> = { [Key in keyof TColumns]: AnySQLiteColumn<{ tableName: TTableName }> };\n\n/**\n * @deprecated please use `foreignKey({ columns: [], foreignColumns: [] })` syntax without callback\n * @param config\n * @returns\n */\nexport function foreignKey<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends [AnySQLiteColumn<{ tableName: TTableName }>, ...AnySQLiteColumn<{ tableName: TTableName }>[]],\n>(\n\tconfig: () => {\n\t\tname?: string;\n\t\tcolumns: TColumns;\n\t\tforeignColumns: ColumnsWithTable<TForeignTableName, TColumns>;\n\t},\n): ForeignKeyBuilder;\nexport function foreignKey<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends [AnySQLiteColumn<{ tableName: TTableName }>, ...AnySQLiteColumn<{ tableName: TTableName }>[]],\n>(\n\tconfig: {\n\t\tname?: string;\n\t\tcolumns: TColumns;\n\t\tforeignColumns: ColumnsWithTable<TForeignTableName, TColumns>;\n\t},\n): ForeignKeyBuilder;\nexport function foreignKey(\n\tconfig: any,\n): ForeignKeyBuilder {\n\tfunction mappedConfig() {\n\t\tif (typeof config === 'function') {\n\t\t\tconst { name, columns, foreignColumns } = config();\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tcolumns,\n\t\t\t\tforeignColumns,\n\t\t\t};\n\t\t}\n\t\treturn config;\n\t}\n\n\treturn new ForeignKeyBuilder(mappedConfig);\n}\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { SQLiteColumn } from './columns/common.ts';\nimport type { SQLiteTable } from './table.ts';\n\nexport function uniqueKeyName(table: SQLiteTable, columns: string[]) {\n\treturn `${table[TableName]}_${columns.join('_')}_unique`;\n}\n\nexport function unique(name?: string): UniqueOnConstraintBuilder {\n\treturn new UniqueOnConstraintBuilder(name);\n}\n\nexport class UniqueConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'SQLiteUniqueConstraintBuilder';\n\n\t/** @internal */\n\tcolumns: SQLiteColumn[];\n\n\tconstructor(\n\t\tcolumns: SQLiteColumn[],\n\t\tprivate name?: string,\n\t) {\n\t\tthis.columns = columns;\n\t}\n\n\t/** @internal */\n\tbuild(table: SQLiteTable): UniqueConstraint {\n\t\treturn new UniqueConstraint(table, this.columns, this.name);\n\t}\n}\n\nexport class UniqueOnConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'SQLiteUniqueOnConstraintBuilder';\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tname?: string,\n\t) {\n\t\tthis.name = name;\n\t}\n\n\ton(...columns: [SQLiteColumn, ...SQLiteColumn[]]) {\n\t\treturn new UniqueConstraintBuilder(columns, this.name);\n\t}\n}\n\nexport class UniqueConstraint {\n\tstatic readonly [entityKind]: string = 'SQLiteUniqueConstraint';\n\n\treadonly columns: SQLiteColumn[];\n\treadonly name?: string;\n\n\tconstructor(readonly table: SQLiteTable, columns: SQLiteColumn[], name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name ?? uniqueKeyName(this.table, this.columns.map((column) => column.name));\n\t}\n\n\tgetName() {\n\t\treturn this.name;\n\t}\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { SQL } from '~/sql/sql.ts';\nimport type { AnySQLiteTable } from '~/sqlite-core/table.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\nexport type ConvertCustomConfig<TName extends string, T extends Partial<CustomTypeValues>> =\n\t& {\n\t\tname: TName;\n\t\tdataType: 'custom';\n\t\tcolumnType: 'SQLiteCustomColumn';\n\t\tdata: T['data'];\n\t\tdriverParam: T['driverData'];\n\t\tenumValues: undefined;\n\t}\n\t& (T['notNull'] extends true ? { notNull: true } : {})\n\t& (T['default'] extends true ? { hasDefault: true } : {});\n\nexport interface SQLiteCustomColumnInnerConfig {\n\tcustomTypeValues: CustomTypeValues;\n}\n\nexport class SQLiteCustomColumnBuilder<T extends ColumnBuilderBaseConfig<'custom', 'SQLiteCustomColumn'>>\n\textends SQLiteColumnBuilder<\n\t\tT,\n\t\t{\n\t\t\tfieldConfig: CustomTypeValues['config'];\n\t\t\tcustomTypeParams: CustomTypeParams<any>;\n\t\t},\n\t\t{\n\t\t\tsqliteColumnBuilderBrand: 'SQLiteCustomColumnBuilderBrand';\n\t\t}\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteCustomColumnBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\tfieldConfig: CustomTypeValues['config'],\n\t\tcustomTypeParams: CustomTypeParams<any>,\n\t) {\n\t\tsuper(name, 'custom', 'SQLiteCustomColumn');\n\t\tthis.config.fieldConfig = fieldConfig;\n\t\tthis.config.customTypeParams = customTypeParams;\n\t}\n\n\t/** @internal */\n\tbuild<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteCustomColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteCustomColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteCustomColumn<T extends ColumnBaseConfig<'custom', 'SQLiteCustomColumn'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteCustomColumn';\n\n\tprivate sqlName: string;\n\tprivate mapTo?: (value: T['data']) => T['driverParam'];\n\tprivate mapFrom?: (value: T['driverParam']) => T['data'];\n\n\tconstructor(\n\t\ttable: AnySQLiteTable<{ name: T['tableName'] }>,\n\t\tconfig: SQLiteCustomColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.sqlName = config.customTypeParams.dataType(config.fieldConfig);\n\t\tthis.mapTo = config.customTypeParams.toDriver;\n\t\tthis.mapFrom = config.customTypeParams.fromDriver;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.sqlName;\n\t}\n\n\toverride mapFromDriverValue(value: T['driverParam']): T['data'] {\n\t\treturn typeof this.mapFrom === 'function' ? this.mapFrom(value) : value as T['data'];\n\t}\n\n\toverride mapToDriverValue(value: T['data']): T['driverParam'] {\n\t\treturn typeof this.mapTo === 'function' ? this.mapTo(value) : value as T['data'];\n\t}\n}\n\nexport type CustomTypeValues = {\n\t/**\n\t * Required type for custom column, that will infer proper type model\n\t *\n\t * Examples:\n\t *\n\t * If you want your column to be `string` type after selecting/or on inserting - use `data: string`. Like `text`, `varchar`\n\t *\n\t * If you want your column to be `number` type after selecting/or on inserting - use `data: number`. Like `integer`\n\t */\n\tdata: unknown;\n\n\t/**\n\t * Type helper, that represents what type database driver is accepting for specific database data type\n\t */\n\tdriverData?: unknown;\n\n\t/**\n\t * What config type should be used for {@link CustomTypeParams} `dataType` generation\n\t */\n\tconfig?: Record<string, any>;\n\n\t/**\n\t * Whether the config argument should be required or not\n\t * @default false\n\t */\n\tconfigRequired?: boolean;\n\n\t/**\n\t * If your custom data type should be notNull by default you can use `notNull: true`\n\t *\n\t * @example\n\t * const customSerial = customType<{ data: number, notNull: true, default: true }>({\n\t * \t  dataType() {\n\t * \t    return 'serial';\n\t *    },\n\t * });\n\t */\n\tnotNull?: boolean;\n\n\t/**\n\t * If your custom data type has default you can use `default: true`\n\t *\n\t * @example\n\t * const customSerial = customType<{ data: number, notNull: true, default: true }>({\n\t * \t  dataType() {\n\t * \t    return 'serial';\n\t *    },\n\t * });\n\t */\n\tdefault?: boolean;\n};\n\nexport interface CustomTypeParams<T extends CustomTypeValues> {\n\t/**\n\t * Database data type string representation, that is used for migrations\n\t * @example\n\t * ```\n\t * `jsonb`, `text`\n\t * ```\n\t *\n\t * If database data type needs additional params you can use them from `config` param\n\t * @example\n\t * ```\n\t * `varchar(256)`, `numeric(2,3)`\n\t * ```\n\t *\n\t * To make `config` be of specific type please use config generic in {@link CustomTypeValues}\n\t *\n\t * @example\n\t * Usage example\n\t * ```\n\t *   dataType() {\n\t *     return 'boolean';\n\t *   },\n\t * ```\n\t * Or\n\t * ```\n\t *   dataType(config) {\n\t * \t   return typeof config.length !== 'undefined' ? `varchar(${config.length})` : `varchar`;\n\t * \t }\n\t * ```\n\t */\n\tdataType: (config: T['config'] | (Equal<T['configRequired'], true> extends true ? never : undefined)) => string;\n\n\t/**\n\t * Optional mapping function, between user input and driver\n\t * @example\n\t * For example, when using jsonb we need to map JS/TS object to string before writing to database\n\t * ```\n\t * toDriver(value: TData): string {\n\t * \t return JSON.stringify(value);\n\t * }\n\t * ```\n\t */\n\ttoDriver?: (value: T['data']) => T['driverData'] | SQL;\n\n\t/**\n\t * Optional mapping function, that is responsible for data mapping from database to JS/TS code\n\t * @example\n\t * For example, when using timestamp we need to map string Date representation to JS Date\n\t * ```\n\t * fromDriver(value: string): Date {\n\t * \treturn new Date(value);\n\t * },\n\t * ```\n\t */\n\tfromDriver?: (value: T['driverData']) => T['data'];\n}\n\n/**\n * Custom sqlite database data type generator\n */\nexport function customType<T extends CustomTypeValues = CustomTypeValues>(\n\tcustomTypeParams: CustomTypeParams<T>,\n): Equal<T['configRequired'], true> extends true ? {\n\t\t<TConfig extends Record<string, any> & T['config']>(\n\t\t\tfieldConfig: TConfig,\n\t\t): SQLiteCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TName extends string>(\n\t\t\tdbName: TName,\n\t\t\tfieldConfig: T['config'],\n\t\t): SQLiteCustomColumnBuilder<ConvertCustomConfig<TName, T>>;\n\t}\n\t: {\n\t\t(): SQLiteCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TConfig extends Record<string, any> & T['config']>(\n\t\t\tfieldConfig?: TConfig,\n\t\t): SQLiteCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TName extends string>(\n\t\t\tdbName: TName,\n\t\t\tfieldConfig?: T['config'],\n\t\t): SQLiteCustomColumnBuilder<ConvertCustomConfig<TName, T>>;\n\t}\n{\n\treturn <TName extends string>(\n\t\ta?: TName | T['config'],\n\t\tb?: T['config'],\n\t): SQLiteCustomColumnBuilder<ConvertCustomConfig<TName, T>> => {\n\t\tconst { name, config } = getColumnNameAndConfig<T['config']>(a, b);\n\t\treturn new SQLiteCustomColumnBuilder(\n\t\t\tname as ConvertCustomConfig<TName, T>['name'],\n\t\t\tconfig,\n\t\t\tcustomTypeParams,\n\t\t);\n\t};\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tHasDefault,\n\tIsPrimaryKey,\n\tMakeColumnConfig,\n\tNotNull,\n} from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport { sql } from '~/sql/sql.ts';\nimport type { OnConflict } from '~/sqlite-core/utils.ts';\nimport { type Equal, getColumnNameAndConfig, type Or } from '~/utils.ts';\nimport type { AnySQLiteTable } from '../table.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\nexport interface PrimaryKeyConfig {\n\tautoIncrement?: boolean;\n\tonConflict?: OnConflict;\n}\n\nexport abstract class SQLiteBaseIntegerBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n> extends SQLiteColumnBuilder<\n\tT,\n\tTRuntimeConfig & { autoIncrement: boolean },\n\t{},\n\t{ primaryKeyHasDefault: true }\n> {\n\tstatic override readonly [entityKind]: string = 'SQLiteBaseIntegerBuilder';\n\n\tconstructor(name: T['name'], dataType: T['dataType'], columnType: T['columnType']) {\n\t\tsuper(name, dataType, columnType);\n\t\tthis.config.autoIncrement = false;\n\t}\n\n\toverride primaryKey(config?: PrimaryKeyConfig): IsPrimaryKey<HasDefault<NotNull<this>>> {\n\t\tif (config?.autoIncrement) {\n\t\t\tthis.config.autoIncrement = true;\n\t\t}\n\t\tthis.config.hasDefault = true;\n\t\treturn super.primaryKey() as IsPrimaryKey<HasDefault<NotNull<this>>>;\n\t}\n\n\t/** @internal */\n\tabstract override build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteBaseInteger<MakeColumnConfig<T, TTableName>>;\n}\n\nexport abstract class SQLiteBaseInteger<\n\tT extends ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n> extends SQLiteColumn<T, TRuntimeConfig & { autoIncrement: boolean }> {\n\tstatic override readonly [entityKind]: string = 'SQLiteBaseInteger';\n\n\treadonly autoIncrement: boolean = this.config.autoIncrement;\n\n\tgetSQLType(): string {\n\t\treturn 'integer';\n\t}\n}\n\nexport type SQLiteIntegerBuilderInitial<TName extends string> = SQLiteIntegerBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'SQLiteInteger';\n\tdata: number;\n\tdriverParam: number;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteIntegerBuilder<T extends ColumnBuilderBaseConfig<'number', 'SQLiteInteger'>>\n\textends SQLiteBaseIntegerBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteIntegerBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'SQLiteInteger');\n\t}\n\n\tbuild<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteInteger<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteInteger<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteInteger<T extends ColumnBaseConfig<'number', 'SQLiteInteger'>> extends SQLiteBaseInteger<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteInteger';\n}\n\nexport type SQLiteTimestampBuilderInitial<TName extends string> = SQLiteTimestampBuilder<{\n\tname: TName;\n\tdataType: 'date';\n\tcolumnType: 'SQLiteTimestamp';\n\tdata: Date;\n\tdriverParam: number;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteTimestampBuilder<T extends ColumnBuilderBaseConfig<'date', 'SQLiteTimestamp'>>\n\textends SQLiteBaseIntegerBuilder<T, { mode: 'timestamp' | 'timestamp_ms' }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteTimestampBuilder';\n\n\tconstructor(name: T['name'], mode: 'timestamp' | 'timestamp_ms') {\n\t\tsuper(name, 'date', 'SQLiteTimestamp');\n\t\tthis.config.mode = mode;\n\t}\n\n\t/**\n\t * @deprecated Use `default()` with your own expression instead.\n\t *\n\t * Adds `DEFAULT (cast((julianday('now') - 2440587.5)*86400000 as integer))` to the column, which is the current epoch timestamp in milliseconds.\n\t */\n\tdefaultNow(): HasDefault<this> {\n\t\treturn this.default(sql`(cast((julianday('now') - 2440587.5)*86400000 as integer))`) as any;\n\t}\n\n\tbuild<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteTimestamp<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteTimestamp<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteTimestamp<T extends ColumnBaseConfig<'date', 'SQLiteTimestamp'>>\n\textends SQLiteBaseInteger<T, { mode: 'timestamp' | 'timestamp_ms' }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteTimestamp';\n\n\treadonly mode: 'timestamp' | 'timestamp_ms' = this.config.mode;\n\n\toverride mapFromDriverValue(value: number): Date {\n\t\tif (this.config.mode === 'timestamp') {\n\t\t\treturn new Date(value * 1000);\n\t\t}\n\t\treturn new Date(value);\n\t}\n\n\toverride mapToDriverValue(value: Date): number {\n\t\tconst unix = value.getTime();\n\t\tif (this.config.mode === 'timestamp') {\n\t\t\treturn Math.floor(unix / 1000);\n\t\t}\n\t\treturn unix;\n\t}\n}\n\nexport type SQLiteBooleanBuilderInitial<TName extends string> = SQLiteBooleanBuilder<{\n\tname: TName;\n\tdataType: 'boolean';\n\tcolumnType: 'SQLiteBoolean';\n\tdata: boolean;\n\tdriverParam: number;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteBooleanBuilder<T extends ColumnBuilderBaseConfig<'boolean', 'SQLiteBoolean'>>\n\textends SQLiteBaseIntegerBuilder<T, { mode: 'boolean' }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteBooleanBuilder';\n\n\tconstructor(name: T['name'], mode: 'boolean') {\n\t\tsuper(name, 'boolean', 'SQLiteBoolean');\n\t\tthis.config.mode = mode;\n\t}\n\n\tbuild<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteBoolean<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteBoolean<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteBoolean<T extends ColumnBaseConfig<'boolean', 'SQLiteBoolean'>>\n\textends SQLiteBaseInteger<T, { mode: 'boolean' }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteBoolean';\n\n\treadonly mode: 'boolean' = this.config.mode;\n\n\toverride mapFromDriverValue(value: number): boolean {\n\t\treturn Number(value) === 1;\n\t}\n\n\toverride mapToDriverValue(value: boolean): number {\n\t\treturn value ? 1 : 0;\n\t}\n}\n\nexport interface IntegerConfig<\n\tTMode extends 'number' | 'timestamp' | 'timestamp_ms' | 'boolean' =\n\t\t| 'number'\n\t\t| 'timestamp'\n\t\t| 'timestamp_ms'\n\t\t| 'boolean',\n> {\n\tmode: TMode;\n}\n\nexport function integer(): SQLiteIntegerBuilderInitial<''>;\nexport function integer<TMode extends IntegerConfig['mode']>(\n\tconfig?: IntegerConfig<TMode>,\n): Or<Equal<TMode, 'timestamp'>, Equal<TMode, 'timestamp_ms'>> extends true ? SQLiteTimestampBuilderInitial<''>\n\t: Equal<TMode, 'boolean'> extends true ? SQLiteBooleanBuilderInitial<''>\n\t: SQLiteIntegerBuilderInitial<''>;\nexport function integer<TName extends string, TMode extends IntegerConfig['mode']>(\n\tname: TName,\n\tconfig?: IntegerConfig<TMode>,\n): Or<Equal<TMode, 'timestamp'>, Equal<TMode, 'timestamp_ms'>> extends true ? SQLiteTimestampBuilderInitial<TName>\n\t: Equal<TMode, 'boolean'> extends true ? SQLiteBooleanBuilderInitial<TName>\n\t: SQLiteIntegerBuilderInitial<TName>;\nexport function integer(a?: string | IntegerConfig, b?: IntegerConfig) {\n\tconst { name, config } = getColumnNameAndConfig<IntegerConfig | undefined>(a, b);\n\tif (config?.mode === 'timestamp' || config?.mode === 'timestamp_ms') {\n\t\treturn new SQLiteTimestampBuilder(name, config.mode);\n\t}\n\tif (config?.mode === 'boolean') {\n\t\treturn new SQLiteBooleanBuilder(name, config.mode);\n\t}\n\treturn new SQLiteIntegerBuilder(name);\n}\n\nexport const int = integer;\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnySQLiteTable } from '~/sqlite-core/table.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\nexport type SQLiteNumericBuilderInitial<TName extends string> = SQLiteNumericBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'SQLiteNumeric';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteNumericBuilder<T extends ColumnBuilderBaseConfig<'string', 'SQLiteNumeric'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteNumericBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'SQLiteNumeric');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteNumeric<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteNumeric<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteNumeric<T extends ColumnBaseConfig<'string', 'SQLiteNumeric'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteNumeric';\n\n\toverride mapFromDriverValue(value: unknown): string {\n\t\tif (typeof value === 'string') return value;\n\n\t\treturn String(value);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'numeric';\n\t}\n}\n\nexport type SQLiteNumericNumberBuilderInitial<TName extends string> = SQLiteNumericNumberBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'SQLiteNumericNumber';\n\tdata: number;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteNumericNumberBuilder<T extends ColumnBuilderBaseConfig<'number', 'SQLiteNumericNumber'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteNumericNumberBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'SQLiteNumericNumber');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteNumericNumber<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteNumericNumber<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteNumericNumber<T extends ColumnBaseConfig<'number', 'SQLiteNumericNumber'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteNumericNumber';\n\n\toverride mapFromDriverValue(value: unknown): number {\n\t\tif (typeof value === 'number') return value;\n\n\t\treturn Number(value);\n\t}\n\n\toverride mapToDriverValue = String;\n\n\tgetSQLType(): string {\n\t\treturn 'numeric';\n\t}\n}\n\nexport type SQLiteNumericBigIntBuilderInitial<TName extends string> = SQLiteNumericBigIntBuilder<{\n\tname: TName;\n\tdataType: 'bigint';\n\tcolumnType: 'SQLiteNumericBigInt';\n\tdata: bigint;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteNumericBigIntBuilder<T extends ColumnBuilderBaseConfig<'bigint', 'SQLiteNumericBigInt'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteNumericBigIntBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'bigint', 'SQLiteNumericBigInt');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteNumericBigInt<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteNumericBigInt<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteNumericBigInt<T extends ColumnBaseConfig<'bigint', 'SQLiteNumericBigInt'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteNumericBigInt';\n\n\toverride mapFromDriverValue = BigInt;\n\n\toverride mapToDriverValue = String;\n\n\tgetSQLType(): string {\n\t\treturn 'numeric';\n\t}\n}\n\nexport type SQLiteNumericConfig<T extends 'string' | 'number' | 'bigint' = 'string' | 'number' | 'bigint'> = {\n\tmode: T;\n};\n\nexport function numeric<TMode extends SQLiteNumericConfig['mode']>(\n\tconfig?: SQLiteNumericConfig<TMode>,\n): Equal<TMode, 'number'> extends true ? SQLiteNumericNumberBuilderInitial<''>\n\t: Equal<TMode, 'bigint'> extends true ? SQLiteNumericBigIntBuilderInitial<''>\n\t: SQLiteNumericBuilderInitial<''>;\nexport function numeric<TName extends string, TMode extends SQLiteNumericConfig['mode']>(\n\tname: TName,\n\tconfig?: SQLiteNumericConfig<TMode>,\n): Equal<TMode, 'number'> extends true ? SQLiteNumericNumberBuilderInitial<TName>\n\t: Equal<TMode, 'bigint'> extends true ? SQLiteNumericBigIntBuilderInitial<TName>\n\t: SQLiteNumericBuilderInitial<TName>;\nexport function numeric(a?: string | SQLiteNumericConfig, b?: SQLiteNumericConfig) {\n\tconst { name, config } = getColumnNameAndConfig<SQLiteNumericConfig>(a, b);\n\tconst mode = config?.mode;\n\treturn mode === 'number'\n\t\t? new SQLiteNumericNumberBuilder(name)\n\t\t: mode === 'bigint'\n\t\t? new SQLiteNumericBigIntBuilder(name)\n\t\t: new SQLiteNumericBuilder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnySQLiteTable } from '../table.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\nexport type SQLiteRealBuilderInitial<TName extends string> = SQLiteRealBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'SQLiteReal';\n\tdata: number;\n\tdriverParam: number;\n\tenumValues: undefined;\n}>;\n\nexport class SQLiteRealBuilder<T extends ColumnBuilderBaseConfig<'number', 'SQLiteReal'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteRealBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'SQLiteReal');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteReal<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteReal<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class SQLiteReal<T extends ColumnBaseConfig<'number', 'SQLiteReal'>> extends SQLiteColumn<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteReal';\n\n\tgetSQLType(): string {\n\t\treturn 'real';\n\t}\n}\n\nexport function real(): SQLiteRealBuilderInitial<''>;\nexport function real<TName extends string>(name: TName): SQLiteRealBuilderInitial<TName>;\nexport function real(name?: string) {\n\treturn new SQLiteRealBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnySQLiteTable } from '~/sqlite-core/table.ts';\nimport { type Equal, getColumnNameAndConfig, type Writable } from '~/utils.ts';\nimport { SQLiteColumn, SQLiteColumnBuilder } from './common.ts';\n\nexport type SQLiteTextBuilderInitial<\n\tTName extends string,\n\tTEnum extends [string, ...string[]],\n\tTLength extends number | undefined,\n> = SQLiteTextBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'SQLiteText';\n\tdata: TEnum[number];\n\tdriverParam: string;\n\tenumValues: TEnum;\n\tlength: TLength;\n}>;\n\nexport class SQLiteTextBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'SQLiteText'> & { length?: number | undefined },\n> extends SQLiteColumnBuilder<\n\tT,\n\t{ length: T['length']; enumValues: T['enumValues'] },\n\t{ length: T['length'] }\n> {\n\tstatic override readonly [entityKind]: string = 'SQLiteTextBuilder';\n\n\tconstructor(name: T['name'], config: SQLiteTextConfig<'text', T['enumValues'], T['length']>) {\n\t\tsuper(name, 'string', 'SQLiteText');\n\t\tthis.config.enumValues = config.enum;\n\t\tthis.config.length = config.length;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteText<MakeColumnConfig<T, TTableName> & { length: T['length'] }> {\n\t\treturn new SQLiteText<MakeColumnConfig<T, TTableName> & { length: T['length'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteText<T extends ColumnBaseConfig<'string', 'SQLiteText'> & { length?: number | undefined }>\n\textends SQLiteColumn<T, { length: T['length']; enumValues: T['enumValues'] }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteText';\n\n\toverride readonly enumValues = this.config.enumValues;\n\n\treadonly length: T['length'] = this.config.length;\n\n\tconstructor(\n\t\ttable: AnySQLiteTable<{ name: T['tableName'] }>,\n\t\tconfig: SQLiteTextBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn `text${this.config.length ? `(${this.config.length})` : ''}`;\n\t}\n}\n\nexport type SQLiteTextJsonBuilderInitial<TName extends string> = SQLiteTextJsonBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'SQLiteTextJson';\n\tdata: unknown;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tgenerated: undefined;\n}>;\n\nexport class SQLiteTextJsonBuilder<T extends ColumnBuilderBaseConfig<'json', 'SQLiteTextJson'>>\n\textends SQLiteColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteTextJsonBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'SQLiteTextJson');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnySQLiteTable<{ name: TTableName }>,\n\t): SQLiteTextJson<MakeColumnConfig<T, TTableName>> {\n\t\treturn new SQLiteTextJson<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class SQLiteTextJson<T extends ColumnBaseConfig<'json', 'SQLiteTextJson'>>\n\textends SQLiteColumn<T, { length: number | undefined; enumValues: T['enumValues'] }>\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteTextJson';\n\n\tgetSQLType(): string {\n\t\treturn 'text';\n\t}\n\n\toverride mapFromDriverValue(value: string): T['data'] {\n\t\treturn JSON.parse(value);\n\t}\n\n\toverride mapToDriverValue(value: T['data']): string {\n\t\treturn JSON.stringify(value);\n\t}\n}\n\nexport type SQLiteTextConfig<\n\tTMode extends 'text' | 'json' = 'text' | 'json',\n\tTEnum extends readonly string[] | string[] | undefined = readonly string[] | string[] | undefined,\n\tTLength extends number | undefined = number | undefined,\n> = TMode extends 'text' ? {\n\t\tmode?: TMode;\n\t\tlength?: TLength;\n\t\tenum?: TEnum;\n\t}\n\t: {\n\t\tmode?: TMode;\n\t};\n\nexport function text(): SQLiteTextBuilderInitial<'', [string, ...string[]], undefined>;\nexport function text<\n\tU extends string,\n\tT extends Readonly<[U, ...U[]]>,\n\tL extends number | undefined,\n\tTMode extends 'text' | 'json' = 'text' | 'json',\n>(\n\tconfig?: SQLiteTextConfig<TMode, T | Writable<T>, L>,\n): Equal<TMode, 'json'> extends true ? SQLiteTextJsonBuilderInitial<''>\n\t: SQLiteTextBuilderInitial<'', Writable<T>, L>;\nexport function text<\n\tTName extends string,\n\tU extends string,\n\tT extends Readonly<[U, ...U[]]>,\n\tL extends number | undefined,\n\tTMode extends 'text' | 'json' = 'text' | 'json',\n>(\n\tname: TName,\n\tconfig?: SQLiteTextConfig<TMode, T | Writable<T>, L>,\n): Equal<TMode, 'json'> extends true ? SQLiteTextJsonBuilderInitial<TName>\n\t: SQLiteTextBuilderInitial<TName, Writable<T>, L>;\nexport function text(a?: string | SQLiteTextConfig, b: SQLiteTextConfig = {}): any {\n\tconst { name, config } = getColumnNameAndConfig<SQLiteTextConfig>(a, b);\n\tif (config.mode === 'json') {\n\t\treturn new SQLiteTextJsonBuilder(name);\n\t}\n\treturn new SQLiteTextBuilder(name, config as any);\n}\n", "import type { Cache } from '~/cache/core/cache.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { ExtractTablesWithRelations, RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { type ColumnsSelection, type SQL, sql, type SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteAsyncDialect, SQLiteSyncDialect } from '~/sqlite-core/dialect.ts';\nimport {\n\tQueryBuilder,\n\tSQLiteDeleteBase,\n\tSQLiteInsertBuilder,\n\tSQLiteSelectBuilder,\n\tSQLiteUpdateBuilder,\n} from '~/sqlite-core/query-builders/index.ts';\nimport type {\n\tDBResult,\n\tResult,\n\tSQLiteSession,\n\tSQLiteTransaction,\n\tSQLiteTransactionConfig,\n} from '~/sqlite-core/session.ts';\nimport type { SQLiteTable } from '~/sqlite-core/table.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport type { DrizzleTypeError } from '~/utils.ts';\nimport { SQLiteCountBuilder } from './query-builders/count.ts';\nimport { RelationalQueryBuilder } from './query-builders/query.ts';\nimport { SQLiteRaw } from './query-builders/raw.ts';\nimport type { SelectedFields } from './query-builders/select.types.ts';\nimport type { WithBuilder } from './subquery.ts';\nimport type { SQLiteViewBase } from './view-base.ts';\n\nexport class BaseSQLiteDatabase<\n\tTResultKind extends 'sync' | 'async',\n\tTRunResult,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = ExtractTablesWithRelations<TFullSchema>,\n> {\n\tstatic readonly [entityKind]: string = 'BaseSQLiteDatabase';\n\n\tdeclare readonly _: {\n\t\treadonly schema: TSchema | undefined;\n\t\treadonly fullSchema: TFullSchema;\n\t\treadonly tableNamesMap: Record<string, string>;\n\t};\n\n\tquery: TFullSchema extends Record<string, never>\n\t\t? DrizzleTypeError<'Seems like the schema generic is missing - did you forget to add it to your DB type?'>\n\t\t: {\n\t\t\t[K in keyof TSchema]: RelationalQueryBuilder<TResultKind, TFullSchema, TSchema, TSchema[K]>;\n\t\t};\n\n\tconstructor(\n\t\tprivate resultKind: TResultKind,\n\t\t/** @internal */\n\t\treadonly dialect: { sync: SQLiteSyncDialect; async: SQLiteAsyncDialect }[TResultKind],\n\t\t/** @internal */\n\t\treadonly session: SQLiteSession<TResultKind, TRunResult, TFullSchema, TSchema>,\n\t\tschema: RelationalSchemaConfig<TSchema> | undefined,\n\t) {\n\t\tthis._ = schema\n\t\t\t? {\n\t\t\t\tschema: schema.schema,\n\t\t\t\tfullSchema: schema.fullSchema as TFullSchema,\n\t\t\t\ttableNamesMap: schema.tableNamesMap,\n\t\t\t}\n\t\t\t: {\n\t\t\t\tschema: undefined,\n\t\t\t\tfullSchema: {} as TFullSchema,\n\t\t\t\ttableNamesMap: {},\n\t\t\t};\n\t\tthis.query = {} as typeof this['query'];\n\t\tconst query = this.query as {\n\t\t\t[K in keyof TSchema]: RelationalQueryBuilder<TResultKind, TFullSchema, TSchema, TSchema[K]>;\n\t\t};\n\t\tif (this._.schema) {\n\t\t\tfor (const [tableName, columns] of Object.entries(this._.schema)) {\n\t\t\t\tquery[tableName as keyof TSchema] = new RelationalQueryBuilder(\n\t\t\t\t\tresultKind,\n\t\t\t\t\tschema!.fullSchema,\n\t\t\t\t\tthis._.schema,\n\t\t\t\t\tthis._.tableNamesMap,\n\t\t\t\t\tschema!.fullSchema[tableName] as SQLiteTable,\n\t\t\t\t\tcolumns,\n\t\t\t\t\tdialect,\n\t\t\t\t\tsession as SQLiteSession<any, any, any, any> as any,\n\t\t\t\t) as typeof query[keyof TSchema];\n\t\t\t}\n\t\t}\n\t\tthis.$cache = { invalidate: async (_params: any) => {} };\n\t}\n\n\t/**\n\t * Creates a subquery that defines a temporary named result set as a CTE.\n\t *\n\t * It is useful for breaking down complex queries into simpler parts and for reusing the result set in subsequent parts of the query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param alias The alias for the subquery.\n\t *\n\t * Failure to provide an alias will result in a DrizzleTypeError, preventing the subquery from being referenced in other queries.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Create a subquery with alias 'sq' and use it in the select query\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t *\n\t * To select arbitrary SQL values as fields in a CTE and reference them in other CTEs or in the main query, you need to add aliases to them:\n\t *\n\t * ```ts\n\t * // Select an arbitrary SQL value as a field in a CTE and reference it in the main query\n\t * const sq = db.$with('sq').as(db.select({\n\t *   name: sql<string>`upper(${users.name})`.as('name'),\n\t * })\n\t * .from(users));\n\t *\n\t * const result = await db.with(sq).select({ name: sq.name }).from(sq);\n\t * ```\n\t */\n\t$with: WithBuilder = (alias: string, selection?: ColumnsSelection) => {\n\t\tconst self = this;\n\t\tconst as = (\n\t\t\tqb:\n\t\t\t\t| TypedQueryBuilder<ColumnsSelection | undefined>\n\t\t\t\t| SQL\n\t\t\t\t| ((qb: QueryBuilder) => TypedQueryBuilder<ColumnsSelection | undefined> | SQL),\n\t\t) => {\n\t\t\tif (typeof qb === 'function') {\n\t\t\t\tqb = qb(new QueryBuilder(self.dialect));\n\t\t\t}\n\n\t\t\treturn new Proxy(\n\t\t\t\tnew WithSubquery(\n\t\t\t\t\tqb.getSQL(),\n\t\t\t\t\tselection ?? ('getSelectedFields' in qb ? qb.getSelectedFields() ?? {} : {}) as SelectedFields,\n\t\t\t\t\talias,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t);\n\t\t};\n\t\treturn { as };\n\t};\n\n\t$count(\n\t\tsource: SQLiteTable | SQLiteViewBase | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t) {\n\t\treturn new SQLiteCountBuilder({ source, filters, session: this.session });\n\t}\n\n\t/**\n\t * Incorporates a previously defined CTE (using `$with`) into the main query.\n\t *\n\t * This method allows the main query to reference a temporary named result set.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param queries The CTEs to incorporate into the main query.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Define a subquery 'sq' as a CTE using $with\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * // Incorporate the CTE 'sq' into the main query and select from it\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t */\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\t/**\n\t\t * Creates a select query.\n\t\t *\n\t\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Select all columns and all rows from the 'cars' table\n\t\t * const allCars: Car[] = await db.select().from(cars);\n\t\t *\n\t\t * // Select specific columns and all rows from the 'cars' table\n\t\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   brand: cars.brand\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t *\n\t\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t\t *\n\t\t * ```ts\n\t\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t */\n\t\tfunction select(): SQLiteSelectBuilder<undefined, TResultKind, TRunResult>;\n\t\tfunction select<TSelection extends SelectedFields>(\n\t\t\tfields: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection, TResultKind, TRunResult>;\n\t\tfunction select(\n\t\t\tfields?: SelectedFields,\n\t\t): SQLiteSelectBuilder<SelectedFields | undefined, TResultKind, TRunResult> {\n\t\t\treturn new SQLiteSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Adds `distinct` expression to the select query.\n\t\t *\n\t\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Select all unique rows from the 'cars' table\n\t\t * await db.selectDistinct()\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t\t *\n\t\t * // Select all unique brands from the 'cars' table\n\t\t * await db.selectDistinct({ brand: cars.brand })\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand);\n\t\t * ```\n\t\t */\n\t\tfunction selectDistinct(): SQLiteSelectBuilder<undefined, TResultKind, TRunResult>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(\n\t\t\tfields: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection, TResultKind, TRunResult>;\n\t\tfunction selectDistinct(\n\t\t\tfields?: SelectedFields,\n\t\t): SQLiteSelectBuilder<SelectedFields | undefined, TResultKind, TRunResult> {\n\t\t\treturn new SQLiteSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Creates an update query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t\t *\n\t\t * Use `.set()` method to specify which values to update.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t\t *\n\t\t * @param table The table to update.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Update all rows in the 'cars' table\n\t\t * await db.update(cars).set({ color: 'red' });\n\t\t *\n\t\t * // Update rows with filters and conditions\n\t\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t\t *\n\t\t * // Update with returning clause\n\t\t * const updatedCar: Car[] = await db.update(cars)\n\t\t *   .set({ color: 'red' })\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction update<TTable extends SQLiteTable>(table: TTable): SQLiteUpdateBuilder<TTable, TResultKind, TRunResult> {\n\t\t\treturn new SQLiteUpdateBuilder(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates an insert query.\n\t\t *\n\t\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t\t *\n\t\t * @param table The table to insert into.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Insert one row\n\t\t * await db.insert(cars).values({ brand: 'BMW' });\n\t\t *\n\t\t * // Insert multiple rows\n\t\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t\t *\n\t\t * // Insert with returning clause\n\t\t * const insertedCar: Car[] = await db.insert(cars)\n\t\t *   .values({ brand: 'BMW' })\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction insert<TTable extends SQLiteTable>(into: TTable): SQLiteInsertBuilder<TTable, TResultKind, TRunResult> {\n\t\t\treturn new SQLiteInsertBuilder(into, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates a delete query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t\t *\n\t\t * @param table The table to delete from.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Delete all rows in the 'cars' table\n\t\t * await db.delete(cars);\n\t\t *\n\t\t * // Delete rows with filters and conditions\n\t\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t\t *\n\t\t * // Delete with returning clause\n\t\t * const deletedCar: Car[] = await db.delete(cars)\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction delete_<TTable extends SQLiteTable>(from: TTable): SQLiteDeleteBase<TTable, TResultKind, TRunResult> {\n\t\t\treturn new SQLiteDeleteBase(from, self.session, self.dialect, queries);\n\t\t}\n\n\t\treturn { select, selectDistinct, update, insert, delete: delete_ };\n\t}\n\n\t/**\n\t * Creates a select query.\n\t *\n\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all columns and all rows from the 'cars' table\n\t * const allCars: Car[] = await db.select().from(cars);\n\t *\n\t * // Select specific columns and all rows from the 'cars' table\n\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   brand: cars.brand\n\t * })\n\t *   .from(cars);\n\t * ```\n\t *\n\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t *\n\t * ```ts\n\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t * })\n\t *   .from(cars);\n\t * ```\n\t */\n\tselect(): SQLiteSelectBuilder<undefined, TResultKind, TRunResult>;\n\tselect<TSelection extends SelectedFields>(\n\t\tfields: TSelection,\n\t): SQLiteSelectBuilder<TSelection, TResultKind, TRunResult>;\n\tselect(fields?: SelectedFields): SQLiteSelectBuilder<SelectedFields | undefined, TResultKind, TRunResult> {\n\t\treturn new SQLiteSelectBuilder({ fields: fields ?? undefined, session: this.session, dialect: this.dialect });\n\t}\n\n\t/**\n\t * Adds `distinct` expression to the select query.\n\t *\n\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all unique rows from the 'cars' table\n\t * await db.selectDistinct()\n\t *   .from(cars)\n\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t *\n\t * // Select all unique brands from the 'cars' table\n\t * await db.selectDistinct({ brand: cars.brand })\n\t *   .from(cars)\n\t *   .orderBy(cars.brand);\n\t * ```\n\t */\n\tselectDistinct(): SQLiteSelectBuilder<undefined, TResultKind, TRunResult>;\n\tselectDistinct<TSelection extends SelectedFields>(\n\t\tfields: TSelection,\n\t): SQLiteSelectBuilder<TSelection, TResultKind, TRunResult>;\n\tselectDistinct(\n\t\tfields?: SelectedFields,\n\t): SQLiteSelectBuilder<SelectedFields | undefined, TResultKind, TRunResult> {\n\t\treturn new SQLiteSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\t/**\n\t * Creates an update query.\n\t *\n\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t *\n\t * Use `.set()` method to specify which values to update.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param table The table to update.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Update all rows in the 'cars' table\n\t * await db.update(cars).set({ color: 'red' });\n\t *\n\t * // Update rows with filters and conditions\n\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t *\n\t * // Update with returning clause\n\t * const updatedCar: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tupdate<TTable extends SQLiteTable>(table: TTable): SQLiteUpdateBuilder<TTable, TResultKind, TRunResult> {\n\t\treturn new SQLiteUpdateBuilder(table, this.session, this.dialect);\n\t}\n\n\t$cache: { invalidate: Cache['onMutate'] };\n\n\t/**\n\t * Creates an insert query.\n\t *\n\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t *\n\t * @param table The table to insert into.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Insert one row\n\t * await db.insert(cars).values({ brand: 'BMW' });\n\t *\n\t * // Insert multiple rows\n\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t *\n\t * // Insert with returning clause\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t * ```\n\t */\n\tinsert<TTable extends SQLiteTable>(into: TTable): SQLiteInsertBuilder<TTable, TResultKind, TRunResult> {\n\t\treturn new SQLiteInsertBuilder(into, this.session, this.dialect);\n\t}\n\n\t/**\n\t * Creates a delete query.\n\t *\n\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param table The table to delete from.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Delete all rows in the 'cars' table\n\t * await db.delete(cars);\n\t *\n\t * // Delete rows with filters and conditions\n\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t *\n\t * // Delete with returning clause\n\t * const deletedCar: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tdelete<TTable extends SQLiteTable>(from: TTable): SQLiteDeleteBase<TTable, TResultKind, TRunResult> {\n\t\treturn new SQLiteDeleteBase(from, this.session, this.dialect);\n\t}\n\n\trun(query: SQLWrapper | string): DBResult<TResultKind, TRunResult> {\n\t\tconst sequel = typeof query === 'string' ? sql.raw(query) : query.getSQL();\n\t\tif (this.resultKind === 'async') {\n\t\t\treturn new SQLiteRaw(\n\t\t\t\tasync () => this.session.run(sequel),\n\t\t\t\t() => sequel,\n\t\t\t\t'run',\n\t\t\t\tthis.dialect as SQLiteAsyncDialect,\n\t\t\t\tthis.session.extractRawRunValueFromBatchResult.bind(this.session),\n\t\t\t) as DBResult<TResultKind, TRunResult>;\n\t\t}\n\t\treturn this.session.run(sequel) as DBResult<TResultKind, TRunResult>;\n\t}\n\n\tall<T = unknown>(query: SQLWrapper | string): DBResult<TResultKind, T[]> {\n\t\tconst sequel = typeof query === 'string' ? sql.raw(query) : query.getSQL();\n\t\tif (this.resultKind === 'async') {\n\t\t\treturn new SQLiteRaw(\n\t\t\t\tasync () => this.session.all(sequel),\n\t\t\t\t() => sequel,\n\t\t\t\t'all',\n\t\t\t\tthis.dialect as SQLiteAsyncDialect,\n\t\t\t\tthis.session.extractRawAllValueFromBatchResult.bind(this.session),\n\t\t\t) as any;\n\t\t}\n\t\treturn this.session.all(sequel) as DBResult<TResultKind, T[]>;\n\t}\n\n\tget<T = unknown>(query: SQLWrapper | string): DBResult<TResultKind, T> {\n\t\tconst sequel = typeof query === 'string' ? sql.raw(query) : query.getSQL();\n\t\tif (this.resultKind === 'async') {\n\t\t\treturn new SQLiteRaw(\n\t\t\t\tasync () => this.session.get(sequel),\n\t\t\t\t() => sequel,\n\t\t\t\t'get',\n\t\t\t\tthis.dialect as SQLiteAsyncDialect,\n\t\t\t\tthis.session.extractRawGetValueFromBatchResult.bind(this.session),\n\t\t\t) as DBResult<TResultKind, T>;\n\t\t}\n\t\treturn this.session.get(sequel) as DBResult<TResultKind, T>;\n\t}\n\n\tvalues<T extends unknown[] = unknown[]>(query: SQLWrapper | string): DBResult<TResultKind, T[]> {\n\t\tconst sequel = typeof query === 'string' ? sql.raw(query) : query.getSQL();\n\t\tif (this.resultKind === 'async') {\n\t\t\treturn new SQLiteRaw(\n\t\t\t\tasync () => this.session.values(sequel),\n\t\t\t\t() => sequel,\n\t\t\t\t'values',\n\t\t\t\tthis.dialect as SQLiteAsyncDialect,\n\t\t\t\tthis.session.extractRawValuesValueFromBatchResult.bind(this.session),\n\t\t\t) as any;\n\t\t}\n\t\treturn this.session.values(sequel) as DBResult<TResultKind, T[]>;\n\t}\n\n\ttransaction<T>(\n\t\ttransaction: (tx: SQLiteTransaction<TResultKind, TRunResult, TFullSchema, TSchema>) => Result<TResultKind, T>,\n\t\tconfig?: SQLiteTransactionConfig,\n\t): Result<TResultKind, T> {\n\t\treturn this.session.transaction(transaction, config);\n\t}\n}\n\nexport type SQLiteWithReplicas<Q> = Q & { $primary: Q };\n\nexport const withReplicas = <\n\tTResultKind extends 'sync' | 'async',\n\tTRunResult,\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n\tQ extends BaseSQLiteDatabase<\n\t\tTResultKind,\n\t\tTRunResult,\n\t\tTFullSchema,\n\t\tTSchema extends Record<string, unknown> ? ExtractTablesWithRelations<TFullSchema> : TSchema\n\t>,\n>(\n\tprimary: Q,\n\treplicas: [Q, ...Q[]],\n\tgetReplica: (replicas: Q[]) => Q = () => replicas[Math.floor(Math.random() * replicas.length)]!,\n): SQLiteWithReplicas<Q> => {\n\tconst select: Q['select'] = (...args: []) => getReplica(replicas).select(...args);\n\tconst selectDistinct: Q['selectDistinct'] = (...args: []) => getReplica(replicas).selectDistinct(...args);\n\tconst $count: Q['$count'] = (...args: [any]) => getReplica(replicas).$count(...args);\n\tconst $with: Q['with'] = (...args: []) => getReplica(replicas).with(...args);\n\n\tconst update: Q['update'] = (...args: [any]) => primary.update(...args);\n\tconst insert: Q['insert'] = (...args: [any]) => primary.insert(...args);\n\tconst $delete: Q['delete'] = (...args: [any]) => primary.delete(...args);\n\tconst run: Q['run'] = (...args: [any]) => primary.run(...args);\n\tconst all: Q['all'] = (...args: [any]) => primary.all(...args);\n\tconst get: Q['get'] = (...args: [any]) => primary.get(...args);\n\tconst values: Q['values'] = (...args: [any]) => primary.values(...args);\n\tconst transaction: Q['transaction'] = (...args: [any]) => primary.transaction(...args);\n\n\treturn {\n\t\t...primary,\n\t\tupdate,\n\t\tinsert,\n\t\tdelete: $delete,\n\t\trun,\n\t\tall,\n\t\tget,\n\t\tvalues,\n\t\ttransaction,\n\t\t$primary: primary,\n\t\tselect,\n\t\tselectDistinct,\n\t\t$count,\n\t\twith: $with,\n\t\tget query() {\n\t\t\treturn getReplica(replicas).query;\n\t\t},\n\t};\n};\n", "import { ColumnAliasProxyHandler, TableAliasProxyHandler } from './alias.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { SQL, View } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class SelectionProxyHandler<T extends Subquery | Record<string, unknown> | View>\n\timplements ProxyHandler<Subquery | Record<string, unknown> | View>\n{\n\tstatic readonly [entityKind]: string = 'SelectionProxyHandler';\n\n\tprivate config: {\n\t\t/**\n\t\t * Table alias for the columns\n\t\t */\n\t\talias?: string;\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL.Aliased` and it's not a selection field (from a subquery)\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `alias` - return the field alias\n\t\t */\n\t\tsqlAliasedBehavior: 'sql' | 'alias';\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL` and it doesn't have an alias declared\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `error` - return a DrizzleTypeError on type level and throw an error on runtime\n\t\t */\n\t\tsqlBehavior: 'sql' | 'error';\n\n\t\t/**\n\t\t * Whether to replace the original name of the column with the alias\n\t\t * Should be set to `true` for views creation\n\t\t * @default false\n\t\t */\n\t\treplaceOriginalName?: boolean;\n\t};\n\n\tconstructor(config: SelectionProxyHandler<T>['config']) {\n\t\tthis.config = { ...config };\n\t}\n\n\tget(subquery: T, prop: string | symbol): any {\n\t\tif (prop === '_') {\n\t\t\treturn {\n\t\t\t\t...subquery['_' as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as Subquery)._.selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...subquery[ViewBaseConfig as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as View)[ViewBaseConfig].selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (typeof prop === 'symbol') {\n\t\t\treturn subquery[prop as keyof typeof subquery];\n\t\t}\n\n\t\tconst columns = is(subquery, Subquery)\n\t\t\t? subquery._.selectedFields\n\t\t\t: is(subquery, View)\n\t\t\t? subquery[ViewBaseConfig].selectedFields\n\t\t\t: subquery;\n\t\tconst value: unknown = columns[prop as keyof typeof columns];\n\n\t\tif (is(value, SQL.Aliased)) {\n\t\t\t// Never return the underlying SQL expression for a field previously selected in a subquery\n\t\t\tif (this.config.sqlAliasedBehavior === 'sql' && !value.isSelectionField) {\n\t\t\t\treturn value.sql;\n\t\t\t}\n\n\t\t\tconst newValue = value.clone();\n\t\t\tnewValue.isSelectionField = true;\n\t\t\treturn newValue;\n\t\t}\n\n\t\tif (is(value, SQL)) {\n\t\t\tif (this.config.sqlBehavior === 'sql') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`You tried to reference \"${prop}\" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using \".as('alias')\" method.`,\n\t\t\t);\n\t\t}\n\n\t\tif (is(value, Column)) {\n\t\t\tif (this.config.alias) {\n\t\t\t\treturn new Proxy(\n\t\t\t\t\tvalue,\n\t\t\t\t\tnew ColumnAliasProxyHandler(\n\t\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\t\tvalue.table,\n\t\t\t\t\t\t\tnew TableAliasProxyHandler(this.config.alias, this.config.replaceOriginalName ?? false),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tif (typeof value !== 'object' || value === null) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Proxy(value, new SelectionProxyHandler(this.config));\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { Placeholder, Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteDialect } from '~/sqlite-core/dialect.ts';\nimport type { SQLitePreparedQuery, SQLiteSession } from '~/sqlite-core/session.ts';\nimport { SQLiteTable } from '~/sqlite-core/table.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { type DrizzleTypeError, orderSelectedFields, type ValueOrArray } from '~/utils.ts';\nimport type { SQLiteColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\n\nexport type SQLiteDeleteWithout<\n\tT extends AnySQLiteDeleteBase,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T\n\t: Omit<\n\t\tSQLiteDeleteBase<\n\t\t\tT['_']['table'],\n\t\t\tT['_']['resultType'],\n\t\t\tT['_']['runResult'],\n\t\t\tT['_']['returning'],\n\t\t\tTDynamic,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>,\n\t\tT['_']['excludedMethods'] | K\n\t>;\n\nexport type SQLiteDelete<\n\tTTable extends SQLiteTable = SQLiteTable,\n\tTResultType extends 'sync' | 'async' = 'sync' | 'async',\n\tTRunResult = unknown,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n> = SQLiteDeleteBase<TTable, TResultType, TRunResult, TReturning, true, never>;\n\nexport interface SQLiteDeleteConfig {\n\twhere?: SQL | undefined;\n\tlimit?: number | Placeholder;\n\torderBy?: (SQLiteColumn | SQL | SQL.Aliased)[];\n\ttable: SQLiteTable;\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type SQLiteDeleteReturningAll<\n\tT extends AnySQLiteDeleteBase,\n\tTDynamic extends boolean,\n> = SQLiteDeleteWithout<\n\tSQLiteDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tT['_']['dynamic'],\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteDeleteReturning<\n\tT extends AnySQLiteDeleteBase,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = SQLiteDeleteWithout<\n\tSQLiteDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tSelectResultFields<TSelectedFields>,\n\t\tT['_']['dynamic'],\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteDeleteExecute<T extends AnySQLiteDeleteBase> = T['_']['returning'] extends undefined\n\t? T['_']['runResult']\n\t: T['_']['returning'][];\n\nexport type SQLiteDeletePrepare<T extends AnySQLiteDeleteBase> = SQLitePreparedQuery<{\n\ttype: T['_']['resultType'];\n\trun: T['_']['runResult'];\n\tall: T['_']['returning'] extends undefined ? DrizzleTypeError<'.all() cannot be used without .returning()'>\n\t\t: T['_']['returning'][];\n\tget: T['_']['returning'] extends undefined ? DrizzleTypeError<'.get() cannot be used without .returning()'>\n\t\t: T['_']['returning'] | undefined;\n\tvalues: T['_']['returning'] extends undefined ? DrizzleTypeError<'.values() cannot be used without .returning()'>\n\t\t: any[][];\n\texecute: SQLiteDeleteExecute<T>;\n}>;\n\nexport type SQLiteDeleteDynamic<T extends AnySQLiteDeleteBase> = SQLiteDelete<\n\tT['_']['table'],\n\tT['_']['resultType'],\n\tT['_']['runResult'],\n\tT['_']['returning']\n>;\n\nexport type AnySQLiteDeleteBase = SQLiteDeleteBase<any, any, any, any, any, any>;\n\nexport interface SQLiteDeleteBase<\n\tTTable extends SQLiteTable,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tQueryPromise<TReturning extends undefined ? TRunResult : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? TRunResult : TReturning[], 'sqlite'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\tdialect: 'sqlite';\n\t\treadonly table: TTable;\n\t\treadonly resultType: TResultType;\n\t\treadonly runResult: TRunResult;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? TRunResult : TReturning[];\n\t};\n}\n\nexport class SQLiteDeleteBase<\n\tTTable extends SQLiteTable,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? TRunResult : TReturning[]>\n\timplements RunnableQuery<TReturning extends undefined ? TRunResult : TReturning[], 'sqlite'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteDelete';\n\n\t/** @internal */\n\tconfig: SQLiteDeleteConfig;\n\n\tconstructor(\n\t\tprivate table: TTable,\n\t\tprivate session: SQLiteSession<any, any, any, any>,\n\t\tprivate dialect: SQLiteDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, withList };\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will delete only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be deleted.\n\t *\n\t * ```ts\n\t * // Delete all cars with green color\n\t * db.delete(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * db.delete(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Delete all BMW cars with a green color\n\t * db.delete(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Delete all cars with the green or blue color\n\t * db.delete(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): SQLiteDeleteWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\torderBy(\n\t\tbuilder: (deleteTable: TTable) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>,\n\t): SQLiteDeleteWithout<this, TDynamic, 'orderBy'>;\n\torderBy(...columns: (SQLiteColumn | SQL | SQL.Aliased)[]): SQLiteDeleteWithout<this, TDynamic, 'orderBy'>;\n\torderBy(\n\t\t...columns:\n\t\t\t| [(deleteTable: TTable) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>]\n\t\t\t| (SQLiteColumn | SQL | SQL.Aliased)[]\n\t): SQLiteDeleteWithout<this, TDynamic, 'orderBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst orderBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.table[Table.Symbol.Columns],\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as any,\n\t\t\t);\n\n\t\t\tconst orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n\t\t\tthis.config.orderBy = orderByArray;\n\t\t} else {\n\t\t\tconst orderByArray = columns as (SQLiteColumn | SQL | SQL.Aliased)[];\n\t\t\tthis.config.orderBy = orderByArray;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\tlimit(limit: number | Placeholder): SQLiteDeleteWithout<this, TDynamic, 'limit'> {\n\t\tthis.config.limit = limit;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the deleted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete#delete-with-return}\n\t *\n\t * @example\n\t * ```ts\n\t * // Delete all cars with the green color and return all fields\n\t * const deletedCars: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Delete all cars with the green color and return only their id and brand fields\n\t * const deletedCarsIdsAndBrands: { id: number, brand: string }[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): SQLiteDeleteReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): SQLiteDeleteReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.table[SQLiteTable.Symbol.Columns],\n\t): SQLiteDeleteReturning<this, TDynamic, any> {\n\t\tthis.config.returning = orderSelectedFields<SQLiteColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildDeleteQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(isOneTimeQuery = true): SQLiteDeletePrepare<this> {\n\t\treturn this.session[isOneTimeQuery ? 'prepareOneTimeQuery' : 'prepareQuery'](\n\t\t\tthis.dialect.sqlToQuery(this.getSQL()),\n\t\t\tthis.config.returning,\n\t\t\tthis.config.returning ? 'all' : 'run',\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\ttype: 'delete',\n\t\t\t\ttables: extractUsedTable(this.config.table),\n\t\t\t},\n\t\t) as SQLiteDeletePrepare<this>;\n\t}\n\n\tprepare(): SQLiteDeletePrepare<this> {\n\t\treturn this._prepare(false);\n\t}\n\n\trun: ReturnType<this['prepare']>['run'] = (placeholderValues) => {\n\t\treturn this._prepare().run(placeholderValues);\n\t};\n\n\tall: ReturnType<this['prepare']>['all'] = (placeholderValues) => {\n\t\treturn this._prepare().all(placeholderValues);\n\t};\n\n\tget: ReturnType<this['prepare']>['get'] = (placeholderValues) => {\n\t\treturn this._prepare().get(placeholderValues);\n\t};\n\n\tvalues: ReturnType<this['prepare']>['values'] = (placeholderValues) => {\n\t\treturn this._prepare().values(placeholderValues);\n\t};\n\n\toverride async execute(placeholderValues?: Record<string, unknown>): Promise<SQLiteDeleteExecute<this>> {\n\t\treturn this._prepare().execute(placeholderValues) as SQLiteDeleteExecute<this>;\n\t}\n\n\t$dynamic(): SQLiteDeleteDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import type { BuildColumns, BuildExtraConfigColumns } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { Table, type TableConfig as TableConfigBase, type UpdateTableConfig } from '~/table.ts';\nimport type { CheckBuilder } from './checks.ts';\nimport { getSQLiteColumnBuilders, type SQLiteColumnBuilders } from './columns/all.ts';\nimport type { SQLiteColumn, SQLiteColumnBuilder, SQLiteColumnBuilderBase } from './columns/common.ts';\nimport type { ForeignKey, ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { IndexBuilder } from './indexes.ts';\nimport type { PrimaryKeyBuilder } from './primary-keys.ts';\nimport type { UniqueConstraintBuilder } from './unique-constraint.ts';\n\nexport type SQLiteTableExtraConfigValue =\n\t| IndexBuilder\n\t| CheckBuilder\n\t| ForeignKeyBuilder\n\t| PrimaryKeyBuilder\n\t| UniqueConstraintBuilder;\n\nexport type SQLiteTableExtraConfig = Record<\n\tstring,\n\tSQLiteTableExtraConfigValue\n>;\n\nexport type TableConfig = TableConfigBase<SQLiteColumn<any>>;\n\n/** @internal */\nexport const InlineForeignKeys = Symbol.for('drizzle:SQLiteInlineForeignKeys');\n\nexport class SQLiteTable<T extends TableConfig = TableConfig> extends Table<T> {\n\tstatic override readonly [entityKind]: string = 'SQLiteTable';\n\n\t/** @internal */\n\tstatic override readonly Symbol = Object.assign({}, Table.Symbol, {\n\t\tInlineForeignKeys: InlineForeignKeys as typeof InlineForeignKeys,\n\t});\n\n\t/** @internal */\n\toverride [Table.Symbol.Columns]!: NonNullable<T['columns']>;\n\n\t/** @internal */\n\t[InlineForeignKeys]: ForeignKey[] = [];\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigBuilder]:\n\t\t| ((self: Record<string, SQLiteColumn>) => SQLiteTableExtraConfig)\n\t\t| undefined = undefined;\n}\n\nexport type AnySQLiteTable<TPartial extends Partial<TableConfig> = {}> = SQLiteTable<\n\tUpdateTableConfig<TableConfig, TPartial>\n>;\n\nexport type SQLiteTableWithColumns<T extends TableConfig> =\n\t& SQLiteTable<T>\n\t& {\n\t\t[Key in keyof T['columns']]: T['columns'][Key];\n\t};\n\nexport interface SQLiteTableFn<TSchema extends string | undefined = undefined> {\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, SQLiteColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig?: (\n\t\t\tself: BuildColumns<TTableName, TColumnsMap, 'sqlite'>,\n\t\t) => SQLiteTableExtraConfigValue[],\n\t): SQLiteTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\t\tdialect: 'sqlite';\n\t}>;\n\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, SQLiteColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: SQLiteColumnBuilders) => TColumnsMap,\n\t\textraConfig?: (self: BuildColumns<TTableName, TColumnsMap, 'sqlite'>) => SQLiteTableExtraConfigValue[],\n\t): SQLiteTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\t\tdialect: 'sqlite';\n\t}>;\n\t/**\n\t * @deprecated The third parameter of sqliteTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = sqliteTable(\"users\", {\n\t * \tid: int(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = sqliteTable(\"users\", {\n\t * \tid: int(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, SQLiteColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig?: (self: BuildColumns<TTableName, TColumnsMap, 'sqlite'>) => SQLiteTableExtraConfig,\n\t): SQLiteTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\t\tdialect: 'sqlite';\n\t}>;\n\n\t/**\n\t * @deprecated The third parameter of sqliteTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = sqliteTable(\"users\", {\n\t * \tid: int(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = sqliteTable(\"users\", {\n\t * \tid: int(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, SQLiteColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: SQLiteColumnBuilders) => TColumnsMap,\n\t\textraConfig?: (self: BuildColumns<TTableName, TColumnsMap, 'sqlite'>) => SQLiteTableExtraConfig,\n\t): SQLiteTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\t\tdialect: 'sqlite';\n\t}>;\n}\n\nfunction sqliteTableBase<\n\tTTableName extends string,\n\tTColumnsMap extends Record<string, SQLiteColumnBuilderBase>,\n\tTSchema extends string | undefined,\n>(\n\tname: TTableName,\n\tcolumns: TColumnsMap | ((columnTypes: SQLiteColumnBuilders) => TColumnsMap),\n\textraConfig:\n\t\t| ((\n\t\t\tself: BuildColumns<TTableName, TColumnsMap, 'sqlite'>,\n\t\t) => SQLiteTableExtraConfig | SQLiteTableExtraConfigValue[])\n\t\t| undefined,\n\tschema?: TSchema,\n\tbaseName = name,\n): SQLiteTableWithColumns<{\n\tname: TTableName;\n\tschema: TSchema;\n\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\tdialect: 'sqlite';\n}> {\n\tconst rawTable = new SQLiteTable<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\t\tdialect: 'sqlite';\n\t}>(name, schema, baseName);\n\n\tconst parsedColumns: TColumnsMap = typeof columns === 'function' ? columns(getSQLiteColumnBuilders()) : columns;\n\n\tconst builtColumns = Object.fromEntries(\n\t\tObject.entries(parsedColumns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as SQLiteColumnBuilder;\n\t\t\tcolBuilder.setName(name);\n\t\t\tconst column = colBuilder.build(rawTable);\n\t\t\trawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildColumns<TTableName, TColumnsMap, 'sqlite'>;\n\n\tconst table = Object.assign(rawTable, builtColumns);\n\n\ttable[Table.Symbol.Columns] = builtColumns;\n\ttable[Table.Symbol.ExtraConfigColumns] = builtColumns as unknown as BuildExtraConfigColumns<\n\t\tTTableName,\n\t\tTColumnsMap,\n\t\t'sqlite'\n\t>;\n\n\tif (extraConfig) {\n\t\ttable[SQLiteTable.Symbol.ExtraConfigBuilder] = extraConfig as (\n\t\t\tself: Record<string, SQLiteColumn>,\n\t\t) => SQLiteTableExtraConfig;\n\t}\n\n\treturn table;\n}\n\nexport const sqliteTable: SQLiteTableFn = (name, columns, extraConfig) => {\n\treturn sqliteTableBase(name, columns, extraConfig);\n};\n\nexport function sqliteTableCreator(customizeTableName: (name: string) => string): SQLiteTableFn {\n\treturn (name, columns, extraConfig) => {\n\t\treturn sqliteTableBase(customizeTableName(name) as typeof name, columns, extraConfig, undefined, name);\n\t};\n}\n", "import { blob } from './blob.ts';\nimport { customType } from './custom.ts';\nimport { integer } from './integer.ts';\nimport { numeric } from './numeric.ts';\nimport { real } from './real.ts';\nimport { text } from './text.ts';\n\nexport function getSQLiteColumnBuilders() {\n\treturn {\n\t\tblob,\n\t\tcustomType,\n\t\tinteger,\n\t\tnumeric,\n\t\treal,\n\t\ttext,\n\t};\n}\n\nexport type SQLiteColumnBuilders = ReturnType<typeof getSQLiteColumnBuilders>;\n", "import { is } from '~/entity.ts';\nimport { SQL } from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { Check } from './checks.ts';\nimport { CheckBuilder } from './checks.ts';\nimport type { ForeignKey } from './foreign-keys.ts';\nimport { ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { Index } from './indexes.ts';\nimport { IndexBuilder } from './indexes.ts';\nimport type { PrimaryKey } from './primary-keys.ts';\nimport { PrimaryKeyBuilder } from './primary-keys.ts';\nimport { SQLiteTable } from './table.ts';\nimport { type UniqueConstraint, UniqueConstraintBuilder } from './unique-constraint.ts';\nimport type { SQLiteViewBase } from './view-base.ts';\nimport type { SQLiteView } from './view.ts';\n\nexport function getTableConfig<TTable extends SQLiteTable>(table: TTable) {\n\tconst columns = Object.values(table[SQLiteTable.Symbol.Columns]);\n\tconst indexes: Index[] = [];\n\tconst checks: Check[] = [];\n\tconst primaryKeys: PrimaryKey[] = [];\n\tconst uniqueConstraints: UniqueConstraint[] = [];\n\tconst foreignKeys: ForeignKey[] = Object.values(table[SQLiteTable.Symbol.InlineForeignKeys]);\n\tconst name = table[Table.Symbol.Name];\n\n\tconst extraConfigBuilder = table[SQLiteTable.Symbol.ExtraConfigBuilder];\n\n\tif (extraConfigBuilder !== undefined) {\n\t\tconst extraConfig = extraConfigBuilder(table[SQLiteTable.Symbol.Columns]);\n\t\tconst extraValues = Array.isArray(extraConfig) ? extraConfig.flat(1) as any[] : Object.values(extraConfig);\n\t\tfor (const builder of Object.values(extraValues)) {\n\t\t\tif (is(builder, IndexBuilder)) {\n\t\t\t\tindexes.push(builder.build(table));\n\t\t\t} else if (is(builder, CheckBuilder)) {\n\t\t\t\tchecks.push(builder.build(table));\n\t\t\t} else if (is(builder, UniqueConstraintBuilder)) {\n\t\t\t\tuniqueConstraints.push(builder.build(table));\n\t\t\t} else if (is(builder, PrimaryKeyBuilder)) {\n\t\t\t\tprimaryKeys.push(builder.build(table));\n\t\t\t} else if (is(builder, ForeignKeyBuilder)) {\n\t\t\t\tforeignKeys.push(builder.build(table));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tcolumns,\n\t\tindexes,\n\t\tforeignKeys,\n\t\tchecks,\n\t\tprimaryKeys,\n\t\tuniqueConstraints,\n\t\tname,\n\t};\n}\n\nexport function extractUsedTable(table: SQLiteTable | Subquery | SQLiteViewBase | SQL): string[] {\n\tif (is(table, SQLiteTable)) {\n\t\treturn [`${table[Table.Symbol.BaseName]}`];\n\t}\n\tif (is(table, Subquery)) {\n\t\treturn table._.usedTables ?? [];\n\t}\n\tif (is(table, SQL)) {\n\t\treturn table.usedTables ?? [];\n\t}\n\treturn [];\n}\n\nexport type OnConflict = 'rollback' | 'abort' | 'fail' | 'ignore' | 'replace';\n\nexport function getViewConfig<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n>(view: SQLiteView<TName, TExisting>) {\n\treturn {\n\t\t...view[ViewBaseConfig],\n\t\t// ...view[SQLiteViewConfig],\n\t};\n}\n", "import { entityKind, is } from '~/entity.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport { Param, SQL, sql } from '~/sql/sql.ts';\nimport type { SQLiteDialect } from '~/sqlite-core/dialect.ts';\nimport type { IndexColumn } from '~/sqlite-core/indexes.ts';\nimport type { SQLitePreparedQuery, SQLiteSession } from '~/sqlite-core/session.ts';\nimport { SQLiteTable } from '~/sqlite-core/table.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { Columns, Table } from '~/table.ts';\nimport { type DrizzleTypeError, haveSameKeys, mapUpdateSet, orderSelectedFields, type Simplify } from '~/utils.ts';\nimport type { AnySQLiteColumn, SQLiteColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport { QueryBuilder } from './query-builder.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\nimport type { SQLiteUpdateSetSource } from './update.ts';\n\nexport interface SQLiteInsertConfig<TTable extends SQLiteTable = SQLiteTable> {\n\ttable: TTable;\n\tvalues: Record<string, Param | SQL>[] | SQLiteInsertSelectQueryBuilder<TTable> | SQL;\n\twithList?: Subquery[];\n\tonConflict?: SQL[];\n\treturning?: SelectedFieldsOrdered;\n\tselect?: boolean;\n}\n\nexport type SQLiteInsertValue<TTable extends SQLiteTable> = Simplify<\n\t{\n\t\t[Key in keyof TTable['$inferInsert']]: TTable['$inferInsert'][Key] | SQL | Placeholder;\n\t}\n>;\n\nexport type SQLiteInsertSelectQueryBuilder<TTable extends SQLiteTable> = TypedQueryBuilder<\n\t{ [K in keyof TTable['$inferInsert']]: AnySQLiteColumn | SQL | SQL.Aliased | TTable['$inferInsert'][K] }\n>;\n\nexport class SQLiteInsertBuilder<\n\tTTable extends SQLiteTable,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n> {\n\tstatic readonly [entityKind]: string = 'SQLiteInsertBuilder';\n\n\tconstructor(\n\t\tprotected table: TTable,\n\t\tprotected session: SQLiteSession<any, any, any, any>,\n\t\tprotected dialect: SQLiteDialect,\n\t\tprivate withList?: Subquery[],\n\t) {}\n\n\tvalues(value: SQLiteInsertValue<TTable>): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tvalues(values: SQLiteInsertValue<TTable>[]): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tvalues(\n\t\tvalues: SQLiteInsertValue<TTable> | SQLiteInsertValue<TTable>[],\n\t): SQLiteInsertBase<TTable, TResultType, TRunResult> {\n\t\tvalues = Array.isArray(values) ? values : [values];\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('values() must be called with at least one value');\n\t\t}\n\t\tconst mappedValues = values.map((entry) => {\n\t\t\tconst result: Record<string, Param | SQL> = {};\n\t\t\tconst cols = this.table[Table.Symbol.Columns];\n\t\t\tfor (const colKey of Object.keys(entry)) {\n\t\t\t\tconst colValue = entry[colKey as keyof typeof entry];\n\t\t\t\tresult[colKey] = is(colValue, SQL) ? colValue : new Param(colValue, cols[colKey]);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\n\t\t// if (mappedValues.length > 1 && mappedValues.some((t) => Object.keys(t).length === 0)) {\n\t\t// \tthrow new Error(\n\t\t// \t\t`One of the values you want to insert is empty. In SQLite you can insert only one empty object per statement. For this case Drizzle with use \"INSERT INTO ... DEFAULT VALUES\" syntax`,\n\t\t// \t);\n\t\t// }\n\n\t\treturn new SQLiteInsertBase(this.table, mappedValues, this.session, this.dialect, this.withList);\n\t}\n\n\tselect(\n\t\tselectQuery: (qb: QueryBuilder) => SQLiteInsertSelectQueryBuilder<TTable>,\n\t): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tselect(selectQuery: (qb: QueryBuilder) => SQL): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tselect(selectQuery: SQL): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tselect(selectQuery: SQLiteInsertSelectQueryBuilder<TTable>): SQLiteInsertBase<TTable, TResultType, TRunResult>;\n\tselect(\n\t\tselectQuery:\n\t\t\t| SQL\n\t\t\t| SQLiteInsertSelectQueryBuilder<TTable>\n\t\t\t| ((qb: QueryBuilder) => SQLiteInsertSelectQueryBuilder<TTable> | SQL),\n\t): SQLiteInsertBase<TTable, TResultType, TRunResult> {\n\t\tconst select = typeof selectQuery === 'function' ? selectQuery(new QueryBuilder()) : selectQuery;\n\n\t\tif (\n\t\t\t!is(select, SQL)\n\t\t\t&& !haveSameKeys(this.table[Columns], select._.selectedFields)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t'Insert select error: selected fields are not the same or are in a different order compared to the table definition',\n\t\t\t);\n\t\t}\n\n\t\treturn new SQLiteInsertBase(this.table, select, this.session, this.dialect, this.withList, true);\n\t}\n}\n\nexport type SQLiteInsertWithout<T extends AnySQLiteInsert, TDynamic extends boolean, K extends keyof T & string> =\n\tTDynamic extends true ? T\n\t\t: Omit<\n\t\t\tSQLiteInsertBase<\n\t\t\t\tT['_']['table'],\n\t\t\t\tT['_']['resultType'],\n\t\t\t\tT['_']['runResult'],\n\t\t\t\tT['_']['returning'],\n\t\t\t\tTDynamic,\n\t\t\t\tT['_']['excludedMethods'] | K\n\t\t\t>,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>;\n\nexport type SQLiteInsertReturning<\n\tT extends AnySQLiteInsert,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = SQLiteInsertWithout<\n\tSQLiteInsertBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tSelectResultFields<TSelectedFields>,\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteInsertReturningAll<\n\tT extends AnySQLiteInsert,\n\tTDynamic extends boolean,\n> = SQLiteInsertWithout<\n\tSQLiteInsertBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteInsertOnConflictDoUpdateConfig<T extends AnySQLiteInsert> = {\n\ttarget: IndexColumn | IndexColumn[];\n\t/** @deprecated - use either `targetWhere` or `setWhere` */\n\twhere?: SQL;\n\t// TODO: add tests for targetWhere and setWhere\n\ttargetWhere?: SQL;\n\tsetWhere?: SQL;\n\tset: SQLiteUpdateSetSource<T['_']['table']>;\n};\n\nexport type SQLiteInsertDynamic<T extends AnySQLiteInsert> = SQLiteInsert<\n\tT['_']['table'],\n\tT['_']['resultType'],\n\tT['_']['runResult'],\n\tT['_']['returning']\n>;\n\nexport type SQLiteInsertExecute<T extends AnySQLiteInsert> = T['_']['returning'] extends undefined ? T['_']['runResult']\n\t: T['_']['returning'][];\n\nexport type SQLiteInsertPrepare<T extends AnySQLiteInsert> = SQLitePreparedQuery<\n\t{\n\t\ttype: T['_']['resultType'];\n\t\trun: T['_']['runResult'];\n\t\tall: T['_']['returning'] extends undefined ? DrizzleTypeError<'.all() cannot be used without .returning()'>\n\t\t\t: T['_']['returning'][];\n\t\tget: T['_']['returning'] extends undefined ? DrizzleTypeError<'.get() cannot be used without .returning()'>\n\t\t\t: T['_']['returning'];\n\t\tvalues: T['_']['returning'] extends undefined ? DrizzleTypeError<'.values() cannot be used without .returning()'>\n\t\t\t: any[][];\n\t\texecute: SQLiteInsertExecute<T>;\n\t}\n>;\n\nexport type AnySQLiteInsert = SQLiteInsertBase<any, any, any, any, any, any>;\n\nexport type SQLiteInsert<\n\tTTable extends SQLiteTable = SQLiteTable,\n\tTResultType extends 'sync' | 'async' = 'sync' | 'async',\n\tTRunResult = unknown,\n\tTReturning = any,\n> = SQLiteInsertBase<TTable, TResultType, TRunResult, TReturning, true, never>;\n\nexport interface SQLiteInsertBase<\n\tTTable extends SQLiteTable,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTReturning = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tSQLWrapper,\n\tQueryPromise<TReturning extends undefined ? TRunResult : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? TRunResult : TReturning[], 'sqlite'>\n{\n\treadonly _: {\n\t\treadonly dialect: 'sqlite';\n\t\treadonly table: TTable;\n\t\treadonly resultType: TResultType;\n\t\treadonly runResult: TRunResult;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? TRunResult : TReturning[];\n\t};\n}\n\nexport class SQLiteInsertBase<\n\tTTable extends SQLiteTable,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTReturning = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? TRunResult : TReturning[]>\n\timplements RunnableQuery<TReturning extends undefined ? TRunResult : TReturning[], 'sqlite'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteInsert';\n\n\t/** @internal */\n\tconfig: SQLiteInsertConfig<TTable>;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tvalues: SQLiteInsertConfig['values'],\n\t\tprivate session: SQLiteSession<any, any, any, any>,\n\t\tprivate dialect: SQLiteDialect,\n\t\twithList?: Subquery[],\n\t\tselect?: boolean,\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, values: values as any, withList, select };\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the inserted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#insert-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and return all fields\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t *\n\t * // Insert one row and return only the id\n\t * const insertedCarId: { id: number }[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning({ id: cars.id });\n\t * ```\n\t */\n\treturning(): SQLiteInsertReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): SQLiteInsertReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.config.table[SQLiteTable.Symbol.Columns],\n\t): SQLiteInsertWithout<AnySQLiteInsert, TDynamic, 'returning'> {\n\t\tthis.config.returning = orderSelectedFields<SQLiteColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `on conflict do nothing` clause to the query.\n\t *\n\t * Calling this method simply avoids inserting a row as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#on-conflict-do-nothing}\n\t *\n\t * @param config The `target` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and cancel the insert if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing();\n\t *\n\t * // Explicitly specify conflict target\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing({ target: cars.id });\n\t * ```\n\t */\n\tonConflictDoNothing(config: { target?: IndexColumn | IndexColumn[]; where?: SQL } = {}): this {\n\t\tif (!this.config.onConflict) this.config.onConflict = [];\n\n\t\tif (config.target === undefined) {\n\t\t\tthis.config.onConflict.push(sql` on conflict do nothing`);\n\t\t} else {\n\t\t\tconst targetSql = Array.isArray(config.target) ? sql`${config.target}` : sql`${[config.target]}`;\n\t\t\tconst whereSql = config.where ? sql` where ${config.where}` : sql``;\n\t\t\tthis.config.onConflict.push(sql` on conflict ${targetSql} do nothing${whereSql}`);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an `on conflict do update` clause to the query.\n\t *\n\t * Calling this method will update the existing row that conflicts with the row proposed for insertion as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#upserts-and-conflicts}\n\t *\n\t * @param config The `target`, `set` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Update the row if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'Porsche' }\n\t *   });\n\t *\n\t * // Upsert with 'where' clause\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'newBMW' },\n\t *     where: sql`${cars.createdAt} > '2023-01-01'::date`,\n\t *   });\n\t * ```\n\t */\n\tonConflictDoUpdate(config: SQLiteInsertOnConflictDoUpdateConfig<this>): this {\n\t\tif (config.where && (config.targetWhere || config.setWhere)) {\n\t\t\tthrow new Error(\n\t\t\t\t'You cannot use both \"where\" and \"targetWhere\"/\"setWhere\" at the same time - \"where\" is deprecated, use \"targetWhere\" or \"setWhere\" instead.',\n\t\t\t);\n\t\t}\n\n\t\tif (!this.config.onConflict) this.config.onConflict = [];\n\n\t\tconst whereSql = config.where ? sql` where ${config.where}` : undefined;\n\t\tconst targetWhereSql = config.targetWhere ? sql` where ${config.targetWhere}` : undefined;\n\t\tconst setWhereSql = config.setWhere ? sql` where ${config.setWhere}` : undefined;\n\t\tconst targetSql = Array.isArray(config.target) ? sql`${config.target}` : sql`${[config.target]}`;\n\t\tconst setSql = this.dialect.buildUpdateSet(this.config.table, mapUpdateSet(this.config.table, config.set));\n\t\tthis.config.onConflict.push(\n\t\t\tsql` on conflict ${targetSql}${targetWhereSql} do update set ${setSql}${whereSql}${setWhereSql}`,\n\t\t);\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildInsertQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(isOneTimeQuery = true): SQLiteInsertPrepare<this> {\n\t\treturn this.session[isOneTimeQuery ? 'prepareOneTimeQuery' : 'prepareQuery'](\n\t\t\tthis.dialect.sqlToQuery(this.getSQL()),\n\t\t\tthis.config.returning,\n\t\t\tthis.config.returning ? 'all' : 'run',\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\ttables: extractUsedTable(this.config.table),\n\t\t\t},\n\t\t) as SQLiteInsertPrepare<this>;\n\t}\n\n\tprepare(): SQLiteInsertPrepare<this> {\n\t\treturn this._prepare(false);\n\t}\n\n\trun: ReturnType<this['prepare']>['run'] = (placeholderValues) => {\n\t\treturn this._prepare().run(placeholderValues);\n\t};\n\n\tall: ReturnType<this['prepare']>['all'] = (placeholderValues) => {\n\t\treturn this._prepare().all(placeholderValues);\n\t};\n\n\tget: ReturnType<this['prepare']>['get'] = (placeholderValues) => {\n\t\treturn this._prepare().get(placeholderValues);\n\t};\n\n\tvalues: ReturnType<this['prepare']>['values'] = (placeholderValues) => {\n\t\treturn this._prepare().values(placeholderValues);\n\t};\n\n\toverride async execute(): Promise<SQLiteInsertExecute<this>> {\n\t\treturn (this.config.returning ? this.all() : this.run()) as SQLiteInsertExecute<this>;\n\t}\n\n\t$dynamic(): SQLiteInsertDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import { entityKind, is } from '~/entity.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, SQL } from '~/sql/sql.ts';\nimport type { SQLiteDialectConfig } from '~/sqlite-core/dialect.ts';\nimport { SQLiteDialect, SQLiteSyncDialect } from '~/sqlite-core/dialect.ts';\nimport type { WithBuilder } from '~/sqlite-core/subquery.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport { SQLiteSelectBuilder } from './select.ts';\nimport type { SelectedFields } from './select.types.ts';\n\nexport class QueryBuilder {\n\tstatic readonly [entityKind]: string = 'SQLiteQueryBuilder';\n\n\tprivate dialect: SQLiteDialect | undefined;\n\tprivate dialectConfig: SQLiteDialectConfig | undefined;\n\n\tconstructor(dialect?: SQLiteDialect | SQLiteDialectConfig) {\n\t\tthis.dialect = is(dialect, SQLiteDialect) ? dialect : undefined;\n\t\tthis.dialectConfig = is(dialect, SQLiteDialect) ? undefined : dialect;\n\t}\n\n\t$with: WithBuilder = (alias: string, selection?: ColumnsSelection) => {\n\t\tconst queryBuilder = this;\n\t\tconst as = (\n\t\t\tqb:\n\t\t\t\t| TypedQueryBuilder<ColumnsSelection | undefined>\n\t\t\t\t| SQL\n\t\t\t\t| ((qb: QueryBuilder) => TypedQueryBuilder<ColumnsSelection | undefined> | SQL),\n\t\t) => {\n\t\t\tif (typeof qb === 'function') {\n\t\t\t\tqb = qb(queryBuilder);\n\t\t\t}\n\n\t\t\treturn new Proxy(\n\t\t\t\tnew WithSubquery(\n\t\t\t\t\tqb.getSQL(),\n\t\t\t\t\tselection ?? ('getSelectedFields' in qb ? qb.getSelectedFields() ?? {} : {}) as SelectedFields,\n\t\t\t\t\talias,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t) as any;\n\t\t};\n\t\treturn { as };\n\t};\n\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\tfunction select(): SQLiteSelectBuilder<undefined, 'sync', void, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(\n\t\t\tfields: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection, 'sync', void, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection | undefined, 'sync', void, 'qb'> {\n\t\t\treturn new SQLiteSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\tfunction selectDistinct(): SQLiteSelectBuilder<undefined, 'sync', void, 'qb'>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(\n\t\t\tfields: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection, 'sync', void, 'qb'>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): SQLiteSelectBuilder<TSelection | undefined, 'sync', void, 'qb'> {\n\t\t\treturn new SQLiteSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\treturn { select, selectDistinct };\n\t}\n\n\tselect(): SQLiteSelectBuilder<undefined, 'sync', void, 'qb'>;\n\tselect<TSelection extends SelectedFields>(\n\t\tfields: TSelection,\n\t): SQLiteSelectBuilder<TSelection, 'sync', void, 'qb'>;\n\tselect<TSelection extends SelectedFields>(\n\t\tfields?: TSelection,\n\t): SQLiteSelectBuilder<TSelection | undefined, 'sync', void, 'qb'> {\n\t\treturn new SQLiteSelectBuilder({ fields: fields ?? undefined, session: undefined, dialect: this.getDialect() });\n\t}\n\n\tselectDistinct(): SQLiteSelectBuilder<undefined, 'sync', void, 'qb'>;\n\tselectDistinct<TSelection extends SelectedFields>(\n\t\tfields: TSelection,\n\t): SQLiteSelectBuilder<TSelection, 'sync', void, 'qb'>;\n\tselectDistinct<TSelection extends SelectedFields>(\n\t\tfields?: TSelection,\n\t): SQLiteSelectBuilder<TSelection | undefined, 'sync', void, 'qb'> {\n\t\treturn new SQLiteSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\t// Lazy load dialect to avoid circular dependency\n\tprivate getDialect() {\n\t\tif (!this.dialect) {\n\t\t\tthis.dialect = new SQLiteSyncDialect(this.dialectConfig);\n\t\t}\n\n\t\treturn this.dialect;\n\t}\n}\n", "import { aliasedTable, aliasedTableColumn, mapColumnsInAliasedSQLToAlias, mapColumnsInSQLToAlias } from '~/alias.ts';\nimport { CasingCache } from '~/casing.ts';\nimport type { AnyColumn } from '~/column.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { DrizzleError } from '~/errors.ts';\nimport type { MigrationConfig, MigrationMeta } from '~/migrator.ts';\nimport {\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tgetOperators,\n\tgetOrderByOperators,\n\tMany,\n\tnormalizeRelation,\n\tOne,\n\ttype Relation,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport type { Name, Placeholder } from '~/sql/index.ts';\nimport { and, eq } from '~/sql/index.ts';\nimport { Param, type QueryWithTypings, SQL, sql, type SQLChunk } from '~/sql/sql.ts';\nimport { SQLiteColumn } from '~/sqlite-core/columns/index.ts';\nimport type {\n\tAnySQLiteSelectQueryBuilder,\n\tSQLiteDeleteConfig,\n\tSQLiteInsertConfig,\n\tSQLiteUpdateConfig,\n} from '~/sqlite-core/query-builders/index.ts';\nimport { SQLiteTable } from '~/sqlite-core/table.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { getTableName, getTableUniqueName, Table } from '~/table.ts';\nimport { type Casing, orderSelectedFields, type UpdateSet } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type {\n\tSelectedFieldsOrdered,\n\tSQLiteSelectConfig,\n\tSQLiteSelectJoinConfig,\n} from './query-builders/select.types.ts';\nimport type { SQLiteSession } from './session.ts';\nimport { SQLiteViewBase } from './view-base.ts';\n\nexport interface SQLiteDialectConfig {\n\tcasing?: Casing;\n}\n\nexport abstract class SQLiteDialect {\n\tstatic readonly [entityKind]: string = 'SQLiteDialect';\n\n\t/** @internal */\n\treadonly casing: CasingCache;\n\n\tconstructor(config?: SQLiteDialectConfig) {\n\t\tthis.casing = new CasingCache(config?.casing);\n\t}\n\n\tescapeName(name: string): string {\n\t\treturn `\"${name}\"`;\n\t}\n\n\tescapeParam(_num: number): string {\n\t\treturn '?';\n\t}\n\n\tescapeString(str: string): string {\n\t\treturn `'${str.replace(/'/g, \"''\")}'`;\n\t}\n\n\tprivate buildWithCTE(queries: Subquery[] | undefined): SQL | undefined {\n\t\tif (!queries?.length) return undefined;\n\n\t\tconst withSqlChunks = [sql`with `];\n\t\tfor (const [i, w] of queries.entries()) {\n\t\t\twithSqlChunks.push(sql`${sql.identifier(w._.alias)} as (${w._.sql})`);\n\t\t\tif (i < queries.length - 1) {\n\t\t\t\twithSqlChunks.push(sql`, `);\n\t\t\t}\n\t\t}\n\t\twithSqlChunks.push(sql` `);\n\t\treturn sql.join(withSqlChunks);\n\t}\n\n\tbuildDeleteQuery({ table, where, returning, withList, limit, orderBy }: SQLiteDeleteConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\tconst orderBySql = this.buildOrderBy(orderBy);\n\n\t\tconst limitSql = this.buildLimit(limit);\n\n\t\treturn sql`${withSql}delete from ${table}${whereSql}${returningSql}${orderBySql}${limitSql}`;\n\t}\n\n\tbuildUpdateSet(table: SQLiteTable, set: UpdateSet): SQL {\n\t\tconst tableColumns = table[Table.Symbol.Columns];\n\n\t\tconst columnNames = Object.keys(tableColumns).filter((colName) =>\n\t\t\tset[colName] !== undefined || tableColumns[colName]?.onUpdateFn !== undefined\n\t\t);\n\n\t\tconst setSize = columnNames.length;\n\t\treturn sql.join(columnNames.flatMap((colName, i) => {\n\t\t\tconst col = tableColumns[colName]!;\n\n\t\t\tconst value = set[colName] ?? sql.param(col.onUpdateFn!(), col);\n\t\t\tconst res = sql`${sql.identifier(this.casing.getColumnCasing(col))} = ${value}`;\n\n\t\t\tif (i < setSize - 1) {\n\t\t\t\treturn [res, sql.raw(', ')];\n\t\t\t}\n\t\t\treturn [res];\n\t\t}));\n\t}\n\n\tbuildUpdateQuery({ table, set, where, returning, withList, joins, from, limit, orderBy }: SQLiteUpdateConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst setSql = this.buildUpdateSet(table, set);\n\n\t\tconst fromSql = from && sql.join([sql.raw(' from '), this.buildFromTable(from)]);\n\n\t\tconst joinsSql = this.buildJoins(joins);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\tconst orderBySql = this.buildOrderBy(orderBy);\n\n\t\tconst limitSql = this.buildLimit(limit);\n\n\t\treturn sql`${withSql}update ${table} set ${setSql}${fromSql}${joinsSql}${whereSql}${returningSql}${orderBySql}${limitSql}`;\n\t}\n\n\t/**\n\t * Builds selection SQL with provided fields/expressions\n\t *\n\t * Examples:\n\t *\n\t * `select <selection> from`\n\t *\n\t * `insert ... returning <selection>`\n\t *\n\t * If `isSingleTable` is true, then columns won't be prefixed with table name\n\t */\n\tprivate buildSelection(\n\t\tfields: SelectedFieldsOrdered,\n\t\t{ isSingleTable = false }: { isSingleTable?: boolean } = {},\n\t): SQL {\n\t\tconst columnsLen = fields.length;\n\n\t\tconst chunks = fields\n\t\t\t.flatMap(({ field }, i) => {\n\t\t\t\tconst chunk: SQLChunk[] = [];\n\n\t\t\t\tif (is(field, SQL.Aliased) && field.isSelectionField) {\n\t\t\t\t\tchunk.push(sql.identifier(field.fieldAlias));\n\t\t\t\t} else if (is(field, SQL.Aliased) || is(field, SQL)) {\n\t\t\t\t\tconst query = is(field, SQL.Aliased) ? field.sql : field;\n\n\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\tchunk.push(\n\t\t\t\t\t\t\tnew SQL(\n\t\t\t\t\t\t\t\tquery.queryChunks.map((c) => {\n\t\t\t\t\t\t\t\t\tif (is(c, Column)) {\n\t\t\t\t\t\t\t\t\t\treturn sql.identifier(this.casing.getColumnCasing(c));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunk.push(query);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is(field, SQL.Aliased)) {\n\t\t\t\t\t\tchunk.push(sql` as ${sql.identifier(field.fieldAlias)}`);\n\t\t\t\t\t}\n\t\t\t\t} else if (is(field, Column)) {\n\t\t\t\t\tconst tableName = field.table[Table.Symbol.Name];\n\t\t\t\t\tif (field.columnType === 'SQLiteNumericBigInt') {\n\t\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\t\tchunk.push(sql`cast(${sql.identifier(this.casing.getColumnCasing(field))} as text)`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunk.push(\n\t\t\t\t\t\t\t\tsql`cast(${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))} as text)`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\t\tchunk.push(sql.identifier(this.casing.getColumnCasing(field)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i < columnsLen - 1) {\n\t\t\t\t\tchunk.push(sql`, `);\n\t\t\t\t}\n\n\t\t\t\treturn chunk;\n\t\t\t});\n\n\t\treturn sql.join(chunks);\n\t}\n\n\tprivate buildJoins(joins: SQLiteSelectJoinConfig[] | undefined): SQL | undefined {\n\t\tif (!joins || joins.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst joinsArray: SQL[] = [];\n\n\t\tif (joins) {\n\t\t\tfor (const [index, joinMeta] of joins.entries()) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t\t}\n\t\t\t\tconst table = joinMeta.table;\n\t\t\t\tconst onSql = joinMeta.on ? sql` on ${joinMeta.on}` : undefined;\n\n\t\t\t\tif (is(table, SQLiteTable)) {\n\t\t\t\t\tconst tableName = table[SQLiteTable.Symbol.Name];\n\t\t\t\t\tconst tableSchema = table[SQLiteTable.Symbol.Schema];\n\t\t\t\t\tconst origTableName = table[SQLiteTable.Symbol.OriginalName];\n\t\t\t\t\tconst alias = tableName === origTableName ? undefined : joinMeta.alias;\n\t\t\t\t\tjoinsArray.push(\n\t\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join ${tableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined}${\n\t\t\t\t\t\t\tsql.identifier(origTableName)\n\t\t\t\t\t\t}${alias && sql` ${sql.identifier(alias)}`}${onSql}`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tjoinsArray.push(\n\t\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join ${table}${onSql}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (index < joins.length - 1) {\n\t\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn sql.join(joinsArray);\n\t}\n\n\tprivate buildLimit(limit: number | Placeholder | undefined): SQL | undefined {\n\t\treturn typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\t}\n\n\tprivate buildOrderBy(orderBy: (SQLiteColumn | SQL | SQL.Aliased)[] | undefined): SQL | undefined {\n\t\tconst orderByList: (SQLiteColumn | SQL | SQL.Aliased)[] = [];\n\n\t\tif (orderBy) {\n\t\t\tfor (const [index, orderByValue] of orderBy.entries()) {\n\t\t\t\torderByList.push(orderByValue);\n\n\t\t\t\tif (index < orderBy.length - 1) {\n\t\t\t\t\torderByList.push(sql`, `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn orderByList.length > 0 ? sql` order by ${sql.join(orderByList)}` : undefined;\n\t}\n\n\tprivate buildFromTable(\n\t\ttable: SQL | Subquery | SQLiteViewBase | SQLiteTable | undefined,\n\t): SQL | Subquery | SQLiteViewBase | SQLiteTable | undefined {\n\t\tif (is(table, Table) && table[Table.Symbol.IsAlias]) {\n\t\t\treturn sql`${sql`${sql.identifier(table[Table.Symbol.Schema] ?? '')}.`.if(table[Table.Symbol.Schema])}${\n\t\t\t\tsql.identifier(table[Table.Symbol.OriginalName])\n\t\t\t} ${sql.identifier(table[Table.Symbol.Name])}`;\n\t\t}\n\n\t\treturn table;\n\t}\n\n\tbuildSelectQuery(\n\t\t{\n\t\t\twithList,\n\t\t\tfields,\n\t\t\tfieldsFlat,\n\t\t\twhere,\n\t\t\thaving,\n\t\t\ttable,\n\t\t\tjoins,\n\t\t\torderBy,\n\t\t\tgroupBy,\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\tdistinct,\n\t\t\tsetOperators,\n\t\t}: SQLiteSelectConfig,\n\t): SQL {\n\t\tconst fieldsList = fieldsFlat ?? orderSelectedFields<SQLiteColumn>(fields);\n\t\tfor (const f of fieldsList) {\n\t\t\tif (\n\t\t\t\tis(f.field, Column)\n\t\t\t\t&& getTableName(f.field.table)\n\t\t\t\t\t!== (is(table, Subquery)\n\t\t\t\t\t\t? table._.alias\n\t\t\t\t\t\t: is(table, SQLiteViewBase)\n\t\t\t\t\t\t? table[ViewBaseConfig].name\n\t\t\t\t\t\t: is(table, SQL)\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: getTableName(table))\n\t\t\t\t&& !((table) =>\n\t\t\t\t\tjoins?.some(({ alias }) =>\n\t\t\t\t\t\talias === (table[Table.Symbol.IsAlias] ? getTableName(table) : table[Table.Symbol.BaseName])\n\t\t\t\t\t))(f.field.table)\n\t\t\t) {\n\t\t\t\tconst tableName = getTableName(f.field.table);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Your \"${\n\t\t\t\t\t\tf.path.join('->')\n\t\t\t\t\t}\" field references a column \"${tableName}\".\"${f.field.name}\", but the table \"${tableName}\" is not part of the query! Did you forget to join it?`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst isSingleTable = !joins || joins.length === 0;\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst distinctSql = distinct ? sql` distinct` : undefined;\n\n\t\tconst selection = this.buildSelection(fieldsList, { isSingleTable });\n\n\t\tconst tableSql = this.buildFromTable(table);\n\n\t\tconst joinsSql = this.buildJoins(joins);\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\tconst havingSql = having ? sql` having ${having}` : undefined;\n\n\t\tconst groupByList: (SQL | AnyColumn | SQL.Aliased)[] = [];\n\t\tif (groupBy) {\n\t\t\tfor (const [index, groupByValue] of groupBy.entries()) {\n\t\t\t\tgroupByList.push(groupByValue);\n\n\t\t\t\tif (index < groupBy.length - 1) {\n\t\t\t\t\tgroupByList.push(sql`, `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst groupBySql = groupByList.length > 0 ? sql` group by ${sql.join(groupByList)}` : undefined;\n\n\t\tconst orderBySql = this.buildOrderBy(orderBy);\n\n\t\tconst limitSql = this.buildLimit(limit);\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\tconst finalQuery =\n\t\t\tsql`${withSql}select${distinctSql} ${selection} from ${tableSql}${joinsSql}${whereSql}${groupBySql}${havingSql}${orderBySql}${limitSql}${offsetSql}`;\n\n\t\tif (setOperators.length > 0) {\n\t\t\treturn this.buildSetOperations(finalQuery, setOperators);\n\t\t}\n\n\t\treturn finalQuery;\n\t}\n\n\tbuildSetOperations(leftSelect: SQL, setOperators: SQLiteSelectConfig['setOperators']): SQL {\n\t\tconst [setOperator, ...rest] = setOperators;\n\n\t\tif (!setOperator) {\n\t\t\tthrow new Error('Cannot pass undefined values to any set operator');\n\t\t}\n\n\t\tif (rest.length === 0) {\n\t\t\treturn this.buildSetOperationQuery({ leftSelect, setOperator });\n\t\t}\n\n\t\t// Some recursive magic here\n\t\treturn this.buildSetOperations(\n\t\t\tthis.buildSetOperationQuery({ leftSelect, setOperator }),\n\t\t\trest,\n\t\t);\n\t}\n\n\tbuildSetOperationQuery({\n\t\tleftSelect,\n\t\tsetOperator: { type, isAll, rightSelect, limit, orderBy, offset },\n\t}: { leftSelect: SQL; setOperator: SQLiteSelectConfig['setOperators'][number] }): SQL {\n\t\t// SQLite doesn't support parenthesis in set operations\n\t\tconst leftChunk = sql`${leftSelect.getSQL()} `;\n\t\tconst rightChunk = sql`${rightSelect.getSQL()}`;\n\n\t\tlet orderBySql;\n\t\tif (orderBy && orderBy.length > 0) {\n\t\t\tconst orderByValues: (SQL<unknown> | Name)[] = [];\n\n\t\t\t// The next bit is necessary because the sql operator replaces ${table.column} with `table`.`column`\n\t\t\t// which is invalid Sql syntax, Table from one of the SELECTs cannot be used in global ORDER clause\n\t\t\tfor (const singleOrderBy of orderBy) {\n\t\t\t\tif (is(singleOrderBy, SQLiteColumn)) {\n\t\t\t\t\torderByValues.push(sql.identifier(singleOrderBy.name));\n\t\t\t\t} else if (is(singleOrderBy, SQL)) {\n\t\t\t\t\tfor (let i = 0; i < singleOrderBy.queryChunks.length; i++) {\n\t\t\t\t\t\tconst chunk = singleOrderBy.queryChunks[i];\n\n\t\t\t\t\t\tif (is(chunk, SQLiteColumn)) {\n\t\t\t\t\t\t\tsingleOrderBy.queryChunks[i] = sql.identifier(this.casing.getColumnCasing(chunk));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t} else {\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torderBySql = sql` order by ${sql.join(orderByValues, sql`, `)}`;\n\t\t}\n\n\t\tconst limitSql = typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\n\t\tconst operatorChunk = sql.raw(`${type} ${isAll ? 'all ' : ''}`);\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\treturn sql`${leftChunk}${operatorChunk}${rightChunk}${orderBySql}${limitSql}${offsetSql}`;\n\t}\n\n\tbuildInsertQuery(\n\t\t{ table, values: valuesOrSelect, onConflict, returning, withList, select }: SQLiteInsertConfig,\n\t): SQL {\n\t\t// const isSingleValue = values.length === 1;\n\t\tconst valuesSqlList: ((SQLChunk | SQL)[] | SQL)[] = [];\n\t\tconst columns: Record<string, SQLiteColumn> = table[Table.Symbol.Columns];\n\n\t\tconst colEntries: [string, SQLiteColumn][] = Object.entries(columns).filter(([_, col]) =>\n\t\t\t!col.shouldDisableInsert()\n\t\t);\n\t\tconst insertOrder = colEntries.map(([, column]) => sql.identifier(this.casing.getColumnCasing(column)));\n\n\t\tif (select) {\n\t\t\tconst select = valuesOrSelect as AnySQLiteSelectQueryBuilder | SQL;\n\n\t\t\tif (is(select, SQL)) {\n\t\t\t\tvaluesSqlList.push(select);\n\t\t\t} else {\n\t\t\t\tvaluesSqlList.push(select.getSQL());\n\t\t\t}\n\t\t} else {\n\t\t\tconst values = valuesOrSelect as Record<string, Param | SQL>[];\n\t\t\tvaluesSqlList.push(sql.raw('values '));\n\n\t\t\tfor (const [valueIndex, value] of values.entries()) {\n\t\t\t\tconst valueList: (SQLChunk | SQL)[] = [];\n\t\t\t\tfor (const [fieldName, col] of colEntries) {\n\t\t\t\t\tconst colValue = value[fieldName];\n\t\t\t\t\tif (colValue === undefined || (is(colValue, Param) && colValue.value === undefined)) {\n\t\t\t\t\t\tlet defaultValue;\n\t\t\t\t\t\tif (col.default !== null && col.default !== undefined) {\n\t\t\t\t\t\t\tdefaultValue = is(col.default, SQL) ? col.default : sql.param(col.default, col);\n\t\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t\t} else if (col.defaultFn !== undefined) {\n\t\t\t\t\t\t\tconst defaultFnResult = col.defaultFn();\n\t\t\t\t\t\t\tdefaultValue = is(defaultFnResult, SQL) ? defaultFnResult : sql.param(defaultFnResult, col);\n\t\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t\t} else if (!col.default && col.onUpdateFn !== undefined) {\n\t\t\t\t\t\t\tconst onUpdateFnResult = col.onUpdateFn();\n\t\t\t\t\t\t\tdefaultValue = is(onUpdateFnResult, SQL) ? onUpdateFnResult : sql.param(onUpdateFnResult, col);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdefaultValue = sql`null`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalueList.push(defaultValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalueList.push(colValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvaluesSqlList.push(valueList);\n\t\t\t\tif (valueIndex < values.length - 1) {\n\t\t\t\t\tvaluesSqlList.push(sql`, `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst valuesSql = sql.join(valuesSqlList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst onConflictSql = onConflict?.length\n\t\t\t? sql.join(onConflict)\n\t\t\t: undefined;\n\n\t\t// if (isSingleValue && valuesSqlList.length === 0){\n\t\t// \treturn sql`insert into ${table} default values ${onConflictSql}${returningSql}`;\n\t\t// }\n\n\t\treturn sql`${withSql}insert into ${table} ${insertOrder} ${valuesSql}${onConflictSql}${returningSql}`;\n\t}\n\n\tsqlToQuery(sql: SQL, invokeSource?: 'indexes' | undefined): QueryWithTypings {\n\t\treturn sql.toQuery({\n\t\t\tcasing: this.casing,\n\t\t\tescapeName: this.escapeName,\n\t\t\tescapeParam: this.escapeParam,\n\t\t\tescapeString: this.escapeString,\n\t\t\tinvokeSource,\n\t\t});\n\t}\n\n\tbuildRelationalQuery({\n\t\tfullSchema,\n\t\tschema,\n\t\ttableNamesMap,\n\t\ttable,\n\t\ttableConfig,\n\t\tqueryConfig: config,\n\t\ttableAlias,\n\t\tnestedQueryRelation,\n\t\tjoinOn,\n\t}: {\n\t\tfullSchema: Record<string, unknown>;\n\t\tschema: TablesRelationalConfig;\n\t\ttableNamesMap: Record<string, string>;\n\t\ttable: SQLiteTable;\n\t\ttableConfig: TableRelationalConfig;\n\t\tqueryConfig: true | DBQueryConfig<'many', true>;\n\t\ttableAlias: string;\n\t\tnestedQueryRelation?: Relation;\n\t\tjoinOn?: SQL;\n\t}): BuildRelationalQueryResult<SQLiteTable, SQLiteColumn> {\n\t\tlet selection: BuildRelationalQueryResult<SQLiteTable, SQLiteColumn>['selection'] = [];\n\t\tlet limit, offset, orderBy: SQLiteSelectConfig['orderBy'] = [], where;\n\t\tconst joins: SQLiteSelectJoinConfig[] = [];\n\n\t\tif (config === true) {\n\t\t\tconst selectionEntries = Object.entries(tableConfig.columns);\n\t\t\tselection = selectionEntries.map((\n\t\t\t\t[key, value],\n\t\t\t) => ({\n\t\t\t\tdbKey: value.name,\n\t\t\t\ttsKey: key,\n\t\t\t\tfield: aliasedTableColumn(value as SQLiteColumn, tableAlias),\n\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\tisJson: false,\n\t\t\t\tselection: [],\n\t\t\t}));\n\t\t} else {\n\t\t\tconst aliasedColumns = Object.fromEntries(\n\t\t\t\tObject.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)]),\n\t\t\t);\n\n\t\t\tif (config.where) {\n\t\t\t\tconst whereSql = typeof config.where === 'function'\n\t\t\t\t\t? config.where(aliasedColumns, getOperators())\n\t\t\t\t\t: config.where;\n\t\t\t\twhere = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n\t\t\t}\n\n\t\t\tconst fieldsSelection: { tsKey: string; value: SQLiteColumn | SQL.Aliased }[] = [];\n\t\t\tlet selectedColumns: string[] = [];\n\n\t\t\t// Figure out which columns to select\n\t\t\tif (config.columns) {\n\t\t\t\tlet isIncludeMode = false;\n\n\t\t\t\tfor (const [field, value] of Object.entries(config.columns)) {\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field in tableConfig.columns) {\n\t\t\t\t\t\tif (!isIncludeMode && value === true) {\n\t\t\t\t\t\t\tisIncludeMode = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectedColumns.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (selectedColumns.length > 0) {\n\t\t\t\t\tselectedColumns = isIncludeMode\n\t\t\t\t\t\t? selectedColumns.filter((c) => config.columns?.[c] === true)\n\t\t\t\t\t\t: Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Select all columns if selection is not specified\n\t\t\t\tselectedColumns = Object.keys(tableConfig.columns);\n\t\t\t}\n\n\t\t\tfor (const field of selectedColumns) {\n\t\t\t\tconst column = tableConfig.columns[field]! as SQLiteColumn;\n\t\t\t\tfieldsSelection.push({ tsKey: field, value: column });\n\t\t\t}\n\n\t\t\tlet selectedRelations: {\n\t\t\t\ttsKey: string;\n\t\t\t\tqueryConfig: true | DBQueryConfig<'many', false>;\n\t\t\t\trelation: Relation;\n\t\t\t}[] = [];\n\n\t\t\t// Figure out which relations to select\n\t\t\tif (config.with) {\n\t\t\t\tselectedRelations = Object.entries(config.with)\n\t\t\t\t\t.filter((entry): entry is [typeof entry[0], NonNullable<typeof entry[1]>] => !!entry[1])\n\t\t\t\t\t.map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey]! }));\n\t\t\t}\n\n\t\t\tlet extras;\n\n\t\t\t// Figure out which extras to select\n\t\t\tif (config.extras) {\n\t\t\t\textras = typeof config.extras === 'function'\n\t\t\t\t\t? config.extras(aliasedColumns, { sql })\n\t\t\t\t\t: config.extras;\n\t\t\t\tfor (const [tsKey, value] of Object.entries(extras)) {\n\t\t\t\t\tfieldsSelection.push({\n\t\t\t\t\t\ttsKey,\n\t\t\t\t\t\tvalue: mapColumnsInAliasedSQLToAlias(value, tableAlias),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Transform `fieldsSelection` into `selection`\n\t\t\t// `fieldsSelection` shouldn't be used after this point\n\t\t\tfor (const { tsKey, value } of fieldsSelection) {\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey]!.name,\n\t\t\t\t\ttsKey,\n\t\t\t\t\tfield: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n\t\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\t\tisJson: false,\n\t\t\t\t\tselection: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet orderByOrig = typeof config.orderBy === 'function'\n\t\t\t\t? config.orderBy(aliasedColumns, getOrderByOperators())\n\t\t\t\t: config.orderBy ?? [];\n\t\t\tif (!Array.isArray(orderByOrig)) {\n\t\t\t\torderByOrig = [orderByOrig];\n\t\t\t}\n\t\t\torderBy = orderByOrig.map((orderByValue) => {\n\t\t\t\tif (is(orderByValue, Column)) {\n\t\t\t\t\treturn aliasedTableColumn(orderByValue, tableAlias) as SQLiteColumn;\n\t\t\t\t}\n\t\t\t\treturn mapColumnsInSQLToAlias(orderByValue, tableAlias);\n\t\t\t});\n\n\t\t\tlimit = config.limit;\n\t\t\toffset = config.offset;\n\n\t\t\t// Process all relations\n\t\t\tfor (\n\t\t\t\tconst {\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tqueryConfig: selectedRelationConfigValue,\n\t\t\t\t\trelation,\n\t\t\t\t} of selectedRelations\n\t\t\t) {\n\t\t\t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t\t\t\tconst relationTableName = getTableUniqueName(relation.referencedTable);\n\t\t\t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t\t\t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t\t\t\t// const relationTable = schema[relationTableTsName]!;\n\t\t\t\tconst joinOn = and(\n\t\t\t\t\t...normalizedRelation.fields.map((field, i) =>\n\t\t\t\t\t\teq(\n\t\t\t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t\t\t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst builtRelation = this.buildRelationalQuery({\n\t\t\t\t\tfullSchema,\n\t\t\t\t\tschema,\n\t\t\t\t\ttableNamesMap,\n\t\t\t\t\ttable: fullSchema[relationTableTsName] as SQLiteTable,\n\t\t\t\t\ttableConfig: schema[relationTableTsName]!,\n\t\t\t\t\tqueryConfig: is(relation, One)\n\t\t\t\t\t\t? (selectedRelationConfigValue === true\n\t\t\t\t\t\t\t? { limit: 1 }\n\t\t\t\t\t\t\t: { ...selectedRelationConfigValue, limit: 1 })\n\t\t\t\t\t\t: selectedRelationConfigValue,\n\t\t\t\t\ttableAlias: relationTableAlias,\n\t\t\t\t\tjoinOn,\n\t\t\t\t\tnestedQueryRelation: relation,\n\t\t\t\t});\n\t\t\t\tconst field = (sql`(${builtRelation.sql})`).as(selectedRelationTsKey);\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: selectedRelationTsKey,\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tfield,\n\t\t\t\t\trelationTableTsKey: relationTableTsName,\n\t\t\t\t\tisJson: true,\n\t\t\t\t\tselection: builtRelation.selection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (selection.length === 0) {\n\t\t\tthrow new DrizzleError({\n\t\t\t\tmessage:\n\t\t\t\t\t`No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\"). You need to have at least one item in \"columns\", \"with\" or \"extras\". If you need to select all columns, omit the \"columns\" key or set it to undefined.`,\n\t\t\t});\n\t\t}\n\n\t\tlet result;\n\n\t\twhere = and(joinOn, where);\n\n\t\tif (nestedQueryRelation) {\n\t\t\tlet field = sql`json_array(${\n\t\t\t\tsql.join(\n\t\t\t\t\tselection.map(({ field }) =>\n\t\t\t\t\t\tis(field, SQLiteColumn)\n\t\t\t\t\t\t\t? sql.identifier(this.casing.getColumnCasing(field))\n\t\t\t\t\t\t\t: is(field, SQL.Aliased)\n\t\t\t\t\t\t\t? field.sql\n\t\t\t\t\t\t\t: field\n\t\t\t\t\t),\n\t\t\t\t\tsql`, `,\n\t\t\t\t)\n\t\t\t})`;\n\t\t\tif (is(nestedQueryRelation, Many)) {\n\t\t\t\tfield = sql`coalesce(json_group_array(${field}), json_array())`;\n\t\t\t}\n\t\t\tconst nestedSelection = [{\n\t\t\t\tdbKey: 'data',\n\t\t\t\ttsKey: 'data',\n\t\t\t\tfield: field.as('data'),\n\t\t\t\tisJson: true,\n\t\t\t\trelationTableTsKey: tableConfig.tsName,\n\t\t\t\tselection,\n\t\t\t}];\n\n\t\t\tconst needsSubquery = limit !== undefined || offset !== undefined || orderBy.length > 0;\n\n\t\t\tif (needsSubquery) {\n\t\t\t\tresult = this.buildSelectQuery({\n\t\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\t\tfields: {},\n\t\t\t\t\tfieldsFlat: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: [],\n\t\t\t\t\t\t\tfield: sql.raw('*'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\twhere,\n\t\t\t\t\tlimit,\n\t\t\t\t\toffset,\n\t\t\t\t\torderBy,\n\t\t\t\t\tsetOperators: [],\n\t\t\t\t});\n\n\t\t\t\twhere = undefined;\n\t\t\t\tlimit = undefined;\n\t\t\t\toffset = undefined;\n\t\t\t\torderBy = undefined;\n\t\t\t} else {\n\t\t\t\tresult = aliasedTable(table, tableAlias);\n\t\t\t}\n\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: is(result, SQLiteTable) ? result : new Subquery(result, {}, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: nestedSelection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t} else {\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: selection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\ttableTsKey: tableConfig.tsName,\n\t\t\tsql: result,\n\t\t\tselection,\n\t\t};\n\t}\n}\n\nexport class SQLiteSyncDialect extends SQLiteDialect {\n\tstatic override readonly [entityKind]: string = 'SQLiteSyncDialect';\n\n\tmigrate(\n\t\tmigrations: MigrationMeta[],\n\t\tsession: SQLiteSession<'sync', unknown, Record<string, unknown>, TablesRelationalConfig>,\n\t\tconfig?: string | MigrationConfig,\n\t): void {\n\t\tconst migrationsTable = config === undefined\n\t\t\t? '__drizzle_migrations'\n\t\t\t: typeof config === 'string'\n\t\t\t? '__drizzle_migrations'\n\t\t\t: config.migrationsTable ?? '__drizzle_migrations';\n\n\t\tconst migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at numeric\n\t\t\t)\n\t\t`;\n\t\tsession.run(migrationTableCreate);\n\n\t\tconst dbMigrations = session.values<[number, string, string]>(\n\t\t\tsql`SELECT id, hash, created_at FROM ${sql.identifier(migrationsTable)} ORDER BY created_at DESC LIMIT 1`,\n\t\t);\n\n\t\tconst lastDbMigration = dbMigrations[0] ?? undefined;\n\t\tsession.run(sql`BEGIN`);\n\n\t\ttry {\n\t\t\tfor (const migration of migrations) {\n\t\t\t\tif (!lastDbMigration || Number(lastDbMigration[2])! < migration.folderMillis) {\n\t\t\t\t\tfor (const stmt of migration.sql) {\n\t\t\t\t\t\tsession.run(sql.raw(stmt));\n\t\t\t\t\t}\n\t\t\t\t\tsession.run(\n\t\t\t\t\t\tsql`INSERT INTO ${\n\t\t\t\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t\t\t\t} (\"hash\", \"created_at\") VALUES(${migration.hash}, ${migration.folderMillis})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsession.run(sql`COMMIT`);\n\t\t} catch (e) {\n\t\t\tsession.run(sql`ROLLBACK`);\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n\nexport class SQLiteAsyncDialect extends SQLiteDialect {\n\tstatic override readonly [entityKind]: string = 'SQLiteAsyncDialect';\n\n\tasync migrate(\n\t\tmigrations: MigrationMeta[],\n\t\tsession: SQLiteSession<'async', any, any, any>,\n\t\tconfig?: string | MigrationConfig,\n\t): Promise<void> {\n\t\tconst migrationsTable = config === undefined\n\t\t\t? '__drizzle_migrations'\n\t\t\t: typeof config === 'string'\n\t\t\t? '__drizzle_migrations'\n\t\t\t: config.migrationsTable ?? '__drizzle_migrations';\n\n\t\tconst migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at numeric\n\t\t\t)\n\t\t`;\n\t\tawait session.run(migrationTableCreate);\n\n\t\tconst dbMigrations = await session.values<[number, string, string]>(\n\t\t\tsql`SELECT id, hash, created_at FROM ${sql.identifier(migrationsTable)} ORDER BY created_at DESC LIMIT 1`,\n\t\t);\n\n\t\tconst lastDbMigration = dbMigrations[0] ?? undefined;\n\n\t\tawait session.transaction(async (tx) => {\n\t\t\tfor (const migration of migrations) {\n\t\t\t\tif (!lastDbMigration || Number(lastDbMigration[2])! < migration.folderMillis) {\n\t\t\t\t\tfor (const stmt of migration.sql) {\n\t\t\t\t\t\tawait tx.run(sql.raw(stmt));\n\t\t\t\t\t}\n\t\t\t\t\tawait tx.run(\n\t\t\t\t\t\tsql`INSERT INTO ${\n\t\t\t\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t\t\t\t} (\"hash\", \"created_at\") VALUES(${migration.hash}, ${migration.folderMillis})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "import type { Column } from '~/column.ts';\nimport { entityKind } from './entity.ts';\nimport { Table } from './table.ts';\nimport type { Casing } from './utils.ts';\n\nexport function toSnakeCase(input: string) {\n\tconst words = input\n\t\t.replace(/['\\u2019]/g, '')\n\t\t.match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n\n\treturn words.map((word) => word.toLowerCase()).join('_');\n}\n\nexport function toCamelCase(input: string) {\n\tconst words = input\n\t\t.replace(/['\\u2019]/g, '')\n\t\t.match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n\n\treturn words.reduce((acc, word, i) => {\n\t\tconst formattedWord = i === 0 ? word.toLowerCase() : `${word[0]!.toUpperCase()}${word.slice(1)}`;\n\t\treturn acc + formattedWord;\n\t}, '');\n}\n\nfunction noopCase(input: string) {\n\treturn input;\n}\n\nexport class CasingCache {\n\tstatic readonly [entityKind]: string = 'CasingCache';\n\n\t/** @internal */\n\tcache: Record<string, string> = {};\n\tprivate cachedTables: Record<string, true> = {};\n\tprivate convert: (input: string) => string;\n\n\tconstructor(casing?: Casing) {\n\t\tthis.convert = casing === 'snake_case'\n\t\t\t? toSnakeCase\n\t\t\t: casing === 'camelCase'\n\t\t\t? toCamelCase\n\t\t\t: noopCase;\n\t}\n\n\tgetColumnCasing(column: Column): string {\n\t\tif (!column.keyAsName) return column.name;\n\n\t\tconst schema = column.table[Table.Symbol.Schema] ?? 'public';\n\t\tconst tableName = column.table[Table.Symbol.OriginalName];\n\t\tconst key = `${schema}.${tableName}.${column.name}`;\n\n\t\tif (!this.cache[key]) {\n\t\t\tthis.cacheTable(column.table);\n\t\t}\n\t\treturn this.cache[key]!;\n\t}\n\n\tprivate cacheTable(table: Table) {\n\t\tconst schema = table[Table.Symbol.Schema] ?? 'public';\n\t\tconst tableName = table[Table.Symbol.OriginalName];\n\t\tconst tableKey = `${schema}.${tableName}`;\n\n\t\tif (!this.cachedTables[tableKey]) {\n\t\t\tfor (const column of Object.values(table[Table.Symbol.Columns])) {\n\t\t\t\tconst columnKey = `${tableKey}.${column.name}`;\n\t\t\t\tthis.cache[columnKey] = this.convert(column.name);\n\t\t\t}\n\t\t\tthis.cachedTables[tableKey] = true;\n\t\t}\n\t}\n\n\tclearCache() {\n\t\tthis.cache = {};\n\t\tthis.cachedTables = {};\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { ColumnsSelection } from '~/sql/sql.ts';\nimport { View } from '~/sql/sql.ts';\n\nexport abstract class SQLiteViewBase<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelection extends ColumnsSelection = ColumnsSelection,\n> extends View<TName, TExisting, TSelection> {\n\tstatic override readonly [entityKind]: string = 'SQLiteViewBase';\n\n\tdeclare _: View<TName, TExisting, TSelection>['_'] & {\n\t\tviewBrand: 'SQLiteView';\n\t};\n}\n", "import type { CacheConfig, WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type {\n\tBuildSubquerySelection,\n\tGetSelectTableName,\n\tGetSelectTableSelection,\n\tJoinNullability,\n\tJoinType,\n\tSelectMode,\n\tSelectResult,\n\tSetOperator,\n} from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { SQL, View } from '~/sql/sql.ts';\nimport type { ColumnsSelection, Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteColumn } from '~/sqlite-core/columns/index.ts';\nimport type { SQLiteDialect } from '~/sqlite-core/dialect.ts';\nimport type { SQLiteSession } from '~/sqlite-core/session.ts';\nimport type { SubqueryWithSelection } from '~/sqlite-core/subquery.ts';\nimport type { SQLiteTable } from '~/sqlite-core/table.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport {\n\tapplyMixins,\n\tgetTableColumns,\n\tgetTableLikeName,\n\thaveSameKeys,\n\torderSelectedFields,\n\ttype ValueOrArray,\n} from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport { SQLiteViewBase } from '../view-base.ts';\nimport type {\n\tAnySQLiteSelect,\n\tCreateSQLiteSelectFromBuilderMode,\n\tGetSQLiteSetOperators,\n\tSelectedFields,\n\tSetOperatorRightSelect,\n\tSQLiteCreateSetOperatorFn,\n\tSQLiteSelectConfig,\n\tSQLiteSelectCrossJoinFn,\n\tSQLiteSelectDynamic,\n\tSQLiteSelectExecute,\n\tSQLiteSelectHKT,\n\tSQLiteSelectHKTBase,\n\tSQLiteSelectJoinFn,\n\tSQLiteSelectPrepare,\n\tSQLiteSelectWithout,\n\tSQLiteSetOperatorExcludedMethods,\n\tSQLiteSetOperatorWithResult,\n} from './select.types.ts';\n\nexport class SQLiteSelectBuilder<\n\tTSelection extends SelectedFields | undefined,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTBuilderMode extends 'db' | 'qb' = 'db',\n> {\n\tstatic readonly [entityKind]: string = 'SQLiteSelectBuilder';\n\n\tprivate fields: TSelection;\n\tprivate session: SQLiteSession<any, any, any, any> | undefined;\n\tprivate dialect: SQLiteDialect;\n\tprivate withList: Subquery[] | undefined;\n\tprivate distinct: boolean | undefined;\n\n\tconstructor(\n\t\tconfig: {\n\t\t\tfields: TSelection;\n\t\t\tsession: SQLiteSession<any, any, any, any> | undefined;\n\t\t\tdialect: SQLiteDialect;\n\t\t\twithList?: Subquery[];\n\t\t\tdistinct?: boolean;\n\t\t},\n\t) {\n\t\tthis.fields = config.fields;\n\t\tthis.session = config.session;\n\t\tthis.dialect = config.dialect;\n\t\tthis.withList = config.withList;\n\t\tthis.distinct = config.distinct;\n\t}\n\n\tfrom<TFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL>(\n\t\tsource: TFrom,\n\t): CreateSQLiteSelectFromBuilderMode<\n\t\tTBuilderMode,\n\t\tGetSelectTableName<TFrom>,\n\t\tTResultType,\n\t\tTRunResult,\n\t\tTSelection extends undefined ? GetSelectTableSelection<TFrom> : TSelection,\n\t\tTSelection extends undefined ? 'single' : 'partial'\n\t> {\n\t\tconst isPartialSelect = !!this.fields;\n\n\t\tlet fields: SelectedFields;\n\t\tif (this.fields) {\n\t\t\tfields = this.fields;\n\t\t} else if (is(source, Subquery)) {\n\t\t\t// This is required to use the proxy handler to get the correct field values from the subquery\n\t\t\tfields = Object.fromEntries(\n\t\t\t\tObject.keys(source._.selectedFields).map((\n\t\t\t\t\tkey,\n\t\t\t\t) => [key, source[key as unknown as keyof typeof source] as unknown as SelectedFields[string]]),\n\t\t\t);\n\t\t} else if (is(source, SQLiteViewBase)) {\n\t\t\tfields = source[ViewBaseConfig].selectedFields as SelectedFields;\n\t\t} else if (is(source, SQL)) {\n\t\t\tfields = {};\n\t\t} else {\n\t\t\tfields = getTableColumns<SQLiteTable>(source);\n\t\t}\n\n\t\treturn new SQLiteSelectBase({\n\t\t\ttable: source,\n\t\t\tfields,\n\t\t\tisPartialSelect,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\twithList: this.withList,\n\t\t\tdistinct: this.distinct,\n\t\t}) as any;\n\t}\n}\n\nexport abstract class SQLiteSelectQueryBuilderBase<\n\tTHKT extends SQLiteSelectHKTBase,\n\tTTableName extends string | undefined,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends TypedQueryBuilder<TSelectedFields, TResult> {\n\tstatic override readonly [entityKind]: string = 'SQLiteSelectQueryBuilder';\n\n\toverride readonly _: {\n\t\treadonly dialect: 'sqlite';\n\t\treadonly hkt: THKT;\n\t\treadonly tableName: TTableName;\n\t\treadonly resultType: TResultType;\n\t\treadonly runResult: TRunResult;\n\t\treadonly selection: TSelection;\n\t\treadonly selectMode: TSelectMode;\n\t\treadonly nullabilityMap: TNullabilityMap;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TResult;\n\t\treadonly selectedFields: TSelectedFields;\n\t\treadonly config: SQLiteSelectConfig;\n\t};\n\n\t/** @internal */\n\tconfig: SQLiteSelectConfig;\n\tprotected joinsNotNullableMap: Record<string, boolean>;\n\tprivate tableName: string | undefined;\n\tprivate isPartialSelect: boolean;\n\tprotected session: SQLiteSession<any, any, any, any> | undefined;\n\tprotected dialect: SQLiteDialect;\n\tprotected cacheConfig?: WithCacheConfig = undefined;\n\tprotected usedTables: Set<string> = new Set();\n\n\tconstructor(\n\t\t{ table, fields, isPartialSelect, session, dialect, withList, distinct }: {\n\t\t\ttable: SQLiteSelectConfig['table'];\n\t\t\tfields: SQLiteSelectConfig['fields'];\n\t\t\tisPartialSelect: boolean;\n\t\t\tsession: SQLiteSession<any, any, any, any> | undefined;\n\t\t\tdialect: SQLiteDialect;\n\t\t\twithList: Subquery[] | undefined;\n\t\t\tdistinct: boolean | undefined;\n\t\t},\n\t) {\n\t\tsuper();\n\t\tthis.config = {\n\t\t\twithList,\n\t\t\ttable,\n\t\t\tfields: { ...fields },\n\t\t\tdistinct,\n\t\t\tsetOperators: [],\n\t\t};\n\t\tthis.isPartialSelect = isPartialSelect;\n\t\tthis.session = session;\n\t\tthis.dialect = dialect;\n\t\tthis._ = {\n\t\t\tselectedFields: fields as TSelectedFields,\n\t\t\tconfig: this.config,\n\t\t} as this['_'];\n\t\tthis.tableName = getTableLikeName(table);\n\t\tthis.joinsNotNullableMap = typeof this.tableName === 'string' ? { [this.tableName]: true } : {};\n\t\tfor (const item of extractUsedTable(table)) this.usedTables.add(item);\n\t}\n\n\t/** @internal */\n\tgetUsedTables() {\n\t\treturn [...this.usedTables];\n\t}\n\n\tprivate createJoin<TJoinType extends JoinType>(\n\t\tjoinType: TJoinType,\n\t): 'cross' extends TJoinType ? SQLiteSelectCrossJoinFn<this, TDynamic>\n\t\t: SQLiteSelectJoinFn<this, TDynamic, TJoinType>\n\t{\n\t\treturn (\n\t\t\ttable: SQLiteTable | Subquery | SQLiteViewBase | SQL,\n\t\t\ton?: ((aliases: TSelection) => SQL | undefined) | SQL | undefined,\n\t\t) => {\n\t\t\tconst baseTableName = this.tableName;\n\t\t\tconst tableName = getTableLikeName(table);\n\n\t\t\t// store all tables used in a query\n\t\t\tfor (const item of extractUsedTable(table)) this.usedTables.add(item);\n\n\t\t\tif (typeof tableName === 'string' && this.config.joins?.some((join) => join.alias === tableName)) {\n\t\t\t\tthrow new Error(`Alias \"${tableName}\" is already used in this query`);\n\t\t\t}\n\n\t\t\tif (!this.isPartialSelect) {\n\t\t\t\t// If this is the first join and this is not a partial select and we're not selecting from raw SQL, \"move\" the fields from the main table to the nested object\n\t\t\t\tif (Object.keys(this.joinsNotNullableMap).length === 1 && typeof baseTableName === 'string') {\n\t\t\t\t\tthis.config.fields = {\n\t\t\t\t\t\t[baseTableName]: this.config.fields,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (typeof tableName === 'string' && !is(table, SQL)) {\n\t\t\t\t\tconst selection = is(table, Subquery)\n\t\t\t\t\t\t? table._.selectedFields\n\t\t\t\t\t\t: is(table, View)\n\t\t\t\t\t\t? table[ViewBaseConfig].selectedFields\n\t\t\t\t\t\t: table[Table.Symbol.Columns];\n\t\t\t\t\tthis.config.fields[tableName] = selection;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof on === 'function') {\n\t\t\t\ton = on(\n\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\tthis.config.fields,\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as TSelection,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!this.config.joins) {\n\t\t\t\tthis.config.joins = [];\n\t\t\t}\n\t\t\tthis.config.joins.push({ on, table, joinType, alias: tableName });\n\n\t\t\tif (typeof tableName === 'string') {\n\t\t\t\tswitch (joinType) {\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'right': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'cross':\n\t\t\t\t\tcase 'inner': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'full': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this as any;\n\t\t};\n\t}\n\n\t/**\n\t * Executes a `left join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the table with the corresponding row from the joined table, if a match is found. If no matching row exists, it sets all columns of the joined table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#left-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet | null; }[] = await db.select()\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number | null; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tleftJoin = this.createJoin('left');\n\n\t/**\n\t * Executes a `right join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the joined table with the corresponding row from the main table, if a match is found. If no matching row exists, it sets all columns of the main table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#right-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\trightJoin = this.createJoin('right');\n\n\t/**\n\t * Executes an `inner join` operation, creating a new table by combining rows from two tables that have matching values.\n\t *\n\t * Calling this method retrieves rows that have corresponding entries in both joined tables. Rows without matching entries in either table are excluded, resulting in a table that includes only matching pairs.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#inner-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tinnerJoin = this.createJoin('inner');\n\n\t/**\n\t * Executes a `full join` operation by combining rows from two tables into a new table.\n\t *\n\t * Calling this method retrieves all rows from both main and joined tables, merging rows with matching values and filling in `null` for non-matching columns.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#full-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet | null; }[] = await db.select()\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number | null; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tfullJoin = this.createJoin('full');\n\n\t/**\n\t * Executes a `cross join` operation by combining rows from two tables into a new table.\n\t *\n\t * Calling this method retrieves all rows from both main and joined tables, merging all rows from each table.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#cross-join}\n\t *\n\t * @param table the table to join.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users, each user with every pet\n\t * const usersWithPets: { user: User; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .crossJoin(pets)\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .crossJoin(pets)\n\t * ```\n\t */\n\tcrossJoin = this.createJoin('cross');\n\n\tprivate createSetOperator(\n\t\ttype: SetOperator,\n\t\tisAll: boolean,\n\t): <TValue extends SQLiteSetOperatorWithResult<TResult>>(\n\t\trightSelection:\n\t\t\t| ((setOperators: GetSQLiteSetOperators) => SetOperatorRightSelect<TValue, TResult>)\n\t\t\t| SetOperatorRightSelect<TValue, TResult>,\n\t) => SQLiteSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tSQLiteSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\treturn (rightSelection) => {\n\t\t\tconst rightSelect = (typeof rightSelection === 'function'\n\t\t\t\t? rightSelection(getSQLiteSetOperators())\n\t\t\t\t: rightSelection) as TypedQueryBuilder<\n\t\t\t\t\tany,\n\t\t\t\t\tTResult\n\t\t\t\t>;\n\n\t\t\tif (!haveSameKeys(this.getSelectedFields(), rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.config.setOperators.push({ type, isAll, rightSelect });\n\t\t\treturn this as any;\n\t\t};\n\t}\n\n\t/**\n\t * Adds `union` set operator to the query.\n\t *\n\t * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all unique names from customers and users tables\n\t * await db.select({ name: users.name })\n\t *   .from(users)\n\t *   .union(\n\t *     db.select({ name: customers.name }).from(customers)\n\t *   );\n\t * // or\n\t * import { union } from 'drizzle-orm/sqlite-core'\n\t *\n\t * await union(\n\t *   db.select({ name: users.name }).from(users),\n\t *   db.select({ name: customers.name }).from(customers)\n\t * );\n\t * ```\n\t */\n\tunion = this.createSetOperator('union', false);\n\n\t/**\n\t * Adds `union all` set operator to the query.\n\t *\n\t * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all transaction ids from both online and in-store sales\n\t * await db.select({ transaction: onlineSales.transactionId })\n\t *   .from(onlineSales)\n\t *   .unionAll(\n\t *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t *   );\n\t * // or\n\t * import { unionAll } from 'drizzle-orm/sqlite-core'\n\t *\n\t * await unionAll(\n\t *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n\t *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t * );\n\t * ```\n\t */\n\tunionAll = this.createSetOperator('union', true);\n\n\t/**\n\t * Adds `intersect` set operator to the query.\n\t *\n\t * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select course names that are offered in both departments A and B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .intersect(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { intersect } from 'drizzle-orm/sqlite-core'\n\t *\n\t * await intersect(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\tintersect = this.createSetOperator('intersect', false);\n\n\t/**\n\t * Adds `except` set operator to the query.\n\t *\n\t * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all courses offered in department A but not in department B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .except(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { except } from 'drizzle-orm/sqlite-core'\n\t *\n\t * await except(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\texcept = this.createSetOperator('except', false);\n\n\t/** @internal */\n\taddSetOperators(setOperators: SQLiteSelectConfig['setOperators']): SQLiteSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tSQLiteSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\tthis.config.setOperators.push(...setOperators);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#filtering}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be selected.\n\t *\n\t * ```ts\n\t * // Select all cars with green color\n\t * await db.select().from(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.select().from(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Select all BMW cars with a green color\n\t * await db.select().from(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Select all cars with the green or blue color\n\t * await db.select().from(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(\n\t\twhere: ((aliases: TSelection) => SQL | undefined) | SQL | undefined,\n\t): SQLiteSelectWithout<this, TDynamic, 'where'> {\n\t\tif (typeof where === 'function') {\n\t\t\twhere = where(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `having` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition. It is typically used with aggregate functions to filter the aggregated data based on a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @param having the `having` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all brands with more than one car\n\t * await db.select({\n\t * \tbrand: cars.brand,\n\t * \tcount: sql<number>`cast(count(${cars.id}) as int)`,\n\t * })\n\t *   .from(cars)\n\t *   .groupBy(cars.brand)\n\t *   .having(({ count }) => gt(count, 1));\n\t * ```\n\t */\n\thaving(\n\t\thaving: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined,\n\t): SQLiteSelectWithout<this, TDynamic, 'having'> {\n\t\tif (typeof having === 'function') {\n\t\t\thaving = having(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.having = having;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `group by` clause to the query.\n\t *\n\t * Calling this method will group rows that have the same values into summary rows, often used for aggregation purposes.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Group and count people by their last names\n\t * await db.select({\n\t *    lastName: people.lastName,\n\t *    count: sql<number>`cast(count(*) as int)`\n\t * })\n\t *   .from(people)\n\t *   .groupBy(people.lastName);\n\t * ```\n\t */\n\tgroupBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>,\n\t): SQLiteSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(...columns: (SQLiteColumn | SQL)[]): SQLiteSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>]\n\t\t\t| (SQLiteColumn | SQL | SQL.Aliased)[]\n\t): SQLiteSelectWithout<this, TDynamic, 'groupBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst groupBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t\tthis.config.groupBy = Array.isArray(groupBy) ? groupBy : [groupBy];\n\t\t} else {\n\t\t\tthis.config.groupBy = columns as (SQLiteColumn | SQL | SQL.Aliased)[];\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `order by` clause to the query.\n\t *\n\t * Calling this method will sort the result-set in ascending or descending order. By default, the sort order is ascending.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#order-by}\n\t *\n\t * @example\n\t *\n\t * ```\n\t * // Select cars ordered by year\n\t * await db.select().from(cars).orderBy(cars.year);\n\t * ```\n\t *\n\t * You can specify whether results are in ascending or descending order with the `asc()` and `desc()` operators.\n\t *\n\t * ```ts\n\t * // Select cars ordered by year in descending order\n\t * await db.select().from(cars).orderBy(desc(cars.year));\n\t *\n\t * // Select cars ordered by year and price\n\t * await db.select().from(cars).orderBy(asc(cars.year), desc(cars.price));\n\t * ```\n\t */\n\torderBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>,\n\t): SQLiteSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(...columns: (SQLiteColumn | SQL)[]): SQLiteSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>]\n\t\t\t| (SQLiteColumn | SQL | SQL.Aliased)[]\n\t): SQLiteSelectWithout<this, TDynamic, 'orderBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst orderBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\n\t\t\tconst orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t} else {\n\t\t\tconst orderByArray = columns as (SQLiteColumn | SQL | SQL.Aliased)[];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `limit` clause to the query.\n\t *\n\t * Calling this method will set the maximum number of rows that will be returned by this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param limit the `limit` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the first 10 people from this query.\n\t * await db.select().from(people).limit(10);\n\t * ```\n\t */\n\tlimit(limit: number | Placeholder): SQLiteSelectWithout<this, TDynamic, 'limit'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.limit = limit;\n\t\t} else {\n\t\t\tthis.config.limit = limit;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `offset` clause to the query.\n\t *\n\t * Calling this method will skip a number of rows when returning results from this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param offset the `offset` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the 10th-20th people from this query.\n\t * await db.select().from(people).offset(10).limit(10);\n\t * ```\n\t */\n\toffset(offset: number | Placeholder): SQLiteSelectWithout<this, TDynamic, 'offset'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.offset = offset;\n\t\t} else {\n\t\t\tthis.config.offset = offset;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildSelectQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\tas<TAlias extends string>(\n\t\talias: TAlias,\n\t): SubqueryWithSelection<this['_']['selectedFields'], TAlias> {\n\t\tconst usedTables: string[] = [];\n\t\tusedTables.push(...extractUsedTable(this.config.table));\n\t\tif (this.config.joins) { for (const it of this.config.joins) usedTables.push(...extractUsedTable(it.table)); }\n\n\t\treturn new Proxy(\n\t\t\tnew Subquery(this.getSQL(), this.config.fields, alias, false, [...new Set(usedTables)]),\n\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as SubqueryWithSelection<this['_']['selectedFields'], TAlias>;\n\t}\n\n\t/** @internal */\n\toverride getSelectedFields(): this['_']['selectedFields'] {\n\t\treturn new Proxy(\n\t\t\tthis.config.fields,\n\t\t\tnew SelectionProxyHandler({ alias: this.tableName, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): SQLiteSelectDynamic<this> {\n\t\treturn this;\n\t}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SQLiteSelectBase<\n\tTTableName extends string | undefined,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode = 'single',\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends\n\tSQLiteSelectQueryBuilderBase<\n\t\tSQLiteSelectHKT,\n\t\tTTableName,\n\t\tTResultType,\n\t\tTRunResult,\n\t\tTSelection,\n\t\tTSelectMode,\n\t\tTNullabilityMap,\n\t\tTDynamic,\n\t\tTExcludedMethods,\n\t\tTResult,\n\t\tTSelectedFields\n\t>,\n\tQueryPromise<TResult>\n{}\n\nexport class SQLiteSelectBase<\n\tTTableName extends string | undefined,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTSelection,\n\tTSelectMode extends SelectMode = 'single',\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends SQLiteSelectQueryBuilderBase<\n\tSQLiteSelectHKT,\n\tTTableName,\n\tTResultType,\n\tTRunResult,\n\tTSelection,\n\tTSelectMode,\n\tTNullabilityMap,\n\tTDynamic,\n\tTExcludedMethods,\n\tTResult,\n\tTSelectedFields\n> implements RunnableQuery<TResult, 'sqlite'>, SQLWrapper {\n\tstatic override readonly [entityKind]: string = 'SQLiteSelect';\n\n\t/** @internal */\n\t_prepare(isOneTimeQuery = true): SQLiteSelectPrepare<this> {\n\t\tif (!this.session) {\n\t\t\tthrow new Error('Cannot execute a query on a query builder. Please use a database instance instead.');\n\t\t}\n\t\tconst fieldsList = orderSelectedFields<SQLiteColumn>(this.config.fields);\n\t\tconst query = this.session[isOneTimeQuery ? 'prepareOneTimeQuery' : 'prepareQuery'](\n\t\t\tthis.dialect.sqlToQuery(this.getSQL()),\n\t\t\tfieldsList,\n\t\t\t'all',\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\ttype: 'select',\n\t\t\t\ttables: [...this.usedTables],\n\t\t\t},\n\t\t\tthis.cacheConfig,\n\t\t);\n\t\tquery.joinsNotNullableMap = this.joinsNotNullableMap;\n\t\treturn query as ReturnType<this['prepare']>;\n\t}\n\n\t$withCache(config?: { config?: CacheConfig; tag?: string; autoInvalidate?: boolean } | false) {\n\t\tthis.cacheConfig = config === undefined\n\t\t\t? { config: {}, enable: true, autoInvalidate: true }\n\t\t\t: config === false\n\t\t\t? { enable: false }\n\t\t\t: { enable: true, autoInvalidate: true, ...config };\n\t\treturn this;\n\t}\n\n\tprepare(): SQLiteSelectPrepare<this> {\n\t\treturn this._prepare(false);\n\t}\n\n\trun: ReturnType<this['prepare']>['run'] = (placeholderValues) => {\n\t\treturn this._prepare().run(placeholderValues);\n\t};\n\n\tall: ReturnType<this['prepare']>['all'] = (placeholderValues) => {\n\t\treturn this._prepare().all(placeholderValues);\n\t};\n\n\tget: ReturnType<this['prepare']>['get'] = (placeholderValues) => {\n\t\treturn this._prepare().get(placeholderValues);\n\t};\n\n\tvalues: ReturnType<this['prepare']>['values'] = (placeholderValues) => {\n\t\treturn this._prepare().values(placeholderValues);\n\t};\n\n\tasync execute(): Promise<SQLiteSelectExecute<this>> {\n\t\treturn this.all() as SQLiteSelectExecute<this>;\n\t}\n}\n\napplyMixins(SQLiteSelectBase, [QueryPromise]);\n\nfunction createSetOperator(type: SetOperator, isAll: boolean): SQLiteCreateSetOperatorFn {\n\treturn (leftSelect, rightSelect, ...restSelects) => {\n\t\tconst setOperators = [rightSelect, ...restSelects].map((select) => ({\n\t\t\ttype,\n\t\t\tisAll,\n\t\t\trightSelect: select as AnySQLiteSelect,\n\t\t}));\n\n\t\tfor (const setOperator of setOperators) {\n\t\t\tif (!haveSameKeys((leftSelect as any).getSelectedFields(), setOperator.rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn (leftSelect as AnySQLiteSelect).addSetOperators(setOperators) as any;\n\t};\n}\n\nconst getSQLiteSetOperators = () => ({\n\tunion,\n\tunionAll,\n\tintersect,\n\texcept,\n});\n\n/**\n * Adds `union` set operator to the query.\n *\n * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n *\n * @example\n *\n * ```ts\n * // Select all unique names from customers and users tables\n * import { union } from 'drizzle-orm/sqlite-core'\n *\n * await union(\n *   db.select({ name: users.name }).from(users),\n *   db.select({ name: customers.name }).from(customers)\n * );\n * // or\n * await db.select({ name: users.name })\n *   .from(users)\n *   .union(\n *     db.select({ name: customers.name }).from(customers)\n *   );\n * ```\n */\nexport const union = createSetOperator('union', false);\n\n/**\n * Adds `union all` set operator to the query.\n *\n * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n *\n * @example\n *\n * ```ts\n * // Select all transaction ids from both online and in-store sales\n * import { unionAll } from 'drizzle-orm/sqlite-core'\n *\n * await unionAll(\n *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n * );\n * // or\n * await db.select({ transaction: onlineSales.transactionId })\n *   .from(onlineSales)\n *   .unionAll(\n *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n *   );\n * ```\n */\nexport const unionAll = createSetOperator('union', true);\n\n/**\n * Adds `intersect` set operator to the query.\n *\n * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n *\n * @example\n *\n * ```ts\n * // Select course names that are offered in both departments A and B\n * import { intersect } from 'drizzle-orm/sqlite-core'\n *\n * await intersect(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .intersect(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const intersect = createSetOperator('intersect', false);\n\n/**\n * Adds `except` set operator to the query.\n *\n * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n *\n * @example\n *\n * ```ts\n * // Select all courses offered in department A but not in department B\n * import { except } from 'drizzle-orm/sqlite-core'\n *\n * await except(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .except(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const except = createSetOperator('except', false);\n", "import { entityKind } from '~/entity.ts';\nimport type { SQL, SQLWrapper } from '~/sql/index.ts';\n\nexport abstract class TypedQueryBuilder<TSelection, TResult = unknown, TConfig = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'TypedQueryBuilder';\n\n\tdeclare _: {\n\t\tselectedFields: TSelection;\n\t\tresult: TResult;\n\t\tconfig?: TConfig;\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): TSelection {\n\t\treturn this._.selectedFields;\n\t}\n\n\tabstract getSQL(): SQL;\n}\n", "import type { GetColumnData } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { JoinType, SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { Placeholder, Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteDialect } from '~/sqlite-core/dialect.ts';\nimport type { SQLitePreparedQuery, SQLiteSession } from '~/sqlite-core/session.ts';\nimport { SQLiteTable } from '~/sqlite-core/table.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport {\n\ttype DrizzleTypeError,\n\tgetTableLikeName,\n\tmapUpdateSet,\n\torderSelectedFields,\n\ttype UpdateSet,\n\ttype ValueOrArray,\n} from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { SQLiteColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport { SQLiteViewBase } from '../view-base.ts';\nimport type { SelectedFields, SelectedFieldsOrdered, SQLiteSelectJoinConfig } from './select.types.ts';\n\nexport interface SQLiteUpdateConfig {\n\twhere?: SQL | undefined;\n\tlimit?: number | Placeholder;\n\torderBy?: (SQLiteColumn | SQL | SQL.Aliased)[];\n\tset: UpdateSet;\n\ttable: SQLiteTable;\n\tfrom?: SQLiteTable | Subquery | SQLiteViewBase | SQL;\n\tjoins: SQLiteSelectJoinConfig[];\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type SQLiteUpdateSetSource<TTable extends SQLiteTable> =\n\t& {\n\t\t[Key in keyof TTable['$inferInsert']]?:\n\t\t\t| GetColumnData<TTable['_']['columns'][Key], 'query'>\n\t\t\t| SQL\n\t\t\t| SQLiteColumn\n\t\t\t| undefined;\n\t}\n\t& {};\n\nexport class SQLiteUpdateBuilder<\n\tTTable extends SQLiteTable,\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n> {\n\tstatic readonly [entityKind]: string = 'SQLiteUpdateBuilder';\n\n\tdeclare readonly _: {\n\t\treadonly table: TTable;\n\t};\n\n\tconstructor(\n\t\tprotected table: TTable,\n\t\tprotected session: SQLiteSession<any, any, any, any>,\n\t\tprotected dialect: SQLiteDialect,\n\t\tprivate withList?: Subquery[],\n\t) {}\n\n\tset(\n\t\tvalues: SQLiteUpdateSetSource<TTable>,\n\t): SQLiteUpdateWithout<\n\t\tSQLiteUpdateBase<TTable, TResultType, TRunResult>,\n\t\tfalse,\n\t\t'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'\n\t> {\n\t\treturn new SQLiteUpdateBase(\n\t\t\tthis.table,\n\t\t\tmapUpdateSet(this.table, values),\n\t\t\tthis.session,\n\t\t\tthis.dialect,\n\t\t\tthis.withList,\n\t\t) as any;\n\t}\n}\n\nexport type SQLiteUpdateWithout<\n\tT extends AnySQLiteUpdate,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T : Omit<\n\tSQLiteUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tT['_']['from'],\n\t\tT['_']['returning'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods'] | K\n\t>,\n\tT['_']['excludedMethods'] | K\n>;\n\nexport type SQLiteUpdateWithJoins<\n\tT extends AnySQLiteUpdate,\n\tTDynamic extends boolean,\n\tTFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL,\n> = TDynamic extends true ? T : Omit<\n\tSQLiteUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tTFrom,\n\t\tT['_']['returning'],\n\t\tTDynamic,\n\t\tExclude<T['_']['excludedMethods'] | 'from', 'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'>\n\t>,\n\tExclude<T['_']['excludedMethods'] | 'from', 'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'>\n>;\n\nexport type SQLiteUpdateReturningAll<T extends AnySQLiteUpdate, TDynamic extends boolean> = SQLiteUpdateWithout<\n\tSQLiteUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tT['_']['from'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteUpdateReturning<\n\tT extends AnySQLiteUpdate,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFields,\n> = SQLiteUpdateWithout<\n\tSQLiteUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['resultType'],\n\t\tT['_']['runResult'],\n\t\tT['_']['from'],\n\t\tSelectResultFields<TSelectedFields>,\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type SQLiteUpdateExecute<T extends AnySQLiteUpdate> = T['_']['returning'] extends undefined ? T['_']['runResult']\n\t: T['_']['returning'][];\n\nexport type SQLiteUpdatePrepare<T extends AnySQLiteUpdate> = SQLitePreparedQuery<\n\t{\n\t\ttype: T['_']['resultType'];\n\t\trun: T['_']['runResult'];\n\t\tall: T['_']['returning'] extends undefined ? DrizzleTypeError<'.all() cannot be used without .returning()'>\n\t\t\t: T['_']['returning'][];\n\t\tget: T['_']['returning'] extends undefined ? DrizzleTypeError<'.get() cannot be used without .returning()'>\n\t\t\t: T['_']['returning'];\n\t\tvalues: T['_']['returning'] extends undefined ? DrizzleTypeError<'.values() cannot be used without .returning()'>\n\t\t\t: any[][];\n\t\texecute: SQLiteUpdateExecute<T>;\n\t}\n>;\n\nexport type SQLiteUpdateJoinFn<\n\tT extends AnySQLiteUpdate,\n> = <\n\tTJoinedTable extends SQLiteTable | Subquery | SQLiteViewBase | SQL,\n>(\n\ttable: TJoinedTable,\n\ton:\n\t\t| (\n\t\t\t(\n\t\t\t\tupdateTable: T['_']['table']['_']['columns'],\n\t\t\t\tfrom: T['_']['from'] extends SQLiteTable ? T['_']['from']['_']['columns']\n\t\t\t\t\t: T['_']['from'] extends Subquery | SQLiteViewBase ? T['_']['from']['_']['selectedFields']\n\t\t\t\t\t: never,\n\t\t\t) => SQL | undefined\n\t\t)\n\t\t| SQL\n\t\t| undefined,\n) => T;\n\nexport type SQLiteUpdateDynamic<T extends AnySQLiteUpdate> = SQLiteUpdate<\n\tT['_']['table'],\n\tT['_']['resultType'],\n\tT['_']['runResult'],\n\tT['_']['returning']\n>;\n\nexport type SQLiteUpdate<\n\tTTable extends SQLiteTable = SQLiteTable,\n\tTResultType extends 'sync' | 'async' = 'sync' | 'async',\n\tTRunResult = any,\n\tTFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = SQLiteUpdateBase<TTable, TResultType, TRunResult, TFrom, TReturning, true, never>;\n\nexport type AnySQLiteUpdate = SQLiteUpdateBase<any, any, any, any, any, any, any>;\n\nexport interface SQLiteUpdateBase<\n\tTTable extends SQLiteTable = SQLiteTable,\n\tTResultType extends 'sync' | 'async' = 'sync' | 'async',\n\tTRunResult = unknown,\n\tTFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL | undefined = undefined,\n\tTReturning = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends SQLWrapper, QueryPromise<TReturning extends undefined ? TRunResult : TReturning[]> {\n\treadonly _: {\n\t\treadonly dialect: 'sqlite';\n\t\treadonly table: TTable;\n\t\treadonly resultType: TResultType;\n\t\treadonly runResult: TRunResult;\n\t\treadonly from: TFrom;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? TRunResult : TReturning[];\n\t};\n}\n\nexport class SQLiteUpdateBase<\n\tTTable extends SQLiteTable = SQLiteTable,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTResultType extends 'sync' | 'async' = 'sync' | 'async',\n\tTRunResult = unknown,\n\tTFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL | undefined = undefined,\n\tTReturning = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? TRunResult : TReturning[]>\n\timplements RunnableQuery<TReturning extends undefined ? TRunResult : TReturning[], 'sqlite'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteUpdate';\n\n\t/** @internal */\n\tconfig: SQLiteUpdateConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tset: UpdateSet,\n\t\tprivate session: SQLiteSession<any, any, any, any>,\n\t\tprivate dialect: SQLiteDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { set, table, withList, joins: [] };\n\t}\n\n\tfrom<TFrom extends SQLiteTable | Subquery | SQLiteViewBase | SQL>(\n\t\tsource: TFrom,\n\t): SQLiteUpdateWithJoins<this, TDynamic, TFrom> {\n\t\tthis.config.from = source;\n\t\treturn this as any;\n\t}\n\n\tprivate createJoin<TJoinType extends JoinType>(\n\t\tjoinType: TJoinType,\n\t): SQLiteUpdateJoinFn<this> {\n\t\treturn ((\n\t\t\ttable: SQLiteTable | Subquery | SQLiteViewBase | SQL,\n\t\t\ton: ((updateTable: TTable, from: TFrom) => SQL | undefined) | SQL | undefined,\n\t\t) => {\n\t\t\tconst tableName = getTableLikeName(table);\n\n\t\t\tif (typeof tableName === 'string' && this.config.joins.some((join) => join.alias === tableName)) {\n\t\t\t\tthrow new Error(`Alias \"${tableName}\" is already used in this query`);\n\t\t\t}\n\n\t\t\tif (typeof on === 'function') {\n\t\t\t\tconst from = this.config.from\n\t\t\t\t\t? is(table, SQLiteTable)\n\t\t\t\t\t\t? table[Table.Symbol.Columns]\n\t\t\t\t\t\t: is(table, Subquery)\n\t\t\t\t\t\t? table._.selectedFields\n\t\t\t\t\t\t: is(table, SQLiteViewBase)\n\t\t\t\t\t\t? table[ViewBaseConfig].selectedFields\n\t\t\t\t\t\t: undefined\n\t\t\t\t\t: undefined;\n\t\t\t\ton = on(\n\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\tthis.config.table[Table.Symbol.Columns],\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as any,\n\t\t\t\t\tfrom && new Proxy(\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as any,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.config.joins.push({ on, table, joinType, alias: tableName });\n\n\t\t\treturn this as any;\n\t\t}) as any;\n\t}\n\n\tleftJoin = this.createJoin('left');\n\n\trightJoin = this.createJoin('right');\n\n\tinnerJoin = this.createJoin('inner');\n\n\tfullJoin = this.createJoin('full');\n\n\t/**\n\t * Adds a 'where' clause to the query.\n\t *\n\t * Calling this method will update only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param where the 'where' clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be updated.\n\t *\n\t * ```ts\n\t * // Update all cars with green color\n\t * db.update(cars).set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'));\n\t * // or\n\t * db.update(cars).set({ color: 'red' })\n\t *   .where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Update all BMW cars with a green color\n\t * db.update(cars).set({ color: 'red' })\n\t *   .where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Update all cars with the green or blue color\n\t * db.update(cars).set({ color: 'red' })\n\t *   .where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): SQLiteUpdateWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\torderBy(\n\t\tbuilder: (updateTable: TTable) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>,\n\t): SQLiteUpdateWithout<this, TDynamic, 'orderBy'>;\n\torderBy(...columns: (SQLiteColumn | SQL | SQL.Aliased)[]): SQLiteUpdateWithout<this, TDynamic, 'orderBy'>;\n\torderBy(\n\t\t...columns:\n\t\t\t| [(updateTable: TTable) => ValueOrArray<SQLiteColumn | SQL | SQL.Aliased>]\n\t\t\t| (SQLiteColumn | SQL | SQL.Aliased)[]\n\t): SQLiteUpdateWithout<this, TDynamic, 'orderBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst orderBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.table[Table.Symbol.Columns],\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as any,\n\t\t\t);\n\n\t\t\tconst orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n\t\t\tthis.config.orderBy = orderByArray;\n\t\t} else {\n\t\t\tconst orderByArray = columns as (SQLiteColumn | SQL | SQL.Aliased)[];\n\t\t\tthis.config.orderBy = orderByArray;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\tlimit(limit: number | Placeholder): SQLiteUpdateWithout<this, TDynamic, 'limit'> {\n\t\tthis.config.limit = limit;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the updated rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update#update-with-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Update all cars with the green color and return all fields\n\t * const updatedCars: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Update all cars with the green color and return only their id and brand fields\n\t * const updatedCarsIdsAndBrands: { id: number, brand: string }[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): SQLiteUpdateReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFields>(\n\t\tfields: TSelectedFields,\n\t): SQLiteUpdateReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFields = this.config.table[SQLiteTable.Symbol.Columns],\n\t): SQLiteUpdateWithout<AnySQLiteUpdate, TDynamic, 'returning'> {\n\t\tthis.config.returning = orderSelectedFields<SQLiteColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildUpdateQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(isOneTimeQuery = true): SQLiteUpdatePrepare<this> {\n\t\treturn this.session[isOneTimeQuery ? 'prepareOneTimeQuery' : 'prepareQuery'](\n\t\t\tthis.dialect.sqlToQuery(this.getSQL()),\n\t\t\tthis.config.returning,\n\t\t\tthis.config.returning ? 'all' : 'run',\n\t\t\ttrue,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\ttables: extractUsedTable(this.config.table),\n\t\t\t},\n\t\t) as SQLiteUpdatePrepare<this>;\n\t}\n\n\tprepare(): SQLiteUpdatePrepare<this> {\n\t\treturn this._prepare(false);\n\t}\n\n\trun: ReturnType<this['prepare']>['run'] = (placeholderValues) => {\n\t\treturn this._prepare().run(placeholderValues);\n\t};\n\n\tall: ReturnType<this['prepare']>['all'] = (placeholderValues) => {\n\t\treturn this._prepare().all(placeholderValues);\n\t};\n\n\tget: ReturnType<this['prepare']>['get'] = (placeholderValues) => {\n\t\treturn this._prepare().get(placeholderValues);\n\t};\n\n\tvalues: ReturnType<this['prepare']>['values'] = (placeholderValues) => {\n\t\treturn this._prepare().values(placeholderValues);\n\t};\n\n\toverride async execute(): Promise<SQLiteUpdateExecute<this>> {\n\t\treturn (this.config.returning ? this.all() : this.run()) as SQLiteUpdateExecute<this>;\n\t}\n\n\t$dynamic(): SQLiteUpdateDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { SQL, sql, type SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteSession } from '../session.ts';\nimport type { SQLiteTable } from '../table.ts';\nimport type { SQLiteView } from '../view.ts';\n\nexport class SQLiteCountBuilder<\n\tTSession extends SQLiteSession<any, any, any, any>,\n> extends SQL<number> implements Promise<number>, SQLWrapper {\n\tprivate sql: SQL<number>;\n\n\tstatic override readonly [entityKind] = 'SQLiteCountBuilderAsync';\n\t[Symbol.toStringTag] = 'SQLiteCountBuilderAsync';\n\n\tprivate session: TSession;\n\n\tprivate static buildEmbeddedCount(\n\t\tsource: SQLiteTable | SQLiteView | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t): SQL<number> {\n\t\treturn sql<number>`(select count(*) from ${source}${sql.raw(' where ').if(filters)}${filters})`;\n\t}\n\n\tprivate static buildCount(\n\t\tsource: SQLiteTable | SQLiteView | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t): SQL<number> {\n\t\treturn sql<number>`select count(*) from ${source}${sql.raw(' where ').if(filters)}${filters}`;\n\t}\n\n\tconstructor(\n\t\treadonly params: {\n\t\t\tsource: SQLiteTable | SQLiteView | SQL | SQLWrapper;\n\t\t\tfilters?: SQL<unknown>;\n\t\t\tsession: TSession;\n\t\t},\n\t) {\n\t\tsuper(SQLiteCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);\n\n\t\tthis.session = params.session;\n\n\t\tthis.sql = SQLiteCountBuilder.buildCount(\n\t\t\tparams.source,\n\t\t\tparams.filters,\n\t\t);\n\t}\n\n\tthen<TResult1 = number, TResult2 = never>(\n\t\tonfulfilled?: ((value: number) => TResult1 | PromiseLike<TResult1>) | null | undefined,\n\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null | undefined,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn Promise.resolve(this.session.count(this.sql)).then(\n\t\t\tonfulfilled,\n\t\t\tonrejected,\n\t\t);\n\t}\n\n\tcatch(\n\t\tonRejected?: ((reason: any) => never | PromiseLike<never>) | null | undefined,\n\t): Promise<number> {\n\t\treturn this.then(undefined, onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | null | undefined): Promise<number> {\n\t\treturn this.then(\n\t\t\t(value) => {\n\t\t\t\tonFinally?.();\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reason) => {\n\t\t\t\tonFinally?.();\n\t\t\t\tthrow reason;\n\t\t\t},\n\t\t);\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport {\n\ttype BuildQueryResult,\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tmapRelationalRow,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, QueryWithTypings, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { KnownKeysOnly } from '~/utils.ts';\nimport type { SQLiteDialect } from '../dialect.ts';\nimport type { PreparedQueryConfig, SQLitePreparedQuery, SQLiteSession } from '../session.ts';\nimport type { SQLiteTable } from '../table.ts';\n\nexport type SQLiteRelationalQueryKind<TMode extends 'sync' | 'async', TResult> = TMode extends 'async'\n\t? SQLiteRelationalQuery<TMode, TResult>\n\t: SQLiteSyncRelationalQuery<TResult>;\n\nexport class RelationalQueryBuilder<\n\tTMode extends 'sync' | 'async',\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n\tTFields extends TableRelationalConfig,\n> {\n\tstatic readonly [entityKind]: string = 'SQLiteAsyncRelationalQueryBuilder';\n\n\tconstructor(\n\t\tprotected mode: TMode,\n\t\tprotected fullSchema: Record<string, unknown>,\n\t\tprotected schema: TSchema,\n\t\tprotected tableNamesMap: Record<string, string>,\n\t\tprotected table: SQLiteTable,\n\t\tprotected tableConfig: TableRelationalConfig,\n\t\tprotected dialect: SQLiteDialect,\n\t\tprotected session: SQLiteSession<'async', unknown, TFullSchema, TSchema>,\n\t) {}\n\n\tfindMany<TConfig extends DBQueryConfig<'many', true, TSchema, TFields>>(\n\t\tconfig?: KnownKeysOnly<TConfig, DBQueryConfig<'many', true, TSchema, TFields>>,\n\t): SQLiteRelationalQueryKind<TMode, BuildQueryResult<TSchema, TFields, TConfig>[]> {\n\t\treturn (this.mode === 'sync'\n\t\t\t? new SQLiteSyncRelationalQuery(\n\t\t\t\tthis.fullSchema,\n\t\t\t\tthis.schema,\n\t\t\t\tthis.tableNamesMap,\n\t\t\t\tthis.table,\n\t\t\t\tthis.tableConfig,\n\t\t\t\tthis.dialect,\n\t\t\t\tthis.session,\n\t\t\t\tconfig ? (config as DBQueryConfig<'many', true>) : {},\n\t\t\t\t'many',\n\t\t\t)\n\t\t\t: new SQLiteRelationalQuery(\n\t\t\t\tthis.fullSchema,\n\t\t\t\tthis.schema,\n\t\t\t\tthis.tableNamesMap,\n\t\t\t\tthis.table,\n\t\t\t\tthis.tableConfig,\n\t\t\t\tthis.dialect,\n\t\t\t\tthis.session,\n\t\t\t\tconfig ? (config as DBQueryConfig<'many', true>) : {},\n\t\t\t\t'many',\n\t\t\t)) as SQLiteRelationalQueryKind<TMode, BuildQueryResult<TSchema, TFields, TConfig>[]>;\n\t}\n\n\tfindFirst<TSelection extends Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>(\n\t\tconfig?: KnownKeysOnly<TSelection, Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>,\n\t): SQLiteRelationalQueryKind<TMode, BuildQueryResult<TSchema, TFields, TSelection> | undefined> {\n\t\treturn (this.mode === 'sync'\n\t\t\t? new SQLiteSyncRelationalQuery(\n\t\t\t\tthis.fullSchema,\n\t\t\t\tthis.schema,\n\t\t\t\tthis.tableNamesMap,\n\t\t\t\tthis.table,\n\t\t\t\tthis.tableConfig,\n\t\t\t\tthis.dialect,\n\t\t\t\tthis.session,\n\t\t\t\tconfig ? { ...(config as DBQueryConfig<'many', true> | undefined), limit: 1 } : { limit: 1 },\n\t\t\t\t'first',\n\t\t\t)\n\t\t\t: new SQLiteRelationalQuery(\n\t\t\t\tthis.fullSchema,\n\t\t\t\tthis.schema,\n\t\t\t\tthis.tableNamesMap,\n\t\t\t\tthis.table,\n\t\t\t\tthis.tableConfig,\n\t\t\t\tthis.dialect,\n\t\t\t\tthis.session,\n\t\t\t\tconfig ? { ...(config as DBQueryConfig<'many', true> | undefined), limit: 1 } : { limit: 1 },\n\t\t\t\t'first',\n\t\t\t)) as SQLiteRelationalQueryKind<TMode, BuildQueryResult<TSchema, TFields, TSelection> | undefined>;\n\t}\n}\n\nexport class SQLiteRelationalQuery<TType extends 'sync' | 'async', TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'sqlite'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteAsyncRelationalQuery';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'sqlite';\n\t\treadonly type: TType;\n\t\treadonly result: TResult;\n\t};\n\n\t/** @internal */\n\tmode: 'many' | 'first';\n\n\tconstructor(\n\t\tprivate fullSchema: Record<string, unknown>,\n\t\tprivate schema: TablesRelationalConfig,\n\t\tprivate tableNamesMap: Record<string, string>,\n\t\t/** @internal */\n\t\tpublic table: SQLiteTable,\n\t\tprivate tableConfig: TableRelationalConfig,\n\t\tprivate dialect: SQLiteDialect,\n\t\tprivate session: SQLiteSession<'sync' | 'async', unknown, Record<string, unknown>, TablesRelationalConfig>,\n\t\tprivate config: DBQueryConfig<'many', true> | true,\n\t\tmode: 'many' | 'first',\n\t) {\n\t\tsuper();\n\t\tthis.mode = mode;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildRelationalQuery({\n\t\t\tfullSchema: this.fullSchema,\n\t\t\tschema: this.schema,\n\t\t\ttableNamesMap: this.tableNamesMap,\n\t\t\ttable: this.table,\n\t\t\ttableConfig: this.tableConfig,\n\t\t\tqueryConfig: this.config,\n\t\t\ttableAlias: this.tableConfig.tsName,\n\t\t}).sql as SQL;\n\t}\n\n\t/** @internal */\n\t_prepare(\n\t\tisOneTimeQuery = false,\n\t): SQLitePreparedQuery<PreparedQueryConfig & { type: TType; all: TResult; get: TResult; execute: TResult }> {\n\t\tconst { query, builtQuery } = this._toSQL();\n\n\t\treturn this.session[isOneTimeQuery ? 'prepareOneTimeQuery' : 'prepareQuery'](\n\t\t\tbuiltQuery,\n\t\t\tundefined,\n\t\t\tthis.mode === 'first' ? 'get' : 'all',\n\t\t\ttrue,\n\t\t\t(rawRows, mapColumnValue) => {\n\t\t\t\tconst rows = rawRows.map((row) =>\n\t\t\t\t\tmapRelationalRow(this.schema, this.tableConfig, row, query.selection, mapColumnValue)\n\t\t\t\t);\n\t\t\t\tif (this.mode === 'first') {\n\t\t\t\t\treturn rows[0] as TResult;\n\t\t\t\t}\n\t\t\t\treturn rows as TResult;\n\t\t\t},\n\t\t) as SQLitePreparedQuery<PreparedQueryConfig & { type: TType; all: TResult; get: TResult; execute: TResult }>;\n\t}\n\n\tprepare(): SQLitePreparedQuery<PreparedQueryConfig & { type: TType; all: TResult; get: TResult; execute: TResult }> {\n\t\treturn this._prepare(false);\n\t}\n\n\tprivate _toSQL(): { query: BuildRelationalQueryResult; builtQuery: QueryWithTypings } {\n\t\tconst query = this.dialect.buildRelationalQuery({\n\t\t\tfullSchema: this.fullSchema,\n\t\t\tschema: this.schema,\n\t\t\ttableNamesMap: this.tableNamesMap,\n\t\t\ttable: this.table,\n\t\t\ttableConfig: this.tableConfig,\n\t\t\tqueryConfig: this.config,\n\t\t\ttableAlias: this.tableConfig.tsName,\n\t\t});\n\n\t\tconst builtQuery = this.dialect.sqlToQuery(query.sql as SQL);\n\n\t\treturn { query, builtQuery };\n\t}\n\n\ttoSQL(): Query {\n\t\treturn this._toSQL().builtQuery;\n\t}\n\n\t/** @internal */\n\texecuteRaw(): TResult {\n\t\tif (this.mode === 'first') {\n\t\t\treturn this._prepare(false).get() as TResult;\n\t\t}\n\t\treturn this._prepare(false).all() as TResult;\n\t}\n\n\toverride async execute(): Promise<TResult> {\n\t\treturn this.executeRaw();\n\t}\n}\n\nexport class SQLiteSyncRelationalQuery<TResult> extends SQLiteRelationalQuery<'sync', TResult> {\n\tstatic override readonly [entityKind]: string = 'SQLiteSyncRelationalQuery';\n\n\tsync(): TResult {\n\t\treturn this.executeRaw();\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport type { SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { SQLiteAsyncDialect } from '../dialect.ts';\n\ntype SQLiteRawAction = 'all' | 'get' | 'values' | 'run';\nexport interface SQLiteRawConfig {\n\taction: SQLiteRawAction;\n}\n\nexport interface SQLiteRaw<TResult> extends QueryPromise<TResult>, RunnableQuery<TResult, 'sqlite'>, SQLWrapper {}\n\nexport class SQLiteRaw<TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'sqlite'>, SQLWrapper, PreparedQuery\n{\n\tstatic override readonly [entityKind]: string = 'SQLiteRaw';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'sqlite';\n\t\treadonly result: TResult;\n\t};\n\n\t/** @internal */\n\tconfig: SQLiteRawConfig;\n\n\tconstructor(\n\t\tpublic execute: () => Promise<TResult>,\n\t\t/** @internal */\n\t\tpublic getSQL: () => SQL,\n\t\taction: SQLiteRawAction,\n\t\tprivate dialect: SQLiteAsyncDialect,\n\t\tprivate mapBatchResult: (result: unknown) => unknown,\n\t) {\n\t\tsuper();\n\t\tthis.config = { action };\n\t}\n\n\tgetQuery() {\n\t\treturn { ...this.dialect.sqlToQuery(this.getSQL()), method: this.config.action };\n\t}\n\n\tmapResult(result: unknown, isFromBatch?: boolean) {\n\t\treturn isFromBatch ? this.mapBatchResult(result) : result;\n\t}\n\n\t_prepare(): PreparedQuery {\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode(): boolean {\n\t\treturn false;\n\t}\n}\n", "import { type Cache, hashQuery, NoopCache } from '~/cache/core/cache.ts';\nimport type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { DrizzleError, DrizzleQueryError, TransactionRollbackError } from '~/errors.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { TablesRelationalConfig } from '~/relations.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport type { Query, SQL } from '~/sql/sql.ts';\nimport type { SQLiteAsyncDialect, SQLiteSyncDialect } from '~/sqlite-core/dialect.ts';\nimport { BaseSQLiteDatabase } from './db.ts';\nimport type { SQLiteRaw } from './query-builders/raw.ts';\nimport type { SelectedFieldsOrdered } from './query-builders/select.types.ts';\n\nexport interface PreparedQueryConfig {\n\ttype: 'sync' | 'async';\n\trun: unknown;\n\tall: unknown;\n\tget: unknown;\n\tvalues: unknown;\n\texecute: unknown;\n}\n\nexport class ExecuteResultSync<T> extends QueryPromise<T> {\n\tstatic override readonly [entityKind]: string = 'ExecuteResultSync';\n\n\tconstructor(private resultCb: () => T) {\n\t\tsuper();\n\t}\n\n\toverride async execute(): Promise<T> {\n\t\treturn this.resultCb();\n\t}\n\n\tsync(): T {\n\t\treturn this.resultCb();\n\t}\n}\n\nexport type ExecuteResult<TType extends 'sync' | 'async', TResult> = TType extends 'async' ? Promise<TResult>\n\t: ExecuteResultSync<TResult>;\n\nexport abstract class SQLitePreparedQuery<T extends PreparedQueryConfig> implements PreparedQuery {\n\tstatic readonly [entityKind]: string = 'PreparedQuery';\n\n\t/** @internal */\n\tjoinsNotNullableMap?: Record<string, boolean>;\n\n\tconstructor(\n\t\tprivate mode: 'sync' | 'async',\n\t\tprivate executeMethod: SQLiteExecuteMethod,\n\t\tprotected query: Query,\n\t\tprivate cache?: Cache,\n\t\t// per query related metadata\n\t\tprivate queryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t} | undefined,\n\t\t// config that was passed through $withCache\n\t\tprivate cacheConfig?: WithCacheConfig,\n\t) {\n\t\t// it means that no $withCache options were passed and it should be just enabled\n\t\tif (cache && cache.strategy() === 'all' && cacheConfig === undefined) {\n\t\t\tthis.cacheConfig = { enable: true, autoInvalidate: true };\n\t\t}\n\t\tif (!this.cacheConfig?.enable) {\n\t\t\tthis.cacheConfig = undefined;\n\t\t}\n\t}\n\n\t/** @internal */\n\tprotected async queryWithCache<T>(\n\t\tqueryString: string,\n\t\tparams: any[],\n\t\tquery: () => Promise<T>,\n\t): Promise<T> {\n\t\tif (this.cache === undefined || is(this.cache, NoopCache) || this.queryMetadata === undefined) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// don't do any mutations, if globally is false\n\t\tif (this.cacheConfig && !this.cacheConfig.enable) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// For mutate queries, we should query the database, wait for a response, and then perform invalidation\n\t\tif (\n\t\t\t(\n\t\t\t\tthis.queryMetadata.type === 'insert' || this.queryMetadata.type === 'update'\n\t\t\t\t|| this.queryMetadata.type === 'delete'\n\t\t\t) && this.queryMetadata.tables.length > 0\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst [res] = await Promise.all([\n\t\t\t\t\tquery(),\n\t\t\t\t\tthis.cache.onMutate({ tables: this.queryMetadata.tables }),\n\t\t\t\t]);\n\t\t\t\treturn res;\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// don't do any reads if globally disabled\n\t\tif (!this.cacheConfig) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\tif (this.queryMetadata.type === 'select') {\n\t\t\tconst fromCache = await this.cache.get(\n\t\t\t\tthis.cacheConfig.tag ?? await hashQuery(queryString, params),\n\t\t\t\tthis.queryMetadata.tables,\n\t\t\t\tthis.cacheConfig.tag !== undefined,\n\t\t\t\tthis.cacheConfig.autoInvalidate,\n\t\t\t);\n\t\t\tif (fromCache === undefined) {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = await query();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t\t}\n\n\t\t\t\t// put actual key\n\t\t\t\tawait this.cache.put(\n\t\t\t\t\tthis.cacheConfig.tag ?? await hashQuery(queryString, params),\n\t\t\t\t\tresult,\n\t\t\t\t\t// make sure we send tables that were used in a query only if user wants to invalidate it on each write\n\t\t\t\t\tthis.cacheConfig.autoInvalidate ? this.queryMetadata.tables : [],\n\t\t\t\t\tthis.cacheConfig.tag !== undefined,\n\t\t\t\t\tthis.cacheConfig.config,\n\t\t\t\t);\n\t\t\t\t// put flag if we should invalidate or not\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn fromCache as unknown as T;\n\t\t}\n\t\ttry {\n\t\t\treturn await query();\n\t\t} catch (e) {\n\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t}\n\t}\n\n\tgetQuery(): Query {\n\t\treturn this.query;\n\t}\n\n\tabstract run(placeholderValues?: Record<string, unknown>): Result<T['type'], T['run']>;\n\n\tmapRunResult(result: unknown, _isFromBatch?: boolean): unknown {\n\t\treturn result;\n\t}\n\n\tabstract all(placeholderValues?: Record<string, unknown>): Result<T['type'], T['all']>;\n\n\tmapAllResult(_result: unknown, _isFromBatch?: boolean): unknown {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tabstract get(placeholderValues?: Record<string, unknown>): Result<T['type'], T['get']>;\n\n\tmapGetResult(_result: unknown, _isFromBatch?: boolean): unknown {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tabstract values(placeholderValues?: Record<string, unknown>): Result<T['type'], T['values']>;\n\n\texecute(placeholderValues?: Record<string, unknown>): ExecuteResult<T['type'], T['execute']> {\n\t\tif (this.mode === 'async') {\n\t\t\treturn this[this.executeMethod](placeholderValues) as ExecuteResult<T['type'], T['execute']>;\n\t\t}\n\t\treturn new ExecuteResultSync(() => this[this.executeMethod](placeholderValues));\n\t}\n\n\tmapResult(response: unknown, isFromBatch?: boolean) {\n\t\tswitch (this.executeMethod) {\n\t\t\tcase 'run': {\n\t\t\t\treturn this.mapRunResult(response, isFromBatch);\n\t\t\t}\n\t\t\tcase 'all': {\n\t\t\t\treturn this.mapAllResult(response, isFromBatch);\n\t\t\t}\n\t\t\tcase 'get': {\n\t\t\t\treturn this.mapGetResult(response, isFromBatch);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @internal */\n\tabstract isResponseInArrayMode(): boolean;\n}\n\nexport interface SQLiteTransactionConfig {\n\tbehavior?: 'deferred' | 'immediate' | 'exclusive';\n}\n\nexport type SQLiteExecuteMethod = 'run' | 'all' | 'get';\n\nexport abstract class SQLiteSession<\n\tTResultKind extends 'sync' | 'async',\n\tTRunResult,\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> {\n\tstatic readonly [entityKind]: string = 'SQLiteSession';\n\n\tconstructor(\n\t\t/** @internal */\n\t\treadonly dialect: { sync: SQLiteSyncDialect; async: SQLiteAsyncDialect }[TResultKind],\n\t) {}\n\n\tabstract prepareQuery(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\texecuteMethod: SQLiteExecuteMethod,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][], mapColumnValue?: (value: unknown) => unknown) => unknown,\n\t\tqueryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t},\n\t\tcacheConfig?: WithCacheConfig,\n\t): SQLitePreparedQuery<PreparedQueryConfig & { type: TResultKind }>;\n\n\tprepareOneTimeQuery(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\texecuteMethod: SQLiteExecuteMethod,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][], mapColumnValue?: (value: unknown) => unknown) => unknown,\n\t\tqueryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t},\n\t\tcacheConfig?: WithCacheConfig,\n\t): SQLitePreparedQuery<PreparedQueryConfig & { type: TResultKind }> {\n\t\treturn this.prepareQuery(\n\t\t\tquery,\n\t\t\tfields,\n\t\t\texecuteMethod,\n\t\t\tisResponseInArrayMode,\n\t\t\tcustomResultMapper,\n\t\t\tqueryMetadata,\n\t\t\tcacheConfig,\n\t\t);\n\t}\n\n\tabstract transaction<T>(\n\t\ttransaction: (tx: SQLiteTransaction<TResultKind, TRunResult, TFullSchema, TSchema>) => Result<TResultKind, T>,\n\t\tconfig?: SQLiteTransactionConfig,\n\t): Result<TResultKind, T>;\n\n\trun(query: SQL): Result<TResultKind, TRunResult> {\n\t\tconst staticQuery = this.dialect.sqlToQuery(query);\n\t\ttry {\n\t\t\treturn this.prepareOneTimeQuery(staticQuery, undefined, 'run', false).run() as Result<TResultKind, TRunResult>;\n\t\t} catch (err) {\n\t\t\tthrow new DrizzleError({ cause: err, message: `Failed to run the query '${staticQuery.sql}'` });\n\t\t}\n\t}\n\n\t/** @internal */\n\textractRawRunValueFromBatchResult(result: unknown) {\n\t\treturn result;\n\t}\n\n\tall<T = unknown>(query: SQL): Result<TResultKind, T[]> {\n\t\treturn this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), undefined, 'run', false).all() as Result<\n\t\t\tTResultKind,\n\t\t\tT[]\n\t\t>;\n\t}\n\n\t/** @internal */\n\textractRawAllValueFromBatchResult(_result: unknown): unknown {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tget<T = unknown>(query: SQL): Result<TResultKind, T> {\n\t\treturn this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), undefined, 'run', false).get() as Result<\n\t\t\tTResultKind,\n\t\t\tT\n\t\t>;\n\t}\n\n\t/** @internal */\n\textractRawGetValueFromBatchResult(_result: unknown): unknown {\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tvalues<T extends any[] = unknown[]>(\n\t\tquery: SQL,\n\t): Result<TResultKind, T[]> {\n\t\treturn this.prepareOneTimeQuery(this.dialect.sqlToQuery(query), undefined, 'run', false).values() as Result<\n\t\t\tTResultKind,\n\t\t\tT[]\n\t\t>;\n\t}\n\n\tasync count(sql: SQL) {\n\t\tconst result = await this.values(sql) as [[number]];\n\n\t\treturn result[0][0];\n\t}\n\n\t/** @internal */\n\textractRawValuesValueFromBatchResult(_result: unknown): unknown {\n\t\tthrow new Error('Not implemented');\n\t}\n}\n\nexport type Result<TKind extends 'sync' | 'async', TResult> = { sync: TResult; async: Promise<TResult> }[TKind];\n\nexport type DBResult<TKind extends 'sync' | 'async', TResult> = { sync: TResult; async: SQLiteRaw<TResult> }[TKind];\n\nexport abstract class SQLiteTransaction<\n\tTResultType extends 'sync' | 'async',\n\tTRunResult,\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends BaseSQLiteDatabase<TResultType, TRunResult, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'SQLiteTransaction';\n\n\tconstructor(\n\t\tresultType: TResultType,\n\t\tdialect: { sync: SQLiteSyncDialect; async: SQLiteAsyncDialect }[TResultType],\n\t\tsession: SQLiteSession<TResultType, TRunResult, TFullSchema, TSchema>,\n\t\tprotected schema: {\n\t\t\tfullSchema: Record<string, unknown>;\n\t\t\tschema: TSchema;\n\t\t\ttableNamesMap: Record<string, string>;\n\t\t} | undefined,\n\t\tprotected readonly nestedIndex = 0,\n\t) {\n\t\tsuper(resultType, dialect, session, schema);\n\t}\n\n\trollback(): never {\n\t\tthrow new TransactionRollbackError();\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { Table } from '~/index.ts';\nimport type { CacheConfig } from './types.ts';\n\nexport abstract class Cache {\n\tstatic readonly [entityKind]: string = 'Cache';\n\n\tabstract strategy(): 'explicit' | 'all';\n\n\t/**\n\t * Invoked if we should check cache for cached response\n\t * @param sql\n\t * @param tables\n\t */\n\tabstract get(\n\t\tkey: string,\n\t\ttables: string[],\n\t\tisTag: boolean,\n\t\tisAutoInvalidate?: boolean,\n\t): Promise<any[] | undefined>;\n\n\t/**\n\t * Invoked if new query should be inserted to cache\n\t * @param sql\n\t * @param tables\n\t */\n\tabstract put(\n\t\thashedQuery: string,\n\t\tresponse: any,\n\t\ttables: string[],\n\t\tisTag: boolean,\n\t\tconfig?: CacheConfig,\n\t): Promise<void>;\n\n\t/**\n\t * Invoked if insert, update, delete was invoked\n\t * @param tables\n\t */\n\tabstract onMutate(\n\t\tparams: MutationOption,\n\t): Promise<void>;\n}\n\nexport class NoopCache extends Cache {\n\toverride strategy() {\n\t\treturn 'all' as const;\n\t}\n\n\tstatic override readonly [entityKind]: string = 'NoopCache';\n\n\toverride async get(_key: string): Promise<any[] | undefined> {\n\t\treturn undefined;\n\t}\n\toverride async put(\n\t\t_hashedQuery: string,\n\t\t_response: any,\n\t\t_tables: string[],\n\t\t_config?: any,\n\t): Promise<void> {\n\t\t// noop\n\t}\n\toverride async onMutate(_params: MutationOption): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport type MutationOption = { tags?: string | string[]; tables?: Table<any> | Table<any>[] | string | string[] };\n\nexport async function hashQuery(sql: string, params?: any[]) {\n\tconst dataToHash = `${sql}-${JSON.stringify(params)}`;\n\tconst encoder = new TextEncoder();\n\tconst data = encoder.encode(dataToHash);\n\tconst hashBuffer = await crypto.subtle.digest('SHA-256', data);\n\tconst hashArray = [...new Uint8Array(hashBuffer)];\n\tconst hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n\n\treturn hashHex;\n}\n", "import { sql } from \"drizzle-orm\";\r\nimport { text } from \"drizzle-orm/sqlite-core\";\r\n\r\nexport const commonFields = {\r\n    id: text().primaryKey(),\r\n} as const;\r\n\r\nexport const omitFields = [\"id\", \"nano\", \"meta\", \"created_at\", \"updated_at\", \"deleted_at\"] as const;\r\n", "import { drizzle } from \"drizzle-orm/libsql/driver\";\r\n\r\nexport const db = drizzle(process.env.DATABASE_URL!);\r\n", "import { type Client, type Config, createClient } from '@libsql/client';\nimport { type DrizzleConfig, isConfig } from '~/utils.ts';\nimport { construct as construct, type LibSQLDatabase } from './driver-core.ts';\n\nexport { LibSQLDatabase } from './driver-core.ts';\n\nexport function drizzle<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n\tTClient extends Client = Client,\n>(\n\t...params: [\n\t\tTClient | string,\n\t] | [\n\t\tTClient | string,\n\t\tDrizzleConfig<TSchema>,\n\t] | [\n\t\t(\n\t\t\t& DrizzleConfig<TSchema>\n\t\t\t& ({\n\t\t\t\tconnection: string | Config;\n\t\t\t} | {\n\t\t\t\tclient: TClient;\n\t\t\t})\n\t\t),\n\t]\n): LibSQLDatabase<TSchema> & {\n\t$client: TClient;\n} {\n\tif (typeof params[0] === 'string') {\n\t\tconst instance = createClient({\n\t\t\turl: params[0],\n\t\t});\n\n\t\treturn construct(instance, params[1]) as any;\n\t}\n\n\tif (isConfig(params[0])) {\n\t\tconst { connection, client, ...drizzleConfig } = params[0] as\n\t\t\t& { connection?: Config; client?: TClient }\n\t\t\t& DrizzleConfig<TSchema>;\n\n\t\tif (client) return construct(client, drizzleConfig) as any;\n\n\t\tconst instance = typeof connection === 'string' ? createClient({ url: connection }) : createClient(connection!);\n\n\t\treturn construct(instance, drizzleConfig) as any;\n\t}\n\n\treturn construct(params[0] as TClient, params[1] as DrizzleConfig<TSchema> | undefined) as any;\n}\n\nexport namespace drizzle {\n\texport function mock<TSchema extends Record<string, unknown> = Record<string, never>>(\n\t\tconfig?: DrizzleConfig<TSchema>,\n\t): LibSQLDatabase<TSchema> & {\n\t\t$client: '$client is not available on drizzle.mock()';\n\t} {\n\t\treturn construct({} as any, config) as any;\n\t}\n}\n", "import { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport { _createClient as _createWsClient } from \"./ws.js\";\nimport { _createClient as _createHttpClient } from \"./http.js\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme === \"ws\" || config.scheme === \"wss\") {\n        return _createWsClient(config);\n    }\n    else if (config.scheme === \"http\" || config.scheme === \"https\") {\n        return _createHttpClient(config);\n    }\n    else {\n        throw new LibsqlError('The client that uses Web standard APIs supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n}\n", "/** Error thrown by the client. */\nexport class LibsqlError extends Error {\n    /** Machine-readable error code. */\n    code;\n    /** Raw numeric error code */\n    rawCode;\n    constructor(message, code, rawCode, cause) {\n        if (code !== undefined) {\n            message = `${code}: ${message}`;\n        }\n        super(message, { cause });\n        this.code = code;\n        this.rawCode = rawCode;\n        this.name = \"LibsqlError\";\n    }\n}\n", "import { LibsqlError } from \"./api.js\";\nimport { parseUri } from \"./uri.js\";\nimport { supportedUrlLink } from \"./util.js\";\nconst inMemoryMode = \":memory:\";\nexport function isInMemoryConfig(config) {\n    return (config.scheme === \"file\" &&\n        (config.path === \":memory:\" || config.path.startsWith(\":memory:?\")));\n}\nexport function expandConfig(config, preferHttp) {\n    if (typeof config !== \"object\") {\n        // produce a reasonable error message in the common case where users type\n        // `createClient(\"libsql://...\")` instead of `createClient({url: \"libsql://...\"})`\n        throw new TypeError(`Expected client configuration as object, got ${typeof config}`);\n    }\n    let { url, authToken, tls, intMode, concurrency } = config;\n    // fill simple defaults right here\n    concurrency = Math.max(0, concurrency || 20);\n    intMode ??= \"number\";\n    let connectionQueryParams = []; // recognized query parameters which we sanitize through white list of valid key-value pairs\n    // convert plain :memory: url to URI format to make logic more uniform\n    if (url === inMemoryMode) {\n        url = \"file::memory:\";\n    }\n    // parse url parameters first and override config with update values\n    const uri = parseUri(url);\n    const originalUriScheme = uri.scheme.toLowerCase();\n    const isInMemoryMode = originalUriScheme === \"file\" &&\n        uri.path === inMemoryMode &&\n        uri.authority === undefined;\n    let queryParamsDef;\n    if (isInMemoryMode) {\n        queryParamsDef = {\n            cache: {\n                values: [\"shared\", \"private\"],\n                update: (key, value) => connectionQueryParams.push(`${key}=${value}`),\n            },\n        };\n    }\n    else {\n        queryParamsDef = {\n            tls: {\n                values: [\"0\", \"1\"],\n                update: (_, value) => (tls = value === \"1\"),\n            },\n            authToken: {\n                update: (_, value) => (authToken = value),\n            },\n        };\n    }\n    for (const { key, value } of uri.query?.pairs ?? []) {\n        if (!Object.hasOwn(queryParamsDef, key)) {\n            throw new LibsqlError(`Unsupported URL query parameter ${JSON.stringify(key)}`, \"URL_PARAM_NOT_SUPPORTED\");\n        }\n        const queryParamDef = queryParamsDef[key];\n        if (queryParamDef.values !== undefined &&\n            !queryParamDef.values.includes(value)) {\n            throw new LibsqlError(`Unknown value for the \"${key}\" query argument: ${JSON.stringify(value)}. Supported values are: [${queryParamDef.values.map((x) => '\"' + x + '\"').join(\", \")}]`, \"URL_INVALID\");\n        }\n        if (queryParamDef.update !== undefined) {\n            queryParamDef?.update(key, value);\n        }\n    }\n    // fill complex defaults & validate config\n    const connectionQueryParamsString = connectionQueryParams.length === 0\n        ? \"\"\n        : `?${connectionQueryParams.join(\"&\")}`;\n    const path = uri.path + connectionQueryParamsString;\n    let scheme;\n    if (originalUriScheme === \"libsql\") {\n        if (tls === false) {\n            if (uri.authority?.port === undefined) {\n                throw new LibsqlError('A \"libsql:\" URL with ?tls=0 must specify an explicit port', \"URL_INVALID\");\n            }\n            scheme = preferHttp ? \"http\" : \"ws\";\n        }\n        else {\n            scheme = preferHttp ? \"https\" : \"wss\";\n        }\n    }\n    else {\n        scheme = originalUriScheme;\n    }\n    if (scheme === \"http\" || scheme === \"ws\") {\n        tls ??= false;\n    }\n    else {\n        tls ??= true;\n    }\n    if (scheme !== \"http\" &&\n        scheme !== \"ws\" &&\n        scheme !== \"https\" &&\n        scheme !== \"wss\" &&\n        scheme !== \"file\") {\n        throw new LibsqlError('The client supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\", \"http:\" and \"file:\" URLs, ' +\n            `got ${JSON.stringify(uri.scheme + \":\")}. ` +\n            `For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (intMode !== \"number\" && intMode !== \"bigint\" && intMode !== \"string\") {\n        throw new TypeError(`Invalid value for intMode, expected \"number\", \"bigint\" or \"string\", got ${JSON.stringify(intMode)}`);\n    }\n    if (uri.fragment !== undefined) {\n        throw new LibsqlError(`URL fragments are not supported: ${JSON.stringify(\"#\" + uri.fragment)}`, \"URL_INVALID\");\n    }\n    if (isInMemoryMode) {\n        return {\n            scheme: \"file\",\n            tls: false,\n            path,\n            intMode,\n            concurrency,\n            syncUrl: config.syncUrl,\n            syncInterval: config.syncInterval,\n            readYourWrites: config.readYourWrites,\n            offline: config.offline,\n            fetch: config.fetch,\n            authToken: undefined,\n            encryptionKey: undefined,\n            authority: undefined,\n        };\n    }\n    return {\n        scheme,\n        tls,\n        authority: uri.authority,\n        path,\n        authToken,\n        intMode,\n        concurrency,\n        encryptionKey: config.encryptionKey,\n        syncUrl: config.syncUrl,\n        syncInterval: config.syncInterval,\n        readYourWrites: config.readYourWrites,\n        offline: config.offline,\n        fetch: config.fetch,\n    };\n}\n", "// URI parser based on RFC 3986\n// We can't use the standard `URL` object, because we want to support relative `file:` URLs like\n// `file:relative/path/database.db`, which are not correct according to RFC 8089, which standardizes the\n// `file` scheme.\nimport { LibsqlError } from \"./api.js\";\nexport function parseUri(text) {\n    const match = URI_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(`The URL '${text}' is not in a valid format`, \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const scheme = groups[\"scheme\"];\n    const authority = groups[\"authority\"] !== undefined\n        ? parseAuthority(groups[\"authority\"])\n        : undefined;\n    const path = percentDecode(groups[\"path\"]);\n    const query = groups[\"query\"] !== undefined ? parseQuery(groups[\"query\"]) : undefined;\n    const fragment = groups[\"fragment\"] !== undefined\n        ? percentDecode(groups[\"fragment\"])\n        : undefined;\n    return { scheme, authority, path, query, fragment };\n}\nconst URI_RE = (() => {\n    const SCHEME = \"(?<scheme>[A-Za-z][A-Za-z.+-]*)\";\n    const AUTHORITY = \"(?<authority>[^/?#]*)\";\n    const PATH = \"(?<path>[^?#]*)\";\n    const QUERY = \"(?<query>[^#]*)\";\n    const FRAGMENT = \"(?<fragment>.*)\";\n    return new RegExp(`^${SCHEME}:(//${AUTHORITY})?${PATH}(\\\\?${QUERY})?(#${FRAGMENT})?$`, \"su\");\n})();\nfunction parseAuthority(text) {\n    const match = AUTHORITY_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(\"The authority part of the URL is not in a valid format\", \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const host = percentDecode(groups[\"host_br\"] ?? groups[\"host\"]);\n    const port = groups[\"port\"] ? parseInt(groups[\"port\"], 10) : undefined;\n    const userinfo = groups[\"username\"] !== undefined\n        ? {\n            username: percentDecode(groups[\"username\"]),\n            password: groups[\"password\"] !== undefined\n                ? percentDecode(groups[\"password\"])\n                : undefined,\n        }\n        : undefined;\n    return { host, port, userinfo };\n}\nconst AUTHORITY_RE = (() => {\n    return new RegExp(`^((?<username>[^:]*)(:(?<password>.*))?@)?((?<host>[^:\\\\[\\\\]]*)|(\\\\[(?<host_br>[^\\\\[\\\\]]*)\\\\]))(:(?<port>[0-9]*))?$`, \"su\");\n})();\n// Query string is parsed as application/x-www-form-urlencoded according to the Web URL standard:\n// https://url.spec.whatwg.org/#urlencoded-parsing\nfunction parseQuery(text) {\n    const sequences = text.split(\"&\");\n    const pairs = [];\n    for (const sequence of sequences) {\n        if (sequence === \"\") {\n            continue;\n        }\n        let key;\n        let value;\n        const splitIdx = sequence.indexOf(\"=\");\n        if (splitIdx < 0) {\n            key = sequence;\n            value = \"\";\n        }\n        else {\n            key = sequence.substring(0, splitIdx);\n            value = sequence.substring(splitIdx + 1);\n        }\n        pairs.push({\n            key: percentDecode(key.replaceAll(\"+\", \" \")),\n            value: percentDecode(value.replaceAll(\"+\", \" \")),\n        });\n    }\n    return { pairs };\n}\nfunction percentDecode(text) {\n    try {\n        return decodeURIComponent(text);\n    }\n    catch (e) {\n        if (e instanceof URIError) {\n            throw new LibsqlError(`URL component has invalid percent encoding: ${e}`, \"URL_INVALID\", undefined, e);\n        }\n        throw e;\n    }\n}\nexport function encodeBaseUrl(scheme, authority, path) {\n    if (authority === undefined) {\n        throw new LibsqlError(`URL with scheme ${JSON.stringify(scheme + \":\")} requires authority (the \"//\" part)`, \"URL_INVALID\");\n    }\n    const schemeText = `${scheme}:`;\n    const hostText = encodeHost(authority.host);\n    const portText = encodePort(authority.port);\n    const userinfoText = encodeUserinfo(authority.userinfo);\n    const authorityText = `//${userinfoText}${hostText}${portText}`;\n    let pathText = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n    if (pathText !== \"\" && !pathText.startsWith(\"/\")) {\n        pathText = \"/\" + pathText;\n    }\n    return new URL(`${schemeText}${authorityText}${pathText}`);\n}\nfunction encodeHost(host) {\n    return host.includes(\":\") ? `[${encodeURI(host)}]` : encodeURI(host);\n}\nfunction encodePort(port) {\n    return port !== undefined ? `:${port}` : \"\";\n}\nfunction encodeUserinfo(userinfo) {\n    if (userinfo === undefined) {\n        return \"\";\n    }\n    const usernameText = encodeURIComponent(userinfo.username);\n    const passwordText = userinfo.password !== undefined\n        ? `:${encodeURIComponent(userinfo.password)}`\n        : \"\";\n    return `${usernameText}${passwordText}@`;\n}\n", "import { Base64 } from \"js-base64\";\nexport const supportedUrlLink = \"https://github.com/libsql/libsql-client-ts#supported-urls\";\nexport function transactionModeToBegin(mode) {\n    if (mode === \"write\") {\n        return \"BEGIN IMMEDIATE\";\n    }\n    else if (mode === \"read\") {\n        return \"BEGIN TRANSACTION READONLY\";\n    }\n    else if (mode === \"deferred\") {\n        return \"BEGIN DEFERRED\";\n    }\n    else {\n        throw RangeError('Unknown transaction mode, supported values are \"write\", \"read\" and \"deferred\"');\n    }\n}\nexport class ResultSetImpl {\n    columns;\n    columnTypes;\n    rows;\n    rowsAffected;\n    lastInsertRowid;\n    constructor(columns, columnTypes, rows, rowsAffected, lastInsertRowid) {\n        this.columns = columns;\n        this.columnTypes = columnTypes;\n        this.rows = rows;\n        this.rowsAffected = rowsAffected;\n        this.lastInsertRowid = lastInsertRowid;\n    }\n    toJSON() {\n        return {\n            columns: this.columns,\n            columnTypes: this.columnTypes,\n            rows: this.rows.map(rowToJson),\n            rowsAffected: this.rowsAffected,\n            lastInsertRowid: this.lastInsertRowid !== undefined\n                ? \"\" + this.lastInsertRowid\n                : null,\n        };\n    }\n}\nfunction rowToJson(row) {\n    return Array.prototype.map.call(row, valueToJson);\n}\nfunction valueToJson(value) {\n    if (typeof value === \"bigint\") {\n        return \"\" + value;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return Base64.fromUint8Array(new Uint8Array(value));\n    }\n    else {\n        return value;\n    }\n}\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.8';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, r1, r2;\n    let binArray = []; // use array to avoid minor gc in loop\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        if (r1 === 64) {\n            binArray.push(_fromCC(u24 >> 16 & 255));\n        }\n        else if (r2 === 64) {\n            binArray.push(_fromCC(u24 >> 16 & 255, u24 >> 8 & 255));\n        }\n        else {\n            binArray.push(_fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255));\n        }\n    }\n    return binArray.join('');\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, false));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"wss\" && config.scheme !== \"ws\") {\n        throw new LibsqlError('The WebSocket client supports only \"libsql:\", \"wss:\" and \"ws:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"ws\" && config.tls) {\n        throw new LibsqlError(`A \"ws:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"wss\" && !config.tls) {\n        throw new LibsqlError(`A \"wss:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    let client;\n    try {\n        client = hrana.openWs(url, config.authToken);\n    }\n    catch (e) {\n        if (e instanceof hrana.WebSocketUnsupportedError) {\n            const suggestedScheme = config.scheme === \"wss\" ? \"https\" : \"http\";\n            const suggestedUrl = encodeBaseUrl(suggestedScheme, config.authority, config.path);\n            throw new LibsqlError(\"This environment does not support WebSockets, please switch to the HTTP client by using \" +\n                `a \"${suggestedScheme}:\" URL (${JSON.stringify(suggestedUrl)}). ` +\n                `For more information, please read ${supportedUrlLink}`, \"WEBSOCKETS_NOT_SUPPORTED\");\n        }\n        throw mapHranaError(e);\n    }\n    return new WsClient(client, url, config.authToken, config.intMode, config.concurrency);\n}\nconst maxConnAgeMillis = 60 * 1000;\nconst sqlCacheCapacity = 100;\nexport class WsClient {\n    #url;\n    #authToken;\n    #intMode;\n    // State of the current connection. The `hrana.WsClient` inside may be closed at any moment due to an\n    // asynchronous error.\n    #connState;\n    // If defined, this is a connection that will be used in the future, once it is ready.\n    #futureConnState;\n    closed;\n    protocol;\n    #isSchemaDatabase;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(client, url, authToken, intMode, concurrency) {\n        this.#url = url;\n        this.#authToken = authToken;\n        this.#intMode = intMode;\n        this.#connState = this.#openConn(client);\n        this.#futureConnState = undefined;\n        this.closed = false;\n        this.protocol = \"ws\";\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply([hranaStmt]);\n                const hranaRowsPromise = streamState.stream.query(hranaStmt);\n                streamState.stream.closeGracefully();\n                const hranaRowsResult = await hranaRowsPromise;\n                return resultSetFromHrana(hranaRowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const normalizedStmts = stmts.map((stmt) => {\n                    if (Array.isArray(stmt)) {\n                        return {\n                            sql: stmt[0],\n                            args: stmt[1] || [],\n                        };\n                    }\n                    return stmt;\n                });\n                const hranaStmts = normalizedStmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply(hranaStmts);\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const version = await streamState.conn.client.getVersion();\n                // the BEGIN statement will be batched with the first statement on the transaction to save a\n                // network roundtrip\n                return new WsTransaction(this, streamState, mode, version);\n            }\n            catch (e) {\n                this._closeStream(streamState);\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const promise = streamState.stream.sequence(sql);\n                streamState.stream.closeGracefully();\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in ws mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    async #openStream() {\n        if (this.closed) {\n            throw new LibsqlError(\"The client is closed\", \"CLIENT_CLOSED\");\n        }\n        const now = new Date();\n        const ageMillis = now.valueOf() - this.#connState.openTime.valueOf();\n        if (ageMillis > maxConnAgeMillis &&\n            this.#futureConnState === undefined) {\n            // The existing connection is too old, let's open a new one.\n            const futureConnState = this.#openConn();\n            this.#futureConnState = futureConnState;\n            // However, if we used `futureConnState` immediately, we would introduce additional latency,\n            // because we would have to wait for the WebSocket handshake to complete, even though we may a\n            // have perfectly good existing connection in `this.#connState`!\n            //\n            // So we wait until the `hrana.Client.getVersion()` operation completes (which happens when the\n            // WebSocket hanshake completes), and only then we replace `this.#connState` with\n            // `futureConnState`, which is stored in `this.#futureConnState` in the meantime.\n            futureConnState.client.getVersion().then((_version) => {\n                if (this.#connState !== futureConnState) {\n                    // We need to close `this.#connState` before we replace it. However, it is possible\n                    // that `this.#connState` has already been replaced: see the code below.\n                    if (this.#connState.streamStates.size === 0) {\n                        this.#connState.client.close();\n                    }\n                    else {\n                        // If there are existing streams on the connection, we must not close it, because\n                        // these streams would be broken. The last stream to be closed will also close the\n                        // connection in `_closeStream()`.\n                    }\n                }\n                this.#connState = futureConnState;\n                this.#futureConnState = undefined;\n            }, (_e) => {\n                // If the new connection could not be established, let's just ignore the error and keep\n                // using the existing connection.\n                this.#futureConnState = undefined;\n            });\n        }\n        if (this.#connState.client.closed) {\n            // An error happened on this connection and it has been closed. Let's try to seamlessly reconnect.\n            try {\n                if (this.#futureConnState !== undefined) {\n                    // We are already in the process of opening a new connection, so let's just use it\n                    // immediately.\n                    this.#connState = this.#futureConnState;\n                }\n                else {\n                    this.#connState = this.#openConn();\n                }\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        }\n        const connState = this.#connState;\n        try {\n            // Now we wait for the WebSocket handshake to complete (if it hasn't completed yet). Note that\n            // this does not increase latency, because any messages that we would send on the WebSocket before\n            // the handshake would be queued until the handshake is completed anyway.\n            if (connState.useSqlCache === undefined) {\n                connState.useSqlCache =\n                    (await connState.client.getVersion()) >= 2;\n                if (connState.useSqlCache) {\n                    connState.sqlCache.capacity = sqlCacheCapacity;\n                }\n            }\n            const stream = connState.client.openStream();\n            stream.intMode = this.#intMode;\n            const streamState = { conn: connState, stream };\n            connState.streamStates.add(streamState);\n            return streamState;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    #openConn(client) {\n        try {\n            client ??= hrana.openWs(this.#url, this.#authToken);\n            return {\n                client,\n                useSqlCache: undefined,\n                sqlCache: new SqlCache(client, 0),\n                openTime: new Date(),\n                streamStates: new Set(),\n            };\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async reconnect() {\n        try {\n            for (const st of Array.from(this.#connState.streamStates)) {\n                try {\n                    st.stream.close();\n                }\n                catch { }\n            }\n            this.#connState.client.close();\n        }\n        catch { }\n        if (this.#futureConnState) {\n            try {\n                this.#futureConnState.client.close();\n            }\n            catch { }\n            this.#futureConnState = undefined;\n        }\n        const next = this.#openConn();\n        const version = await next.client.getVersion();\n        next.useSqlCache = version >= 2;\n        if (next.useSqlCache) {\n            next.sqlCache.capacity = sqlCacheCapacity;\n        }\n        this.#connState = next;\n        this.closed = false;\n    }\n    _closeStream(streamState) {\n        streamState.stream.close();\n        const connState = streamState.conn;\n        connState.streamStates.delete(streamState);\n        if (connState.streamStates.size === 0 &&\n            connState !== this.#connState) {\n            // We are not using this connection anymore and this is the last stream that was using it, so we\n            // must close it now.\n            connState.client.close();\n        }\n    }\n    close() {\n        this.#connState.client.close();\n        this.closed = true;\n        if (this.#futureConnState) {\n            try {\n                this.#futureConnState.client.close();\n            }\n            catch { }\n            this.#futureConnState = undefined;\n        }\n        this.closed = true;\n    }\n}\nexport class WsTransaction extends HranaTransaction {\n    #client;\n    #streamState;\n    /** @private */\n    constructor(client, state, mode, version) {\n        super(mode, version);\n        this.#client = client;\n        this.#streamState = state;\n    }\n    /** @private */\n    _getStream() {\n        return this.#streamState.stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#streamState.conn.sqlCache;\n    }\n    close() {\n        this.#client._closeStream(this.#streamState);\n    }\n    get closed() {\n        return this.#streamState.stream.closed;\n    }\n}\n", "import { WebSocket } from \"@libsql/isomorphic-ws\";\nimport { subprotocolsV2, subprotocolsV3 } from \"./ws/client.js\";\nimport { WebSocketUnsupportedError } from \"./errors.js\";\nimport { HttpClient } from \"./http/client.js\";\nimport { WsClient } from \"./ws/client.js\";\nexport { WebSocket } from \"@libsql/isomorphic-ws\";\nexport { fetch, Request, Headers } from \"@libsql/isomorphic-fetch\";\nexport { Client } from \"./client.js\";\nexport * from \"./errors.js\";\nexport { Batch, BatchStep, BatchCond } from \"./batch.js\";\nexport { parseLibsqlUrl } from \"./libsql_url.js\";\nexport { Sql } from \"./sql.js\";\nexport { Stmt } from \"./stmt.js\";\nexport { Stream } from \"./stream.js\";\nexport { HttpClient } from \"./http/client.js\";\nexport { HttpStream } from \"./http/stream.js\";\nexport { WsClient } from \"./ws/client.js\";\nexport { WsStream } from \"./ws/stream.js\";\n/** Open a Hrana client over WebSocket connected to the given `url`. */\nexport function openWs(url, jwt, protocolVersion = 2) {\n    if (typeof WebSocket === \"undefined\") {\n        throw new WebSocketUnsupportedError(\"WebSockets are not supported in this environment\");\n    }\n    var subprotocols = undefined;\n    if (protocolVersion == 3) {\n        subprotocols = Array.from(subprotocolsV3.keys());\n    }\n    else {\n        subprotocols = Array.from(subprotocolsV2.keys());\n    }\n    const socket = new WebSocket(url, subprotocols);\n    return new WsClient(socket, jwt);\n}\n/** Open a Hrana client over HTTP connected to the given `url`.\n *\n * If the `customFetch` argument is passed and not `undefined`, it is used in place of the `fetch` function\n * from `@libsql/isomorphic-fetch`. This function is always called with a `Request` object from\n * `@libsql/isomorphic-fetch`.\n */\nexport function openHttp(url, jwt, customFetch, protocolVersion = 2) {\n    return new HttpClient(url instanceof URL ? url : new URL(url), jwt, customFetch, protocolVersion);\n}\n", "let _WebSocket;\nif (typeof WebSocket !== \"undefined\") {\n    _WebSocket = WebSocket;\n} else if (typeof global !== \"undefined\") {\n    _WebSocket = global.WebSocket;\n} else if (typeof window !== \"undefined\") {\n    _WebSocket = window.WebSocket;\n} else if (typeof self !== \"undefined\") {\n    _WebSocket = self.WebSocket;\n}\nexport { _WebSocket as WebSocket };\n", "import { Client } from \"../client.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { ClientError, ProtoError, ClosedError, WebSocketError, ProtocolVersionError, InternalError, } from \"../errors.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { impossible } from \"../util.js\";\nimport { WsStream } from \"./stream.js\";\nimport { ClientMsg as json_ClientMsg } from \"./json_encode.js\";\nimport { ClientMsg as protobuf_ClientMsg } from \"./protobuf_encode.js\";\nimport { ServerMsg as json_ServerMsg } from \"./json_decode.js\";\nimport { ServerMsg as protobuf_ServerMsg } from \"./protobuf_decode.js\";\nexport const subprotocolsV2 = new Map([\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\nexport const subprotocolsV3 = new Map([\n    [\"hrana3-protobuf\", { version: 3, encoding: \"protobuf\" }],\n    [\"hrana3\", { version: 3, encoding: \"json\" }],\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\n/** A client for the Hrana protocol over a WebSocket. */\nexport class WsClient extends Client {\n    #socket;\n    // List of callbacks that we queue until the socket transitions from the CONNECTING to the OPEN state.\n    #openCallbacks;\n    // Have we already transitioned from CONNECTING to OPEN and fired the callbacks in #openCallbacks?\n    #opened;\n    // Stores the error that caused us to close the client (and the socket). If we are not closed, this is\n    // `undefined`.\n    #closed;\n    // Have we received a response to our \"hello\" from the server?\n    #recvdHello;\n    // Subprotocol negotiated with the server. It is only available after the socket transitions to the OPEN\n    // state.\n    #subprotocol;\n    // Has the `getVersion()` function been called? This is only used to validate that the API is used\n    // correctly.\n    #getVersionCalled;\n    // A map from request id to the responses that we expect to receive from the server.\n    #responseMap;\n    // An allocator of request ids.\n    #requestIdAlloc;\n    // An allocator of stream ids.\n    /** @private */\n    _streamIdAlloc;\n    // An allocator of cursor ids.\n    /** @private */\n    _cursorIdAlloc;\n    // An allocator of SQL text ids.\n    #sqlIdAlloc;\n    /** @private */\n    constructor(socket, jwt) {\n        super();\n        this.#socket = socket;\n        this.#openCallbacks = [];\n        this.#opened = false;\n        this.#closed = undefined;\n        this.#recvdHello = false;\n        this.#subprotocol = undefined;\n        this.#getVersionCalled = false;\n        this.#responseMap = new Map();\n        this.#requestIdAlloc = new IdAlloc();\n        this._streamIdAlloc = new IdAlloc();\n        this._cursorIdAlloc = new IdAlloc();\n        this.#sqlIdAlloc = new IdAlloc();\n        this.#socket.binaryType = \"arraybuffer\";\n        this.#socket.addEventListener(\"open\", () => this.#onSocketOpen());\n        this.#socket.addEventListener(\"close\", (event) => this.#onSocketClose(event));\n        this.#socket.addEventListener(\"error\", (event) => this.#onSocketError(event));\n        this.#socket.addEventListener(\"message\", (event) => this.#onSocketMessage(event));\n        this.#send({ type: \"hello\", jwt });\n    }\n    // Send (or enqueue to send) a message to the server.\n    #send(msg) {\n        if (this.#closed !== undefined) {\n            throw new InternalError(\"Trying to send a message on a closed client\");\n        }\n        if (this.#opened) {\n            this.#sendToSocket(msg);\n        }\n        else {\n            const openCallback = () => this.#sendToSocket(msg);\n            const errorCallback = () => undefined;\n            this.#openCallbacks.push({ openCallback, errorCallback });\n        }\n    }\n    // The socket transitioned from CONNECTING to OPEN\n    #onSocketOpen() {\n        const protocol = this.#socket.protocol;\n        if (protocol === undefined) {\n            this.#setClosed(new ClientError(\"The `WebSocket.protocol` property is undefined. This most likely means that the WebSocket \" +\n                \"implementation provided by the environment is broken. If you are using Miniflare 2, \" +\n                \"please update to Miniflare 3, which fixes this problem.\"));\n            return;\n        }\n        else if (protocol === \"\") {\n            this.#subprotocol = { version: 1, encoding: \"json\" };\n        }\n        else {\n            this.#subprotocol = subprotocolsV3.get(protocol);\n            if (this.#subprotocol === undefined) {\n                this.#setClosed(new ProtoError(`Unrecognized WebSocket subprotocol: ${JSON.stringify(protocol)}`));\n                return;\n            }\n        }\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.openCallback();\n        }\n        this.#openCallbacks.length = 0;\n        this.#opened = true;\n    }\n    #sendToSocket(msg) {\n        const encoding = this.#subprotocol.encoding;\n        if (encoding === \"json\") {\n            const jsonMsg = writeJsonObject(msg, json_ClientMsg);\n            this.#socket.send(jsonMsg);\n        }\n        else if (encoding === \"protobuf\") {\n            const protobufMsg = writeProtobufMessage(msg, protobuf_ClientMsg);\n            this.#socket.send(protobufMsg);\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n    }\n    /** Get the protocol version negotiated with the server, possibly waiting until the socket is open. */\n    getVersion() {\n        return new Promise((versionCallback, errorCallback) => {\n            this.#getVersionCalled = true;\n            if (this.#closed !== undefined) {\n                errorCallback(this.#closed);\n            }\n            else if (!this.#opened) {\n                const openCallback = () => versionCallback(this.#subprotocol.version);\n                this.#openCallbacks.push({ openCallback, errorCallback });\n            }\n            else {\n                versionCallback(this.#subprotocol.version);\n            }\n        });\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (this.#subprotocol === undefined || !this.#getVersionCalled) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the WebSocket server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this.#subprotocol.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported on protocol version ${minVersion} and higher, ` +\n                `but the WebSocket server only supports version ${this.#subprotocol.version}`);\n        }\n    }\n    // Send a request to the server and invoke a callback when we get the response.\n    /** @private */\n    _sendRequest(request, callbacks) {\n        if (this.#closed !== undefined) {\n            callbacks.errorCallback(new ClosedError(\"Client is closed\", this.#closed));\n            return;\n        }\n        const requestId = this.#requestIdAlloc.alloc();\n        this.#responseMap.set(requestId, { ...callbacks, type: request.type });\n        this.#send({ type: \"request\", requestId, request });\n    }\n    // The socket encountered an error.\n    #onSocketError(event) {\n        const eventMessage = event.message;\n        const message = eventMessage ?? \"WebSocket was closed due to an error\";\n        this.#setClosed(new WebSocketError(message));\n    }\n    // The socket was closed.\n    #onSocketClose(event) {\n        let message = `WebSocket was closed with code ${event.code}`;\n        if (event.reason) {\n            message += `: ${event.reason}`;\n        }\n        this.#setClosed(new WebSocketError(message));\n    }\n    // Close the client with the given error.\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.errorCallback(error);\n        }\n        this.#openCallbacks.length = 0;\n        for (const [requestId, responseState] of this.#responseMap.entries()) {\n            responseState.errorCallback(error);\n            this.#requestIdAlloc.free(requestId);\n        }\n        this.#responseMap.clear();\n        this.#socket.close();\n    }\n    // We received a message from the socket.\n    #onSocketMessage(event) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        try {\n            let msg;\n            const encoding = this.#subprotocol.encoding;\n            if (encoding === \"json\") {\n                if (typeof event.data !== \"string\") {\n                    this.#socket.close(3003, \"Only text messages are accepted with JSON encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-text message from server with JSON encoding\"));\n                    return;\n                }\n                msg = readJsonObject(JSON.parse(event.data), json_ServerMsg);\n            }\n            else if (encoding === \"protobuf\") {\n                if (!(event.data instanceof ArrayBuffer)) {\n                    this.#socket.close(3003, \"Only binary messages are accepted with Protobuf encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-binary message from server with Protobuf encoding\"));\n                    return;\n                }\n                msg = readProtobufMessage(new Uint8Array(event.data), protobuf_ServerMsg);\n            }\n            else {\n                throw impossible(encoding, \"Impossible encoding\");\n            }\n            this.#handleMsg(msg);\n        }\n        catch (e) {\n            this.#socket.close(3007, \"Could not handle message\");\n            this.#setClosed(e);\n        }\n    }\n    // Handle a message from the server.\n    #handleMsg(msg) {\n        if (msg.type === \"none\") {\n            throw new ProtoError(\"Received an unrecognized ServerMsg\");\n        }\n        else if (msg.type === \"hello_ok\" || msg.type === \"hello_error\") {\n            if (this.#recvdHello) {\n                throw new ProtoError(\"Received a duplicated hello response\");\n            }\n            this.#recvdHello = true;\n            if (msg.type === \"hello_error\") {\n                throw errorFromProto(msg.error);\n            }\n            return;\n        }\n        else if (!this.#recvdHello) {\n            throw new ProtoError(\"Received a non-hello message before a hello response\");\n        }\n        if (msg.type === \"response_ok\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected OK response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            try {\n                if (responseState.type !== msg.response.type) {\n                    console.dir({ responseState, msg });\n                    throw new ProtoError(\"Received unexpected type of response\");\n                }\n                responseState.responseCallback(msg.response);\n            }\n            catch (e) {\n                responseState.errorCallback(e);\n                throw e;\n            }\n        }\n        else if (msg.type === \"response_error\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected error response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            responseState.errorCallback(errorFromProto(msg.error));\n        }\n        else {\n            throw impossible(msg, \"Impossible ServerMsg type\");\n        }\n    }\n    /** Open a {@link WsStream}, a stream for executing SQL statements. */\n    openStream() {\n        return WsStream.open(this);\n    }\n    /** Cache a SQL text on the server. This requires protocol version 2 or higher. */\n    storeSql(sql) {\n        this._ensureVersion(2, \"storeSql()\");\n        const sqlId = this.#sqlIdAlloc.alloc();\n        const sqlObj = new Sql(this, sqlId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => sqlObj._setClosed(e);\n        const request = { type: \"store_sql\", sqlId, sql };\n        this._sendRequest(request, { responseCallback, errorCallback });\n        return sqlObj;\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        const responseCallback = () => this.#sqlIdAlloc.free(sqlId);\n        const errorCallback = (e) => this.#setClosed(e);\n        const request = { type: \"close_sql\", sqlId };\n        this._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Close the client and the WebSocket. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "/** A client for the Hrana protocol (a \"database connection pool\"). */\nexport class Client {\n    /** @private */\n    constructor() {\n        this.intMode = \"number\";\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value is inherited by {@link Stream} objects created with {@link openStream}, but you can\n     * override the integer mode for every stream by setting {@link Stream.intMode} on the stream.\n     */\n    intMode;\n}\n", "export { readJsonObject } from \"./json/decode.js\";\nexport { writeJsonObject } from \"./json/encode.js\";\nexport { readProtobufMessage } from \"./protobuf/decode.js\";\nexport { writeProtobufMessage } from \"./protobuf/encode.js\";\n", "import { ProtoError } from \"../../errors.js\";\nexport function string(value) {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string\");\n}\nexport function stringOpt(value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string or null\");\n}\nexport function number(value) {\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw typeError(value, \"number\");\n}\nexport function boolean(value) {\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw typeError(value, \"boolean\");\n}\nexport function array(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"array\");\n}\nexport function object(value) {\n    if (value !== null && typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"object\");\n}\nexport function arrayObjectsMap(value, fun) {\n    return array(value).map((elemValue) => fun(object(elemValue)));\n}\nfunction typeError(value, expected) {\n    if (value === undefined) {\n        return new ProtoError(`Expected ${expected}, but the property was missing`);\n    }\n    let received = typeof value;\n    if (value === null) {\n        received = \"null\";\n    }\n    else if (Array.isArray(value)) {\n        received = \"array\";\n    }\n    return new ProtoError(`Expected ${expected}, received ${received}`);\n}\nexport function readJsonObject(value, fun) {\n    return fun(object(value));\n}\n", "/** Generic error produced by the Hrana client. */\nexport class ClientError extends Error {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ClientError\";\n    }\n}\n/** Error thrown when the server violates the protocol. */\nexport class ProtoError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtoError\";\n    }\n}\n/** Error thrown when the server returns an error response. */\nexport class ResponseError extends ClientError {\n    code;\n    /** @internal */\n    proto;\n    /** @private */\n    constructor(message, protoError) {\n        super(message);\n        this.name = \"ResponseError\";\n        this.code = protoError.code;\n        this.proto = protoError;\n        this.stack = undefined;\n    }\n}\n/** Error thrown when the client or stream is closed. */\nexport class ClosedError extends ClientError {\n    /** @private */\n    constructor(message, cause) {\n        if (cause !== undefined) {\n            super(`${message}: ${cause}`);\n            this.cause = cause;\n        }\n        else {\n            super(message);\n        }\n        this.name = \"ClosedError\";\n    }\n}\n/** Error thrown when the environment does not seem to support WebSockets. */\nexport class WebSocketUnsupportedError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketUnsupportedError\";\n    }\n}\n/** Error thrown when we encounter a WebSocket error. */\nexport class WebSocketError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketError\";\n    }\n}\n/** Error thrown when the HTTP server returns an error response. */\nexport class HttpServerError extends ClientError {\n    status;\n    /** @private */\n    constructor(message, status) {\n        super(message);\n        this.status = status;\n        this.name = \"HttpServerError\";\n    }\n}\n/** Error thrown when a libsql URL is not valid. */\nexport class LibsqlUrlParseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"LibsqlUrlParseError\";\n    }\n}\n/** Error thrown when the protocol version is too low to support a feature. */\nexport class ProtocolVersionError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtocolVersionError\";\n    }\n}\n/** Error thrown when an internal client error happens. */\nexport class InternalError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n    }\n}\n/** Error thrown when the API is misused. */\nexport class MisuseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"MisuseError\";\n    }\n}\n", "export class ObjectWriter {\n    #output;\n    #isFirst;\n    constructor(output) {\n        this.#output = output;\n        this.#isFirst = false;\n    }\n    begin() {\n        this.#output.push('{');\n        this.#isFirst = true;\n    }\n    end() {\n        this.#output.push('}');\n        this.#isFirst = false;\n    }\n    #key(name) {\n        if (this.#isFirst) {\n            this.#output.push('\"');\n            this.#isFirst = false;\n        }\n        else {\n            this.#output.push(',\"');\n        }\n        this.#output.push(name);\n        this.#output.push('\":');\n    }\n    string(name, value) {\n        this.#key(name);\n        this.#output.push(JSON.stringify(value));\n    }\n    stringRaw(name, value) {\n        this.#key(name);\n        this.#output.push('\"');\n        this.#output.push(value);\n        this.#output.push('\"');\n    }\n    number(name, value) {\n        this.#key(name);\n        this.#output.push(\"\" + value);\n    }\n    boolean(name, value) {\n        this.#key(name);\n        this.#output.push(value ? \"true\" : \"false\");\n    }\n    object(name, value, valueFun) {\n        this.#key(name);\n        this.begin();\n        valueFun(this, value);\n        this.end();\n    }\n    arrayObjects(name, values, valueFun) {\n        this.#key(name);\n        this.#output.push('[');\n        for (let i = 0; i < values.length; ++i) {\n            if (i !== 0) {\n                this.#output.push(',');\n            }\n            this.begin();\n            valueFun(this, values[i]);\n            this.end();\n        }\n        this.#output.push(']');\n    }\n}\nexport function writeJsonObject(value, fun) {\n    const output = [];\n    const writer = new ObjectWriter(output);\n    writer.begin();\n    fun(writer, value);\n    writer.end();\n    return output.join(\"\");\n}\n", "import { ProtoError } from \"../../errors.js\";\nimport { VARINT, FIXED_64, LENGTH_DELIMITED, FIXED_32 } from \"./util.js\";\nclass MessageReader {\n    #array;\n    #view;\n    #pos;\n    constructor(array) {\n        this.#array = array;\n        this.#view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n        this.#pos = 0;\n    }\n    varint() {\n        let value = 0;\n        for (let shift = 0;; shift += 7) {\n            const byte = this.#array[this.#pos++];\n            value |= (byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    varintBig() {\n        let value = 0n;\n        for (let shift = 0n;; shift += 7n) {\n            const byte = this.#array[this.#pos++];\n            value |= BigInt(byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    bytes(length) {\n        const array = new Uint8Array(this.#array.buffer, this.#array.byteOffset + this.#pos, length);\n        this.#pos += length;\n        return array;\n    }\n    double() {\n        const value = this.#view.getFloat64(this.#pos, true);\n        this.#pos += 8;\n        return value;\n    }\n    skipVarint() {\n        for (;;) {\n            const byte = this.#array[this.#pos++];\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n    }\n    skip(count) {\n        this.#pos += count;\n    }\n    eof() {\n        return this.#pos >= this.#array.byteLength;\n    }\n}\nexport class FieldReader {\n    #reader;\n    #wireType;\n    constructor(reader) {\n        this.#reader = reader;\n        this.#wireType = -1;\n    }\n    setup(wireType) {\n        this.#wireType = wireType;\n    }\n    #expect(expectedWireType) {\n        if (this.#wireType !== expectedWireType) {\n            throw new ProtoError(`Expected wire type ${expectedWireType}, got ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n    bytes() {\n        this.#expect(LENGTH_DELIMITED);\n        const length = this.#reader.varint();\n        return this.#reader.bytes(length);\n    }\n    string() {\n        return new TextDecoder().decode(this.bytes());\n    }\n    message(def) {\n        return readProtobufMessage(this.bytes(), def);\n    }\n    int32() {\n        this.#expect(VARINT);\n        return this.#reader.varint();\n    }\n    uint32() {\n        return this.int32();\n    }\n    bool() {\n        return this.int32() !== 0;\n    }\n    uint64() {\n        this.#expect(VARINT);\n        return this.#reader.varintBig();\n    }\n    sint64() {\n        const value = this.uint64();\n        return (value >> 1n) ^ (-(value & 1n));\n    }\n    double() {\n        this.#expect(FIXED_64);\n        return this.#reader.double();\n    }\n    maybeSkip() {\n        if (this.#wireType < 0) {\n            return;\n        }\n        else if (this.#wireType === VARINT) {\n            this.#reader.skipVarint();\n        }\n        else if (this.#wireType === FIXED_64) {\n            this.#reader.skip(8);\n        }\n        else if (this.#wireType === LENGTH_DELIMITED) {\n            const length = this.#reader.varint();\n            this.#reader.skip(length);\n        }\n        else if (this.#wireType === FIXED_32) {\n            this.#reader.skip(4);\n        }\n        else {\n            throw new ProtoError(`Unexpected wire type ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n}\nexport function readProtobufMessage(data, def) {\n    const msgReader = new MessageReader(data);\n    const fieldReader = new FieldReader(msgReader);\n    let value = def.default();\n    while (!msgReader.eof()) {\n        const key = msgReader.varint();\n        const tag = key >> 3;\n        const wireType = key & 0x7;\n        fieldReader.setup(wireType);\n        const tagFun = def[tag];\n        if (tagFun !== undefined) {\n            const returnedValue = tagFun(fieldReader, value);\n            if (returnedValue !== undefined) {\n                value = returnedValue;\n            }\n        }\n        fieldReader.maybeSkip();\n    }\n    return value;\n}\n", "export const VARINT = 0;\nexport const FIXED_64 = 1;\nexport const LENGTH_DELIMITED = 2;\nexport const GROUP_START = 3;\nexport const GROUP_END = 4;\nexport const FIXED_32 = 5;\n", "import { VARINT, FIXED_64, LENGTH_DELIMITED } from \"./util.js\";\nexport class MessageWriter {\n    #buf;\n    #array;\n    #view;\n    #pos;\n    constructor() {\n        this.#buf = new ArrayBuffer(256);\n        this.#array = new Uint8Array(this.#buf);\n        this.#view = new DataView(this.#buf);\n        this.#pos = 0;\n    }\n    #ensure(extra) {\n        if (this.#pos + extra <= this.#buf.byteLength) {\n            return;\n        }\n        let newCap = this.#buf.byteLength;\n        while (newCap < this.#pos + extra) {\n            newCap *= 2;\n        }\n        const newBuf = new ArrayBuffer(newCap);\n        const newArray = new Uint8Array(newBuf);\n        const newView = new DataView(newBuf);\n        newArray.set(new Uint8Array(this.#buf, 0, this.#pos));\n        this.#buf = newBuf;\n        this.#array = newArray;\n        this.#view = newView;\n    }\n    #varint(value) {\n        this.#ensure(5);\n        value = 0 | value;\n        do {\n            let byte = value & 0x7f;\n            value >>>= 7;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #varintBig(value) {\n        this.#ensure(10);\n        value = value & 0xffffffffffffffffn;\n        do {\n            let byte = Number(value & 0x7fn);\n            value >>= 7n;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #tag(tag, wireType) {\n        this.#varint((tag << 3) | wireType);\n    }\n    bytes(tag, value) {\n        this.#tag(tag, LENGTH_DELIMITED);\n        this.#varint(value.byteLength);\n        this.#ensure(value.byteLength);\n        this.#array.set(value, this.#pos);\n        this.#pos += value.byteLength;\n    }\n    string(tag, value) {\n        this.bytes(tag, new TextEncoder().encode(value));\n    }\n    message(tag, value, fun) {\n        const writer = new MessageWriter();\n        fun(writer, value);\n        this.bytes(tag, writer.data());\n    }\n    int32(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varint(value);\n    }\n    uint32(tag, value) {\n        this.int32(tag, value);\n    }\n    bool(tag, value) {\n        this.int32(tag, value ? 1 : 0);\n    }\n    sint64(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varintBig((value << 1n) ^ (value >> 63n));\n    }\n    double(tag, value) {\n        this.#tag(tag, FIXED_64);\n        this.#ensure(8);\n        this.#view.setFloat64(this.#pos, value, true);\n        this.#pos += 8;\n    }\n    data() {\n        return new Uint8Array(this.#buf, 0, this.#pos);\n    }\n}\nexport function writeProtobufMessage(value, fun) {\n    const w = new MessageWriter();\n    fun(w, value);\n    return w.data();\n}\n", "import { InternalError } from \"./errors.js\";\n// An allocator of non-negative integer ids.\n//\n// This clever data structure has these \"ideal\" properties:\n// - It consumes memory proportional to the number of used ids (which is optimal).\n// - All operations are O(1) time.\n// - The allocated ids are small (with a slight modification, we could always provide the smallest possible\n// id).\nexport class IdAlloc {\n    // Set of all allocated ids\n    #usedIds;\n    // Set of all free ids lower than `#usedIds.size`\n    #freeIds;\n    constructor() {\n        this.#usedIds = new Set();\n        this.#freeIds = new Set();\n    }\n    // Returns an id that was free, and marks it as used.\n    alloc() {\n        // this \"loop\" is just a way to pick an arbitrary element from the `#freeIds` set\n        for (const freeId of this.#freeIds) {\n            this.#freeIds.delete(freeId);\n            this.#usedIds.add(freeId);\n            // maintain the invariant of `#freeIds`\n            if (!this.#usedIds.has(this.#usedIds.size - 1)) {\n                this.#freeIds.add(this.#usedIds.size - 1);\n            }\n            return freeId;\n        }\n        // the `#freeIds` set is empty, so there are no free ids lower than `#usedIds.size`\n        // this means that `#usedIds` is a set that contains all numbers from 0 to `#usedIds.size - 1`,\n        // so `#usedIds.size` is free\n        const freeId = this.#usedIds.size;\n        this.#usedIds.add(freeId);\n        return freeId;\n    }\n    free(id) {\n        if (!this.#usedIds.delete(id)) {\n            throw new InternalError(\"Freeing an id that is not allocated\");\n        }\n        // maintain the invariant of `#freeIds`\n        this.#freeIds.delete(this.#usedIds.size);\n        if (id < this.#usedIds.size) {\n            this.#freeIds.add(id);\n        }\n    }\n}\n", "import { ResponseError } from \"./errors.js\";\nimport { valueFromProto } from \"./value.js\";\nexport function stmtResultFromProto(result) {\n    return {\n        affectedRowCount: result.affectedRowCount,\n        lastInsertRowid: result.lastInsertRowid,\n        columnNames: result.cols.map(col => col.name),\n        columnDecltypes: result.cols.map(col => col.decltype),\n    };\n}\nexport function rowsResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    const rows = result.rows.map(row => rowFromProto(stmtResult.columnNames, row, intMode));\n    return { ...stmtResult, rows };\n}\nexport function rowResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let row;\n    if (result.rows.length > 0) {\n        row = rowFromProto(stmtResult.columnNames, result.rows[0], intMode);\n    }\n    return { ...stmtResult, row };\n}\nexport function valueResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let value;\n    if (result.rows.length > 0 && stmtResult.columnNames.length > 0) {\n        value = valueFromProto(result.rows[0][0], intMode);\n    }\n    return { ...stmtResult, value };\n}\nfunction rowFromProto(colNames, values, intMode) {\n    const row = {};\n    // make sure that the \"length\" property is not enumerable\n    Object.defineProperty(row, \"length\", { value: values.length });\n    for (let i = 0; i < values.length; ++i) {\n        const value = valueFromProto(values[i], intMode);\n        Object.defineProperty(row, i, { value });\n        const colName = colNames[i];\n        if (colName !== undefined && !Object.hasOwn(row, colName)) {\n            Object.defineProperty(row, colName, { value, enumerable: true, configurable: true, writable: true });\n        }\n    }\n    return row;\n}\nexport function errorFromProto(error) {\n    return new ResponseError(error.message, error);\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { impossible } from \"./util.js\";\nexport function valueToProto(value) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"number\") {\n        if (!Number.isFinite(value)) {\n            throw new RangeError(\"Only finite numbers (not Infinity or NaN) can be passed as arguments\");\n        }\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (value < minInteger || value > maxInteger) {\n            throw new RangeError(\"This bigint value is too large to be represented as a 64-bit integer and passed as argument\");\n        }\n        return value;\n    }\n    else if (typeof value === \"boolean\") {\n        return value ? 1n : 0n;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return new Uint8Array(value);\n    }\n    else if (value instanceof Uint8Array) {\n        return value;\n    }\n    else if (value instanceof Date) {\n        return +value.valueOf();\n    }\n    else if (typeof value === \"object\") {\n        return \"\" + value.toString();\n    }\n    else {\n        throw new TypeError(\"Unsupported type of value\");\n    }\n}\nconst minInteger = -9223372036854775808n;\nconst maxInteger = 9223372036854775807n;\nexport function valueFromProto(value, intMode) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"number\") {\n        return value;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (intMode === \"number\") {\n            const num = Number(value);\n            if (!Number.isSafeInteger(num)) {\n                throw new RangeError(\"Received integer which is too large to be safely represented as a JavaScript number\");\n            }\n            return num;\n        }\n        else if (intMode === \"bigint\") {\n            return value;\n        }\n        else if (intMode === \"string\") {\n            return \"\" + value;\n        }\n        else {\n            throw new MisuseError(\"Invalid value for IntMode\");\n        }\n    }\n    else if (value instanceof Uint8Array) {\n        // TODO: we need to copy data from `Uint8Array` to return an `ArrayBuffer`. Perhaps we should add a\n        // `blobMode` parameter, similar to `intMode`, which would allow the user to choose between receiving\n        // `ArrayBuffer` (default, convenient) and `Uint8Array` (zero copy)?\n        return value.slice().buffer;\n    }\n    else if (value === undefined) {\n        throw new ProtoError(\"Received unrecognized type of Value\");\n    }\n    else {\n        throw impossible(value, \"Impossible type of Value\");\n    }\n}\n", "import { InternalError } from \"./errors.js\";\nexport function impossible(value, message) {\n    throw new InternalError(message);\n}\n", "import { ClientError, ClosedError, MisuseError } from \"./errors.js\";\n/** Text of an SQL statement cached on the server. */\nexport class Sql {\n    #owner;\n    #sqlId;\n    #closed;\n    /** @private */\n    constructor(owner, sqlId) {\n        this.#owner = owner;\n        this.#sqlId = sqlId;\n        this.#closed = undefined;\n    }\n    /** @private */\n    _getSqlId(owner) {\n        if (this.#owner !== owner) {\n            throw new MisuseError(\"Attempted to use SQL text opened with other object\");\n        }\n        else if (this.#closed !== undefined) {\n            throw new ClosedError(\"SQL text is closed\", this.#closed);\n        }\n        return this.#sqlId;\n    }\n    /** Remove the SQL text from the server, releasing resouces. */\n    close() {\n        this._setClosed(new ClientError(\"SQL text was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed === undefined) {\n            this.#closed = error;\n            this.#owner._closeSql(this.#sqlId);\n        }\n    }\n    /** True if the SQL text is closed (removed from the server). */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\nexport function sqlToProto(owner, sql) {\n    if (sql instanceof Sql) {\n        return { sqlId: sql._getSqlId(owner) };\n    }\n    else {\n        return { sql: \"\" + sql };\n    }\n}\n", "import { ClientError, ClosedError, InternalError } from \"../errors.js\";\nimport { Queue } from \"../queue.js\";\nimport { Stream } from \"../stream.js\";\nimport { WsCursor } from \"./cursor.js\";\nexport class WsStream extends Stream {\n    #client;\n    #streamId;\n    #queue;\n    #cursor;\n    #closing;\n    #closed;\n    /** @private */\n    static open(client) {\n        const streamId = client._streamIdAlloc.alloc();\n        const stream = new WsStream(client, streamId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => stream.#setClosed(e);\n        const request = { type: \"open_stream\", streamId };\n        client._sendRequest(request, { responseCallback, errorCallback });\n        return stream;\n    }\n    /** @private */\n    constructor(client, streamId) {\n        super(client.intMode);\n        this.#client = client;\n        this.#streamId = streamId;\n        this.#queue = new Queue();\n        this.#cursor = undefined;\n        this.#closing = false;\n        this.#closed = undefined;\n    }\n    /** Get the {@link WsClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this.#client;\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({\n            type: \"execute\",\n            streamId: this.#streamId,\n            stmt,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({\n            type: \"batch\",\n            streamId: this.#streamId,\n            batch,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        this.#client._ensureVersion(2, \"describe()\");\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        this.#client._ensureVersion(2, \"sequence()\");\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n            streamId: this.#streamId,\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"request\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        this.#client._ensureVersion(3, \"cursor\");\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _sendCursorRequest(cursor, request) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor not associated with the stream attempted to execute a request\");\n        }\n        return new Promise((responseCallback, errorCallback) => {\n            if (this.#closed !== undefined) {\n                errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n            }\n            else {\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        this.#flushQueue();\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            entry.errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n        }\n        else if (this.#closing) {\n            entry.errorCallback(new ClosedError(\"Stream is closing\", undefined));\n        }\n        else {\n            this.#queue.push(entry);\n            this.#flushQueue();\n        }\n    }\n    #flushQueue() {\n        for (;;) {\n            const entry = this.#queue.first();\n            if (entry === undefined && this.#cursor === undefined && this.#closing) {\n                this.#setClosed(new ClientError(\"Stream was gracefully closed\"));\n                break;\n            }\n            else if (entry?.type === \"request\" && this.#cursor === undefined) {\n                const { request, responseCallback, errorCallback } = entry;\n                this.#queue.shift();\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n            else if (entry?.type === \"cursor\" && this.#cursor === undefined) {\n                const { batch, cursorCallback } = entry;\n                this.#queue.shift();\n                const cursorId = this.#client._cursorIdAlloc.alloc();\n                const cursor = new WsCursor(this.#client, this, cursorId);\n                const request = {\n                    type: \"open_cursor\",\n                    streamId: this.#streamId,\n                    cursorId,\n                    batch,\n                };\n                const responseCallback = () => undefined;\n                const errorCallback = (e) => cursor._setClosed(e);\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n                this.#cursor = cursor;\n                cursorCallback(cursor);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        const request = { type: \"close_stream\", streamId: this.#streamId };\n        const responseCallback = () => this.#client._streamIdAlloc.free(this.#streamId);\n        const errorCallback = () => undefined;\n        this.#client._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Immediately close the stream. */\n    close() {\n        this.#setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        this.#flushQueue();\n    }\n    /** True if the stream is closed or closing. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n}\n", "export class Queue {\n    #pushStack;\n    #shiftStack;\n    constructor() {\n        this.#pushStack = [];\n        this.#shiftStack = [];\n    }\n    get length() {\n        return this.#pushStack.length + this.#shiftStack.length;\n    }\n    push(elem) {\n        this.#pushStack.push(elem);\n    }\n    shift() {\n        if (this.#shiftStack.length === 0 && this.#pushStack.length > 0) {\n            this.#shiftStack = this.#pushStack.reverse();\n            this.#pushStack = [];\n        }\n        return this.#shiftStack.pop();\n    }\n    first() {\n        return this.#shiftStack.length !== 0\n            ? this.#shiftStack[this.#shiftStack.length - 1]\n            : this.#pushStack[0];\n    }\n}\n", "import { Batch } from \"./batch.js\";\nimport { describeResultFromProto } from \"./describe.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, } from \"./result.js\";\nimport { sqlToProto } from \"./sql.js\";\nimport { stmtToProto } from \"./stmt.js\";\n/** A stream for executing SQL statements (a \"database connection\"). */\nexport class Stream {\n    /** @private */\n    constructor(intMode) {\n        this.intMode = intMode;\n    }\n    /** Execute a statement and return rows. */\n    query(stmt) {\n        return this.#execute(stmt, true, rowsResultFromProto);\n    }\n    /** Execute a statement and return at most a single row. */\n    queryRow(stmt) {\n        return this.#execute(stmt, true, rowResultFromProto);\n    }\n    /** Execute a statement and return at most a single value. */\n    queryValue(stmt) {\n        return this.#execute(stmt, true, valueResultFromProto);\n    }\n    /** Execute a statement without returning rows. */\n    run(stmt) {\n        return this.#execute(stmt, false, stmtResultFromProto);\n    }\n    #execute(inStmt, wantRows, fromProto) {\n        const stmt = stmtToProto(this._sqlOwner(), inStmt, wantRows);\n        return this._execute(stmt).then((r) => fromProto(r, this.intMode));\n    }\n    /** Return a builder for creating and executing a batch.\n     *\n     * If `useCursor` is true, the batch will be executed using a Hrana cursor, which will stream results from\n     * the server to the client, which consumes less memory on the server. This requires protocol version 3 or\n     * higher.\n     */\n    batch(useCursor = false) {\n        return new Batch(this, useCursor);\n    }\n    /** Parse and analyze a statement. This requires protocol version 2 or higher. */\n    describe(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._describe(protoSql).then(describeResultFromProto);\n    }\n    /** Execute a sequence of statements separated by semicolons. This requires protocol version 2 or higher.\n     * */\n    sequence(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._sequence(protoSql);\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value affects the results of all operations on this stream.\n     */\n    intMode;\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, errorFromProto, } from \"./result.js\";\nimport { stmtToProto } from \"./stmt.js\";\nimport { impossible } from \"./util.js\";\n/** A builder for creating a batch and executing it on the server. */\nexport class Batch {\n    /** @private */\n    _stream;\n    #useCursor;\n    /** @private */\n    _steps;\n    #executed;\n    /** @private */\n    constructor(stream, useCursor) {\n        this._stream = stream;\n        this.#useCursor = useCursor;\n        this._steps = [];\n        this.#executed = false;\n    }\n    /** Return a builder for adding a step to the batch. */\n    step() {\n        return new BatchStep(this);\n    }\n    /** Execute the batch. */\n    execute() {\n        if (this.#executed) {\n            throw new MisuseError(\"This batch has already been executed\");\n        }\n        this.#executed = true;\n        const batch = {\n            steps: this._steps.map((step) => step.proto),\n        };\n        if (this.#useCursor) {\n            return executeCursor(this._stream, this._steps, batch);\n        }\n        else {\n            return executeRegular(this._stream, this._steps, batch);\n        }\n    }\n}\nfunction executeRegular(stream, steps, batch) {\n    return stream._batch(batch).then((result) => {\n        for (let step = 0; step < steps.length; ++step) {\n            const stepResult = result.stepResults.get(step);\n            const stepError = result.stepErrors.get(step);\n            steps[step].callback(stepResult, stepError);\n        }\n    });\n}\nasync function executeCursor(stream, steps, batch) {\n    const cursor = await stream._openCursor(batch);\n    try {\n        let nextStep = 0;\n        let beginEntry = undefined;\n        let rows = [];\n        for (;;) {\n            const entry = await cursor.next();\n            if (entry === undefined) {\n                break;\n            }\n            if (entry.type === \"step_begin\") {\n                if (entry.step < nextStep || entry.step >= steps.length) {\n                    throw new ProtoError(\"Server produced StepBeginEntry for unexpected step\");\n                }\n                else if (beginEntry !== undefined) {\n                    throw new ProtoError(\"Server produced StepBeginEntry before terminating previous step\");\n                }\n                for (let step = nextStep; step < entry.step; ++step) {\n                    steps[step].callback(undefined, undefined);\n                }\n                nextStep = entry.step + 1;\n                beginEntry = entry;\n                rows = [];\n            }\n            else if (entry.type === \"step_end\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced StepEndEntry but no step is active\");\n                }\n                const stmtResult = {\n                    cols: beginEntry.cols,\n                    rows,\n                    affectedRowCount: entry.affectedRowCount,\n                    lastInsertRowid: entry.lastInsertRowid,\n                };\n                steps[beginEntry.step].callback(stmtResult, undefined);\n                beginEntry = undefined;\n                rows = [];\n            }\n            else if (entry.type === \"step_error\") {\n                if (beginEntry === undefined) {\n                    if (entry.step >= steps.length) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    for (let step = nextStep; step < entry.step; ++step) {\n                        steps[step].callback(undefined, undefined);\n                    }\n                }\n                else {\n                    if (entry.step !== beginEntry.step) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    beginEntry = undefined;\n                    rows = [];\n                }\n                steps[entry.step].callback(undefined, entry.error);\n                nextStep = entry.step + 1;\n            }\n            else if (entry.type === \"row\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced RowEntry but no step is active\");\n                }\n                rows.push(entry.row);\n            }\n            else if (entry.type === \"error\") {\n                throw errorFromProto(entry.error);\n            }\n            else if (entry.type === \"none\") {\n                throw new ProtoError(\"Server produced unrecognized CursorEntry\");\n            }\n            else {\n                throw impossible(entry, \"Impossible CursorEntry\");\n            }\n        }\n        if (beginEntry !== undefined) {\n            throw new ProtoError(\"Server closed Cursor before terminating active step\");\n        }\n        for (let step = nextStep; step < steps.length; ++step) {\n            steps[step].callback(undefined, undefined);\n        }\n    }\n    finally {\n        cursor.close();\n    }\n}\n/** A builder for adding a step to the batch. */\nexport class BatchStep {\n    /** @private */\n    _batch;\n    #conds;\n    /** @private */\n    _index;\n    /** @private */\n    constructor(batch) {\n        this._batch = batch;\n        this.#conds = [];\n        this._index = undefined;\n    }\n    /** Add the condition that needs to be satisfied to execute the statement. If you use this method multiple\n     * times, we join the conditions with a logical AND. */\n    condition(cond) {\n        this.#conds.push(cond._proto);\n        return this;\n    }\n    /** Add a statement that returns rows. */\n    query(stmt) {\n        return this.#add(stmt, true, rowsResultFromProto);\n    }\n    /** Add a statement that returns at most a single row. */\n    queryRow(stmt) {\n        return this.#add(stmt, true, rowResultFromProto);\n    }\n    /** Add a statement that returns at most a single value. */\n    queryValue(stmt) {\n        return this.#add(stmt, true, valueResultFromProto);\n    }\n    /** Add a statement without returning rows. */\n    run(stmt) {\n        return this.#add(stmt, false, stmtResultFromProto);\n    }\n    #add(inStmt, wantRows, fromProto) {\n        if (this._index !== undefined) {\n            throw new MisuseError(\"This BatchStep has already been added to the batch\");\n        }\n        const stmt = stmtToProto(this._batch._stream._sqlOwner(), inStmt, wantRows);\n        let condition;\n        if (this.#conds.length === 0) {\n            condition = undefined;\n        }\n        else if (this.#conds.length === 1) {\n            condition = this.#conds[0];\n        }\n        else {\n            condition = { type: \"and\", conds: this.#conds.slice() };\n        }\n        const proto = { stmt, condition };\n        return new Promise((outputCallback, errorCallback) => {\n            const callback = (stepResult, stepError) => {\n                if (stepResult !== undefined && stepError !== undefined) {\n                    errorCallback(new ProtoError(\"Server returned both result and error\"));\n                }\n                else if (stepError !== undefined) {\n                    errorCallback(errorFromProto(stepError));\n                }\n                else if (stepResult !== undefined) {\n                    outputCallback(fromProto(stepResult, this._batch._stream.intMode));\n                }\n                else {\n                    outputCallback(undefined);\n                }\n            };\n            this._index = this._batch._steps.length;\n            this._batch._steps.push({ proto, callback });\n        });\n    }\n}\nexport class BatchCond {\n    /** @private */\n    _batch;\n    /** @private */\n    _proto;\n    /** @private */\n    constructor(batch, proto) {\n        this._batch = batch;\n        this._proto = proto;\n    }\n    /** Create a condition that evaluates to true when the given step executes successfully.\n     *\n     * If the given step fails error or is skipped because its condition evaluated to false, this\n     * condition evaluates to false.\n     */\n    static ok(step) {\n        return new BatchCond(step._batch, { type: \"ok\", step: stepIndex(step) });\n    }\n    /** Create a condition that evaluates to true when the given step fails.\n     *\n     * If the given step succeeds or is skipped because its condition evaluated to false, this condition\n     * evaluates to false.\n     */\n    static error(step) {\n        return new BatchCond(step._batch, { type: \"error\", step: stepIndex(step) });\n    }\n    /** Create a condition that is a logical negation of another condition.\n     */\n    static not(cond) {\n        return new BatchCond(cond._batch, { type: \"not\", cond: cond._proto });\n    }\n    /** Create a condition that is a logical AND of other conditions.\n     */\n    static and(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"and\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that is a logical OR of other conditions.\n     */\n    static or(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"or\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that evaluates to true when the SQL connection is in autocommit mode (not inside an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    static isAutocommit(batch) {\n        batch._stream.client()._ensureVersion(3, \"BatchCond.isAutocommit()\");\n        return new BatchCond(batch, { type: \"is_autocommit\" });\n    }\n}\nfunction stepIndex(step) {\n    if (step._index === undefined) {\n        throw new MisuseError(\"Cannot add a condition referencing a step that has not been added to the batch\");\n    }\n    return step._index;\n}\nfunction checkCondBatch(expectedBatch, cond) {\n    if (cond._batch !== expectedBatch) {\n        throw new MisuseError(\"Cannot mix BatchCond objects for different Batch objects\");\n    }\n}\n", "import { sqlToProto } from \"./sql.js\";\nimport { valueToProto } from \"./value.js\";\n/** A statement that can be evaluated by the database. Besides the SQL text, it also contains the positional\n * and named arguments. */\nexport class Stmt {\n    /** The SQL statement text. */\n    sql;\n    /** @private */\n    _args;\n    /** @private */\n    _namedArgs;\n    /** Initialize the statement with given SQL text. */\n    constructor(sql) {\n        this.sql = sql;\n        this._args = [];\n        this._namedArgs = new Map();\n    }\n    /** Binds positional parameters from the given `values`. All previous positional bindings are cleared. */\n    bindIndexes(values) {\n        this._args.length = 0;\n        for (const value of values) {\n            this._args.push(valueToProto(value));\n        }\n        return this;\n    }\n    /** Binds a parameter by a 1-based index. */\n    bindIndex(index, value) {\n        if (index !== (index | 0) || index <= 0) {\n            throw new RangeError(\"Index of a positional argument must be positive integer\");\n        }\n        while (this._args.length < index) {\n            this._args.push(null);\n        }\n        this._args[index - 1] = valueToProto(value);\n        return this;\n    }\n    /** Binds a parameter by name. */\n    bindName(name, value) {\n        this._namedArgs.set(name, valueToProto(value));\n        return this;\n    }\n    /** Clears all bindings. */\n    unbindAll() {\n        this._args.length = 0;\n        this._namedArgs.clear();\n        return this;\n    }\n}\nexport function stmtToProto(sqlOwner, stmt, wantRows) {\n    let inSql;\n    let args = [];\n    let namedArgs = [];\n    if (stmt instanceof Stmt) {\n        inSql = stmt.sql;\n        args = stmt._args;\n        for (const [name, value] of stmt._namedArgs.entries()) {\n            namedArgs.push({ name, value });\n        }\n    }\n    else if (Array.isArray(stmt)) {\n        inSql = stmt[0];\n        if (Array.isArray(stmt[1])) {\n            args = stmt[1].map((arg) => valueToProto(arg));\n        }\n        else {\n            namedArgs = Object.entries(stmt[1]).map(([name, value]) => {\n                return { name, value: valueToProto(value) };\n            });\n        }\n    }\n    else {\n        inSql = stmt;\n    }\n    const { sql, sqlId } = sqlToProto(sqlOwner, inSql);\n    return { sql, sqlId, args, namedArgs, wantRows };\n}\n", "export function describeResultFromProto(result) {\n    return {\n        paramNames: result.params.map((p) => p.name),\n        columns: result.cols,\n        isExplain: result.isExplain,\n        isReadonly: result.isReadonly,\n    };\n}\n", "import { ClientError, ClosedError } from \"../errors.js\";\nimport { Cursor } from \"../cursor.js\";\nimport { Queue } from \"../queue.js\";\nconst fetchChunkSize = 1000;\nconst fetchQueueSize = 10;\nexport class WsCursor extends Cursor {\n    #client;\n    #stream;\n    #cursorId;\n    #entryQueue;\n    #fetchQueue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(client, stream, cursorId) {\n        super();\n        this.#client = client;\n        this.#stream = stream;\n        this.#cursorId = cursorId;\n        this.#entryQueue = new Queue();\n        this.#fetchQueue = new Queue();\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    /** Fetch the next entry from the cursor. */\n    async next() {\n        for (;;) {\n            if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            while (!this.#done && this.#fetchQueue.length < fetchQueueSize) {\n                this.#fetchQueue.push(this.#fetch());\n            }\n            const entry = this.#entryQueue.shift();\n            if (this.#done || entry !== undefined) {\n                return entry;\n            }\n            // we assume that `Cursor.next()` is never called concurrently\n            await this.#fetchQueue.shift().then((response) => {\n                if (response === undefined) {\n                    return;\n                }\n                for (const entry of response.entries) {\n                    this.#entryQueue.push(entry);\n                }\n                this.#done ||= response.done;\n            });\n        }\n    }\n    #fetch() {\n        return this.#stream._sendCursorRequest(this, {\n            type: \"fetch_cursor\",\n            cursorId: this.#cursorId,\n            maxCount: fetchChunkSize,\n        }).then((resp) => resp, (error) => {\n            this._setClosed(error);\n            return undefined;\n        });\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._sendCursorRequest(this, {\n            type: \"close_cursor\",\n            cursorId: this.#cursorId,\n        }).catch(() => undefined);\n        this.#stream._cursorClosed(this);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "export class Cursor {\n}\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"hello\") {\n        if (msg.jwt !== undefined) {\n            w.string(\"jwt\", msg.jwt);\n        }\n    }\n    else if (msg.type === \"request\") {\n        w.number(\"request_id\", msg.requestId);\n        w.object(\"request\", msg.request, Request);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction Request(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"open_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"close_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"execute\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"open_cursor\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.number(\"cursor_id\", msg.cursorId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"close_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n    }\n    else if (msg.type === \"fetch_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n        w.number(\"max_count\", msg.maxCount);\n    }\n    else if (msg.type === \"sequence\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Request\");\n    }\n}\n", "import { Base64 } from \"js-base64\";\nimport { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(\"sql\", msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    w.arrayObjects(\"args\", msg.args, Value);\n    w.arrayObjects(\"named_args\", msg.namedArgs, NamedArg);\n    w.boolean(\"want_rows\", msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(\"name\", msg.name);\n    w.object(\"value\", msg.value, Value);\n}\nexport function Batch(w, msg) {\n    w.arrayObjects(\"steps\", msg.steps, BatchStep);\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.object(\"condition\", msg.condition, BatchCond);\n    }\n    w.object(\"stmt\", msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"ok\" || msg.type === \"error\") {\n        w.number(\"step\", msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.object(\"cond\", msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\" || msg.type === \"or\") {\n        w.arrayObjects(\"conds\", msg.conds, BatchCond);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.stringRaw(\"type\", \"null\");\n    }\n    else if (typeof msg === \"bigint\") {\n        w.stringRaw(\"type\", \"integer\");\n        w.stringRaw(\"value\", \"\" + msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.stringRaw(\"type\", \"float\");\n        w.number(\"value\", msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.stringRaw(\"type\", \"text\");\n        w.string(\"value\", msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.stringRaw(\"type\", \"blob\");\n        w.stringRaw(\"base64\", Base64.fromUint8Array(msg));\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    if (msg.type === \"hello\") {\n        w.message(1, msg, HelloMsg);\n    }\n    else if (msg.type === \"request\") {\n        w.message(2, msg, RequestMsg);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction HelloMsg(w, msg) {\n    if (msg.jwt !== undefined) {\n        w.string(1, msg.jwt);\n    }\n}\nfunction RequestMsg(w, msg) {\n    w.int32(1, msg.requestId);\n    const request = msg.request;\n    if (request.type === \"open_stream\") {\n        w.message(2, request, OpenStreamReq);\n    }\n    else if (request.type === \"close_stream\") {\n        w.message(3, request, CloseStreamReq);\n    }\n    else if (request.type === \"execute\") {\n        w.message(4, request, ExecuteReq);\n    }\n    else if (request.type === \"batch\") {\n        w.message(5, request, BatchReq);\n    }\n    else if (request.type === \"open_cursor\") {\n        w.message(6, request, OpenCursorReq);\n    }\n    else if (request.type === \"close_cursor\") {\n        w.message(7, request, CloseCursorReq);\n    }\n    else if (request.type === \"fetch_cursor\") {\n        w.message(8, request, FetchCursorReq);\n    }\n    else if (request.type === \"sequence\") {\n        w.message(9, request, SequenceReq);\n    }\n    else if (request.type === \"describe\") {\n        w.message(10, request, DescribeReq);\n    }\n    else if (request.type === \"store_sql\") {\n        w.message(11, request, StoreSqlReq);\n    }\n    else if (request.type === \"close_sql\") {\n        w.message(12, request, CloseSqlReq);\n    }\n    else if (request.type === \"get_autocommit\") {\n        w.message(13, request, GetAutocommitReq);\n    }\n    else {\n        throw impossible(request, \"Impossible type of Request\");\n    }\n}\nfunction OpenStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction CloseStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction ExecuteReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.batch, Batch);\n}\nfunction OpenCursorReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.int32(2, msg.cursorId);\n    w.message(3, msg.batch, Batch);\n}\nfunction CloseCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n}\nfunction FetchCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n    w.uint32(2, msg.maxCount);\n}\nfunction SequenceReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction DescribeReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction StoreSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\n", "import { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n    for (const arg of msg.args) {\n        w.message(3, arg, Value);\n    }\n    for (const arg of msg.namedArgs) {\n        w.message(4, arg, NamedArg);\n    }\n    w.bool(5, msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(1, msg.name);\n    w.message(2, msg.value, Value);\n}\nexport function Batch(w, msg) {\n    for (const step of msg.steps) {\n        w.message(1, step, BatchStep);\n    }\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.message(1, msg.condition, BatchCond);\n    }\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    if (msg.type === \"ok\") {\n        w.uint32(1, msg.step);\n    }\n    else if (msg.type === \"error\") {\n        w.uint32(2, msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.message(3, msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\") {\n        w.message(4, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"or\") {\n        w.message(5, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        w.message(6, undefined, Empty);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction BatchCondList(w, msg) {\n    for (const cond of msg) {\n        w.message(1, cond, BatchCond);\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.message(1, undefined, Empty);\n    }\n    else if (typeof msg === \"bigint\") {\n        w.sint64(2, msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.double(3, msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.string(4, msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.bytes(5, msg);\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\nfunction Empty(_w, _msg) {\n    // do nothing\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/json_decode.js\";\nexport function ServerMsg(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"hello_ok\") {\n        return { type: \"hello_ok\" };\n    }\n    else if (type === \"hello_error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"hello_error\", error };\n    }\n    else if (type === \"response_ok\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const response = Response(d.object(obj[\"response\"]));\n        return { type: \"response_ok\", requestId, response };\n    }\n    else if (type === \"response_error\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"response_error\", requestId, error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of ServerMsg\");\n    }\n}\nfunction Response(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"open_stream\") {\n        return { type: \"open_stream\" };\n    }\n    else if (type === \"close_stream\") {\n        return { type: \"close_stream\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"open_cursor\") {\n        return { type: \"open_cursor\" };\n    }\n    else if (type === \"close_cursor\") {\n        return { type: \"close_cursor\" };\n    }\n    else if (type === \"fetch_cursor\") {\n        const entries = d.arrayObjectsMap(obj[\"entries\"], CursorEntry);\n        const done = d.boolean(obj[\"done\"]);\n        return { type: \"fetch_cursor\", entries, done };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Response\");\n    }\n}\n", "import { Base64 } from \"js-base64\";\nimport { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nexport function Error(obj) {\n    const message = d.string(obj[\"message\"]);\n    const code = d.stringOpt(obj[\"code\"]);\n    return { message, code };\n}\nexport function StmtResult(obj) {\n    const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n    const rows = d.array(obj[\"rows\"]).map((rowObj) => d.arrayObjectsMap(rowObj, Value));\n    const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n    const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n    const lastInsertRowid = lastInsertRowidStr !== undefined\n        ? BigInt(lastInsertRowidStr) : undefined;\n    return { cols, rows, affectedRowCount, lastInsertRowid };\n}\nfunction Col(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function BatchResult(obj) {\n    const stepResults = new Map();\n    d.array(obj[\"step_results\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepResults.set(i, StmtResult(d.object(value)));\n        }\n    });\n    const stepErrors = new Map();\n    d.array(obj[\"step_errors\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepErrors.set(i, Error(d.object(value)));\n        }\n    });\n    return { stepResults, stepErrors };\n}\nexport function CursorEntry(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"step_begin\") {\n        const step = d.number(obj[\"step\"]);\n        const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n        return { type: \"step_begin\", step, cols };\n    }\n    else if (type === \"step_end\") {\n        const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n        const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n        const lastInsertRowid = lastInsertRowidStr !== undefined\n            ? BigInt(lastInsertRowidStr) : undefined;\n        return { type: \"step_end\", affectedRowCount, lastInsertRowid };\n    }\n    else if (type === \"step_error\") {\n        const step = d.number(obj[\"step\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"step_error\", step, error };\n    }\n    else if (type === \"row\") {\n        const row = d.arrayObjectsMap(obj[\"row\"], Value);\n        return { type: \"row\", row };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of CursorEntry\");\n    }\n}\nexport function DescribeResult(obj) {\n    const params = d.arrayObjectsMap(obj[\"params\"], DescribeParam);\n    const cols = d.arrayObjectsMap(obj[\"cols\"], DescribeCol);\n    const isExplain = d.boolean(obj[\"is_explain\"]);\n    const isReadonly = d.boolean(obj[\"is_readonly\"]);\n    return { params, cols, isExplain, isReadonly };\n}\nfunction DescribeParam(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    return { name };\n}\nfunction DescribeCol(obj) {\n    const name = d.string(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function Value(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"null\") {\n        return null;\n    }\n    else if (type === \"integer\") {\n        const value = d.string(obj[\"value\"]);\n        return BigInt(value);\n    }\n    else if (type === \"float\") {\n        return d.number(obj[\"value\"]);\n    }\n    else if (type === \"text\") {\n        return d.string(obj[\"value\"]);\n    }\n    else if (type === \"blob\") {\n        return Base64.toUint8Array(d.string(obj[\"base64\"]));\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Value\");\n    }\n}\n", "import { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const ServerMsg = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"hello_ok\" }; },\n    2(r) { return r.message(HelloErrorMsg); },\n    3(r) { return r.message(ResponseOkMsg); },\n    4(r) { return r.message(ResponseErrorMsg); },\n};\nconst HelloErrorMsg = {\n    default() { return { type: \"hello_error\", error: Error.default() }; },\n    1(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseErrorMsg = {\n    default() { return { type: \"response_error\", requestId: 0, error: Error.default() }; },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseOkMsg = {\n    default() {\n        return {\n            type: \"response_ok\",\n            requestId: 0,\n            response: { type: \"none\" },\n        };\n    },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.response = { type: \"open_stream\" }; },\n    3(r, msg) { msg.response = { type: \"close_stream\" }; },\n    4(r, msg) { msg.response = r.message(ExecuteResp); },\n    5(r, msg) { msg.response = r.message(BatchResp); },\n    6(r, msg) { msg.response = { type: \"open_cursor\" }; },\n    7(r, msg) { msg.response = { type: \"close_cursor\" }; },\n    8(r, msg) { msg.response = r.message(FetchCursorResp); },\n    9(r, msg) { msg.response = { type: \"sequence\" }; },\n    10(r, msg) { msg.response = r.message(DescribeResp); },\n    11(r, msg) { msg.response = { type: \"store_sql\" }; },\n    12(r, msg) { msg.response = { type: \"close_sql\" }; },\n    13(r, msg) { msg.response = r.message(GetAutocommitResp); },\n};\nconst ExecuteResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst FetchCursorResp = {\n    default() { return { type: \"fetch_cursor\", entries: [], done: false }; },\n    1(r, msg) { msg.entries.push(r.message(CursorEntry)); },\n    2(r, msg) { msg.done = r.bool(); },\n};\nconst DescribeResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\n", "export const Error = {\n    default() { return { message: \"\", code: undefined }; },\n    1(r, msg) { msg.message = r.string(); },\n    2(r, msg) { msg.code = r.string(); },\n};\nexport const StmtResult = {\n    default() {\n        return {\n            cols: [],\n            rows: [],\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.cols.push(r.message(Col)); },\n    2(r, msg) { msg.rows.push(r.message(Row)); },\n    3(r, msg) { msg.affectedRowCount = Number(r.uint64()); },\n    4(r, msg) { msg.lastInsertRowid = r.sint64(); },\n};\nconst Col = {\n    default() { return { name: undefined, decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Row = {\n    default() { return []; },\n    1(r, msg) { msg.push(r.message(Value)); },\n};\nexport const BatchResult = {\n    default() { return { stepResults: new Map(), stepErrors: new Map() }; },\n    1(r, msg) {\n        const [key, value] = r.message(BatchResultStepResult);\n        msg.stepResults.set(key, value);\n    },\n    2(r, msg) {\n        const [key, value] = r.message(BatchResultStepError);\n        msg.stepErrors.set(key, value);\n    },\n};\nconst BatchResultStepResult = {\n    default() { return [0, StmtResult.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(StmtResult); },\n};\nconst BatchResultStepError = {\n    default() { return [0, Error.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(Error); },\n};\nexport const CursorEntry = {\n    default() { return { type: \"none\" }; },\n    1(r) { return r.message(StepBeginEntry); },\n    2(r) { return r.message(StepEndEntry); },\n    3(r) { return r.message(StepErrorEntry); },\n    4(r) { return { type: \"row\", row: r.message(Row) }; },\n    5(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StepBeginEntry = {\n    default() { return { type: \"step_begin\", step: 0, cols: [] }; },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.cols.push(r.message(Col)); },\n};\nconst StepEndEntry = {\n    default() {\n        return {\n            type: \"step_end\",\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.affectedRowCount = r.uint32(); },\n    2(r, msg) { msg.lastInsertRowid = r.uint64(); },\n};\nconst StepErrorEntry = {\n    default() {\n        return {\n            type: \"step_error\",\n            step: 0,\n            error: Error.default(),\n        };\n    },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nexport const DescribeResult = {\n    default() {\n        return {\n            params: [],\n            cols: [],\n            isExplain: false,\n            isReadonly: false,\n        };\n    },\n    1(r, msg) { msg.params.push(r.message(DescribeParam)); },\n    2(r, msg) { msg.cols.push(r.message(DescribeCol)); },\n    3(r, msg) { msg.isExplain = r.bool(); },\n    4(r, msg) { msg.isReadonly = r.bool(); },\n};\nconst DescribeParam = {\n    default() { return { name: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n};\nconst DescribeCol = {\n    default() { return { name: \"\", decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Value = {\n    default() { return undefined; },\n    1(r) { return null; },\n    2(r) { return r.sint64(); },\n    3(r) { return r.double(); },\n    4(r) { return r.string(); },\n    5(r) { return r.bytes(); },\n};\n", "import { fetch, Request } from \"@libsql/isomorphic-fetch\";\nimport { Client } from \"../client.js\";\nimport { ClientError, ClosedError, ProtocolVersionError } from \"../errors.js\";\nimport { HttpStream } from \"./stream.js\";\nexport const checkEndpoints = [\n    {\n        versionPath: \"v3-protobuf\",\n        pipelinePath: \"v3-protobuf/pipeline\",\n        cursorPath: \"v3-protobuf/cursor\",\n        version: 3,\n        encoding: \"protobuf\",\n    },\n    /*\n    {\n        versionPath: \"v3\",\n        pipelinePath: \"v3/pipeline\",\n        cursorPath: \"v3/cursor\",\n        version: 3,\n        encoding: \"json\",\n    },\n    */\n];\nconst fallbackEndpoint = {\n    versionPath: \"v2\",\n    pipelinePath: \"v2/pipeline\",\n    cursorPath: undefined,\n    version: 2,\n    encoding: \"json\",\n};\n/** A client for the Hrana protocol over HTTP. */\nexport class HttpClient extends Client {\n    #url;\n    #jwt;\n    #fetch;\n    #closed;\n    #streams;\n    /** @private */\n    _endpointPromise;\n    /** @private */\n    _endpoint;\n    /** @private */\n    constructor(url, jwt, customFetch, protocolVersion = 2) {\n        super();\n        this.#url = url;\n        this.#jwt = jwt;\n        this.#fetch = customFetch ?? fetch;\n        this.#closed = undefined;\n        this.#streams = new Set();\n        if (protocolVersion == 3) {\n            this._endpointPromise = findEndpoint(this.#fetch, this.#url);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n        else {\n            this._endpointPromise = Promise.resolve(fallbackEndpoint);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n    }\n    /** Get the protocol version supported by the server. */\n    async getVersion() {\n        if (this._endpoint !== undefined) {\n            return this._endpoint.version;\n        }\n        return (await this._endpointPromise).version;\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (minVersion <= fallbackEndpoint.version) {\n            return;\n        }\n        else if (this._endpoint === undefined) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the HTTP server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this._endpoint.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                `but the HTTP server only supports version ${this._endpoint.version}.`);\n        }\n    }\n    /** Open a {@link HttpStream}, a stream for executing SQL statements. */\n    openStream() {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Client is closed\", this.#closed);\n        }\n        const stream = new HttpStream(this, this.#url, this.#jwt, this.#fetch);\n        this.#streams.add(stream);\n        return stream;\n    }\n    /** @private */\n    _streamClosed(stream) {\n        this.#streams.delete(stream);\n    }\n    /** Close the client and all its streams. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const stream of Array.from(this.#streams)) {\n            stream._setClosed(new ClosedError(\"Client was closed\", error));\n        }\n    }\n}\nasync function findEndpoint(customFetch, clientUrl) {\n    const fetch = customFetch;\n    for (const endpoint of checkEndpoints) {\n        const url = new URL(endpoint.versionPath, clientUrl);\n        const request = new Request(url.toString(), { method: \"GET\" });\n        const response = await fetch(request);\n        await response.arrayBuffer();\n        if (response.ok) {\n            return endpoint;\n        }\n    }\n    return fallbackEndpoint;\n}\n", "const _fetch = fetch;\nconst _Request = Request;\nconst _Headers = Headers;\nexport {\n    _fetch as fetch,\n    _Request as Request,\n    _Headers as Headers,\n};\n", "import { Request, Headers } from \"@libsql/isomorphic-fetch\";\nimport { ClientError, HttpServerError, ProtocolVersionError, ProtoError, ClosedError, InternalError, } from \"../errors.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { Queue } from \"../queue.js\";\nimport { queueMicrotask } from \"../queue_microtask.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { Stream } from \"../stream.js\";\nimport { impossible } from \"../util.js\";\nimport { HttpCursor } from \"./cursor.js\";\nimport { PipelineReqBody as json_PipelineReqBody } from \"./json_encode.js\";\nimport { PipelineReqBody as protobuf_PipelineReqBody } from \"./protobuf_encode.js\";\nimport { CursorReqBody as json_CursorReqBody } from \"./json_encode.js\";\nimport { CursorReqBody as protobuf_CursorReqBody } from \"./protobuf_encode.js\";\nimport { PipelineRespBody as json_PipelineRespBody } from \"./json_decode.js\";\nimport { PipelineRespBody as protobuf_PipelineRespBody } from \"./protobuf_decode.js\";\nexport class HttpStream extends Stream {\n    #client;\n    #baseUrl;\n    #jwt;\n    #fetch;\n    #baton;\n    #queue;\n    #flushing;\n    #cursor;\n    #closing;\n    #closeQueued;\n    #closed;\n    #sqlIdAlloc;\n    /** @private */\n    constructor(client, baseUrl, jwt, customFetch) {\n        super(client.intMode);\n        this.#client = client;\n        this.#baseUrl = baseUrl.toString();\n        this.#jwt = jwt;\n        this.#fetch = customFetch;\n        this.#baton = undefined;\n        this.#queue = new Queue();\n        this.#flushing = false;\n        this.#closing = false;\n        this.#closeQueued = false;\n        this.#closed = undefined;\n        this.#sqlIdAlloc = new IdAlloc();\n    }\n    /** Get the {@link HttpClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this;\n    }\n    /** Cache a SQL text on the server. */\n    storeSql(sql) {\n        const sqlId = this.#sqlIdAlloc.alloc();\n        this.#sendStreamRequest({ type: \"store_sql\", sqlId, sql }).then(() => undefined, (error) => this._setClosed(error));\n        return new Sql(this, sqlId);\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#sendStreamRequest({ type: \"close_sql\", sqlId }).then(() => this.#sqlIdAlloc.free(sqlId), (error) => this._setClosed(error));\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({ type: \"execute\", stmt }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({ type: \"batch\", batch }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"pipeline\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** Immediately close the stream. */\n    close() {\n        this._setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** True if the stream is closed. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        this.#client._streamClosed(this);\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        if ((this.#baton !== undefined || this.#flushing) && !this.#closeQueued) {\n            this.#queue.push({\n                type: \"pipeline\",\n                request: { type: \"close\" },\n                responseCallback: () => undefined,\n                errorCallback: () => undefined,\n            });\n            this.#closeQueued = true;\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Stream is closed\", this.#closed);\n        }\n        else if (this.#closing) {\n            throw new ClosedError(\"Stream is closing\", undefined);\n        }\n        else {\n            this.#queue.push(entry);\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #flushQueue() {\n        if (this.#flushing || this.#cursor !== undefined) {\n            return;\n        }\n        if (this.#closing && this.#queue.length === 0) {\n            this._setClosed(new ClientError(\"Stream was gracefully closed\"));\n            return;\n        }\n        const endpoint = this.#client._endpoint;\n        if (endpoint === undefined) {\n            this.#client._endpointPromise.then(() => this.#flushQueue(), (error) => this._setClosed(error));\n            return;\n        }\n        const firstEntry = this.#queue.shift();\n        if (firstEntry === undefined) {\n            return;\n        }\n        else if (firstEntry.type === \"pipeline\") {\n            const pipeline = [firstEntry];\n            for (;;) {\n                const entry = this.#queue.first();\n                if (entry !== undefined && entry.type === \"pipeline\") {\n                    pipeline.push(entry);\n                    this.#queue.shift();\n                }\n                else if (entry === undefined && this.#closing && !this.#closeQueued) {\n                    pipeline.push({\n                        type: \"pipeline\",\n                        request: { type: \"close\" },\n                        responseCallback: () => undefined,\n                        errorCallback: () => undefined,\n                    });\n                    this.#closeQueued = true;\n                    break;\n                }\n                else {\n                    break;\n                }\n            }\n            this.#flushPipeline(endpoint, pipeline);\n        }\n        else if (firstEntry.type === \"cursor\") {\n            this.#flushCursor(endpoint, firstEntry);\n        }\n        else {\n            throw impossible(firstEntry, \"Impossible type of QueueEntry\");\n        }\n    }\n    #flushPipeline(endpoint, pipeline) {\n        this.#flush(() => this.#createPipelineRequest(pipeline, endpoint), (resp) => decodePipelineResponse(resp, endpoint.encoding), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (respBody) => handlePipelineResponse(pipeline, respBody), (error) => pipeline.forEach((entry) => entry.errorCallback(error)));\n    }\n    #flushCursor(endpoint, entry) {\n        const cursor = new HttpCursor(this, endpoint.encoding);\n        this.#cursor = cursor;\n        this.#flush(() => this.#createCursorRequest(entry, endpoint), (resp) => cursor.open(resp), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (_respBody) => entry.cursorCallback(cursor), (error) => entry.errorCallback(error));\n    }\n    #flush(createRequest, decodeResponse, getBaton, getBaseUrl, handleResponse, handleError) {\n        let promise;\n        try {\n            const request = createRequest();\n            const fetch = this.#fetch;\n            promise = fetch(request);\n        }\n        catch (error) {\n            promise = Promise.reject(error);\n        }\n        this.#flushing = true;\n        promise.then((resp) => {\n            if (!resp.ok) {\n                return errorFromResponse(resp).then((error) => {\n                    throw error;\n                });\n            }\n            return decodeResponse(resp);\n        }).then((r) => {\n            this.#baton = getBaton(r);\n            this.#baseUrl = getBaseUrl(r) ?? this.#baseUrl;\n            handleResponse(r);\n        }).catch((error) => {\n            this._setClosed(error);\n            handleError(error);\n        }).finally(() => {\n            this.#flushing = false;\n            this.#flushQueue();\n        });\n    }\n    #createPipelineRequest(pipeline, endpoint) {\n        return this.#createRequest(new URL(endpoint.pipelinePath, this.#baseUrl), {\n            baton: this.#baton,\n            requests: pipeline.map((entry) => entry.request),\n        }, endpoint.encoding, json_PipelineReqBody, protobuf_PipelineReqBody);\n    }\n    #createCursorRequest(entry, endpoint) {\n        if (endpoint.cursorPath === undefined) {\n            throw new ProtocolVersionError(\"Cursors are supported only on protocol version 3 and higher, \" +\n                `but the HTTP server only supports version ${endpoint.version}.`);\n        }\n        return this.#createRequest(new URL(endpoint.cursorPath, this.#baseUrl), {\n            baton: this.#baton,\n            batch: entry.batch,\n        }, endpoint.encoding, json_CursorReqBody, protobuf_CursorReqBody);\n    }\n    #createRequest(url, reqBody, encoding, jsonFun, protobufFun) {\n        let bodyData;\n        let contentType;\n        if (encoding === \"json\") {\n            bodyData = writeJsonObject(reqBody, jsonFun);\n            contentType = \"application/json\";\n        }\n        else if (encoding === \"protobuf\") {\n            bodyData = writeProtobufMessage(reqBody, protobufFun);\n            contentType = \"application/x-protobuf\";\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n        const headers = new Headers();\n        headers.set(\"content-type\", contentType);\n        if (this.#jwt !== undefined) {\n            headers.set(\"authorization\", `Bearer ${this.#jwt}`);\n        }\n        return new Request(url.toString(), { method: \"POST\", headers, body: bodyData });\n    }\n}\nfunction handlePipelineResponse(pipeline, respBody) {\n    if (respBody.results.length !== pipeline.length) {\n        throw new ProtoError(\"Server returned unexpected number of pipeline results\");\n    }\n    for (let i = 0; i < pipeline.length; ++i) {\n        const result = respBody.results[i];\n        const entry = pipeline[i];\n        if (result.type === \"ok\") {\n            if (result.response.type !== entry.request.type) {\n                throw new ProtoError(\"Received unexpected type of response\");\n            }\n            entry.responseCallback(result.response);\n        }\n        else if (result.type === \"error\") {\n            entry.errorCallback(errorFromProto(result.error));\n        }\n        else if (result.type === \"none\") {\n            throw new ProtoError(\"Received unrecognized type of StreamResult\");\n        }\n        else {\n            throw impossible(result, \"Received impossible type of StreamResult\");\n        }\n    }\n}\nasync function decodePipelineResponse(resp, encoding) {\n    if (encoding === \"json\") {\n        const respJson = await resp.json();\n        return readJsonObject(respJson, json_PipelineRespBody);\n    }\n    if (encoding === \"protobuf\") {\n        const respData = await resp.arrayBuffer();\n        return readProtobufMessage(new Uint8Array(respData), protobuf_PipelineRespBody);\n    }\n    await resp.body?.cancel();\n    throw impossible(encoding, \"Impossible encoding\");\n}\nasync function errorFromResponse(resp) {\n    const respType = resp.headers.get(\"content-type\") ?? \"text/plain\";\n    let message = `Server returned HTTP status ${resp.status}`;\n    if (respType === \"application/json\") {\n        const respBody = await resp.json();\n        if (\"message\" in respBody) {\n            return errorFromProto(respBody);\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    if (respType === \"text/plain\") {\n        const respBody = (await resp.text()).trim();\n        if (respBody !== \"\") {\n            message += `: ${respBody}`;\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    await resp.body?.cancel();\n    return new HttpServerError(message, resp.status);\n}\n", "// queueMicrotask() ponyfill\n// https://github.com/libsql/libsql-client-ts/issues/47\nlet _queueMicrotask;\nif (typeof queueMicrotask !== \"undefined\") {\n    _queueMicrotask = queueMicrotask;\n}\nelse {\n    const resolved = Promise.resolve();\n    _queueMicrotask = (callback) => {\n        resolved.then(callback);\n    };\n}\nexport { _queueMicrotask as queueMicrotask };\n", "import { ByteQueue } from \"../byte_queue.js\";\nimport { Cursor } from \"../cursor.js\";\nimport * as jsond from \"../encoding/json/decode.js\";\nimport * as protobufd from \"../encoding/protobuf/decode.js\";\nimport { ClientError, ClosedError, ProtoError, InternalError } from \"../errors.js\";\nimport { impossible } from \"../util.js\";\nimport { CursorRespBody as json_CursorRespBody } from \"./json_decode.js\";\nimport { CursorRespBody as protobuf_CursorRespBody } from \"./protobuf_decode.js\";\nimport { CursorEntry as json_CursorEntry } from \"../shared/json_decode.js\";\nimport { CursorEntry as protobuf_CursorEntry } from \"../shared/protobuf_decode.js\";\nexport class HttpCursor extends Cursor {\n    #stream;\n    #encoding;\n    #reader;\n    #queue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(stream, encoding) {\n        super();\n        this.#stream = stream;\n        this.#encoding = encoding;\n        this.#reader = undefined;\n        this.#queue = new ByteQueue(16 * 1024);\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    async open(response) {\n        if (response.body === null) {\n            throw new ProtoError(\"No response body for cursor request\");\n        }\n        this.#reader = response.body.getReader();\n        const respBody = await this.#nextItem(json_CursorRespBody, protobuf_CursorRespBody);\n        if (respBody === undefined) {\n            throw new ProtoError(\"Empty response to cursor request\");\n        }\n        return respBody;\n    }\n    /** Fetch the next entry from the cursor. */\n    next() {\n        return this.#nextItem(json_CursorEntry, protobuf_CursorEntry);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._cursorClosed(this);\n        if (this.#reader !== undefined) {\n            this.#reader.cancel();\n        }\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    async #nextItem(jsonFun, protobufDef) {\n        for (;;) {\n            if (this.#done) {\n                return undefined;\n            }\n            else if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            if (this.#encoding === \"json\") {\n                const jsonData = this.#parseItemJson();\n                if (jsonData !== undefined) {\n                    const jsonText = new TextDecoder().decode(jsonData);\n                    const jsonValue = JSON.parse(jsonText);\n                    return jsond.readJsonObject(jsonValue, jsonFun);\n                }\n            }\n            else if (this.#encoding === \"protobuf\") {\n                const protobufData = this.#parseItemProtobuf();\n                if (protobufData !== undefined) {\n                    return protobufd.readProtobufMessage(protobufData, protobufDef);\n                }\n            }\n            else {\n                throw impossible(this.#encoding, \"Impossible encoding\");\n            }\n            if (this.#reader === undefined) {\n                throw new InternalError(\"Attempted to read from HTTP cursor before it was opened\");\n            }\n            const { value, done } = await this.#reader.read();\n            if (done && this.#queue.length === 0) {\n                this.#done = true;\n            }\n            else if (done) {\n                throw new ProtoError(\"Unexpected end of cursor stream\");\n            }\n            else {\n                this.#queue.push(value);\n            }\n        }\n    }\n    #parseItemJson() {\n        const data = this.#queue.data();\n        const newlineByte = 10;\n        const newlinePos = data.indexOf(newlineByte);\n        if (newlinePos < 0) {\n            return undefined;\n        }\n        const jsonData = data.slice(0, newlinePos);\n        this.#queue.shift(newlinePos + 1);\n        return jsonData;\n    }\n    #parseItemProtobuf() {\n        const data = this.#queue.data();\n        let varintValue = 0;\n        let varintLength = 0;\n        for (;;) {\n            if (varintLength >= data.byteLength) {\n                return undefined;\n            }\n            const byte = data[varintLength];\n            varintValue |= (byte & 0x7f) << (7 * varintLength);\n            varintLength += 1;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        if (data.byteLength < varintLength + varintValue) {\n            return undefined;\n        }\n        const protobufData = data.slice(varintLength, varintLength + varintValue);\n        this.#queue.shift(varintLength + varintValue);\n        return protobufData;\n    }\n}\n", "export class ByteQueue {\n    #array;\n    #shiftPos;\n    #pushPos;\n    constructor(initialCap) {\n        this.#array = new Uint8Array(new ArrayBuffer(initialCap));\n        this.#shiftPos = 0;\n        this.#pushPos = 0;\n    }\n    get length() {\n        return this.#pushPos - this.#shiftPos;\n    }\n    data() {\n        return this.#array.slice(this.#shiftPos, this.#pushPos);\n    }\n    push(chunk) {\n        this.#ensurePush(chunk.byteLength);\n        this.#array.set(chunk, this.#pushPos);\n        this.#pushPos += chunk.byteLength;\n    }\n    #ensurePush(pushLength) {\n        if (this.#pushPos + pushLength <= this.#array.byteLength) {\n            return;\n        }\n        const filledLength = this.#pushPos - this.#shiftPos;\n        if (filledLength + pushLength <= this.#array.byteLength &&\n            2 * this.#pushPos >= this.#array.byteLength) {\n            this.#array.copyWithin(0, this.#shiftPos, this.#pushPos);\n        }\n        else {\n            let newCap = this.#array.byteLength;\n            do {\n                newCap *= 2;\n            } while (filledLength + pushLength > newCap);\n            const newArray = new Uint8Array(new ArrayBuffer(newCap));\n            newArray.set(this.#array.slice(this.#shiftPos, this.#pushPos), 0);\n            this.#array = newArray;\n        }\n        this.#pushPos = filledLength;\n        this.#shiftPos = 0;\n    }\n    shift(length) {\n        this.#shiftPos += length;\n    }\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/json_decode.js\";\nexport function PipelineRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    const results = d.arrayObjectsMap(obj[\"results\"], StreamResult);\n    return { baton, baseUrl, results };\n}\nfunction StreamResult(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"ok\") {\n        const response = StreamResponse(d.object(obj[\"response\"]));\n        return { type: \"ok\", response };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResult\");\n    }\n}\nfunction StreamResponse(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"close\") {\n        return { type: \"close\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResponse\");\n    }\n}\nexport function CursorRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    return { baton, baseUrl };\n}\n", "import { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const PipelineRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined, results: [] }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n    3(r, msg) { msg.results.push(r.message(StreamResult)); },\n};\nconst StreamResult = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"ok\", response: r.message(StreamResponse) }; },\n    2(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StreamResponse = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"close\" }; },\n    2(r) { return r.message(ExecuteStreamResp); },\n    3(r) { return r.message(BatchStreamResp); },\n    4(r) { return { type: \"sequence\" }; },\n    5(r) { return r.message(DescribeStreamResp); },\n    6(r) { return { type: \"store_sql\" }; },\n    7(r) { return { type: \"close_sql\" }; },\n    8(r) { return r.message(GetAutocommitStreamResp); },\n};\nconst ExecuteStreamResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchStreamResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst DescribeStreamResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitStreamResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\nexport const CursorRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n};\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.arrayObjects(\"requests\", msg.requests, StreamRequest);\n}\nfunction StreamRequest(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"close\") {\n        // do nothing\n    }\n    else if (msg.type === \"execute\") {\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"sequence\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.object(\"batch\", msg.batch, Batch);\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    for (const req of msg.requests) {\n        w.message(2, req, StreamRequest);\n    }\n}\nfunction StreamRequest(w, msg) {\n    if (msg.type === \"close\") {\n        w.message(1, msg, CloseStreamReq);\n    }\n    else if (msg.type === \"execute\") {\n        w.message(2, msg, ExecuteStreamReq);\n    }\n    else if (msg.type === \"batch\") {\n        w.message(3, msg, BatchStreamReq);\n    }\n    else if (msg.type === \"sequence\") {\n        w.message(4, msg, SequenceStreamReq);\n    }\n    else if (msg.type === \"describe\") {\n        w.message(5, msg, DescribeStreamReq);\n    }\n    else if (msg.type === \"store_sql\") {\n        w.message(6, msg, StoreSqlStreamReq);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.message(7, msg, CloseSqlStreamReq);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.message(8, msg, GetAutocommitStreamReq);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nfunction CloseStreamReq(_w, _msg) {\n}\nfunction ExecuteStreamReq(w, msg) {\n    w.message(1, msg.stmt, Stmt);\n}\nfunction BatchStreamReq(w, msg) {\n    w.message(1, msg.batch, Batch);\n}\nfunction SequenceStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction DescribeStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction StoreSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitStreamReq(_w, _msg) {\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    w.message(2, msg.batch, Batch);\n}\n", "import { LibsqlUrlParseError } from \"./errors.js\";\n;\n/** Parses a URL compatible with the libsql client (`@libsql/client`). This URL may have the \"libsql:\" scheme\n * and may contain query parameters. */\nexport function parseLibsqlUrl(urlStr) {\n    const url = new URL(urlStr);\n    let authToken = undefined;\n    let tls = undefined;\n    for (const [key, value] of url.searchParams.entries()) {\n        if (key === \"authToken\") {\n            authToken = value;\n        }\n        else if (key === \"tls\") {\n            if (value === \"0\") {\n                tls = false;\n            }\n            else if (value === \"1\") {\n                tls = true;\n            }\n            else {\n                throw new LibsqlUrlParseError(`Unknown value for the \"tls\" query argument: ${JSON.stringify(value)}`);\n            }\n        }\n        else {\n            throw new LibsqlUrlParseError(`Unknown URL query argument ${JSON.stringify(key)}`);\n        }\n    }\n    let hranaWsScheme;\n    let hranaHttpScheme;\n    if ((url.protocol === \"http:\" || url.protocol === \"ws:\") && (tls === true)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt into TLS using ?tls=1`);\n    }\n    else if ((url.protocol === \"https:\" || url.protocol === \"wss:\") && (tls === false)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt out of TLS using ?tls=0`);\n    }\n    if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        hranaHttpScheme = url.protocol;\n    }\n    else if (url.protocol === \"ws:\" || url.protocol === \"wss:\") {\n        hranaWsScheme = url.protocol;\n    }\n    else if (url.protocol === \"libsql:\") {\n        if (tls === false) {\n            if (!url.port) {\n                throw new LibsqlUrlParseError(`A \"libsql:\" URL with ?tls=0 must specify an explicit port`);\n            }\n            hranaHttpScheme = \"http:\";\n            hranaWsScheme = \"ws:\";\n        }\n        else {\n            hranaHttpScheme = \"https:\";\n            hranaWsScheme = \"wss:\";\n        }\n    }\n    else {\n        throw new LibsqlUrlParseError(`This client does not support ${JSON.stringify(url.protocol)} URLs. ` +\n            'Please use a \"libsql:\", \"ws:\", \"wss:\", \"http:\" or \"https:\" URL instead.');\n    }\n    if (url.username || url.password) {\n        throw new LibsqlUrlParseError(\"This client does not support HTTP Basic authentication with a username and password. \" +\n            'You can authenticate using a token passed in the \"authToken\" URL query parameter.');\n    }\n    if (url.hash) {\n        throw new LibsqlUrlParseError(\"URL fragments are not supported\");\n    }\n    let hranaPath = url.pathname;\n    if (hranaPath === \"/\") {\n        hranaPath = \"\";\n    }\n    const hranaWsUrl = hranaWsScheme !== undefined\n        ? `${hranaWsScheme}//${url.host}${hranaPath}` : undefined;\n    const hranaHttpUrl = hranaHttpScheme !== undefined\n        ? `${hranaHttpScheme}//${url.host}${hranaPath}` : undefined;\n    return { hranaWsUrl, hranaHttpUrl, authToken };\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { transactionModeToBegin, ResultSetImpl } from \"@libsql/core/util\";\nexport class HranaTransaction {\n    #mode;\n    #version;\n    // Promise that is resolved when the BEGIN statement completes, or `undefined` if we haven't executed the\n    // BEGIN statement yet.\n    #started;\n    /** @private */\n    constructor(mode, version) {\n        this.#mode = mode;\n        this.#version = version;\n        this.#started = undefined;\n    }\n    execute(stmt) {\n        return this.batch([stmt]).then((results) => results[0]);\n    }\n    async batch(stmts) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            const hranaStmts = stmts.map(stmtToHrana);\n            let rowsPromises;\n            if (this.#started === undefined) {\n                // The transaction hasn't started yet, so we need to send the BEGIN statement in a batch with\n                // `hranaStmts`.\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                const beginStep = batch.step();\n                const beginPromise = beginStep.run(transactionModeToBegin(this.#mode));\n                // Execute the `hranaStmts` only if the BEGIN succeeded, to make sure that we don't execute it\n                // outside of a transaction.\n                let lastStep = beginStep;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch\n                        .step()\n                        .condition(hrana.BatchCond.ok(lastStep));\n                    if (this.#version >= 3) {\n                        // If the Hrana version supports it, make sure that we are still in a transaction\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                // `this.#started` is resolved successfully only if the batch and the BEGIN statement inside\n                // of the batch are both successful.\n                this.#started = batch\n                    .execute()\n                    .then(() => beginPromise)\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    // If the BEGIN failed, the transaction is unusable and we must close it. However, if the\n                    // BEGIN suceeds and `hranaStmts` fail, the transaction is _not_ closed.\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                if (this.#version < 3) {\n                    // The transaction has started, so we must wait until the BEGIN statement completed to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction.\n                    await this.#started;\n                }\n                else {\n                    // The transaction has started, but we will use `hrana.BatchCond.isAutocommit()` to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction, so we don't have to\n                    // wait for `this.#started`\n                }\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                let lastStep = undefined;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch.step();\n                    if (lastStep !== undefined) {\n                        stmtStep.condition(hrana.BatchCond.ok(lastStep));\n                    }\n                    if (this.#version >= 3) {\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                await batch.execute();\n            }\n            const resultSets = [];\n            for (const rowsPromise of rowsPromises) {\n                const rows = await rowsPromise;\n                if (rows === undefined) {\n                    throw new LibsqlError(\"Statement in a transaction was not executed, \" +\n                        \"probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                resultSets.push(resultSetFromHrana(rows));\n            }\n            return resultSets;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async executeMultiple(sql) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            if (this.#started === undefined) {\n                // If the transaction hasn't started yet, start it now\n                this.#started = stream\n                    .run(transactionModeToBegin(this.#mode))\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                // Wait until the transaction has started\n                await this.#started;\n            }\n            await stream.sequence(sql);\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async rollback() {\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                return;\n            }\n            if (this.#started !== undefined) {\n                // We don't have to wait for the BEGIN statement to complete. If the BEGIN fails, we will\n                // execute a ROLLBACK outside of an active transaction, which should be harmless.\n            }\n            else {\n                // We did nothing in the transaction, so there is nothing to rollback.\n                return;\n            }\n            // Pipeline the ROLLBACK statement and the stream close.\n            const promise = stream.run(\"ROLLBACK\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            // `this.close()` may close the `hrana.Client`, which aborts all pending stream requests, so we\n            // must call it _after_ we receive the ROLLBACK response.\n            // Also note that the current stream should already be closed, but we need to call `this.close()`\n            // anyway, because it may need to do more cleanup.\n            this.close();\n        }\n    }\n    async commit() {\n        // (this method is analogous to `rollback()`)\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                throw new LibsqlError(\"Cannot commit the transaction because it is already closed\", \"TRANSACTION_CLOSED\");\n            }\n            if (this.#started !== undefined) {\n                // Make sure to execute the COMMIT only if the BEGIN was successful.\n                await this.#started;\n            }\n            else {\n                return;\n            }\n            const promise = stream.run(\"COMMIT\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            this.close();\n        }\n    }\n}\nexport async function executeHranaBatch(mode, version, batch, hranaStmts, disableForeignKeys = false) {\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=off\");\n    }\n    const beginStep = batch.step();\n    const beginPromise = beginStep.run(transactionModeToBegin(mode));\n    let lastStep = beginStep;\n    const stmtPromises = hranaStmts.map((hranaStmt) => {\n        const stmtStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n        if (version >= 3) {\n            stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n        }\n        const stmtPromise = stmtStep.query(hranaStmt);\n        lastStep = stmtStep;\n        return stmtPromise;\n    });\n    const commitStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n    if (version >= 3) {\n        commitStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n    }\n    const commitPromise = commitStep.run(\"COMMIT\");\n    const rollbackStep = batch\n        .step()\n        .condition(hrana.BatchCond.not(hrana.BatchCond.ok(commitStep)));\n    rollbackStep.run(\"ROLLBACK\").catch((_) => undefined);\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=on\");\n    }\n    await batch.execute();\n    const resultSets = [];\n    await beginPromise;\n    for (const stmtPromise of stmtPromises) {\n        const hranaRows = await stmtPromise;\n        if (hranaRows === undefined) {\n            throw new LibsqlError(\"Statement in a batch was not executed, probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n        }\n        resultSets.push(resultSetFromHrana(hranaRows));\n    }\n    await commitPromise;\n    return resultSets;\n}\nexport function stmtToHrana(stmt) {\n    let sql;\n    let args;\n    if (Array.isArray(stmt)) {\n        [sql, args] = stmt;\n    }\n    else if (typeof stmt === \"string\") {\n        sql = stmt;\n    }\n    else {\n        sql = stmt.sql;\n        args = stmt.args;\n    }\n    const hranaStmt = new hrana.Stmt(sql);\n    if (args) {\n        if (Array.isArray(args)) {\n            hranaStmt.bindIndexes(args);\n        }\n        else {\n            for (const [key, value] of Object.entries(args)) {\n                hranaStmt.bindName(key, value);\n            }\n        }\n    }\n    return hranaStmt;\n}\nexport function resultSetFromHrana(hranaRows) {\n    const columns = hranaRows.columnNames.map((c) => c ?? \"\");\n    const columnTypes = hranaRows.columnDecltypes.map((c) => c ?? \"\");\n    const rows = hranaRows.rows;\n    const rowsAffected = hranaRows.affectedRowCount;\n    const lastInsertRowid = hranaRows.lastInsertRowid !== undefined\n        ? hranaRows.lastInsertRowid\n        : undefined;\n    return new ResultSetImpl(columns, columnTypes, rows, rowsAffected, lastInsertRowid);\n}\nexport function mapHranaError(e) {\n    if (e instanceof hrana.ClientError) {\n        const code = mapHranaErrorCode(e);\n        return new LibsqlError(e.message, code, undefined, e);\n    }\n    return e;\n}\nfunction mapHranaErrorCode(e) {\n    if (e instanceof hrana.ResponseError && e.code !== undefined) {\n        return e.code;\n    }\n    else if (e instanceof hrana.ProtoError) {\n        return \"HRANA_PROTO_ERROR\";\n    }\n    else if (e instanceof hrana.ClosedError) {\n        return e.cause instanceof hrana.ClientError\n            ? mapHranaErrorCode(e.cause)\n            : \"HRANA_CLOSED_ERROR\";\n    }\n    else if (e instanceof hrana.WebSocketError) {\n        return \"HRANA_WEBSOCKET_ERROR\";\n    }\n    else if (e instanceof hrana.HttpServerError) {\n        return \"SERVER_ERROR\";\n    }\n    else if (e instanceof hrana.ProtocolVersionError) {\n        return \"PROTOCOL_VERSION_ERROR\";\n    }\n    else if (e instanceof hrana.InternalError) {\n        return \"INTERNAL_ERROR\";\n    }\n    else {\n        return \"UNKNOWN\";\n    }\n}\n", "export class SqlCache {\n    #owner;\n    #sqls;\n    capacity;\n    constructor(owner, capacity) {\n        this.#owner = owner;\n        this.#sqls = new Lru();\n        this.capacity = capacity;\n    }\n    // Replaces SQL strings with cached `hrana.Sql` objects in the statements in `hranaStmts`. After this\n    // function returns, we guarantee that all `hranaStmts` refer to valid (not closed) `hrana.Sql` objects,\n    // but _we may invalidate any other `hrana.Sql` objects_ (by closing them, thus removing them from the\n    // server).\n    //\n    // In practice, this means that after calling this function, you can use the statements only up to the\n    // first `await`, because concurrent code may also use the cache and invalidate those statements.\n    apply(hranaStmts) {\n        if (this.capacity <= 0) {\n            return;\n        }\n        const usedSqlObjs = new Set();\n        for (const hranaStmt of hranaStmts) {\n            if (typeof hranaStmt.sql !== \"string\") {\n                continue;\n            }\n            const sqlText = hranaStmt.sql;\n            // Stored SQL cannot exceed 5kb.\n            // https://github.com/tursodatabase/libsql/blob/e9d637e051685f92b0da43849507b5ef4232fbeb/libsql-server/src/hrana/http/request.rs#L10\n            if (sqlText.length >= 5000) {\n                continue;\n            }\n            let sqlObj = this.#sqls.get(sqlText);\n            if (sqlObj === undefined) {\n                while (this.#sqls.size + 1 > this.capacity) {\n                    const [evictSqlText, evictSqlObj] = this.#sqls.peekLru();\n                    if (usedSqlObjs.has(evictSqlObj)) {\n                        // The SQL object that we are trying to evict is already in use in this batch, so we\n                        // must not evict and close it.\n                        break;\n                    }\n                    evictSqlObj.close();\n                    this.#sqls.delete(evictSqlText);\n                }\n                if (this.#sqls.size + 1 <= this.capacity) {\n                    sqlObj = this.#owner.storeSql(sqlText);\n                    this.#sqls.set(sqlText, sqlObj);\n                }\n            }\n            if (sqlObj !== undefined) {\n                hranaStmt.sql = sqlObj;\n                usedSqlObjs.add(sqlObj);\n            }\n        }\n    }\n}\nclass Lru {\n    // This maps keys to the cache values. The entries are ordered by their last use (entires that were used\n    // most recently are at the end).\n    #cache;\n    constructor() {\n        this.#cache = new Map();\n    }\n    get(key) {\n        const value = this.#cache.get(key);\n        if (value !== undefined) {\n            // move the entry to the back of the Map\n            this.#cache.delete(key);\n            this.#cache.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        this.#cache.set(key, value);\n    }\n    peekLru() {\n        for (const entry of this.#cache.entries()) {\n            return entry;\n        }\n        return undefined;\n    }\n    delete(key) {\n        this.#cache.delete(key);\n    }\n    get size() {\n        return this.#cache.size;\n    }\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"https\" && config.scheme !== \"http\") {\n        throw new LibsqlError('The HTTP client supports only \"libsql:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"http\" && config.tls) {\n        throw new LibsqlError(`A \"http:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"https\" && !config.tls) {\n        throw new LibsqlError(`A \"https:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    return new HttpClient(url, config.authToken, config.intMode, config.fetch, config.concurrency);\n}\nconst sqlCacheCapacity = 30;\nexport class HttpClient {\n    #client;\n    protocol;\n    #url;\n    #intMode;\n    #customFetch;\n    #concurrency;\n    #authToken;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(url, authToken, intMode, customFetch, concurrency) {\n        this.#url = url;\n        this.#authToken = authToken;\n        this.#intMode = intMode;\n        this.#customFetch = customFetch;\n        this.#concurrency = concurrency;\n        this.#client = hrana.openHttp(this.#url, this.#authToken, this.#customFetch);\n        this.#client.intMode = this.#intMode;\n        this.protocol = \"http\";\n        this.#promiseLimitFunction = promiseLimit(this.#concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the statement and\n                // close the stream in a single HTTP request.\n                let rowsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    rowsPromise = stream.query(hranaStmt);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const rowsResult = await rowsPromise;\n                return resultSetFromHrana(rowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            try {\n                const normalizedStmts = stmts.map((stmt) => {\n                    if (Array.isArray(stmt)) {\n                        return {\n                            sql: stmt[0],\n                            args: stmt[1] || [],\n                        };\n                    }\n                    return stmt;\n                });\n                const hranaStmts = normalizedStmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    // It makes sense to use a SQL cache even for a single batch, because it may contain the same\n                    // statement repeated multiple times.\n                    const sqlCache = new SqlCache(stream, sqlCacheCapacity);\n                    sqlCache.apply(hranaStmts);\n                    // TODO: we do not use a cursor here, because it would cause three roundtrips:\n                    // 1. pipeline request to store SQL texts\n                    // 2. cursor request\n                    // 3. pipeline request to close the stream\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            try {\n                const version = await this.#client.getVersion();\n                return new HttpTransaction(this.#client.openStream(), mode, version);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            try {\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the sequence and\n                // close the stream in a single HTTP request.\n                let promise;\n                const stream = this.#client.openStream();\n                try {\n                    promise = stream.sequence(sql);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in http mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    close() {\n        this.#client.close();\n    }\n    async reconnect() {\n        try {\n            if (!this.closed) {\n                // Abort in-flight ops and free resources\n                this.#client.close();\n            }\n        }\n        finally {\n            // Recreate the underlying hrana client\n            this.#client = hrana.openHttp(this.#url, this.#authToken, this.#customFetch);\n            this.#client.intMode = this.#intMode;\n        }\n    }\n    get closed() {\n        return this.#client.closed;\n    }\n}\nexport class HttpTransaction extends HranaTransaction {\n    #stream;\n    #sqlCache;\n    /** @private */\n    constructor(stream, mode, version) {\n        super(mode, version);\n        this.#stream = stream;\n        this.#sqlCache = new SqlCache(stream, sqlCacheCapacity);\n    }\n    /** @private */\n    _getStream() {\n        return this.#stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#sqlCache;\n    }\n    close() {\n        this.#stream.close();\n    }\n    get closed() {\n        return this.#stream.closed;\n    }\n}\n", "import type { Client, ResultSet } from '@libsql/client';\nimport type { BatchItem, BatchResponse } from '~/batch.ts';\nimport { entityKind } from '~/entity.ts';\nimport { DefaultLogger } from '~/logger.ts';\nimport {\n\tcreateTableRelationsHelpers,\n\textractTablesRelationalConfig,\n\ttype ExtractTablesWithRelations,\n\ttype RelationalSchemaConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport { BaseSQLiteDatabase } from '~/sqlite-core/db.ts';\nimport { SQLiteAsyncDialect } from '~/sqlite-core/dialect.ts';\nimport type { DrizzleConfig } from '~/utils.ts';\nimport { LibSQLSession } from './session.ts';\n\nexport class LibSQLDatabase<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n> extends BaseSQLiteDatabase<'async', ResultSet, TSchema> {\n\tstatic override readonly [entityKind]: string = 'LibSQLDatabase';\n\n\t/** @internal */\n\tdeclare readonly session: LibSQLSession<TSchema, ExtractTablesWithRelations<TSchema>>;\n\n\tasync batch<U extends BatchItem<'sqlite'>, T extends Readonly<[U, ...U[]]>>(\n\t\tbatch: T,\n\t): Promise<BatchResponse<T>> {\n\t\treturn this.session.batch(batch) as Promise<BatchResponse<T>>;\n\t}\n}\n\n/** @internal */\nexport function construct<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n>(client: Client, config: DrizzleConfig<TSchema> = {}): LibSQLDatabase<TSchema> & {\n\t$client: Client;\n} {\n\tconst dialect = new SQLiteAsyncDialect({ casing: config.casing });\n\tlet logger;\n\tif (config.logger === true) {\n\t\tlogger = new DefaultLogger();\n\t} else if (config.logger !== false) {\n\t\tlogger = config.logger;\n\t}\n\n\tlet schema: RelationalSchemaConfig<TablesRelationalConfig> | undefined;\n\tif (config.schema) {\n\t\tconst tablesConfig = extractTablesRelationalConfig(\n\t\t\tconfig.schema,\n\t\t\tcreateTableRelationsHelpers,\n\t\t);\n\t\tschema = {\n\t\t\tfullSchema: config.schema,\n\t\t\tschema: tablesConfig.tables,\n\t\t\ttableNamesMap: tablesConfig.tableNamesMap,\n\t\t};\n\t}\n\n\tconst session = new LibSQLSession(client, dialect, schema, { logger, cache: config.cache }, undefined);\n\tconst db = new LibSQLDatabase('async', dialect, session, schema) as LibSQLDatabase<TSchema>;\n\t(<any> db).$client = client;\n\t(<any> db).$cache = config.cache;\n\tif ((<any> db).$cache) {\n\t\t(<any> db).$cache['invalidate'] = config.cache?.onMutate;\n\t}\n\treturn db as any;\n}\n", "import type { Client, InArgs, InStatement, ResultSet, Transaction } from '@libsql/client';\nimport type { BatchItem as BatchItem } from '~/batch.ts';\nimport { type Cache, NoopCache } from '~/cache/core/index.ts';\nimport type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { Logger } from '~/logger.ts';\nimport { NoopLogger } from '~/logger.ts';\nimport type { RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport { fillPlaceholders, type Query, sql } from '~/sql/sql.ts';\nimport type { SQLiteAsyncDialect } from '~/sqlite-core/dialect.ts';\nimport { SQLiteTransaction } from '~/sqlite-core/index.ts';\nimport type { SelectedFieldsOrdered } from '~/sqlite-core/query-builders/select.types.ts';\nimport type {\n\tPreparedQueryConfig as PreparedQueryConfigBase,\n\tSQLiteExecuteMethod,\n\tSQLiteTransactionConfig,\n} from '~/sqlite-core/session.ts';\nimport { SQLitePreparedQuery, SQLiteSession } from '~/sqlite-core/session.ts';\nimport { mapResultRow } from '~/utils.ts';\n\nexport interface LibSQLSessionOptions {\n\tlogger?: Logger;\n\tcache?: Cache;\n}\n\ntype PreparedQueryConfig = Omit<PreparedQueryConfigBase, 'statement' | 'run'>;\n\nexport class LibSQLSession<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends SQLiteSession<'async', ResultSet, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'LibSQLSession';\n\n\tprivate logger: Logger;\n\tprivate cache: Cache;\n\n\tconstructor(\n\t\tprivate client: Client,\n\t\tdialect: SQLiteAsyncDialect,\n\t\tprivate schema: RelationalSchemaConfig<TSchema> | undefined,\n\t\tprivate options: LibSQLSessionOptions,\n\t\tprivate tx: Transaction | undefined,\n\t) {\n\t\tsuper(dialect);\n\t\tthis.logger = options.logger ?? new NoopLogger();\n\t\tthis.cache = options.cache ?? new NoopCache();\n\t}\n\n\tprepareQuery<T extends Omit<PreparedQueryConfig, 'run'>>(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\texecuteMethod: SQLiteExecuteMethod,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][]) => unknown,\n\t\tqueryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t},\n\t\tcacheConfig?: WithCacheConfig,\n\t): LibSQLPreparedQuery<T> {\n\t\treturn new LibSQLPreparedQuery(\n\t\t\tthis.client,\n\t\t\tquery,\n\t\t\tthis.logger,\n\t\t\tthis.cache,\n\t\t\tqueryMetadata,\n\t\t\tcacheConfig,\n\t\t\tfields,\n\t\t\tthis.tx,\n\t\t\texecuteMethod,\n\t\t\tisResponseInArrayMode,\n\t\t\tcustomResultMapper,\n\t\t);\n\t}\n\n\tasync batch<T extends BatchItem<'sqlite'>[] | readonly BatchItem<'sqlite'>[]>(queries: T) {\n\t\tconst preparedQueries: PreparedQuery[] = [];\n\t\tconst builtQueries: InStatement[] = [];\n\n\t\tfor (const query of queries) {\n\t\t\tconst preparedQuery = query._prepare();\n\t\t\tconst builtQuery = preparedQuery.getQuery();\n\t\t\tpreparedQueries.push(preparedQuery);\n\t\t\tbuiltQueries.push({ sql: builtQuery.sql, args: builtQuery.params as InArgs });\n\t\t}\n\n\t\tconst batchResults = await this.client.batch(builtQueries);\n\t\treturn batchResults.map((result, i) => preparedQueries[i]!.mapResult(result, true));\n\t}\n\n\tasync migrate<T extends BatchItem<'sqlite'>[] | readonly BatchItem<'sqlite'>[]>(queries: T) {\n\t\tconst preparedQueries: PreparedQuery[] = [];\n\t\tconst builtQueries: InStatement[] = [];\n\n\t\tfor (const query of queries) {\n\t\t\tconst preparedQuery = query._prepare();\n\t\t\tconst builtQuery = preparedQuery.getQuery();\n\t\t\tpreparedQueries.push(preparedQuery);\n\t\t\tbuiltQueries.push({ sql: builtQuery.sql, args: builtQuery.params as InArgs });\n\t\t}\n\n\t\tconst batchResults = await this.client.migrate(builtQueries);\n\t\treturn batchResults.map((result, i) => preparedQueries[i]!.mapResult(result, true));\n\t}\n\n\toverride async transaction<T>(\n\t\ttransaction: (db: LibSQLTransaction<TFullSchema, TSchema>) => T | Promise<T>,\n\t\t_config?: SQLiteTransactionConfig,\n\t): Promise<T> {\n\t\t// TODO: support transaction behavior\n\t\tconst libsqlTx = await this.client.transaction();\n\t\tconst session = new LibSQLSession<TFullSchema, TSchema>(\n\t\t\tthis.client,\n\t\t\tthis.dialect,\n\t\t\tthis.schema,\n\t\t\tthis.options,\n\t\t\tlibsqlTx,\n\t\t);\n\t\tconst tx = new LibSQLTransaction<TFullSchema, TSchema>('async', this.dialect, session, this.schema);\n\t\ttry {\n\t\t\tconst result = await transaction(tx);\n\t\t\tawait libsqlTx.commit();\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tawait libsqlTx.rollback();\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\toverride extractRawAllValueFromBatchResult(result: unknown): unknown {\n\t\treturn (result as ResultSet).rows;\n\t}\n\n\toverride extractRawGetValueFromBatchResult(result: unknown): unknown {\n\t\treturn (result as ResultSet).rows[0];\n\t}\n\n\toverride extractRawValuesValueFromBatchResult(result: unknown): unknown {\n\t\treturn (result as ResultSet).rows;\n\t}\n}\n\nexport class LibSQLTransaction<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends SQLiteTransaction<'async', ResultSet, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'LibSQLTransaction';\n\n\toverride async transaction<T>(transaction: (tx: LibSQLTransaction<TFullSchema, TSchema>) => Promise<T>): Promise<T> {\n\t\tconst savepointName = `sp${this.nestedIndex}`;\n\t\tconst tx = new LibSQLTransaction('async', this.dialect, this.session, this.schema, this.nestedIndex + 1);\n\t\tawait this.session.run(sql.raw(`savepoint ${savepointName}`));\n\t\ttry {\n\t\t\tconst result = await transaction(tx);\n\t\t\tawait this.session.run(sql.raw(`release savepoint ${savepointName}`));\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tawait this.session.run(sql.raw(`rollback to savepoint ${savepointName}`));\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\nexport class LibSQLPreparedQuery<T extends PreparedQueryConfig = PreparedQueryConfig> extends SQLitePreparedQuery<\n\t{ type: 'async'; run: ResultSet; all: T['all']; get: T['get']; values: T['values']; execute: T['execute'] }\n> {\n\tstatic override readonly [entityKind]: string = 'LibSQLPreparedQuery';\n\n\tconstructor(\n\t\tprivate client: Client,\n\t\tquery: Query,\n\t\tprivate logger: Logger,\n\t\tcache: Cache,\n\t\tqueryMetadata: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t} | undefined,\n\t\tcacheConfig: WithCacheConfig | undefined,\n\t\t/** @internal */ public fields: SelectedFieldsOrdered | undefined,\n\t\tprivate tx: Transaction | undefined,\n\t\texecuteMethod: SQLiteExecuteMethod,\n\t\tprivate _isResponseInArrayMode: boolean,\n\t\t/** @internal */ public customResultMapper?: (\n\t\t\trows: unknown[][],\n\t\t\tmapColumnValue?: (value: unknown) => unknown,\n\t\t) => unknown,\n\t) {\n\t\tsuper('async', executeMethod, query, cache, queryMetadata, cacheConfig);\n\t\tthis.customResultMapper = customResultMapper;\n\t\tthis.fields = fields;\n\t}\n\n\tasync run(placeholderValues?: Record<string, unknown>): Promise<ResultSet> {\n\t\tconst params = fillPlaceholders(this.query.params, placeholderValues ?? {});\n\t\tthis.logger.logQuery(this.query.sql, params);\n\t\treturn await this.queryWithCache(this.query.sql, params, async () => {\n\t\t\tconst stmt: InStatement = { sql: this.query.sql, args: params as InArgs };\n\t\t\treturn this.tx ? this.tx.execute(stmt) : this.client.execute(stmt);\n\t\t});\n\t}\n\n\tasync all(placeholderValues?: Record<string, unknown>): Promise<T['all']> {\n\t\tconst { fields, logger, query, tx, client, customResultMapper } = this;\n\t\tif (!fields && !customResultMapper) {\n\t\t\tconst params = fillPlaceholders(query.params, placeholderValues ?? {});\n\t\t\tlogger.logQuery(query.sql, params);\n\t\t\treturn await this.queryWithCache(query.sql, params, async () => {\n\t\t\t\tconst stmt: InStatement = { sql: query.sql, args: params as InArgs };\n\t\t\t\treturn (tx ? tx.execute(stmt) : client.execute(stmt)).then(({ rows }) => this.mapAllResult(rows));\n\t\t\t});\n\t\t}\n\n\t\tconst rows = await this.values(placeholderValues) as unknown[][];\n\n\t\treturn this.mapAllResult(rows);\n\t}\n\n\toverride mapAllResult(rows: unknown, isFromBatch?: boolean): unknown {\n\t\tif (isFromBatch) {\n\t\t\trows = (rows as ResultSet).rows;\n\t\t}\n\n\t\tif (!this.fields && !this.customResultMapper) {\n\t\t\treturn (rows as unknown[]).map((row) => normalizeRow(row));\n\t\t}\n\n\t\tif (this.customResultMapper) {\n\t\t\treturn this.customResultMapper(rows as unknown[][], normalizeFieldValue) as T['all'];\n\t\t}\n\n\t\treturn (rows as unknown[]).map((row) => {\n\t\t\treturn mapResultRow(\n\t\t\t\tthis.fields!,\n\t\t\t\tArray.prototype.slice.call(row).map((v) => normalizeFieldValue(v)),\n\t\t\t\tthis.joinsNotNullableMap,\n\t\t\t);\n\t\t});\n\t}\n\n\tasync get(placeholderValues?: Record<string, unknown>): Promise<T['get']> {\n\t\tconst { fields, logger, query, tx, client, customResultMapper } = this;\n\t\tif (!fields && !customResultMapper) {\n\t\t\tconst params = fillPlaceholders(query.params, placeholderValues ?? {});\n\t\t\tlogger.logQuery(query.sql, params);\n\t\t\treturn await this.queryWithCache(query.sql, params, async () => {\n\t\t\t\tconst stmt: InStatement = { sql: query.sql, args: params as InArgs };\n\t\t\t\treturn (tx ? tx.execute(stmt) : client.execute(stmt)).then(({ rows }) => this.mapGetResult(rows));\n\t\t\t});\n\t\t}\n\n\t\tconst rows = await this.values(placeholderValues) as unknown[][];\n\n\t\treturn this.mapGetResult(rows);\n\t}\n\n\toverride mapGetResult(rows: unknown, isFromBatch?: boolean): unknown {\n\t\tif (isFromBatch) {\n\t\t\trows = (rows as ResultSet).rows;\n\t\t}\n\n\t\tconst row = (rows as unknown[])[0];\n\n\t\tif (!this.fields && !this.customResultMapper) {\n\t\t\treturn normalizeRow(row);\n\t\t}\n\n\t\tif (!row) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (this.customResultMapper) {\n\t\t\treturn this.customResultMapper(rows as unknown[][], normalizeFieldValue) as T['get'];\n\t\t}\n\n\t\treturn mapResultRow(\n\t\t\tthis.fields!,\n\t\t\tArray.prototype.slice.call(row).map((v) => normalizeFieldValue(v)),\n\t\t\tthis.joinsNotNullableMap,\n\t\t);\n\t}\n\n\tasync values(placeholderValues?: Record<string, unknown>): Promise<T['values']> {\n\t\tconst params = fillPlaceholders(this.query.params, placeholderValues ?? {});\n\t\tthis.logger.logQuery(this.query.sql, params);\n\t\treturn await this.queryWithCache(this.query.sql, params, async () => {\n\t\t\tconst stmt: InStatement = { sql: this.query.sql, args: params as InArgs };\n\t\t\treturn (this.tx ? this.tx.execute(stmt) : this.client.execute(stmt)).then(({ rows }) => rows) as Promise<\n\t\t\t\tT['values']\n\t\t\t>;\n\t\t});\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode(): boolean {\n\t\treturn this._isResponseInArrayMode;\n\t}\n}\n\nfunction normalizeRow(obj: any) {\n\t// The libSQL node-sqlite3 compatibility wrapper returns rows\n\t// that can be accessed both as objects and arrays. Let's\n\t// turn them into objects what's what other SQLite drivers\n\t// do.\n\treturn Object.keys(obj).reduce((acc: Record<string, any>, key) => {\n\t\tif (Object.prototype.propertyIsEnumerable.call(obj, key)) {\n\t\t\tacc[key] = obj[key];\n\t\t}\n\t\treturn acc;\n\t}, {});\n}\n\nfunction normalizeFieldValue(value: unknown) {\n\tif (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) { // eslint-disable-line no-instanceof/no-instanceof\n\t\tif (typeof Buffer !== 'undefined') {\n\t\t\tif (!(value instanceof Buffer)) { // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t\treturn Buffer.from(value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\treturn new TextDecoder().decode(value);\n\t\t}\n\t\tthrow new Error('TextDecoder is not available. Please provide either Buffer or TextDecoder polyfill.');\n\t}\n\treturn value;\n}\n", "export const success = (params: object = {}) => ({\r\n    status: \"success\",\r\n    ...params\r\n});\r\n\r\nexport const failure = (message: string) => ({\r\n    status: \"error\",\r\n    message\r\n});\r\n\r\n\r\nexport const maxPage = (total: number, itemsPerPage: number) => Math.ceil(total / itemsPerPage);\r\n", "import { t } from \"elysia\";\r\n\r\nexport const TParamsId = t.Object({ id: t.String() });", "import { ulid } from \"ulid\";\r\n\r\nexport const genId = (prefix: string) => prefix + \"_\" + ulid();\r\n", "// These values should NEVER change. The values are precisely for\n// generating ULIDs.\nconst B32_CHARACTERS = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\nconst ENCODING = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\"; // Crockford's Base32\nconst ENCODING_LEN = 32; // from ENCODING.length;\nconst MAX_ULID = \"7ZZZZZZZZZZZZZZZZZZZZZZZZZ\";\nconst MIN_ULID = \"00000000000000000000000000\";\nconst RANDOM_LEN = 16;\nconst TIME_LEN = 10;\nconst TIME_MAX = 281474976710655; // from Math.pow(2, 48) - 1;\nconst ULID_REGEX = /^[0-7][0-9a-hjkmnp-tv-zA-HJKMNP-TV-Z]{25}$/;\nconst UUID_REGEX = /^[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$/;\n\nvar ULIDErrorCode;\n(function (ULIDErrorCode) {\n    ULIDErrorCode[\"Base32IncorrectEncoding\"] = \"B32_ENC_INVALID\";\n    ULIDErrorCode[\"DecodeTimeInvalidCharacter\"] = \"DEC_TIME_CHAR\";\n    ULIDErrorCode[\"DecodeTimeValueMalformed\"] = \"DEC_TIME_MALFORMED\";\n    ULIDErrorCode[\"EncodeTimeNegative\"] = \"ENC_TIME_NEG\";\n    ULIDErrorCode[\"EncodeTimeSizeExceeded\"] = \"ENC_TIME_SIZE_EXCEED\";\n    ULIDErrorCode[\"EncodeTimeValueMalformed\"] = \"ENC_TIME_MALFORMED\";\n    ULIDErrorCode[\"PRNGDetectFailure\"] = \"PRNG_DETECT\";\n    ULIDErrorCode[\"ULIDInvalid\"] = \"ULID_INVALID\";\n    ULIDErrorCode[\"Unexpected\"] = \"UNEXPECTED\";\n    ULIDErrorCode[\"UUIDInvalid\"] = \"UUID_INVALID\";\n})(ULIDErrorCode || (ULIDErrorCode = {}));\nclass ULIDError extends Error {\n    constructor(errorCode, message) {\n        super(`${message} (${errorCode})`);\n        this.name = \"ULIDError\";\n        this.code = errorCode;\n    }\n}\n\nfunction randomChar(prng) {\n    // Currently PRNGs generate fractions from 0 to _less than_ 1, so no \"%\" is necessary.\n    // However, just in case a future PRNG can generate 1,\n    // we are applying \"% ENCODING LEN\" to wrap back to the first character\n    const randomPosition = Math.floor(prng() * ENCODING_LEN) % ENCODING_LEN;\n    return ENCODING.charAt(randomPosition);\n}\nfunction replaceCharAt(str, index, char) {\n    if (index > str.length - 1) {\n        return str;\n    }\n    return str.substr(0, index) + char + str.substr(index + 1);\n}\n\n// Code from https://github.com/devbanana/crockford-base32/blob/develop/src/index.ts\nfunction crockfordEncode(input) {\n    const output = [];\n    let bitsRead = 0;\n    let buffer = 0;\n    const reversedInput = new Uint8Array(input.slice().reverse());\n    for (const byte of reversedInput) {\n        buffer |= byte << bitsRead;\n        bitsRead += 8;\n        while (bitsRead >= 5) {\n            output.unshift(buffer & 0x1f);\n            buffer >>>= 5;\n            bitsRead -= 5;\n        }\n    }\n    if (bitsRead > 0) {\n        output.unshift(buffer & 0x1f);\n    }\n    return output.map(byte => B32_CHARACTERS.charAt(byte)).join(\"\");\n}\nfunction crockfordDecode(input) {\n    const sanitizedInput = input.toUpperCase().split(\"\").reverse().join(\"\");\n    const output = [];\n    let bitsRead = 0;\n    let buffer = 0;\n    for (const character of sanitizedInput) {\n        const byte = B32_CHARACTERS.indexOf(character);\n        if (byte === -1) {\n            throw new Error(`Invalid base 32 character found in string: ${character}`);\n        }\n        buffer |= byte << bitsRead;\n        bitsRead += 5;\n        while (bitsRead >= 8) {\n            output.unshift(buffer & 0xff);\n            buffer >>>= 8;\n            bitsRead -= 8;\n        }\n    }\n    if (bitsRead >= 5 || buffer > 0) {\n        output.unshift(buffer & 0xff);\n    }\n    return new Uint8Array(output);\n}\n/**\n * Fix a ULID's Base32 encoding -\n * i and l (case-insensitive) will be treated as 1 and o (case-insensitive) will be treated as 0.\n * hyphens are ignored during decoding.\n * @param id The ULID\n * @returns The cleaned up ULID\n */\nfunction fixULIDBase32(id) {\n    return id.replace(/i/gi, \"1\").replace(/l/gi, \"1\").replace(/o/gi, \"0\").replace(/-/g, \"\");\n}\nfunction incrementBase32(str) {\n    let done = undefined, index = str.length, char, charIndex, output = str;\n    const maxCharIndex = ENCODING_LEN - 1;\n    while (!done && index-- >= 0) {\n        char = output[index];\n        charIndex = ENCODING.indexOf(char);\n        if (charIndex === -1) {\n            throw new ULIDError(ULIDErrorCode.Base32IncorrectEncoding, \"Incorrectly encoded string\");\n        }\n        if (charIndex === maxCharIndex) {\n            output = replaceCharAt(output, index, ENCODING[0]);\n            continue;\n        }\n        done = replaceCharAt(output, index, ENCODING[charIndex + 1]);\n    }\n    if (typeof done === \"string\") {\n        return done;\n    }\n    throw new ULIDError(ULIDErrorCode.Base32IncorrectEncoding, \"Failed incrementing string\");\n}\n\n/**\n * Decode time from a ULID\n * @param id The ULID\n * @returns The decoded timestamp\n */\nfunction decodeTime(id) {\n    if (id.length !== TIME_LEN + RANDOM_LEN) {\n        throw new ULIDError(ULIDErrorCode.DecodeTimeValueMalformed, \"Malformed ULID\");\n    }\n    const time = id\n        .substr(0, TIME_LEN)\n        .toUpperCase()\n        .split(\"\")\n        .reverse()\n        .reduce((carry, char, index) => {\n        const encodingIndex = ENCODING.indexOf(char);\n        if (encodingIndex === -1) {\n            throw new ULIDError(ULIDErrorCode.DecodeTimeInvalidCharacter, `Time decode error: Invalid character: ${char}`);\n        }\n        return (carry += encodingIndex * Math.pow(ENCODING_LEN, index));\n    }, 0);\n    if (time > TIME_MAX) {\n        throw new ULIDError(ULIDErrorCode.DecodeTimeValueMalformed, `Malformed ULID: timestamp too large: ${time}`);\n    }\n    return time;\n}\n/**\n * Detect the best PRNG (pseudo-random number generator)\n * @param root The root to check from (global/window)\n * @returns The PRNG function\n */\nfunction detectPRNG(root) {\n    const rootLookup = detectRoot();\n    const globalCrypto = (rootLookup && (rootLookup.crypto || rootLookup.msCrypto)) ||\n        (null);\n    if (typeof globalCrypto?.getRandomValues === \"function\") {\n        return () => {\n            const buffer = new Uint8Array(1);\n            globalCrypto.getRandomValues(buffer);\n            return buffer[0] / 0xff;\n        };\n    }\n    else if (typeof globalCrypto?.randomBytes === \"function\") {\n        return () => globalCrypto.randomBytes(1).readUInt8() / 0xff;\n    }\n    else ;\n    throw new ULIDError(ULIDErrorCode.PRNGDetectFailure, \"Failed to find a reliable PRNG\");\n}\nfunction detectRoot() {\n    if (inWebWorker())\n        return self;\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    return null;\n}\nfunction encodeRandom(len, prng) {\n    let str = \"\";\n    for (; len > 0; len--) {\n        str = randomChar(prng) + str;\n    }\n    return str;\n}\n/**\n * Encode the time portion of a ULID\n * @param now The current timestamp\n * @param len Length to generate\n * @returns The encoded time\n */\nfunction encodeTime(now, len = TIME_LEN) {\n    if (isNaN(now)) {\n        throw new ULIDError(ULIDErrorCode.EncodeTimeValueMalformed, `Time must be a number: ${now}`);\n    }\n    else if (now > TIME_MAX) {\n        throw new ULIDError(ULIDErrorCode.EncodeTimeSizeExceeded, `Cannot encode a time larger than ${TIME_MAX}: ${now}`);\n    }\n    else if (now < 0) {\n        throw new ULIDError(ULIDErrorCode.EncodeTimeNegative, `Time must be positive: ${now}`);\n    }\n    else if (Number.isInteger(now) === false) {\n        throw new ULIDError(ULIDErrorCode.EncodeTimeValueMalformed, `Time must be an integer: ${now}`);\n    }\n    let mod, str = \"\";\n    for (let currentLen = len; currentLen > 0; currentLen--) {\n        mod = now % ENCODING_LEN;\n        str = ENCODING.charAt(mod) + str;\n        now = (now - mod) / ENCODING_LEN;\n    }\n    return str;\n}\nfunction inWebWorker() {\n    // @ts-ignore\n    return typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\n}\n/**\n * Check if a ULID is valid\n * @param id The ULID to test\n * @returns True if valid, false otherwise\n * @example\n *   isValid(\"01HNZX8JGFACFA36RBXDHEQN6E\"); // true\n *   isValid(\"\"); // false\n */\nfunction isValid(id) {\n    return (typeof id === \"string\" &&\n        id.length === TIME_LEN + RANDOM_LEN &&\n        id\n            .toUpperCase()\n            .split(\"\")\n            .every(char => ENCODING.indexOf(char) !== -1));\n}\n/**\n * Create a ULID factory to generate monotonically-increasing\n *  ULIDs\n * @param prng The PRNG to use\n * @returns A ulid factory\n * @example\n *  const ulid = monotonicFactory();\n *  ulid(); // \"01HNZXD07M5CEN5XA66EMZSRZW\"\n */\nfunction monotonicFactory(prng) {\n    const currentPRNG = prng || detectPRNG();\n    let lastTime = 0, lastRandom;\n    return function _ulid(seedTime) {\n        const seed = !seedTime || isNaN(seedTime) ? Date.now() : seedTime;\n        if (seed <= lastTime) {\n            const incrementedRandom = (lastRandom = incrementBase32(lastRandom));\n            return encodeTime(lastTime, TIME_LEN) + incrementedRandom;\n        }\n        lastTime = seed;\n        const newRandom = (lastRandom = encodeRandom(RANDOM_LEN, currentPRNG));\n        return encodeTime(seed, TIME_LEN) + newRandom;\n    };\n}\n/**\n * Generate a ULID\n * @param seedTime Optional time seed\n * @param prng Optional PRNG function\n * @returns A ULID string\n * @example\n *  ulid(); // \"01HNZXD07M5CEN5XA66EMZSRZW\"\n */\nfunction ulid(seedTime, prng) {\n    const currentPRNG = prng || detectPRNG();\n    const seed = !seedTime || isNaN(seedTime) ? Date.now() : seedTime;\n    return encodeTime(seed, TIME_LEN) + encodeRandom(RANDOM_LEN, currentPRNG);\n}\n\n/**\n * Convert a ULID to a UUID\n * @param ulid The ULID to convert\n * @returns A UUID string\n */\nfunction ulidToUUID(ulid) {\n    const isValid = ULID_REGEX.test(ulid);\n    if (!isValid) {\n        throw new ULIDError(ULIDErrorCode.ULIDInvalid, `Invalid ULID: ${ulid}`);\n    }\n    const uint8Array = crockfordDecode(ulid);\n    let uuid = Array.from(uint8Array)\n        .map(byte => byte.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n    uuid =\n        uuid.substring(0, 8) +\n            \"-\" +\n            uuid.substring(8, 12) +\n            \"-\" +\n            uuid.substring(12, 16) +\n            \"-\" +\n            uuid.substring(16, 20) +\n            \"-\" +\n            uuid.substring(20);\n    return uuid.toUpperCase();\n}\n/**\n * Convert a UUID to a ULID\n * @param uuid The UUID to convert\n * @returns A ULID string\n */\nfunction uuidToULID(uuid) {\n    const isValid = UUID_REGEX.test(uuid);\n    if (!isValid) {\n        throw new ULIDError(ULIDErrorCode.UUIDInvalid, `Invalid UUID: ${uuid}`);\n    }\n    const bytes = uuid.replace(/-/g, \"\").match(/.{1,2}/g);\n    if (!bytes) {\n        throw new ULIDError(ULIDErrorCode.Unexpected, `Failed parsing UUID bytes: ${uuid}`);\n    }\n    const uint8Array = new Uint8Array(bytes.map(byte => parseInt(byte, 16)));\n    return crockfordEncode(uint8Array);\n}\n\nexport { MAX_ULID, MIN_ULID, TIME_LEN, TIME_MAX, ULIDError, ULIDErrorCode, decodeTime, encodeTime, fixULIDBase32, incrementBase32, isValid, monotonicFactory, ulid, ulidToUUID, uuidToULID };\n"],
  "mappings": "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C,SACA,MACA,WACA,eACA,aACA,IACA,KACA,MACA,KACA,MACA,iBACA,qBACA,cACA,SACA,oBACA,gBACA,QACA,eACA,iBACA,sBACA,QACA,OACA,QACA,OACA,kBACA,kBACA,OACA,QACA,SACA,UACA,QACA,YACA,gBACA,YACA,WACAC,SACA,SACA,MACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,YACA,YACA,SACA,cACA,UACA,eACA,WACA,eACA,iBACA,mBACA,oBACA,OACA,kBACA,WACA,4BACA,2BACA,eACA,aACA,cACA,iBACA,UACA,OACA,gBAEI,UA8GC;AAnOP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AACvC,KAAM,EAAE,MAAM,UAAU,aAAa;AAAA,MAC1C;AAAA,IACF;AACA,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACF,CAAC;AACM,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,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A,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD,KAAK;AACJ,aAAO;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACP;AAAA,IACD;AAAA,EACD;AACD;AAEA,SAAS,OAAO,QAAQ,SAAS,SAAS;AACzC,YAAU;AAAA,IACT,QAAQ;AAAA,IACR,GAAG;AAAA,EACJ;AAEA,aAAW,CAAC,OAAO,MAAM,KAAK,QAAQ,QAAQ,GAAG;AAEhD,QAAI,QAAQ,MAAM;AAEjB,UAAI,YAAY,QAAQ,KAAK,KAAK,IAAI,OAAO,QAAQ,QAAQ,MAAM,IAAI;AACtE,eAAO;AAAA,MACR;AAAA,IACD,WAAW,WAAW,OAAO,QAAQ,QAAQ,MAAM,GAAG;AACrD,aAAO;AAAA,IACR;AAAA,EACD;AAEA,SAAO;AACR;AAEA,eAAsB,sBAAsB,WAAW,SAAS;AAC/D,SAAO,IAAI,eAAe,OAAO,EAAE,cAAc,SAAS;AAC3D;AAEA,eAAsB,eAAe,WAAW,SAAS;AACxD,SAAO,IAAI,eAAe,OAAO,EAAE,kBAAkB,WAAW,OAAO;AACxE;AA5LA,IAea,gCA+KA,gBAknDA,qBACA;AAjzDb,IAAAC,aAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAIA,IAAAC;AACA;AACA,IAAAA;AACA;AACA;AAKA;AAEO,IAAM,iCAAiC;AAExB;AAIA;AAIA;AAIb;AAoIA;AAqBa;AAIA;AAIf,IAAM,iBAAN,MAAqB;AAAA,MA9L5B,OA8L4B;AAAA;AAAA;AAAA,MAC3B,YAAY,SAAS;AACpB,aAAK,UAAU;AAAA,UACd,qBAAqB;AAAA,UACrB,GAAG;AAAA,QACJ;AAEA,aAAK,YAAY;AAAA,UAAC,GAAI,SAAS,mBAAmB,CAAC;AAAA,UAClD,EAAC,IAAI,QAAQ,QAAQ,KAAK,gBAAe;AAAA,UACzC,EAAC,IAAI,kBAAkB,QAAQ,KAAK,gBAAe;AAAA,QAAC;AACrD,aAAK,mBAAmB;AAAA,UACvB,aAAa,SAAS;AAAA,QACvB;AAAA,MACD;AAAA,MAEA,MAAM,cAAc,WAAW;AAC9B,cAAM,kBAAkB,UAAU;AAGlC,mBAAW,YAAY,KAAK,WAAW;AACtC,gBAAM,WAAW,MAAM,SAAS,OAAO,SAAS;AAChD,cAAI,UAAU;AACb,mBAAO;AAAA,UACR;AAEA,cAAI,oBAAoB,UAAU,UAAU;AAC3C,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,MAEA,MAAM,WAAW,OAAO;AACvB,YAAI,EAAE,iBAAiB,cAAc,iBAAiB,cAAc;AACnE,gBAAM,IAAI,UAAU,0FAA0F,OAAO,KAAK,IAAI;AAAA,QAC/H;AAEA,cAAM,SAAS,iBAAiB,aAAa,QAAQ,IAAI,WAAW,KAAK;AAEzE,YAAI,EAAE,QAAQ,SAAS,IAAI;AAC1B;AAAA,QACD;AAEA,eAAO,KAAK,cAAsB,WAAW,QAAQ,KAAK,gBAAgB,CAAC;AAAA,MAC5E;AAAA,MAEA,MAAM,SAASH,OAAM;AACpB,eAAO,KAAK,WAAWA,MAAK,OAAO,CAAC;AAAA,MACrC;AAAA,MAEA,MAAM,WAAW,QAAQ;AACxB,cAAM,YAAY,MAAc,cAAc,QAAQ,KAAK,gBAAgB;AAC3E,YAAI;AACH,iBAAO,MAAM,KAAK,cAAc,SAAS;AAAA,QAC1C,UAAE;AACD,gBAAM,UAAU,MAAM;AAAA,QACvB;AAAA,MACD;AAAA,MAEA,MAAM,kBAAkB,QAAQ,SAAS;AACxC,cAAM,EAAC,aAAa,+BAA8B,IAAI;AACtD,YAAI;AACJ,YAAI;AAEJ,cAAM,SAAS,OAAO,UAAU,EAAC,MAAM,OAAM,CAAC;AAC9C,YAAI;AAEH,gBAAM,EAAC,OAAO,OAAO,KAAI,IAAI,MAAM,OAAO,KAAK,IAAI,WAAW,UAAU,CAAC;AACzE,uBAAa;AACb,cAAI,CAAC,QAAQ,OAAO;AACnB,gBAAI;AAEH,iCAAmB,MAAM,KAAK,WAAW,MAAM,SAAS,GAAG,UAAU,CAAC;AAAA,YACvE,SAASI,QAAO;AACf,kBAAI,EAAEA,kBAAyB,mBAAmB;AACjD,sBAAMA;AAAA,cACP;AAEA,iCAAmB;AAAA,YACpB;AAAA,UACD;AAEA,uBAAa;AAAA,QACd,UAAE;AACD,iBAAO,YAAY;AAAA,QACpB;AAGA,cAAM,kBAAkB,IAAI,gBAAgB;AAAA,UAC3C,MAAM,MAAM,YAAY;AACvB,uBAAW,QAAQ,UAAU;AAAA,UAC9B;AAAA,UACA,UAAU,OAAO,YAAY;AAE5B,uBAAW,QAAQ,KAAK;AAAA,UACzB;AAAA,QACD,CAAC;AAED,cAAM,YAAY,OAAO,YAAY,eAAe;AACpD,kBAAU,WAAW;AAErB,eAAO;AAAA,MACR;AAAA,MAEA,MAAM,QAAQ,SAAS;AACtB,eAAO,OAAO,KAAK,QAAQ,QAAQ,OAAO;AAAA,MAC3C;AAAA,MAEA,YAAY,QAAQ,SAAS;AAC5B,eAAO,KAAK,MAAM,cAAc,MAAM,GAAG,OAAO;AAAA,MACjD;AAAA;AAAA,MAGA,kBAAkB,8BAAM,cAAa;AACpC,aAAK,SAAS,IAAI,WAAW,8BAA8B;AAG3D,YAAI,UAAU,SAAS,SAAS,QAAW;AAC1C,oBAAU,SAAS,OAAO,OAAO;AAAA,QAClC;AAEA,aAAK,YAAY;AAEjB,cAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,IAAI,WAAW,KAAI,CAAC;AAIrE,YAAI,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,GAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,CAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,GAAG;AAC7B,gBAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,IAAI,WAAW,KAAI,CAAC;AAErE,cACC,KAAK,YAAY,aAAa,EAAC,QAAQ,EAAC,CAAC,KACtC,KAAK,YAAY,UAAU,EAAC,QAAQ,GAAE,CAAC,GACzC;AACD,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,MAAM,CAAC,IAAM,GAAI,CAAC,KACpB,KAAK,MAAM,CAAC,IAAM,GAAI,CAAC,GACzB;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,GAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,GAAI,CAAC,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,GAAI,CAAC,GAAG;AAEnC,eAAK,UAAU,OAAO,CAAC;AACvB,iBAAO,KAAK,gBAAgB,SAAS;AAAA,QACtC;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,EAAI,CAAC,GAAG;AACnC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,GAAI,CAAC,GAAG;AACnC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,KAAM,CAAG,CAAC,GAAG;AAClC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,GAAI,CAAC,GAAG;AACnC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,KAAK,GAAG;AAC5B,gBAAM,UAAU,OAAO,CAAC;AACxB,gBAAM,kBAAkB,MAAM,UAAU,UAAU,mBAAmB;AACrE,cAAI,UAAU,WAAW,kBAAkB,UAAU,SAAS,MAAM;AAEnE,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,gBAAM,UAAU,OAAO,eAAe;AACtC,iBAAO,KAAK,cAAc,SAAS;AAAA,QACpC;AAGA,YAAI,KAAK,YAAY,KAAK,GAAG;AAC5B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,aACE,KAAK,OAAO,CAAC,MAAM,MAAQ,KAAK,OAAO,CAAC,MAAM,OAC5C,KAAK,MAAM,CAAC,IAAM,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GACtC;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAKA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,GAAI,CAAC,GAAG;AACnC,cAAI,KAAK,MAAM,CAAC,GAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACpC,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,KAAM,CAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,EAAC,QAAQ,EAAC,CAAC,GAAG;AAC1C,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,GAAK,CAAG,CAAC,GAAG;AACvC,cAAI;AACJ,gBAAM,IAAI,WAAW,SAAS,EAAE,MAAM,eAAa;AAClD,oBAAQ,UAAU,UAAU;AAAA,cAC3B,KAAK;AACJ,2BAAW;AAAA,kBACV,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AACA,uBAAO;AAAA,kBACN,MAAM;AAAA,gBACP;AAAA,cACD,KAAK;AACJ,2BAAW;AAAA,kBACV,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AACA,uBAAO;AAAA,kBACN,MAAM;AAAA,gBACP;AAAA,cACD,KAAK;AACJ,uBAAO;AAAA,kBACN,MAAM,QAAQ,UAAU;AAEvB,0BAAM,WAAW,IAAI,YAAY,OAAO,EAAE,OAAO,QAAQ,EAAE,KAAK;AAChE,+BAAW,wBAAwB,QAAQ;AAAA,kBAC5C;AAAA,kBACA,MAAM;AAAA,gBACP;AAAA,cAED,KAAK;AACJ,uBAAO;AAAA,kBACN,MAAM,QAAQ,UAAU;AAEvB,wBAAI,aAAa,IAAI,YAAY,OAAO,EAAE,OAAO,QAAQ;AACzD,0BAAM,SAAS,WAAW,QAAQ,YAAY;AAC9C,wBAAI,WAAW,IAAI;AAClB,4BAAM,WAAW;AACjB,0BAAI,WAAW,SAAS,gBAAgB,QAAQ,GAAG,GAAG;AACrD,mCAAW,wBAAwB,QAAQ;AAAA,sBAC5C;AAAA,oBACD,OAAO;AACN,mCAAa,WAAW,MAAM,GAAG,KAAK,IAAI,GAAG,MAAM,CAAC;AACpD,4BAAM,WAAW,WAAW,YAAY,GAAG;AAC3C,4BAAM,WAAW,WAAW,MAAM,KAAK,IAAI,GAAG,WAAW,CAAC,CAAC;AAC3D,iCAAW,wBAAwB,QAAQ;AAAA,oBAC5C;AAAA,kBACD;AAAA,kBACA,MAAM;AAAA,gBACP;AAAA,cACD;AACC,oBAAI,kBAAkB,KAAK,UAAU,QAAQ,GAAG;AAC/C,6BAAW;AAAA,oBACV,KAAK;AAAA,oBACL,MAAM;AAAA,kBACP;AACA,yBAAO,EAAC,MAAM,KAAI;AAAA,gBACnB;AAEA,uBAAO,CAAC;AAAA,YACV;AAAA,UACD,CAAC;AAED,iBAAO,YAAY;AAAA,YAClB,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAE7B,gBAAM,UAAU,OAAO,EAAE;AACzB,gBAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,gBAAM,UAAU,WAAW,IAAI;AAG/B,cAAI,OAAO,MAAM,CAAC,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,IAAM,GAAI,CAAC,GAAG;AACnE,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,OAAO,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,EAAI,CAAC,GAAG;AAC7D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,OAAO,MAAM,CAAC,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,CAAI,CAAC,GAAG;AAC7D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,OAAO,MAAM,CAAC,KAAM,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACjD,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,OAAO,MAAM,CAAC,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,EAAI,CAAC,GAAG;AAC7D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,OAAO,MAAM,CAAC,GAAM,KAAM,KAAM,KAAM,IAAM,KAAM,GAAI,CAAC,GAAG;AAC7D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,MACnB,KAAK,OAAO,CAAC,MAAM,KAAO,KAAK,OAAO,CAAC,MAAM,KAAO,KAAK,OAAO,CAAC,MAAM,OACvE,KAAK,OAAO,CAAC,MAAM,KAAO,KAAK,OAAO,CAAC,MAAM,KAAO,KAAK,OAAO,CAAC,MAAM,IAC1E;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,YAAY,MAAM,MAEtB,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAC7C,KAAK,YAAY,QAAQ,EAAC,QAAQ,EAAC,CAAC,IAEvC;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,YAAY,MAAM,MAEtB,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAC7C,KAAK,YAAY,QAAQ,EAAC,QAAQ,EAAC,CAAC,IAEvC;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACjF,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAE7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,IAAM,KAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,GAAG;AAC7B,gBAAM,WAAW,MAAM,KAAK,eAAe,KAAK;AAChD,cAAI,UAAU;AACb,mBAAO;AAAA,UACR;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,IAAM,EAAI,CAAC,GAAG;AAC7B,gBAAM,WAAW,MAAM,KAAK,eAAe,IAAI;AAC/C,cAAI,UAAU;AACb,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,KAAM,GAAI,CAAC,GAAG;AACzC,yBAAe,YAAY;AAC1B,kBAAM,MAAM,MAAM,UAAU,WAAiB,KAAK;AAClD,gBAAI,OAAO;AACX,gBAAI,KAAK;AAET,oBAAQ,MAAM,UAAU,KAAK,SAAS,GAAG;AACxC,gBAAE;AACF,uBAAS;AAAA,YACV;AAEA,kBAAM,KAAK,IAAI,WAAW,KAAK,CAAC;AAChC,kBAAM,UAAU,WAAW,EAAE;AAC7B,mBAAO;AAAA,UACR;AAbe;AAef,yBAAe,cAAc;AAC5B,kBAAM,UAAU,MAAM,UAAU;AAChC,kBAAM,cAAc,MAAM,UAAU;AAEpC,wBAAY,CAAC,KAAK,OAAS,YAAY,SAAS;AAChD,kBAAM,WAAW,KAAK,IAAI,GAAG,YAAY,MAAM;AAE/C,kBAAM,SAAS,IAAI,SAAS,QAAQ,MAAM;AAC1C,kBAAM,aAAa,IAAI,SAAS,YAAY,QAAQ,YAAY,SAAS,UAAU,QAAQ;AAE3F,mBAAO;AAAA,cACN,IAAI,UAAU,MAAM;AAAA,cACpB,KAAK,UAAU,UAAU;AAAA,YAC1B;AAAA,UACD;AAde;AAgBf,yBAAe,aAAa,UAAU;AACrC,mBAAO,WAAW,GAAG;AACpB,oBAAM,UAAU,MAAM,YAAY;AAClC,kBAAI,QAAQ,OAAO,OAAS;AAC3B,sBAAM,WAAW,MAAM,UAAU,UAAU,IAAUC,YAAW,QAAQ,GAAG,CAAC;AAC5E,uBAAO,SAAS,WAAW,WAAW,EAAE;AAAA,cACzC;AAEA,oBAAM,UAAU,OAAO,QAAQ,GAAG;AAClC,gBAAE;AAAA,YACH;AAAA,UACD;AAXe;AAaf,gBAAM,KAAK,MAAM,YAAY;AAC7B,gBAAM,eAAe,MAAM,aAAa,GAAG,GAAG;AAE9C,kBAAQ,cAAc;AAAA,YACrB,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YAED,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YAED;AACC;AAAA,UACF;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,YAAY,MAAM,KACpB,KAAK,YAAY,MAAM,GACzB;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,KAAM,IAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,KAAK,KAAK,YAAY,MAAM,GAAG;AACzD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,IAAM,CAAI,CAAC,GAAG;AAC/C,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,OAAO,GAAG;AAC9B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,GAAG;AAC/B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,CAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KAClC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KACrC,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,GACvC;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,GAAI,CAAC,GAAG;AAEzC,cAAI,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,GAAG,MAAM,CAAC,GAAI,EAAC,CAAC,GAAG;AAClD,mBAAO;AAAA,cACN,KAAK;AAAA;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,GAAG,MAAM,CAAC,GAAI,EAAC,CAAC,GAAG;AAClD,mBAAO;AAAA,cACN,KAAK;AAAA;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,MAAM,GAAG;AAC7B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,YAAY,OAAO,GAAG;AAC9B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,KAAM,IAAM,KAAM,IAAM,IAAM,CAAI,CAAC,GAAG;AACrD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,GAAG;AAC/B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,KAAM,KAAM,KAAM,IAAM,EAAI,CAAC,GAAG;AACrD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,MAAM,CAAC,IAAM,IAAM,KAAM,IAAM,IAAM,CAAG,CAAC,MAC1C,KAAK,OAAO,CAAC,MAAM,KAAO,KAAK,OAAO,CAAC,MAAM,IAChD;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,GAAG;AAC/B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,IAAI,GAAG;AAC3B,gBAAMC,WAAU,IAAUD,YAAW,GAAG,QAAQ,EAAE,IAAI,KAAK,QAAQ,CAAC;AACpE,cAAIC,SAAQ,MAAM,KAAK,KAAKA,YAAW,OAAQA,YAAW,MAAM;AAC/D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,GAAG;AAC/B,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,YAAY,SAAS,GAAG;AAChC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,SAAS,GAAG;AAChC,gBAAM,UAAU,OAAO,CAAC;AACxB,gBAAMC,UAAS,MAAM,UAAU,UAAU,IAAUF,YAAW,IAAI,OAAO,CAAC;AAC1E,cAAIE,YAAW,iBAAiB;AAC/B,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,YAAY,QAAQ;AAAA,QAGvB,CAAC,MAAM,MAAM,KAAM,KAAK,IAAI,EAAE,KAAK,WAAS,KAAK,YAAY,OAAO,EAAC,QAAQ,EAAC,CAAC,CAAC,GACjF;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,KAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AASjE,gBAAM,UAAU,OAAO,CAAC;AAExB,yBAAe,kBAAkB;AAChC,mBAAO;AAAA,cACN,QAAQ,MAAM,UAAU,UAAgB,QAAQ;AAAA,cAChD,MAAM,MAAM,UAAU,UAAU,IAAUF,YAAW,GAAG,QAAQ,CAAC;AAAA,YAClE;AAAA,UACD;AALe;AAOf,aAAG;AACF,kBAAM,QAAQ,MAAM,gBAAgB;AACpC,gBAAI,MAAM,SAAS,GAAG;AACrB;AAAA,YACD;AAEA,oBAAQ,MAAM,MAAM;AAAA,cACnB,KAAK;AACJ,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD,KAAK;AACJ,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD;AACC,sBAAM,UAAU,OAAO,MAAM,SAAS,CAAC;AAAA,YACzC;AAAA,UACD,SAAS,UAAU,WAAW,IAAI,UAAU,SAAS;AAErD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,CAAI,CAAC,GAAG;AACjE,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,IAAM,IAAM,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AACjE,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YACC,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAC7C,KAAK,MAAM,CAAC,KAAM,KAAM,IAAM,GAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAChD,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAChD,KAAK,MAAM,CAAC,KAAM,KAAM,KAAM,GAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAClD;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAI,CAAC,GAAG;AACvE,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,WAAW,GAAG;AAClC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAMA,YACC,KAAK,YAAY,QAAQ,EAAC,QAAQ,EAAC,CAAC,MAChC,KAAK,OAAO,CAAC,IAAI,QAAU,GAC9B;AAGD,gBAAM,aAAa,IAAUA,YAAW,GAAG,QAAQ,EAAE,IAAI,KAAK,QAAQ,CAAC,EAAE,QAAQ,MAAM,GAAG,EAAE,KAAK;AACjG,kBAAQ,YAAY;AAAA,YACnB,KAAK;AAAA,YACL,KAAK;AACJ,qBAAO,EAAC,KAAK,QAAQ,MAAM,aAAY;AAAA,YACxC,KAAK;AACJ,qBAAO,EAAC,KAAK,QAAQ,MAAM,aAAY;AAAA,YACxC,KAAK;AACJ,qBAAO,EAAC,KAAK,QAAQ,MAAM,sBAAqB;AAAA,YACjD,KAAK;AAAA,YACL,KAAK;AACJ,qBAAO,EAAC,KAAK,QAAQ,MAAM,aAAY;AAAA,YACxC,KAAK;AAAA,YACL,KAAK;AACJ,qBAAO,EAAC,KAAK,QAAQ,MAAM,sBAAqB;AAAA,YACjD,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,kBAAiB;AAAA,YAC5C,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,cAAa;AAAA,YACxC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,cAAa;AAAA,YACxC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,YACtC,KAAK;AACJ,qBAAO,EAAC,KAAK,OAAO,MAAM,oBAAmB;AAAA,YAC9C;AACC,kBAAI,WAAW,WAAW,IAAI,GAAG;AAChC,oBAAI,WAAW,WAAW,KAAK,GAAG;AACjC,yBAAO,EAAC,KAAK,OAAO,MAAM,cAAa;AAAA,gBACxC;AAEA,uBAAO,EAAC,KAAK,OAAO,MAAM,aAAY;AAAA,cACvC;AAEA,qBAAO,EAAC,KAAK,OAAO,MAAM,YAAW;AAAA,UACvC;AAAA,QACD;AAKA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzC,cAAI,KAAK,YAAY,QAAQ,EAAC,QAAQ,EAAC,CAAC,GAAG;AAC1C,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,cAAI,KAAK,MAAM,CAAC,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AAChD,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,cAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACtD,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACtD,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,KAAM,KAAM,KAAM,GAAI,CAAC,GAAG;AACzF,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,GAAI,CAAC,GAAG;AAC7E,yBAAe,aAAa;AAC3B,kBAAM,OAAO,IAAI,WAAW,EAAE;AAC9B,kBAAM,UAAU,WAAW,IAAI;AAC/B,mBAAO;AAAA,cACN,IAAI;AAAA,cACJ,MAAM,OAAO,MAAM,UAAU,UAAgB,SAAS,CAAC;AAAA,YACxD;AAAA,UACD;AAPe;AASf,gBAAM,UAAU,OAAO,EAAE;AAEzB,iBAAO,UAAU,WAAW,KAAK,UAAU,SAAS,MAAM;AACzD,kBAAM,SAAS,MAAM,WAAW;AAChC,gBAAI,UAAU,OAAO,OAAO;AAC5B,gBAAI,OAAO,OAAO,IAAI,CAAC,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,GAAM,KAAM,IAAM,IAAM,IAAM,GAAI,CAAC,GAAG;AAExH,oBAAM,SAAS,IAAI,WAAW,EAAE;AAChC,yBAAW,MAAM,UAAU,WAAW,MAAM;AAE5C,kBAAI,OAAO,QAAQ,CAAC,IAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,KAAM,GAAM,KAAM,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AAErH,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD;AAEA,kBAAI,OAAO,QAAQ,CAAC,KAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,KAAM,GAAM,KAAM,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AAErH,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD;AAEA;AAAA,YACD;AAEA,kBAAM,UAAU,OAAO,OAAO;AAAA,UAC/B;AAGA,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAM,IAAM,IAAM,IAAM,EAAI,CAAC,GAAG;AACzF,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,aAAK,KAAK,MAAM,CAAC,KAAM,IAAM,CAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAM,IAAM,CAAI,CAAC,MAAM,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AAC5H,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACtG,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,IAAM,KAAM,EAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,IAAM,KAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAM,EAAI,CAAC,GAAG;AAGzF,gBAAM,UAAU,OAAO,EAAE;AACzB,gBAAM,OAAO,MAAM,UAAU,UAAU,IAAUA,YAAW,GAAG,OAAO,CAAC;AACvE,kBAAQ,MAAM;AAAA,YACb,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD,KAAK;AACJ,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD;AACC;AAAA,UACF;AAAA,QACD;AAEA,YACC,KAAK,MAAM,CAAC,KAAM,EAAI,CAAC,KACpB,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAM,EAAI,CAAC,GACrF;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,GAAI,CAAC,GAAG;AAC7B,cAAI,KAAK,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACpE,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,GAAI,CAAC,GAAG;AAEjE,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,cAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,KAAK,IAAI,KAAK,UAAU,SAAS,IAAI,GAAG,WAAW,KAAI,CAAC;AAEzG,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,KAAM,GAAI,GAAG,EAAC,QAAQ,GAAE,CAAC,GAAG;AACvD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,KAAK,KAAK,YAAY,MAAM,EAAC,QAAQ,GAAE,CAAC,GAAG;AACnF,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAIA,YAAI,KAAK,YAAY,QAAQ,GAAG;AAC/B,cAAI,KAAK,YAAY,SAAS,EAAC,QAAQ,EAAC,CAAC,GAAG;AAC3C,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,cAAI,KAAK,YAAY,aAAa,EAAC,QAAQ,EAAC,CAAC,GAAG;AAC/C,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAGA,YAAI,KAAK,YAAY,iBAAiB,GAAG;AACxC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,kBAAkB,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,qBAAqB,GAAG;AAC5C,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,CAAI,CAAC,KAAK,KAAK,OAAO,UAAU,IAAI;AACrE,gBAAM,WAAW,IAAI,SAAS,KAAK,OAAO,MAAM,EAAE,UAAU,IAAI,IAAI;AAEpE,cAAI,WAAW,MAAM,KAAK,OAAO,UAAU,WAAW,IAAI;AACzD,gBAAI;AACH,oBAAM,SAAS,IAAI,YAAY,EAAE,OAAO,KAAK,OAAO,SAAS,IAAI,WAAW,EAAE,CAAC;AAC/E,oBAAM,OAAO,KAAK,MAAM,MAAM;AAE9B,kBAAI,KAAK,OAAO;AACf,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD;AAAA,YACD,QAAQ;AAAA,YAAC;AAAA,UACV;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AACrG,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,QAAQ,EAAC,QAAQ,GAAE,CAAC,GAAG;AAC3C,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,EAAI,CAAC,KAAK,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,IAAG,CAAC,GAAG;AAC5D,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,YAAI,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAAK,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,IAAG,CAAC,GAAG;AACzE,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,GAAE,CAAC,GAAG;AAC/E,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,IAAM,IAAM,EAAI,GAAG,EAAC,QAAQ,IAAG,CAAC,GAAG;AACxD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAI,CAAC,GAAG;AACzI,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,IAAM,KAAM,KAAM,KAAM,GAAM,GAAM,GAAM,GAAM,KAAM,IAAM,KAAM,KAAM,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AACjH,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,wBAA4B,GAAG;AACnD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA;AAAA,UACP;AAAA,QACD;AAEA,YACC,KAAK,MAAM,CAAC,IAAM,EAAI,GAAG,EAAC,QAAQ,GAAE,CAAC,MAEpC,KAAK,MAAM,CAAC,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KACvC,KAAK,MAAM,CAAC,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,KAC1C,KAAK,MAAM,CAAC,GAAM,GAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,IAE7C;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,EAAI,CAAC,GAAG;AACjH,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,cAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,KAAK,IAAI,KAAK,UAAU,SAAS,IAAI,GAAG,WAAW,KAAI,CAAC;AAGzG,YAAK,KAAK,YAAY,SAAS,EAAC,QAAQ,IAAG,CAAC,MAAM,KAAK,YAAY,MAAM,EAAC,QAAQ,IAAG,CAAC,KAAK,KAAK,YAAY,KAAK,EAAC,QAAQ,IAAG,CAAC,MACzH,KAAK,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAC,QAAQ,IAAG,CAAC,KAAK,yBAAyB,KAAK,MAAM,GAAI;AAC7F,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,KAAM,GAAI,CAAC,GAAG;AAC7B,cAAI,KAAK,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AACpE,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,cAAI,KAAK,MAAM,CAAC,KAAM,IAAM,IAAM,GAAM,KAAM,GAAM,KAAM,GAAM,KAAM,GAAM,IAAM,GAAM,KAAM,GAAM,IAAM,GAAM,KAAM,GAAM,IAAM,GAAM,IAAM,GAAM,KAAM,GAAM,KAAM,GAAM,KAAM,GAAM,KAAM,CAAI,GAAG,EAAC,QAAQ,EAAC,CAAC,GAAG;AAClN,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAEA,YAAI,KAAK,YAAY,6BAA6B,GAAG;AACpD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAAA,MACD,GAh1CkB;AAAA;AAAA,MAk1ClB,kBAAkB,8BAAM,cAAa;AACpC,aAAK,SAAS,IAAI,WAAW,8BAA8B;AAG3D,cAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,KAAK,IAAI,GAAG,UAAU,SAAS,IAAI,GAAG,WAAW,KAAI,CAAC;AAEvG,YACC,KAAK,MAAM,CAAC,GAAK,GAAK,GAAK,GAAI,CAAC,KAC7B,KAAK,MAAM,CAAC,GAAK,GAAK,GAAK,GAAI,CAAC,GAClC;AACD,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AAC/C,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAI,KAAK,MAAM,CAAC,GAAM,GAAM,GAAM,CAAI,CAAC,GAAG;AACzC,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAGA,cAAM,UAAU,WAAW,KAAK,QAAQ,EAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,QAAQ,qBAAqB,UAAU,SAAS,IAAI,GAAG,WAAW,KAAI,CAAC;AAG1I,YAAI,KAAK,OAAO,UAAW,IAAI,KAAK,QAAQ,qBAAsB;AACjE,mBAAS,QAAQ,GAAG,SAAS,KAAK,QAAQ,qBAAqB,EAAE,OAAO;AACvE,kBAAM,OAAO,KAAK,SAAS,KAAK;AAChC,gBAAI,MAAM;AACT,qBAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,MACD,GAjDkB;AAAA,MAmDlB,MAAM,YAAY,WAAW;AAC5B,cAAM,QAAQ,MAAM,KAAK,UAAU,UAAU,YAAkB,YAAkB,SAAS;AAC1F,aAAK,UAAU,OAAO,EAAE;AACxB,gBAAQ,OAAO;AAAA,UACd,KAAK;AACJ,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD,KAAK;AACJ,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MAEA,MAAM,YAAY,WAAW;AAC5B,cAAM,eAAe,MAAM,KAAK,UAAU,UAAU,YAAkB,YAAkB,SAAS;AACjG,iBAAS,IAAI,GAAG,IAAI,cAAc,EAAE,GAAG;AACtC,gBAAM,WAAW,MAAM,KAAK,YAAY,SAAS;AACjD,cAAI,UAAU;AACb,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,MAEA,MAAM,eAAe,WAAW;AAC/B,cAAMC,YAAW,YAAkB,YAAkB,WAAW,IAAI,KAAK,QAAQ,CAAC;AAClF,cAAM,aAAa,YAAkB,YAAkB,WAAW,IAAI,KAAK,QAAQ,CAAC;AAEpF,YAAIA,aAAY,IAAI;AAEnB,cAAI,aAAa,GAAG;AACnB,gBAAI,KAAK,YAAY,MAAM,EAAC,QAAQ,EAAC,CAAC,GAAG;AACxC,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD;AAEA,gBAAI,aAAa,GAAG;AACnB,oBAAM,WAAW,YAAkB,YAAkB,WAAW,IAAI,KAAK,QAAQ,CAAC;AAClF,oBAAM,WAAW,YAAkB,YAAkB,WAAW,IAAI,KAAK,QAAQ,EAAE;AAEnF,kBACE,YAAY,MAAQ,YAAY,OAC7B,YAAY,MAAQ,YAAY,IAAO;AAC3C,uBAAO;AAAA,kBACN,KAAK;AAAA,kBACL,MAAM;AAAA,gBACP;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,gBAAM,KAAK,UAAU,OAAO,SAAS;AACrC,gBAAM,WAAW,MAAM,KAAK,YAAY,SAAS;AACjD,iBAAO,YAAY;AAAA,YAClB,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAEA,YAAIA,aAAY,IAAI;AACnB,iBAAO;AAAA,YACN,KAAK;AAAA,YACL,MAAM;AAAA,UACP;AAAA,QACD;AAAA,MACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,SAAS,QAAQ;AAChB,YAAI,KAAK,MAAM,CAAC,KAAM,GAAI,GAAG,EAAC,QAAQ,MAAM,CAAC,KAAM,GAAI,EAAC,CAAC,GAAG;AAC3D,cAAI,KAAK,MAAM,CAAC,EAAI,GAAG,EAAC,QAAQ,SAAS,GAAG,MAAM,CAAC,EAAI,EAAC,CAAC,GAAG;AAE3D,gBAAI,KAAK,MAAM,CAAC,CAAI,GAAG,EAAC,QAAQ,SAAS,GAAG,MAAM,CAAC,CAAI,EAAC,CAAC,GAAG;AAC3D,qBAAO;AAAA,gBACN,KAAK;AAAA,gBACL,MAAM;AAAA,cACP;AAAA,YACD;AAGA,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAIA,cAAI,KAAK,MAAM,CAAC,CAAI,GAAG,EAAC,QAAQ,SAAS,GAAG,MAAM,CAAC,CAAI,EAAC,CAAC,GAAG;AAC3D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,KAAK,MAAM,CAAC,CAAI,GAAG,EAAC,QAAQ,SAAS,GAAG,MAAM,CAAC,CAAI,EAAC,CAAC,GAAG;AAC3D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAGA,cAAI,KAAK,MAAM,CAAC,CAAI,GAAG,EAAC,QAAQ,SAAS,GAAG,MAAM,CAAC,CAAI,EAAC,CAAC,GAAG;AAC3D,mBAAO;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,YACP;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEO,IAAM,sBAAsB,IAAI,IAAI,UAAU;AAC9C,IAAM,qBAAqB,IAAI,IAAI,SAAS;AAAA;AAAA;;;ACjzDnD;AAAA;AAAA;AAAA;AAAA,IAAAE;AAAA,aAAS,QAASC,QAAO;AACvB,UAAI,cAAc;AAClB,UAAI,OAAO,CAAC;AAEZ,eAAS,SAAU;AACjB;AAEA,YAAI,cAAcA,QAAO;AACvB,kBAAQ;AAAA,QACV;AAAA,MACF;AANS;AAQT,eAAS,UAAW;AAClB,YAAI,MAAM,KAAK,MAAM;AACrB,kBAAU,QAAQ,KAAK;AAEvB,YAAI,KAAK;AACP,cAAI,IAAI,EAAE,EAAE,KAAK,IAAI,OAAO,EAAE,MAAM,IAAI,MAAM;AAAA,QAChD;AAAA,MACF;AAPS;AAST,eAAS,MAAO,IAAI;AAClB,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,eAAK,KAAK,EAAC,IAAQ,SAAkB,OAAc,CAAC;AACpD,oBAAU,QAAQ,KAAK;AAAA,QACzB,CAAC;AAAA,MACH;AALS;AAOT,eAAS,IAAK,IAAI;AAChB;AACA,YAAI;AACF,iBAAO,QAAQ,QAAQ,GAAG,CAAC,EAAE,KAAK,SAAU,QAAQ;AAClD,mBAAO;AACP,mBAAO;AAAA,UACT,GAAG,SAAUC,QAAO;AAClB,mBAAO;AACP,kBAAMA;AAAA,UACR,CAAC;AAAA,QACH,SAASC,MAAK;AACZ,iBAAO;AACP,iBAAO,QAAQ,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACF;AAdS;AAgBT,UAAI,YAAY,gCAAU,IAAI;AAC5B,YAAI,eAAeF,QAAO;AACxB,iBAAO,MAAM,EAAE;AAAA,QACjB,OAAO;AACL,iBAAO,IAAI,EAAE;AAAA,QACf;AAAA,MACF,GANgB;AAQhB,aAAO;AAAA,IACT;AArDS;AAuDT,aAASG,KAAK,OAAO,QAAQ;AAC3B,UAAI,SAAS;AAEb,UAAI,QAAQ;AAEZ,aAAO,QAAQ,IAAI,MAAM,IAAI,WAAY;AACvC,YAAI,OAAO;AACX,eAAO,MAAM,WAAY;AACvB,cAAI,CAAC,QAAQ;AACX,mBAAO,OAAO,MAAM,QAAW,IAAI,EAAE,MAAM,SAAU,GAAG;AACtD,uBAAS;AACT,oBAAM;AAAA,YACR,CAAC;AAAA,UACH;AAAA,QACF,CAAC;AAAA,MACH,CAAC,CAAC;AAAA,IACJ;AAhBS,WAAAA,MAAA;AAkBT,aAAS,UAAW,IAAI;AACtB,SAAG,QAAQ;AACX,SAAG,MAAMA;AACT,aAAO;AAAA,IACT;AAJS;AAMT,WAAO,UAAU,SAAUH,QAAO;AAChC,UAAIA,QAAO;AACT,eAAO,UAAU,QAAQA,MAAK,CAAC;AAAA,MACjC,OAAO;AACL,eAAO,UAAU,SAAU,IAAI;AAC7B,iBAAO,GAAG;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;ACvFA;AAAA;AAAAI;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;AAIO,SAAS,eAAe,OAAO,KAAK;AACvC,SAAO,OAAO;AAClB;AAFgB;AAOT,SAAS,gBAAgB,OAAO;AACnC,SAAO,SAAS,KAAK,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,OAAO,iBAAiB;AACjG;AAFgB;AAIT,SAAS,QAAQ,OAAO;AAC3B,SAAO,MAAM,QAAQ,KAAK;AAC9B;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,UAAU,OAAO;AAC7B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,OAAO,OAAO;AAC1B,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAIT,SAAS,WAAW,OAAO;AAC9B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,WAAW,OAAO;AAC9B,SAAO,SAAS,KAAK,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,OAAO,YAAY;AAC5F;AAFgB;AAIT,SAAS,OAAO,OAAO;AAC1B,SAAO,UAAU;AACrB;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,OAAO,UAAU,YAAY,UAAU;AAClD;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB;AAIT,SAAS,aAAa,OAAO;AAChC,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAIT,SAAS,YAAY,OAAO;AAC/B,SAAO,UAAU;AACrB;AAFgB;;;ADlEhB,SAAS,UAAU,OAAO;AACtB,SAAO,MAAM,IAAI,CAACC,WAAU,MAAMA,MAAK,CAAC;AAC5C;AAFS;AAGT,SAAS,SAAS,OAAO;AACrB,SAAO,IAAI,KAAK,MAAM,QAAQ,CAAC;AACnC;AAFS;AAGT,SAAS,eAAe,OAAO;AAC3B,SAAO,IAAI,WAAW,KAAK;AAC/B;AAFS;AAGT,SAAS,WAAW,OAAO;AACvB,SAAO,IAAI,OAAO,MAAM,QAAQ,MAAM,KAAK;AAC/C;AAFS;AAGT,SAAS,WAAW,OAAO;AACvB,QAAM,SAAS,CAAC;AAChB,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,WAAO,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC;AAAA,EAClC;AACA,aAAW,OAAO,OAAO,sBAAsB,KAAK,GAAG;AACnD,WAAO,GAAG,IAAI,MAAM,MAAM,GAAG,CAAC;AAAA,EAClC;AACA,SAAO;AACX;AATS;AAWT,SAAS,MAAM,OAAO;AAClB,SAAmB,QAAQ,KAAK,IAAI,UAAU,KAAK,IACpC,OAAO,KAAK,IAAI,SAAS,KAAK,IAC1B,aAAa,KAAK,IAAI,eAAe,KAAK,IACtC,SAAS,KAAK,IAAI,WAAW,KAAK,IAC9B,SAAS,KAAK,IAAI,WAAW,KAAK,IACzC;AACxB;AAPS;AASF,SAAS,MAAM,OAAO;AACzB,SAAO,MAAM,KAAK;AACtB;AAFgB;;;AD3BT,SAAS,UAAU,QAAQ,SAAS;AACvC,SAAO,YAAY,SAAY,MAAM,MAAM,IAAI,MAAM,EAAE,GAAG,SAAS,GAAG,OAAO,CAAC;AAClF;AAFgB;;;AGNhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIO,SAASC,iBAAgB,OAAO;AACnC,SAAOC,UAAS,KAAK,KAAK,WAAW,OAAO,iBAAiB;AACjE;AAFgB,OAAAD,kBAAA;AAIT,SAASE,YAAW,OAAO;AAC9B,SAAOD,UAAS,KAAK,KAAK,WAAW,OAAO,YAAY;AAC5D;AAFgB,OAAAC,aAAA;AAOT,SAAS,iBAAiB,OAAO;AACpC,SAAOD,UAAS,KAAK,MAAM,WAAW,OAAO,eAAe,KAAK,MAAM,OAAO,aAAa,WAAW,OAAO,eAAe,KAAK,MAAM;AAC3I;AAFgB;AAWT,SAAS,UAAU,OAAO;AAC7B,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAIT,SAASE,QAAO,OAAO;AAC1B,SAAO,iBAAiB,QAAQ,WAAW,OAAO,SAAS,MAAM,QAAQ,CAAC;AAC9E;AAFgB,OAAAA,SAAA;AAIT,SAAS,MAAM,OAAO;AACzB,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAIT,SAAS,MAAM,OAAO;AACzB,SAAO,iBAAiB,WAAW;AACvC;AAFgB;AAQT,SAAS,aAAa,OAAO;AAChC,SAAO,WAAW,YAAY,OAAO,KAAK;AAC9C;AAFgB;AAQT,SAASC,cAAa,OAAO;AAChC,SAAO,iBAAiB,WAAW;AACvC;AAFgB,OAAAA,eAAA;AA2CT,SAASC,gBAAe,OAAO,KAAK;AACvC,SAAO,OAAO;AAClB;AAFgB,OAAAA,iBAAA;AAOT,SAASC,UAAS,OAAO;AAC5B,SAAO,UAAU,QAAQ,OAAO,UAAU;AAC9C;AAFgB,OAAAA,WAAA;AAIT,SAASC,SAAQ,OAAO;AAC3B,SAAO,WAAW,MAAM,QAAQ,KAAK,KAAK,CAAC,WAAW,YAAY,OAAO,KAAK;AAClF;AAFgB,OAAAA,UAAA;AAIT,SAASC,aAAY,OAAO;AAC/B,SAAO,UAAU;AACrB;AAFgB,OAAAA,cAAA;AAIT,SAASC,QAAO,OAAO;AAC1B,SAAO,UAAU;AACrB;AAFgB,OAAAA,SAAA;AAIT,SAASC,WAAU,OAAO;AAC7B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,YAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,WAAA;AAIT,SAAS,UAAU,OAAO;AAC7B,SAAO,WAAW,OAAO,UAAU,KAAK;AAC5C;AAFgB;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,WAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,WAAA;AAIT,SAASC,YAAW,OAAO;AAC9B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,aAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,OAAO,UAAU;AAC5B;AAFgB,OAAAA,WAAA;AAIT,SAAS,YAAY,OAAO;AAE/B,SAAQH,UAAS,KAAK,KAClBF,WAAU,KAAK,KACfD,QAAO,KAAK,KACZE,UAAS,KAAK,KACdE,UAAS,KAAK,KACdE,UAAS,KAAK,KACdP,aAAY,KAAK;AACzB;AATgB;;;ADnJT,IAAI;AAAA,CACV,SAAUQ,mBAAkB;AAYzB,EAAAA,kBAAiB,eAAe;AAKhC,EAAAA,kBAAiB,6BAA6B;AAE9C,EAAAA,kBAAiB,mBAAmB;AAEpC,EAAAA,kBAAiB,WAAW;AAE5B,EAAAA,kBAAiB,gBAAgB;AAEjC,WAAS,wBAAwB,OAAO,KAAK;AACzC,WAAOA,kBAAiB,6BAA6B,OAAO,QAAQ,MAAM,GAAG,MAAM;AAAA,EACvF;AAFS;AAGT,EAAAA,kBAAiB,0BAA0B;AAE3C,WAAS,aAAa,OAAO;AACzB,UAAMC,YAAWC,UAAS,KAAK;AAC/B,WAAOF,kBAAiB,mBAAmBC,YAAWA,aAAY,CAACE,SAAQ,KAAK;AAAA,EACpF;AAHS;AAIT,EAAAH,kBAAiB,eAAe;AAEhC,WAAS,aAAa,OAAO;AACzB,WAAO,aAAa,KAAK,KAAK,EAAE,iBAAiB,SAAS,EAAE,iBAAiB;AAAA,EACjF;AAFS;AAGT,EAAAA,kBAAiB,eAAe;AAEhC,WAAS,aAAa,OAAO;AACzB,WAAOA,kBAAiB,WAAWI,UAAS,KAAK,IAAI,OAAO,SAAS,KAAK;AAAA,EAC9E;AAFS;AAGT,EAAAJ,kBAAiB,eAAe;AAEhC,WAAS,WAAW,OAAO;AACvB,UAAM,cAAcK,aAAY,KAAK;AACrC,WAAOL,kBAAiB,gBAAgB,eAAe,UAAU,OAAO;AAAA,EAC5E;AAHS;AAIT,EAAAA,kBAAiB,aAAa;AAClC,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;;;AErD9C;AAAA;AAAAM;AACA,SAAS,eAAe,OAAO;AAC3B,SAAO,WAAW,OAAO,OAAO,KAAK,EAAE,IAAI,CAACC,WAAU,UAAUA,MAAK,CAAC;AAC1E;AAFS;AAGT,SAAS,cAAc,OAAO;AAC1B,SAAO;AACX;AAFS;AAGT,SAAS,oBAAoB,OAAO;AAChC,SAAO;AACX;AAFS;AAGT,SAAS,gBAAgB,OAAO;AAC5B,SAAO;AACX;AAFS;AAGT,SAAS,gBAAgB,OAAO;AAC5B,QAAM,SAAS,CAAC;AAChB,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,WAAO,GAAG,IAAI,UAAU,MAAM,GAAG,CAAC;AAAA,EACtC;AACA,aAAW,OAAO,OAAO,sBAAsB,KAAK,GAAG;AACnD,WAAO,GAAG,IAAI,UAAU,MAAM,GAAG,CAAC;AAAA,EACtC;AACA,SAAO,WAAW,OAAO,OAAO,MAAM;AAC1C;AATS;AAYF,SAAS,UAAU,OAAO;AAC7B,SAAmB,QAAQ,KAAK,IAAI,eAAe,KAAK,IACzC,OAAO,KAAK,IAAI,cAAc,KAAK,IAC/B,aAAa,KAAK,IAAI,oBAAoB,KAAK,IAC3C,SAAS,KAAK,IAAI,gBAAgB,KAAK,IACnC,SAAS,KAAK,IAAI,gBAAgB,KAAK,IAC9C;AACxB;AAPgB;;;AHrBT,SAAS,WAAW,QAAQ,SAAS;AACxC,QAAM,SAAS,YAAY,SAAY,EAAE,GAAG,SAAS,GAAG,OAAO,IAAI;AACnE,UAAQ,iBAAiB,cAAc;AAAA,IACnC,KAAK;AACD,aAAO,UAAU,MAAM;AAAA,IAC3B,KAAK;AACD,aAAO,MAAM,MAAM;AAAA,IACvB;AACI,aAAO;AAAA,EACf;AACJ;AAVgB;;;AIJhB;AAAA;AAAAC;AACO,IAAM,eAAN,cAA2B,MAAM;AAAA,EADxC,OACwC;AAAA;AAAA;AAAA,EACpC,YAAY,SAAS;AACjB,UAAM,OAAO;AAAA,EACjB;AACJ;;;ACLA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AACO,IAAM,gBAAgB,OAAO,IAAI,mBAAmB;AAEpD,IAAM,eAAe,OAAO,IAAI,kBAAkB;AAElD,IAAM,eAAe,OAAO,IAAI,kBAAkB;AAElD,IAAM,OAAO,OAAO,IAAI,cAAc;AAEtC,IAAM,OAAO,OAAO,IAAI,cAAc;;;ADNtC,SAAS,WAAW,OAAO;AAC9B,SAAkB,SAAS,KAAK,KAAK,MAAM,YAAY,MAAM;AACjE;AAFgB;AAIT,SAAS,WAAW,OAAO;AAC9B,SAAkB,SAAS,KAAK,KAAK,MAAM,YAAY,MAAM;AACjE;AAFgB;AAIT,SAAS,MAAM,OAAO;AACzB,SAAO,SAAS,OAAO,KAAK;AAChC;AAFgB;AAIT,SAAS,WAAW,OAAO;AAC9B,SAAO,SAAS,OAAO,UAAU;AACrC;AAFgB;AAIT,SAASC,SAAQ,OAAO;AAC3B,SAAO,SAAS,OAAO,OAAO;AAClC;AAFgB,OAAAA,UAAA;AAIT,SAASC,iBAAgB,OAAO;AACnC,SAAO,SAAS,OAAO,eAAe;AAC1C;AAFgB,OAAAA,kBAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAASC,WAAU,OAAO;AAC7B,SAAO,SAAS,OAAO,SAAS;AACpC;AAFgB,OAAAA,YAAA;AAIT,SAAS,WAAW,OAAO;AAC9B,SAAO,SAAS,OAAO,UAAU;AACrC;AAFgB;AAIT,SAAS,cAAc,OAAO;AACjC,SAAO,SAAS,OAAO,aAAa;AACxC;AAFgB;AAIT,SAASC,QAAO,OAAO;AAC1B,SAAO,SAAS,OAAO,MAAM;AACjC;AAFgB,OAAAA,SAAA;AAIT,SAASC,YAAW,OAAO;AAC9B,SAAO,SAAS,OAAO,UAAU;AACrC;AAFgB,OAAAA,aAAA;AAQT,SAASC,WAAU,OAAO;AAC7B,SAAO,SAAS,OAAO,SAAS;AACpC;AAFgB,OAAAA,YAAA;AAQT,SAAS,YAAY,OAAO;AAC/B,SAAO,SAAS,OAAO,WAAW;AACtC;AAFgB;AAIT,SAASC,YAAW,OAAO;AAC9B,SAAO,SAAS,OAAO,UAAU;AACrC;AAFgB,OAAAA,aAAA;AAIT,SAAS,SAAS,OAAO,MAAM;AAClC,SAAkB,SAAS,KAAK,KAAK,QAAQ,SAAS,MAAM,IAAI,MAAM;AAC1E;AAFgB;AAgBT,SAAS,eAAe,OAAO;AAClC,SAAkB,UAAU,KAAK,KAAgB,SAAS,KAAK,KAAgB,SAAS,KAAK;AACjG;AAFgB;AAIT,SAAS,UAAU,OAAO;AAC7B,SAAO,SAAS,OAAO,SAAS;AACpC;AAFgB;AAIT,SAAS,YAAY,OAAO;AAC/B,SAAO,SAAS,OAAO,WAAW;AACtC;AAFgB;AAIT,SAAS,eAAe,OAAO;AAClC,SAAO,SAAS,OAAO,cAAc;AACzC;AAFgB;AAIT,SAAS,QAAQ,OAAO;AAC3B,SAAO,SAAS,OAAO,OAAO;AAClC;AAFgB;AAIT,SAAS,MAAM,OAAO;AACzB,SAAO,SAAS,OAAO,KAAK;AAChC;AAFgB;AAIT,SAASC,QAAO,OAAO;AAC1B,SAAO,SAAS,OAAO,MAAM;AACjC;AAFgB,OAAAA,SAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAASC,WAAU,OAAO;AAC7B,SAAO,SAAS,OAAO,SAAS;AACpC;AAFgB,OAAAA,YAAA;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB;AAQT,SAAS,MAAM,OAAO;AACzB,SAAO,SAAS,OAAO,KAAK;AAChC;AAFgB;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAASC,UAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAA,WAAA;AAIT,SAAS,kBAAkB,OAAO;AACrC,SAAO,SAAS,OAAO,iBAAiB;AAC5C;AAFgB;AAIT,SAAS,OAAO,OAAO;AAC1B,SAAO,SAAS,OAAO,MAAM;AACjC;AAFgB;AAIT,SAAS,YAAY,OAAO;AAC/B,SAAkB,SAAS,KAAK,KAAK,iBAAiB;AAC1D;AAFgB;AAIT,SAAS,QAAQ,OAAO;AAC3B,SAAO,SAAS,OAAO,OAAO;AAClC;AAFgB;AAIT,SAASC,aAAY,OAAO;AAC/B,SAAO,SAAS,OAAO,WAAW;AACtC;AAFgB,OAAAA,cAAA;AAIT,SAAS,QAAQ,OAAO;AAC3B,SAAO,SAAS,OAAO,OAAO;AAClC;AAFgB;AAIT,SAASC,cAAa,OAAO;AAChC,SAAO,SAAS,OAAO,YAAY;AACvC;AAFgB,OAAAA,eAAA;AAIT,SAAS,UAAU,OAAO;AAC7B,SAAO,SAAS,OAAO,SAAS;AACpC;AAFgB;AAIT,SAAS,SAAS,OAAO;AAC5B,SAAO,SAAS,OAAO,QAAQ;AACnC;AAFgB;AAIT,SAAS,OAAO,OAAO;AAC1B,SAAO,SAAS,OAAO,MAAM;AACjC;AAFgB;AAIT,SAAS,OAAO,OAAO;AAC1B,SAAkB,SAAS,KAAK,KAAK,QAAQ,SAAoB,SAAS,MAAM,IAAI,CAAC;AACzF;AAFgB;AAIT,SAAS,SAAS,OAAO;AAE5B,SAAQ,MAAM,KAAK,KACf,WAAW,KAAK,KAChBC,SAAQ,KAAK,KACbC,WAAU,KAAK,KACfC,UAAS,KAAK,KACdC,iBAAgB,KAAK,KACrB,WAAW,KAAK,KAChB,cAAc,KAAK,KACnBC,QAAO,KAAK,KACZC,YAAW,KAAK,KAChBC,WAAU,KAAK,KACf,YAAY,KAAK,KACjBC,YAAW,KAAK,KAChB,UAAU,KAAK,KACf,YAAY,KAAK,KACjB,eAAe,KAAK,KACpB,QAAQ,KAAK,KACb,MAAM,KAAK,KACXC,QAAO,KAAK,KACZC,UAAS,KAAK,KACdC,UAAS,KAAK,KACdC,WAAU,KAAK,KACf,SAAS,KAAK,KACd,MAAM,KAAK,KACXhB,UAAS,KAAK,KACdC,UAAS,KAAK,KACdC,UAAS,KAAK,KACd,kBAAkB,KAAK,KACvB,OAAO,KAAK,KACZ,QAAQ,KAAK,KACbC,aAAY,KAAK,KACjB,QAAQ,KAAK,KACbC,cAAa,KAAK,KAClB,UAAU,KAAK,KACf,SAAS,KAAK,KACd,OAAO,KAAK,KACZ,OAAO,KAAK;AACpB;AAvCgB;;;AEnMhB;AAAA;AAAA,eAAAa;AAAA,EAAA,kBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,uBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA;AAAA,mBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,wBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,sBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA;AAAA,oBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA;AAAA,eAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,yBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA,mBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA,mBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAAC;AAGO,IAAM,4BAAN,cAAwC,aAAa;AAAA,EAH5D,OAG4D;AAAA;AAAA;AAC5D;AACA,IAAM,aAAa;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,SAAS,UAAU,OAAO;AACtB,MAAI;AACA,QAAI,OAAO,KAAK;AAChB,WAAO;AAAA,EACX,QACM;AACF,WAAO;AAAA,EACX;AACJ;AARS;AAST,SAAS,uBAAuB,OAAO;AACnC,MAAI,CAAY,SAAS,KAAK;AAC1B,WAAO;AACX,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAM,OAAO,MAAM,WAAW,CAAC;AAC/B,QAAK,QAAQ,KAAK,QAAQ,MAAO,SAAS,MAAM,SAAS,KAAK;AAC1D,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAVS;AAWT,SAAS,uBAAuB,OAAO;AACnC,SAAO,kBAAkB,KAAK,KAAKC,UAAS,KAAK;AACrD;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAkB,YAAY,KAAK,KAAgB,SAAS,KAAK;AACrE;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAkB,YAAY,KAAK,KAAgB,SAAS,KAAK;AACrE;AAFS;AAGT,SAAS,kBAAkB,OAAO;AAC9B,SAAkB,YAAY,KAAK,KAAgB,UAAU,KAAK;AACtE;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAkB,YAAY,KAAK,KAAgB,SAAS,KAAK;AACrE;AAFS;AAGT,SAAS,kBAAkB,OAAO;AAC9B,SAAkB,YAAY,KAAK,KAAiB,SAAS,KAAK,KAAK,uBAAuB,KAAK,KAAK,UAAU,KAAK;AAC3H;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAkB,YAAY,KAAK,KAAiB,SAAS,KAAK,KAAK,uBAAuB,KAAK;AACvG;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAkB,YAAY,KAAK,KAAKA,UAAS,KAAK;AAC1D;AAFS;AAOF,SAASC,YAAW,OAAO;AAC9B,SAAkB,SAAS,KAAK,KAAK,MAAM,YAAY,MAAM;AACjE;AAFgB,OAAAA,aAAA;AAIT,SAASC,YAAW,OAAO;AAC9B,SAAkB,SAAS,KAAK,KAAK,MAAM,YAAY,MAAM;AACjE;AAFgB,OAAAA,aAAA;AAOT,SAASC,OAAM,OAAO;AAEzB,SAAQC,UAAS,OAAO,KAAK,KACzB,iBAAiB,MAAM,GAAG;AAClC;AAJgB,OAAAD,QAAA;AAMT,SAASE,YAAW,OAAO;AAE9B,SAAQD,UAAS,OAAO,UAAU,KACnB,SAAS,MAAM,KAAK;AACvC;AAJgB,OAAAC,aAAA;AAMT,SAASC,SAAQ,OAAO;AAC3B,SAAQF,UAAS,OAAO,OAAO,KAC3B,MAAM,SAAS,WACf,iBAAiB,MAAM,GAAG,KAC1BJ,UAAS,MAAM,KAAK,KACpB,iBAAiB,MAAM,QAAQ,KAC/B,iBAAiB,MAAM,QAAQ,KAC/B,kBAAkB,MAAM,WAAW,KACnC,iBAAiB,MAAM,QAAQ,KAC/B,iBAAiB,MAAM,WAAW,KAClC,iBAAiB,MAAM,WAAW;AAC1C;AAXgB,OAAAM,UAAA;AAaT,SAASC,iBAAgB,OAAO;AAEnC,SAAQH,UAAS,OAAO,eAAe,KACnC,MAAM,SAAS,mBACf,iBAAiB,MAAM,GAAG,KAC1BJ,UAAS,MAAM,KAAK;AAC5B;AANgB,OAAAO,kBAAA;AAQT,SAASC,UAAS,OAAO;AAE5B,SAAQJ,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,UAAU;AACzC;AAVgB,OAAAI,WAAA;AAYT,SAASC,WAAU,OAAO;AAE7B,SAAQL,UAAS,OAAO,SAAS,KAC7B,MAAM,SAAS,aACf,iBAAiB,MAAM,GAAG;AAClC;AALgB,OAAAK,YAAA;AAOT,SAASC,YAAW,OAAO;AAE9B,SAAQN,UAAS,OAAO,UAAU,KACnB,SAAS,MAAM,MAAM,KACrB,QAAQ,MAAM,UAAU,KACnC,MAAM,WAAW,MAAM,CAAC,WAAWJ,UAAS,MAAM,CAAC;AAC3D;AANgB,OAAAU,aAAA;AAQT,SAASC,eAAc,OAAO;AAEjC,SAAQP,UAAS,OAAO,aAAa,KACjC,MAAM,SAAS,iBACf,iBAAiB,MAAM,GAAG,KACf,QAAQ,MAAM,UAAU,KACnC,MAAM,WAAW,MAAM,YAAUJ,UAAS,MAAM,CAAC,KACjDA,UAAS,MAAM,OAAO;AAC9B;AARgB,OAAAW,gBAAA;AAUT,SAASC,QAAO,OAAO;AAC1B,SAAQR,UAAS,OAAO,MAAM,KAC1B,MAAM,SAAS,UACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,yBAAyB,KAChD,iBAAiB,MAAM,yBAAyB,KAChD,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,mBAAmB;AAClD;AATgB,OAAAQ,SAAA;AAWT,SAASC,YAAW,OAAO;AAE9B,SAAQT,UAAS,OAAO,UAAU,KAC9B,MAAM,SAAS,cACf,iBAAiB,MAAM,GAAG,KACf,QAAQ,MAAM,UAAU,KACnC,MAAM,WAAW,MAAM,YAAUJ,UAAS,MAAM,CAAC,KACjDA,UAAS,MAAM,OAAO;AAC9B;AARgB,OAAAa,aAAA;AAUT,SAAS,SAAS,OAAO;AAE5B,SAAQT,UAAS,OAAO,QAAQ,KACjB,eAAe,OAAO,OAAO,KAC7B,SAAS,MAAM,KAAK,KAC/B,aAAa,MAAM,KAAK,KACb,eAAe,OAAO,MAAM,KAC5B,SAAS,MAAM,IAAI,KAC9B,MAAM,QAAQ,MAAM;AAE5B;AAVgB;AAYT,SAASU,WAAU,OAAO;AAC7B,SAAQV,UAAS,OAAO,SAAS,KAC7B,MAAM,SAAS,aACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,UAAU;AACzC;AATgB,OAAAU,YAAA;AAWT,SAAS,aAAa,OAAO;AAEhC,SAAmB,SAAS,KAAK,KAC7B,OAAO,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAC,KAAK,MAAM,MAAM,uBAAuB,GAAG,KAAKd,UAAS,MAAM,CAAC;AACtG;AAJgB;AAMT,SAASe,aAAY,OAAO;AAE/B,SAAQX,UAAS,OAAO,WAAW,MACnB,SAAS,MAAM,IAAI,KAAK,MAAM,SAAS,WAAW,QAAQ,SAC3D,QAAQ,MAAM,KAAK,KAC9B,MAAM,MAAM,MAAM,YAAUJ,UAAS,MAAM,KAAK,CAACgB,aAAY,MAAM,CAAC,KACpE,iBAAiB,MAAM,IAAI,MAC1B,kBAAkB,MAAM,qBAAqB,KAAK,iBAAiB,MAAM,qBAAqB,MAC/F,iBAAiB,MAAM,GAAG;AAClC;AATgB,OAAAD,cAAA;AAWT,SAASE,YAAW,OAAO;AAE9B,SAAQb,UAAS,OAAO,UAAU,KAC9B,MAAM,SAAS,cACf,iBAAiB,MAAM,GAAG,KAC1BJ,UAAS,MAAM,KAAK;AAC5B;AANgB,OAAAiB,aAAA;AAQT,SAASb,UAAS,OAAO,MAAM;AAClC,SAAkB,SAAS,KAAK,KAAK,QAAQ,SAAS,MAAM,IAAI,MAAM;AAC1E;AAFgB,OAAAA,WAAA;AAIT,SAAS,gBAAgB,OAAO;AACnC,SAAOc,WAAU,KAAK,KAAgB,SAAS,MAAM,KAAK;AAC9D;AAFgB;AAIT,SAAS,gBAAgB,OAAO;AACnC,SAAOA,WAAU,KAAK,KAAgB,SAAS,MAAM,KAAK;AAC9D;AAFgB;AAIT,SAAS,iBAAiB,OAAO;AACpC,SAAOA,WAAU,KAAK,KAAgB,UAAU,MAAM,KAAK;AAC/D;AAFgB;AAIT,SAASA,WAAU,OAAO;AAE7B,SAAQd,UAAS,OAAO,SAAS,KAC7B,iBAAiB,MAAM,GAAG,KAAKe,gBAAe,MAAM,KAAK;AACjE;AAJgB,OAAAD,YAAA;AAMT,SAASC,gBAAe,OAAO;AAClC,SAAkB,UAAU,KAAK,KAAgB,SAAS,KAAK,KAAgB,SAAS,KAAK;AACjG;AAFgB,OAAAA,iBAAA;AAIT,SAASC,aAAY,OAAO;AAE/B,SAAQhB,UAAS,OAAO,WAAW,KACpB,QAAQ,MAAM,IAAI,KAC7B,MAAM,KAAK,MAAM,SAAkB,SAAS,GAAG,KAAgB,SAAS,GAAG,CAAC;AACpF;AALgB,OAAAgB,cAAA;AAOT,SAASC,gBAAe,OAAO;AAElC,SAAQjB,UAAS,OAAO,cAAc,KAClC,aAAa,MAAM,UAAU;AACrC;AAJgB,OAAAiB,iBAAA;AAMT,SAASC,SAAQ,OAAO;AAE3B,SAAQlB,UAAS,OAAO,OAAO,KAChB,SAAS,MAAM,GAAG,KAC7B,OAAO,oBAAoB,MAAM,GAAG,EAAE,WAAW;AACzD;AALgB,OAAAkB,UAAA;AAOT,SAASC,OAAM,OAAO;AAEzB,SAAQnB,UAAS,OAAO,KAAK,KACzBJ,UAAS,MAAM,GAAG;AAC1B;AAJgB,OAAAuB,QAAA;AAMT,SAASC,QAAO,OAAO;AAE1B,SAAQpB,UAAS,OAAO,MAAM,KAC1B,MAAM,SAAS,UACf,iBAAiB,MAAM,GAAG;AAClC;AALgB,OAAAoB,SAAA;AAOT,SAASC,UAAS,OAAO;AAC5B,SAAQrB,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,gBAAgB,KACvC,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,OAAO,KAC9B,iBAAiB,MAAM,UAAU;AACzC;AATgB,OAAAqB,WAAA;AAWT,SAASC,UAAS,OAAO;AAE5B,SAAQtB,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG,KAC1B,aAAa,MAAM,UAAU,KAC7B,uBAAuB,MAAM,oBAAoB,KACjD,iBAAiB,MAAM,aAAa,KACpC,iBAAiB,MAAM,aAAa;AAC5C;AATgB,OAAAsB,WAAA;AAWT,SAASC,WAAU,OAAO;AAE7B,SAAQvB,UAAS,OAAO,SAAS,KAC7B,MAAM,SAAS,aACf,iBAAiB,MAAM,GAAG,KAC1BJ,UAAS,MAAM,IAAI;AAC3B;AANgB,OAAA2B,YAAA;AAQT,SAASC,UAAS,OAAO;AAE5B,SAAQxB,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG,KAC1B,uBAAuB,MAAM,oBAAoB,KACtC,SAAS,MAAM,iBAAiB,MAC1C,CAAC,WAAW;AACT,UAAM,OAAO,OAAO,oBAAoB,OAAO,iBAAiB;AAChE,WAAQ,KAAK,WAAW,KACpB,UAAU,KAAK,CAAC,CAAC,KACN,SAAS,OAAO,iBAAiB,KAC5CJ,UAAS,OAAO,kBAAkB,KAAK,CAAC,CAAC,CAAC;AAAA,EAClD,GAAG,KAAK;AAChB;AAdgB,OAAA4B,WAAA;AAgBT,SAAS,YAAY,OAAO;AAC/B,SAAkB,SAAS,KAAK,KAAK,QAAQ,SAAS,MAAM,IAAI,MAAM;AAC1E;AAFgB;AAIT,SAASC,OAAM,OAAO;AAEzB,SAAQzB,UAAS,OAAO,KAAK,KACzB,iBAAiB,MAAM,GAAG,KACf,SAAS,MAAM,IAAI;AACtC;AALgB,OAAAyB,QAAA;AAOT,SAASC,UAAS,OAAO;AAE5B,SAAQ1B,UAAS,OAAO,QAAQ,KAC5B,iBAAiB,MAAM,GAAG,KACf,SAAS,MAAM,MAAM,KACrB,SAAS,MAAM,KAAK,KAC/B,iBAAiB,MAAM,SAAS,KAChC,iBAAiB,MAAM,SAAS;AACxC;AARgB,OAAA0B,WAAA;AAUT,SAASC,UAAS,OAAO;AAE5B,SAAQ3B,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,SAAS,KAChC,iBAAiB,MAAM,SAAS,KAChC,kBAAkB,MAAM,OAAO,KAC/B,iBAAiB,MAAM,MAAM;AACrC;AATgB,OAAA2B,WAAA;AAWT,SAASC,UAAS,OAAO;AAE5B,SAAQ5B,UAAS,OAAO,QAAQ,KAC5B,MAAM,SAAS,YACf,iBAAiB,MAAM,GAAG;AAClC;AALgB,OAAA4B,WAAA;AAOT,SAASC,mBAAkB,OAAO;AAErC,SAAQ7B,UAAS,OAAO,iBAAiB,KACrC,MAAM,SAAS,YACJ,SAAS,MAAM,OAAO,KACjC,MAAM,QAAQ,CAAC,MAAM,OACrB,MAAM,QAAQ,MAAM,QAAQ,SAAS,CAAC,MAAM;AACpD;AAPgB,OAAA6B,oBAAA;AAST,SAASC,QAAO,OAAO;AAE1B,SAAQ9B,UAAS,OAAO,MAAM,KAC1B,iBAAiB,MAAM,GAAG,KACf,SAAS,MAAM,IAAI;AACtC;AALgB,OAAA8B,SAAA;AAOT,SAASlB,aAAY,OAAO;AAC/B,SAAkB,SAAS,KAAK,KAAK,iBAAiB;AAC1D;AAFgB,OAAAA,cAAA;AAIT,SAASmB,SAAQ,OAAO;AAE3B,SAAQ/B,UAAS,OAAO,OAAO,KAC3B,MAAM,SAAS,WACf,iBAAiB,MAAM,GAAG,KACf,SAAS,MAAM,QAAQ,KACvB,SAAS,MAAM,QAAQ,KAClC,MAAM,aAAa,MAAM;AAAA,GAEd,YAAY,MAAM,KAAK,KACnB,YAAY,MAAM,eAAe,KAC5C,MAAM,aAAa,KAAkB,QAAQ,MAAM,KAAK,KACxD,MAAM,MAAM,MAAM,YAAUJ,UAAS,MAAM,CAAC;AACxD;AAbgB,OAAAmC,UAAA;AAeT,SAASC,aAAY,OAAO;AAE/B,SAAQhC,UAAS,OAAO,WAAW,KAC/B,MAAM,SAAS,eACf,iBAAiB,MAAM,GAAG;AAClC;AALgB,OAAAgC,cAAA;AAOT,SAAS,eAAe,OAAO;AAClC,SAAOC,SAAQ,KAAK,KAAK,MAAM,MAAM,MAAM,CAAC,WAAW,gBAAgB,MAAM,KAAK,gBAAgB,MAAM,CAAC;AAC7G;AAFgB;AAIT,SAASA,SAAQ,OAAO;AAE3B,SAAQjC,UAAS,OAAO,OAAO,KAC3B,iBAAiB,MAAM,GAAG,KACf,SAAS,KAAK,KACd,QAAQ,MAAM,KAAK,KAC9B,MAAM,MAAM,MAAM,YAAUJ,UAAS,MAAM,CAAC;AACpD;AAPgB,OAAAqC,UAAA;AAST,SAASC,cAAa,OAAO;AAEhC,SAAQlC,UAAS,OAAO,YAAY,KAChC,MAAM,SAAS,gBACf,iBAAiB,MAAM,GAAG,KAC1B,iBAAiB,MAAM,aAAa,KACpC,iBAAiB,MAAM,aAAa;AAC5C;AAPgB,OAAAkC,eAAA;AAST,SAASC,WAAU,OAAO;AAE7B,SAAQnC,UAAS,OAAO,SAAS,KAC7B,iBAAiB,MAAM,GAAG;AAClC;AAJgB,OAAAmC,YAAA;AAMT,SAASC,UAAS,OAAO;AAC5B,SAAOpC,UAAS,OAAO,QAAQ;AACnC;AAFgB,OAAAoC,WAAA;AAIT,SAASC,QAAO,OAAO;AAE1B,SAAQrC,UAAS,OAAO,MAAM,KAC1B,MAAM,SAAS,UACf,iBAAiB,MAAM,GAAG;AAClC;AALgB,OAAAqC,SAAA;AAOT,SAASC,QAAO,OAAO;AAC1B,SAAkB,SAAS,KAAK,KAAK,QAAQ,SAAoB,SAAS,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,SAAS,MAAM,IAAI,CAAC;AAC9H;AAFgB,OAAAA,SAAA;AAIT,SAAS1C,UAAS,OAAO;AAE5B,SAAmB,SAAS,KAAK,MAAOG,OAAM,KAAK,KAC/CE,YAAW,KAAK,KAChBC,SAAQ,KAAK,KACbG,WAAU,KAAK,KACfD,UAAS,KAAK,KACdD,iBAAgB,KAAK,KACrBG,YAAW,KAAK,KAChBC,eAAc,KAAK,KACnBC,QAAO,KAAK,KACZC,YAAW,KAAK,KAChBC,WAAU,KAAK,KACfC,aAAY,KAAK,KACjBE,YAAW,KAAK,KAChBC,WAAU,KAAK,KACfE,aAAY,KAAK,KACjBC,gBAAe,KAAK,KACpBC,SAAQ,KAAK,KACbC,OAAM,KAAK,KACXC,QAAO,KAAK,KACZC,UAAS,KAAK,KACdC,UAAS,KAAK,KACdC,WAAU,KAAK,KACfC,UAAS,KAAK,KACdC,OAAM,KAAK,KACXC,UAAS,KAAK,KACdC,UAAS,KAAK,KACdC,UAAS,KAAK,KACdC,mBAAkB,KAAK,KACvBC,QAAO,KAAK,KACZC,SAAQ,KAAK,KACbC,aAAY,KAAK,KACjBC,SAAQ,KAAK,KACbC,cAAa,KAAK,KAClBC,WAAU,KAAK,KACfC,UAAS,KAAK,KACdC,QAAO,KAAK,KACZC,QAAO,KAAK;AACpB;AAvCgB,OAAA1C,WAAA;;;ACrdhB;AAAA;AAAA2C;AAAO,IAAM,iBAAiB;AACvB,IAAM,gBAAgB;AACtB,IAAM,gBAAgB;AACtB,IAAM,eAAe;AACrB,IAAM,sBAAsB,IAAI,cAAc;AAC9C,IAAM,qBAAqB,IAAI,aAAa;AAC5C,IAAM,qBAAqB,IAAI,aAAa;AAC5C,IAAM,oBAAoB,IAAI,YAAY;;;ACPjD;AAAA;AAAAC;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAAC;AAAA;AAAA;AAAA;AAAAC;AACA,IAAM,MAAM,oBAAI,IAAI;AAEb,SAAS,UAAU;AACtB,SAAO,IAAI,IAAI,GAAG;AACtB;AAFgB;AAIT,SAAS,QAAQ;AACpB,SAAO,IAAI,MAAM;AACrB;AAFgB;AAIT,SAAS,OAAO,QAAQ;AAC3B,SAAO,IAAI,OAAO,MAAM;AAC5B;AAFgB;AAIT,SAAS,IAAI,QAAQ;AACxB,SAAO,IAAI,IAAI,MAAM;AACzB;AAFgB;AAIT,SAASC,KAAI,QAAQ,MAAM;AAC9B,MAAI,IAAI,QAAQ,IAAI;AACxB;AAFgB,OAAAA,MAAA;AAIT,SAAS,IAAI,QAAQ;AACxB,SAAO,IAAI,IAAI,MAAM;AACzB;AAFgB;;;ACvBhB,IAAAC,gBAAA;AAAA,SAAAA,eAAA;AAAA,eAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,WAAAC;AAAA;AAAA;AAAA;AAAAC;AACA,IAAMC,OAAM,oBAAI,IAAI;AAEb,SAASC,WAAU;AACtB,SAAO,IAAI,IAAID,IAAG;AACtB;AAFgB,OAAAC,UAAA;AAIT,SAASC,SAAQ;AACpB,SAAOF,KAAI,MAAM;AACrB;AAFgB,OAAAE,QAAA;AAIT,SAASC,QAAO,MAAM;AACzB,SAAOH,KAAI,OAAO,IAAI;AAC1B;AAFgB,OAAAG,SAAA;AAIT,SAASC,KAAI,MAAM;AACtB,SAAOJ,KAAI,IAAI,IAAI;AACvB;AAFgB,OAAAI,MAAA;AAIT,SAASC,KAAI,MAAM,MAAM;AAC5B,EAAAL,KAAI,IAAI,MAAM,IAAI;AACtB;AAFgB,OAAAK,MAAA;AAIT,SAASC,KAAI,MAAM;AACtB,SAAON,KAAI,IAAI,IAAI;AACvB;AAFgB,OAAAM,MAAA;;;ACvBhB;AAAA;AAAAC;AAEO,SAAS,YAAY,GAAG,GAAG;AAC9B,SAAO,EAAE,SAAS,CAAC;AACvB;AAFgB;AAQT,SAAS,YAAY,GAAG;AAC3B,SAAO,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;AACzB;AAFgB;AAIT,SAAS,aAAa,GAAG,GAAG;AAC/B,SAAO,EAAE,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACxC;AAFgB;AAahB,SAAS,wBAAwB,GAAG,MAAM;AACtC,SAAO,EAAE,OAAO,CAAC,KAAK,MAAM;AACxB,WAAO,aAAa,KAAK,CAAC;AAAA,EAC9B,GAAG,IAAI;AACX;AAJS;AAMF,SAAS,iBAAiB,GAAG;AAChC,SAAQ,EAAE,WAAW,IACf,EAAE,CAAC,IAEH,EAAE,SAAS,IACP,wBAAwB,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IACxC,CAAC;AACf;AAPgB;AAST,SAAS,aAAa,GAAG;AAC5B,QAAM,MAAM,CAAC;AACb,aAAW,KAAK;AACZ,QAAI,KAAK,GAAG,CAAC;AACjB,SAAO;AACX;AALgB;;;AC1ChB;AAAA;AAAAC;AAGO,SAAS,IAAI,SAAS;AACzB,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO;AAChD;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,OAAM,OAAO,SAAS;AAClC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,SAAS,MAAM,SAAS,MAAM,GAAG,OAAO;AACxE;AAFgB,OAAAA,QAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,SAAS,OAAO;AAC5B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,YAAY,MAAM,CAAC;AACnD;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,cAAc,OAAO,SAAS;AAC1C,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,iBAAiB,MAAM,iBAAiB,MAAM,GAAG,OAAO;AACxF;AAFgB;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,SAAS,QAAQ,YAAY,SAAS;AAClD,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,YAAY,QAAQ,WAAW,GAAG,OAAO;AACzE;AAFgB;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAA,SAAS,WAAW,OAAO,KAAK;AAC5B,QAAM,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI;AAC9B,SAAO;AACX;AAHS;AAKF,SAAS,QAAQ,OAAO,MAAM;AACjC,SAAO,KAAK,OAAO,CAAC,KAAK,QAAQ,WAAW,KAAK,GAAG,GAAG,KAAK;AAChE;AAFgB;;;ACLhB;AAAA;AAAAC;AAGO,SAAS,MAAM,SAAS;AAC3B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,SAAS,KAAK,CAAC,EAAE,GAAG,OAAO;AAC3D;AAFgB;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,aAAa,YAAY;AACrC,SAAO,WAAW;AAAA,IACd,CAAC,IAAI,GAAG;AAAA,IACR;AAAA,EACJ,CAAC;AACL;AALgB;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,YAAY,YAAY,SAAS,SAAS;AACtD,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,eAAe,MAAM,eAAe,YAAY,QAAQ,GAAG,OAAO;AAClG;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,UAAS,YAAY,SAAS,SAAS;AACnD,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,YAAY,MAAM,YAAY,YAAY,QAAQ,GAAG,OAAO;AAC5F;AAFgB,OAAAA,WAAA;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAEO,SAAS,YAAY,GAAG,SAAS;AACpC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,SAAS,OAAO,EAAE,GAAG,OAAO;AAC5D;AAFgB;;;ADShB,SAAS,gBAAgB,OAAO;AAC5B,SAAO,MAAM,KAAK,UAAQ,WAAW,IAAI,CAAC;AAC9C;AAFS;AAIT,SAAS,uBAAuB,OAAO;AACnC,SAAO,MAAM,IAAI,UAAQ,WAAW,IAAI,IAAI,uBAAuB,IAAI,IAAI,IAAI;AACnF;AAFS;AAIT,SAAS,uBAAuB,GAAG;AAC/B,SAAQ,QAAQ,GAAG,CAAC,YAAY,CAAC;AACrC;AAFS;AAIT,SAAS,aAAa,OAAO,SAAS;AAClC,QAAMC,cAAa,gBAAgB,KAAK;AACxC,SAAQA,cACF,SAAS,YAAY,uBAAuB,KAAK,GAAG,OAAO,CAAC,IAC5D,YAAY,uBAAuB,KAAK,GAAG,OAAO;AAC5D;AALS;AAOF,SAAS,eAAe,GAAG,SAAS;AAEvC,SAAQ,EAAE,WAAW,IAAI,WAAW,EAAE,CAAC,GAAG,OAAO,IAC7C,EAAE,WAAW,IAAI,MAAM,OAAO,IAC1B,aAAa,GAAG,OAAO;AACnC;AALgB;;;AE9BhB;AAAA;AAAAC;AAIO,SAAS,MAAM,OAAO,SAAS;AAElC,SAAQ,MAAM,WAAW,IAAI,MAAM,OAAO,IACtC,MAAM,WAAW,IAAI,WAAW,MAAM,CAAC,GAAG,OAAO,IAC7C,YAAY,OAAO,OAAO;AACtC;AALgB;;;ACJhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIO,IAAM,6BAAN,cAAyC,aAAa;AAAA,EAJ7D,OAI6D;AAAA;AAAA;AAC7D;AAUA,SAAS,SAAS,SAAS;AACvB,SAAO,QACF,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG;AAC7B;AARS;AAYT,SAAS,aAAa,SAAS,OAAO,MAAM;AACxC,SAAO,QAAQ,KAAK,MAAM,QAAQ,QAAQ,WAAW,QAAQ,CAAC,MAAM;AACxE;AAFS;AAGT,SAAS,YAAY,SAAS,OAAO;AACjC,SAAO,aAAa,SAAS,OAAO,GAAG;AAC3C;AAFS;AAGT,SAAS,aAAa,SAAS,OAAO;AAClC,SAAO,aAAa,SAAS,OAAO,GAAG;AAC3C;AAFS;AAGT,SAAS,YAAY,SAAS,OAAO;AACjC,SAAO,aAAa,SAAS,OAAO,GAAG;AAC3C;AAFS;AAMT,SAAS,QAAQ,SAAS;AACtB,MAAI,EAAE,YAAY,SAAS,CAAC,KAAK,aAAa,SAAS,QAAQ,SAAS,CAAC;AACrE,WAAO;AACX,MAAIC,SAAQ;AACZ,WAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACjD,QAAI,YAAY,SAAS,KAAK;AAC1B,MAAAA,UAAS;AACb,QAAI,aAAa,SAAS,KAAK;AAC3B,MAAAA,UAAS;AACb,QAAIA,WAAU,KAAK,UAAU,QAAQ,SAAS;AAC1C,aAAO;AAAA,EACf;AACA,SAAO;AACX;AAbS;AAeT,SAAS,QAAQ,SAAS;AACtB,SAAO,QAAQ,MAAM,GAAG,QAAQ,SAAS,CAAC;AAC9C;AAFS;AAIT,SAAS,eAAe,SAAS;AAC7B,MAAIA,SAAQ;AACZ,WAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACjD,QAAI,YAAY,SAAS,KAAK;AAC1B,MAAAA,UAAS;AACb,QAAI,aAAa,SAAS,KAAK;AAC3B,MAAAA,UAAS;AACb,QAAI,YAAY,SAAS,KAAK,KAAKA,WAAU;AACzC,aAAO;AAAA,EACf;AACA,SAAO;AACX;AAXS;AAaT,SAAS,gBAAgB,SAAS;AAC9B,WAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACjD,QAAI,YAAY,SAAS,KAAK;AAC1B,aAAO;AAAA,EACf;AACA,SAAO;AACX;AANS;AAQT,SAAS,GAAG,SAAS;AACjB,MAAI,CAACA,QAAO,KAAK,IAAI,CAAC,GAAG,CAAC;AAC1B,QAAM,cAAc,CAAC;AACrB,WAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACjD,QAAI,YAAY,SAAS,KAAK;AAC1B,MAAAA,UAAS;AACb,QAAI,aAAa,SAAS,KAAK;AAC3B,MAAAA,UAAS;AACb,QAAI,YAAY,SAAS,KAAK,KAAKA,WAAU,GAAG;AAC5C,YAAMC,SAAQ,QAAQ,MAAM,OAAO,KAAK;AACxC,UAAIA,OAAM,SAAS;AACf,oBAAY,KAAK,qBAAqBA,MAAK,CAAC;AAChD,cAAQ,QAAQ;AAAA,IACpB;AAAA,EACJ;AACA,QAAM,QAAQ,QAAQ,MAAM,KAAK;AACjC,MAAI,MAAM,SAAS;AACf,gBAAY,KAAK,qBAAqB,KAAK,CAAC;AAChD,MAAI,YAAY,WAAW;AACvB,WAAO,EAAE,MAAM,SAAS,OAAO,GAAG;AACtC,MAAI,YAAY,WAAW;AACvB,WAAO,YAAY,CAAC;AACxB,SAAO,EAAE,MAAM,MAAM,MAAM,YAAY;AAC3C;AAvBS;AAyBT,SAAS,IAAI,SAAS;AAClB,WAAS,MAAM,OAAO,OAAO;AACzB,QAAI,CAAC,YAAY,OAAO,KAAK;AACzB,YAAM,IAAI,2BAA2B,wDAAwD;AACjG,QAAID,SAAQ;AACZ,aAAS,OAAO,OAAO,OAAO,MAAM,QAAQ,QAAQ;AAChD,UAAI,YAAY,OAAO,IAAI;AACvB,QAAAA,UAAS;AACb,UAAI,aAAa,OAAO,IAAI;AACxB,QAAAA,UAAS;AACb,UAAIA,WAAU;AACV,eAAO,CAAC,OAAO,IAAI;AAAA,IAC3B;AACA,UAAM,IAAI,2BAA2B,4DAA4D;AAAA,EACrG;AAbS;AAcT,WAAS,MAAME,UAAS,OAAO;AAC3B,aAAS,OAAO,OAAO,OAAOA,SAAQ,QAAQ,QAAQ;AAClD,UAAI,YAAYA,UAAS,IAAI;AACzB,eAAO,CAAC,OAAO,IAAI;AAAA,IAC3B;AACA,WAAO,CAAC,OAAOA,SAAQ,MAAM;AAAA,EACjC;AANS;AAOT,QAAM,cAAc,CAAC;AACrB,WAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACjD,QAAI,YAAY,SAAS,KAAK,GAAG;AAC7B,YAAM,CAAC,OAAO,GAAG,IAAI,MAAM,SAAS,KAAK;AACzC,YAAM,QAAQ,QAAQ,MAAM,OAAO,MAAM,CAAC;AAC1C,kBAAY,KAAK,qBAAqB,KAAK,CAAC;AAC5C,cAAQ;AAAA,IACZ,OACK;AACD,YAAM,CAAC,OAAO,GAAG,IAAI,MAAM,SAAS,KAAK;AACzC,YAAM,QAAQ,QAAQ,MAAM,OAAO,GAAG;AACtC,UAAI,MAAM,SAAS;AACf,oBAAY,KAAK,qBAAqB,KAAK,CAAC;AAChD,cAAQ,MAAM;AAAA,IAClB;AAAA,EACJ;AACA,SAAS,YAAY,WAAW,IAAK,EAAE,MAAM,SAAS,OAAO,GAAG,IAC3D,YAAY,WAAW,IAAK,YAAY,CAAC,IACtC,EAAE,MAAM,OAAO,MAAM,YAAY;AAC7C;AAzCS;AA8CF,SAAS,qBAAqB,SAAS;AAE1C,SAAQ,QAAQ,OAAO,IAAI,qBAAqB,QAAQ,OAAO,CAAC,IAC5D,eAAe,OAAO,IAAI,GAAG,OAAO,IAChC,gBAAgB,OAAO,IAAI,IAAI,OAAO,IAClC,EAAE,MAAM,SAAS,OAAO,SAAS,OAAO,EAAE;AAC1D;AANgB;AAWT,SAAS,0BAA0B,SAAS;AAC/C,SAAO,qBAAqB,QAAQ,MAAM,GAAG,QAAQ,SAAS,CAAC,CAAC;AACpE;AAFgB;;;AD/JT,IAAM,6BAAN,cAAyC,aAAa;AAAA,EAL7D,OAK6D;AAAA;AAAA;AAC7D;AAKA,SAAS,mBAAmB,YAAY;AACpC,SAAQ,WAAW,SAAS,QACxB,WAAW,KAAK,WAAW,KAC3B,WAAW,KAAK,CAAC,EAAE,SAAS,WAC5B,WAAW,KAAK,CAAC,EAAE,UAAU,OAC7B,WAAW,KAAK,CAAC,EAAE,SAAS,WAC5B,WAAW,KAAK,CAAC,EAAE,UAAU;AACrC;AAPS;AAST,SAAS,oBAAoB,YAAY;AACrC,SAAQ,WAAW,SAAS,QACxB,WAAW,KAAK,WAAW,KAC3B,WAAW,KAAK,CAAC,EAAE,SAAS,WAC5B,WAAW,KAAK,CAAC,EAAE,UAAU,UAC7B,WAAW,KAAK,CAAC,EAAE,SAAS,WAC5B,WAAW,KAAK,CAAC,EAAE,UAAU;AACrC;AAPS;AAST,SAAS,mBAAmB,YAAY;AACpC,SAAO,WAAW,SAAS,WAAW,WAAW,UAAU;AAC/D;AAFS;AAOF,SAAS,kCAAkC,YAAY;AAC1D,SAAQ,mBAAmB,UAAU,KAAK,mBAAmB,UAAU,IAAI,QACvE,oBAAoB,UAAU,IAAI,OAC7B,WAAW,SAAS,QAAS,WAAW,KAAK,MAAM,CAAC,SAAS,kCAAkC,IAAI,CAAC,IAChG,WAAW,SAAS,OAAQ,WAAW,KAAK,MAAM,CAAC,SAAS,kCAAkC,IAAI,CAAC,IAC/F,WAAW,SAAS,UAAW,QAC3B,MAAM;AAAE,UAAM,IAAI,2BAA2B,yBAAyB;AAAA,EAAG,GAAG;AACrG;AAPgB;AAST,SAAS,wBAAwB,QAAQ;AAC5C,QAAM,aAAa,0BAA0B,OAAO,OAAO;AAC3D,SAAO,kCAAkC,UAAU;AACvD;AAHgB;;;AE7ChB;AAAA;AAAAC;AAMO,IAAM,+BAAN,cAA2C,aAAa;AAAA,EAN/D,OAM+D;AAAA;AAAA;AAC/D;AAKA,UAAU,eAAe,QAAQ;AAC7B,MAAI,OAAO,WAAW;AAClB,WAAO,OAAO,OAAO,CAAC;AAC1B,aAAW,QAAQ,OAAO,CAAC,GAAG;AAC1B,eAAW,SAAS,eAAe,OAAO,MAAM,CAAC,CAAC,GAAG;AACjD,YAAM,GAAG,IAAI,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AARU;AAUV,UAAU,YAAY,YAAY;AAC9B,SAAO,OAAO,eAAe,WAAW,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,kCAAkC,IAAI,CAAC,CAAC,CAAC;AAC5G;AAFU;AAIV,UAAU,WAAW,YAAY;AAC7B,aAAW,QAAQ,WAAW;AAC1B,WAAO,kCAAkC,IAAI;AACrD;AAHU;AAKV,UAAU,cAAc,YAAY;AAChC,SAAO,MAAM,WAAW;AAC5B;AAFU;AAGH,UAAU,kCAAkC,YAAY;AAC3D,SAAO,WAAW,SAAS,QACrB,OAAO,YAAY,UAAU,IAC7B,WAAW,SAAS,OAChB,OAAO,WAAW,UAAU,IAC5B,WAAW,SAAS,UAChB,OAAO,cAAc,UAAU,KAC9B,MAAM;AACL,UAAM,IAAI,6BAA6B,oBAAoB;AAAA,EAC/D,GAAG;AACnB;AAViB;AAYV,SAAS,wBAAwB,QAAQ;AAC5C,QAAM,aAAa,0BAA0B,OAAO,OAAO;AAE3D,SAAQ,kCAAkC,UAAU,IAC9C,CAAC,GAAG,kCAAkC,UAAU,CAAC,IACjD,CAAC;AACX;AANgB;;;AC9ChB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,QAAQ,OAAO,SAAS;AACpC,SAAO,WAAW;AAAA,IACd,CAAC,IAAI,GAAG;AAAA,IACR,OAAO;AAAA,IACP,MAAM,OAAO;AAAA,EACjB,GAAG,OAAO;AACd;AANgB;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,SAAQ,SAAS;AAC7B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,WAAW,MAAM,UAAU,GAAG,OAAO;AACrE;AAFgB,OAAAA,UAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,QAAO,SAAS;AAC5B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,SAAS,GAAG,OAAO;AACnE;AAFgB,OAAAA,SAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,QAAO,SAAS;AAC5B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,SAAS,GAAG,OAAO;AACnE;AAFgB,OAAAA,SAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,QAAO,SAAS;AAC5B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,SAAS,GAAG,OAAO;AACnE;AAFgB,OAAAA,SAAA;;;ALQhB,UAAU,UAAU,QAAQ;AACxB,QAAM,OAAO,OAAO,KAAK,EAAE,QAAQ,QAAQ,EAAE;AAC7C,SAAQ,SAAS,YAAY,MAAMC,SAAQ,IACvC,SAAS,WAAW,MAAMC,QAAO,IAC7B,SAAS,WAAW,MAAMC,QAAO,IAC7B,SAAS,WAAW,MAAMC,QAAO,IAC7B,OAAO,MAAM;AACT,UAAM,WAAW,KAAK,MAAM,GAAG,EAAE,IAAI,CAAC,YAAY,QAAQ,QAAQ,KAAK,CAAC,CAAC;AACzE,WAAQ,SAAS,WAAW,IAAI,MAAM,IAClC,SAAS,WAAW,IAAI,SAAS,CAAC,IAC9B,eAAe,QAAQ;AAAA,EACnC,GAAG;AACvB;AAZU;AAcV,UAAU,aAAa,QAAQ;AAC3B,MAAI,OAAO,CAAC,MAAM,KAAK;AACnB,UAAM,IAAI,QAAQ,GAAG;AACrB,UAAM,IAAI,WAAW,OAAO,MAAM,CAAC,CAAC;AACpC,WAAO,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,EAC1B;AACA,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,QAAI,OAAO,CAAC,MAAM,KAAK;AACnB,YAAM,IAAI,UAAU,OAAO,MAAM,GAAG,CAAC,CAAC;AACtC,YAAM,IAAI,WAAW,OAAO,MAAM,IAAI,CAAC,CAAC;AACxC,aAAO,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,EACJ;AACA,QAAM,QAAQ,MAAM;AACxB;AAdU;AAgBV,UAAU,WAAW,QAAQ;AACzB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,QAAI,OAAO,CAAC,MAAM,KAAK;AACnB,YAAM,IAAI,QAAQ,OAAO,MAAM,GAAG,CAAC,CAAC;AACpC,YAAM,IAAI,aAAa,OAAO,MAAM,CAAC,CAAC;AACtC,aAAO,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,IAC1B;AAAA,EACJ;AACA,QAAM,QAAQ,MAAM;AACxB;AATU;AAWH,SAAS,sBAAsB,QAAQ;AAC1C,SAAO,CAAC,GAAG,WAAW,MAAM,CAAC;AACjC;AAFgB;;;AMpDhB;AAAA;AAAAC;AAUO,IAAM,8BAAN,cAA0C,aAAa;AAAA,EAV9D,OAU8D;AAAA;AAAA;AAC9D;AAIA,SAAS,OAAO,OAAO;AACnB,SAAO,MAAM,QAAQ,uBAAuB,MAAM;AACtD;AAFS;AAIT,SAASC,OAAM,QAAQ,KAAK;AACxB,SAAQ,kBAAkB,MAAM,IAAI,OAAO,QAAQ,MAAM,GAAG,OAAO,QAAQ,SAAS,CAAC,IACjF,QAAQ,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,CAACC,YAAWD,OAAMC,SAAQ,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,MAC5EC,UAAS,MAAM,IAAI,GAAG,GAAG,GAAG,aAAa,KACrCC,WAAU,MAAM,IAAI,GAAG,GAAG,GAAG,aAAa,KACtCC,UAAS,MAAM,IAAI,GAAG,GAAG,GAAG,aAAa,KACrCC,UAAS,MAAM,IAAI,GAAG,GAAG,GAAG,aAAa,KACrC,UAAU,MAAM,IAAI,GAAG,GAAG,GAAG,OAAO,OAAO,MAAM,SAAS,CAAC,CAAC,KACxDC,WAAU,MAAM,IAAI,GAAG,GAAG,GAAG,cAAc,MACtC,MAAM;AAAE,UAAM,IAAI,4BAA4B,oBAAoB,OAAO,IAAI,CAAC,GAAG;AAAA,EAAG,GAAG;AAC5H;AAVS,OAAAN,QAAA;AAWF,SAAS,uBAAuB,OAAO;AAC1C,SAAO,IAAI,MAAM,IAAI,CAAC,WAAWA,OAAM,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;AAChE;AAFgB;;;AC9BhB;AAAA;AAAAO;AAIO,SAAS,uBAAuB,QAAQ;AAC3C,QAAM,IAAI,wBAAwB,MAAM;AACxC,QAAM,IAAI,EAAE,IAAI,CAAC,MAAM,QAAQ,CAAC,CAAC;AACjC,SAAO,eAAe,CAAC;AAC3B;AAJgB;;;ACJhB;AAAA;AAAAC;AAOO,SAAS,gBAAgB,YAAY,SAAS;AACjD,QAAM,UAAU,SAAS,UAAU,IAC7B,uBAAuB,sBAAsB,UAAU,CAAC,IACxD,uBAAuB,UAAU;AACvC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,mBAAmB,MAAM,UAAU,QAAQ,GAAG,OAAO;AACrF;AALgB;;;AZDhB,SAAS,oBAAoB,iBAAiB;AAC1C,QAAM,OAAO,wBAAwB,eAAe;AACpD,SAAO,KAAK,IAAI,SAAO,IAAI,SAAS,CAAC;AACzC;AAHS;AAKT,SAASC,WAAU,OAAO;AACtB,QAAM,SAAS,CAAC;AAChB,aAAW,QAAQ;AACf,WAAO,KAAK,GAAG,kBAAkB,IAAI,CAAC;AAC1C,SAAO;AACX;AALS,OAAAA,YAAA;AAOT,SAAS,YAAY,cAAc;AAC/B,SAAQ,CAAC,aAAa,SAAS,CAAC;AAEpC;AAHS;AAMF,SAAS,kBAAkB,MAAM;AACpC,SAAO,CAAC,GAAG,IAAI,IAAK,kBAAkB,IAAI,IAAI,oBAAoB,IAAI,IAC9D,QAAQ,IAAI,IAAIA,WAAU,KAAK,KAAK,IAChC,UAAU,IAAI,IAAI,YAAY,KAAK,KAAK,IACpCC,UAAS,IAAI,IAAI,CAAC,UAAU,IACxBC,WAAU,IAAI,IAAI,CAAC,UAAU,IACzB,CAAC,CAAE,CAAC;AAChC;AAPgB;;;AaxBhB;AAAA;AAAAC;AAIA,SAAS,eAAe,MAAM,YAAY,SAAS;AAC/C,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM,OAAO,oBAAoB,UAAU,GAAG;AACrD,WAAO,EAAE,IAAI,MAAM,MAAM,kBAAkB,WAAW,EAAE,CAAC,GAAG,OAAO;AAAA,EACvE;AACA,SAAO;AACX;AANS;AAQT,SAAS,iBAAiB,MAAM,cAAc,SAAS;AACnD,SAAO,eAAe,MAAM,aAAa,YAAY,OAAO;AAChE;AAFS;AAIF,SAAS,sBAAsB,MAAM,cAAc,SAAS;AAC/D,QAAM,aAAa,iBAAiB,MAAM,cAAc,OAAO;AAC/D,SAAO,aAAa,UAAU;AAClC;AAHgB;;;AjBFhB,SAAS,SAAS,OAAO,KAAK;AAC1B,SAAO,MAAM,IAAI,UAAQ,qBAAqB,MAAM,GAAG,CAAC;AAC5D;AAFS;AAIT,SAAS,kBAAkB,OAAO;AAC9B,SAAO,MAAM,OAAO,UAAQ,CAAC,QAAQ,IAAI,CAAC;AAC9C;AAFS;AAIT,SAAS,cAAc,OAAO,KAAK;AAC/B,SAAQ,mBAAmB,kBAAkB,SAAS,OAAO,GAAG,CAAC,CAAC;AACtE;AAFS;AAIT,SAAS,cAAc,OAAO;AAC1B,SAAQ,MAAM,KAAK,OAAK,QAAQ,CAAC,CAAC,IAC5B,CAAC,IACD;AACV;AAJS;AAMT,SAASC,WAAU,OAAO,KAAK;AAC3B,SAAQ,eAAe,cAAc,SAAS,OAAO,GAAG,CAAC,CAAC;AAC9D;AAFS,OAAAA,YAAA;AAIT,SAAS,UAAU,OAAO,KAAK;AAC3B,SAAQ,OAAO,QAAQ,MAAM,GAAG,IAC5B,QAAQ,aAAa,eAAe,KAAK,IACrC,MAAM;AAClB;AAJS;AAMT,SAAS,UAAU,MAAM,KAAK;AAC1B,SAAQ,QAAQ,aACV,OACA,MAAM;AAChB;AAJS;AAMT,SAAS,aAAa,YAAY,aAAa;AAC3C,SAAQ,eAAe,aAAa,WAAW,WAAW,IAAI,MAAM;AACxE;AAFS;AAIF,SAAS,qBAAqB,MAAM,aAAa;AACpD,SAAQ,YAAY,IAAI,IAAI,cAAc,KAAK,OAAO,WAAW,IAC7D,QAAQ,IAAI,IAAIA,WAAU,KAAK,OAAO,WAAW,IAC7C,QAAQ,IAAI,IAAI,UAAU,KAAK,SAAS,CAAC,GAAG,WAAW,IACnDC,SAAQ,IAAI,IAAI,UAAU,KAAK,OAAO,WAAW,IAC7CC,UAAS,IAAI,IAAI,aAAa,KAAK,YAAY,WAAW,IACtD,MAAM;AAC9B;AAPgB;AAST,SAAS,sBAAsB,MAAM,cAAc;AACtD,SAAO,aAAa,IAAI,iBAAe,qBAAqB,MAAM,WAAW,CAAC;AAClF;AAFgB;AAIhB,SAAS,WAAW,MAAM,cAAc;AACpC,SAAQ,eAAe,sBAAsB,MAAM,YAAY,CAAC;AACpE;AAFS;AAQF,SAAS,MAAM,MAAM,KAAK,SAAS;AAEtC,MAAI,MAAM,IAAI,KAAK,MAAM,GAAG,GAAG;AAC3B,UAAMC,SAAQ;AACd,QAAI,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,GAAG;AAChC,YAAM,IAAI,aAAaA,MAAK;AAChC,WAAO,SAAS,SAAS,CAAC,MAAM,GAAG,CAAC;AAAA,EACxC;AAEA,MAAI,eAAe,GAAG;AAClB,WAAO,sBAAsB,MAAM,KAAK,OAAO;AACnD,MAAI,YAAY,GAAG;AACf,WAAO,mBAAmB,MAAM,KAAK,OAAO;AAEhD,SAAO,WAAW,SAAS,GAAG,IACxB,WAAW,MAAM,kBAAkB,GAAG,CAAC,IACvC,WAAW,MAAM,GAAG,GAAG,OAAO;AACxC;AAjBgB;;;ADrEhB,SAAS,uBAAuB,MAAM,KAAK,SAAS;AAChD,SAAO,EAAE,CAAC,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG,MAAM,OAAO,CAAC,EAAE;AACvD;AAFS;AAIT,SAAS,wBAAwB,MAAM,cAAc,SAAS;AAC1D,SAAO,aAAa,OAAO,CAAC,QAAQ,SAAS;AACzC,WAAO,EAAE,GAAG,QAAQ,GAAG,uBAAuB,MAAM,MAAM,OAAO,EAAE;AAAA,EACvE,GAAG,CAAC,CAAC;AACT;AAJS;AAMT,SAAS,sBAAsB,MAAM,WAAW,SAAS;AACrD,SAAO,wBAAwB,MAAM,UAAU,MAAM,OAAO;AAChE;AAFS;AAIF,SAAS,mBAAmB,MAAM,WAAW,SAAS;AACzD,QAAM,aAAa,sBAAsB,MAAM,WAAW,OAAO;AACjE,SAAO,aAAa,UAAU;AAClC;AAHgB;;;AmBlBhB;AAAA;AAAAC;AAGO,SAAS,SAAS,OAAO,SAAS;AACrC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,YAAY,MAAM,YAAY,MAAM,GAAG,OAAO;AAC9E;AAFgB;;;ACHhB;AAAA;AAAAC;AAMA,SAAS,aAAa,YAAY;AAC9B,QAAM,OAAO,CAAC;AACd,WAAS,OAAO,YAAY;AACxB,QAAI,CAAC,WAAW,WAAW,GAAG,CAAC;AAC3B,WAAK,KAAK,GAAG;AAAA,EACrB;AACA,SAAO;AACX;AAPS;AAST,SAAS,QAAQ,YAAY,SAAS;AAClC,QAAM,WAAW,aAAa,UAAU;AACxC,QAAM,YAAY,SAAS,SAAS,IAAI,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,UAAU,YAAY,SAAS,IAAI,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,UAAU,WAAW;AACpJ,SAAO,WAAW,WAAW,OAAO;AACxC;AAJS;AAMF,IAAIC,UAAS;;;ACrBpB;AAAA;AAAAC;AAGO,SAASC,SAAQ,MAAM,SAAS;AACnC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,WAAW,MAAM,WAAW,KAAK,GAAG,OAAO;AAC3E;AAFgB,OAAAA,UAAA;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAKA,SAAS,eAAe,QAAQ;AAC5B,SAAO,WAAW,QAAQ,QAAQ,CAAC,YAAY,CAAC,CAAC;AACrD;AAFS;AAGT,SAAS,YAAY,QAAQ;AACzB,SAAO,WAAW,EAAE,GAAG,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC;AAC/D;AAFS;AAIT,SAAS,iBAAiB,QAAQ,GAAG;AACjC,SAAQ,MAAM,QACR,eAAe,MAAM,IACrB,YAAY,MAAM;AAC5B;AAJS;AAMF,SAAS,SAAS,QAAQ,QAAQ;AACrC,QAAM,IAAI,UAAU;AACpB,SAAO,eAAe,MAAM,IAAI,yBAAyB,QAAQ,CAAC,IAAI,iBAAiB,QAAQ,CAAC;AACpG;AAHgB;;;ADfhB,SAASC,gBAAe,GAAG,GAAG;AAC1B,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,SAAS,EAAE,EAAE,GAAG,CAAC;AAC/B,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAASC,kBAAiB,GAAG,GAAG;AAC5B,SAAOD,gBAAe,EAAE,YAAY,CAAC;AACzC;AAFS,OAAAC,mBAAA;AAIF,SAAS,yBAAyB,GAAG,GAAG;AAC3C,QAAM,IAAIA,kBAAiB,GAAG,CAAC;AAC/B,SAAO,aAAa,CAAC;AACzB;AAHgB;;;AEdhB;AAAA;AAAAC;AAGO,SAAS,MAAM,OAAO,SAAS;AAElC,SAAO,WAAW,MAAM,SAAS,IAC7B,EAAE,CAAC,IAAI,GAAG,SAAS,MAAM,SAAS,OAAO,OAAO,iBAAiB,OAAO,UAAU,MAAM,QAAQ,UAAU,MAAM,OAAO,IACvH,EAAE,CAAC,IAAI,GAAG,SAAS,MAAM,SAAS,UAAU,MAAM,QAAQ,UAAU,MAAM,OAAO,GAAG,OAAO;AACnG;AALgB;;;A3BuBhB,SAASC,kBAAiB,GAAG,GAAG;AAC5B,SAAQ,KAAK,IACP,eAAe,GAAG,EAAE,CAAC,CAAC,IACtB,aAAa,CAAC;AACxB;AAJS,OAAAA,mBAAA;AAMT,SAAS,uCAAuC,GAAG;AAC/C,SAAO,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE;AAC7B;AAFS;AAIT,SAAS,yCAAyC,GAAG;AACjD,QAAM,MAAM,CAAC;AACb,aAAW,KAAK;AACZ,QAAI,CAAC,IAAI,QAAQ,CAAC;AACtB,SAAO;AACX;AALS;AAOT,SAAS,kCAAkC,GAAG,GAAG;AAC7C,SAAQ,YAAY,GAAG,CAAC,IAClB,uCAAuC,CAAC,IACxC,yCAAyC,CAAC;AACpD;AAJS;AAMT,SAAS,cAAc,GAAG,GAAG;AACzB,QAAM,IAAI,kCAAkC,GAAG,CAAC;AAChD,SAAOA,kBAAiB,GAAG,CAAC;AAChC;AAHS;AAKT,SAASC,UAAS,GAAG,GAAG;AACpB,SAAO,EAAE,IAAI,OAAK,eAAe,GAAG,CAAC,CAAC;AAC1C;AAFS,OAAAA,WAAA;AAIT,SAASC,gBAAe,GAAG,GAAG;AAC1B,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,eAAe,GAAG,EAAE,EAAE,CAAC;AACrC,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAAS,eAAe,GAAG,GAAG;AAE1B,QAAM,UAAU,EAAE,GAAG,EAAE;AACvB;AAAA;AAAA,IAEA,WAAW,CAAC,IAAI,SAAS,eAAe,GAAG,QAAQ,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,IAClE,WAAW,CAAC,IAAI,SAAS,eAAe,GAAG,QAAQ,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;AAAA;AAAA,MAElE,eAAe,CAAC,IAAIF,kBAAiB,GAAG,EAAE,UAAU,IAChD,YAAY,CAAC,IAAI,cAAc,GAAG,EAAE,IAAI;AAAA;AAAA,QAEpC,cAAc,CAAC,IAAI,YAAYC,UAAS,GAAG,EAAE,UAAU,GAAG,eAAe,GAAG,EAAE,OAAO,GAAG,OAAO,IAC3FE,YAAW,CAAC,IAAIC,UAAaH,UAAS,GAAG,EAAE,UAAU,GAAG,eAAe,GAAG,EAAE,OAAO,GAAG,OAAO,IACzFI,iBAAgB,CAAC,IAAI,cAAc,eAAe,GAAG,EAAE,KAAK,GAAG,OAAO,IAClEC,YAAW,CAAC,IAAI,SAAS,eAAe,GAAG,EAAE,KAAK,GAAG,OAAO,IACxD,YAAY,CAAC,IAAI,UAAUL,UAAS,GAAG,EAAE,KAAK,GAAG,OAAO,IACpD,QAAQ,CAAC,IAAI,MAAMA,UAAS,GAAG,EAAE,KAAK,GAAG,OAAO,IAC5C,QAAQ,CAAC,IAAI,MAAMA,UAAS,GAAG,EAAE,SAAS,CAAC,CAAC,GAAG,OAAO,IAClDM,UAAS,CAAC,IAAIC,QAAON,gBAAe,GAAG,EAAE,UAAU,GAAG,OAAO,IACzDO,SAAQ,CAAC,IAAIC,OAAM,eAAe,GAAG,EAAE,KAAK,GAAG,OAAO,IAClDC,WAAU,CAAC,IAAIC,SAAQ,eAAe,GAAG,EAAE,IAAI,GAAG,OAAO,IACrD;AAAA;AAAA;AAAA;AAC5D;AAtBS;AAwBF,SAAS,yBAAyB,GAAG,GAAG;AAC3C,QAAM,MAAM,CAAC;AACb,aAAW,KAAK;AACZ,QAAI,CAAC,IAAI,eAAe,GAAG,CAAC;AAChC,SAAO;AACX;AALgB;AAOT,SAAS,OAAO,KAAKC,MAAK,SAAS;AACtC,QAAM,IAAI,SAAS,GAAG,IAAI,kBAAkB,GAAG,IAAI;AACnD,QAAM,KAAKA,KAAI,EAAE,CAAC,IAAI,GAAG,aAAa,MAAM,EAAE,CAAC;AAC/C,QAAM,IAAI,yBAAyB,GAAG,EAAE;AACxC,SAAOL,QAAO,GAAG,OAAO;AAC5B;AALgB;;;A4BhGhB;AAAA;AAAAM;AAKA,SAAS,eAAe,QAAQ;AAC5B,SAAO,WAAW,QAAQ,QAAQ,CAAC,YAAY,CAAC,CAAC;AACrD;AAFS;AAGT,SAAS,YAAY,QAAQ;AACzB,SAAO,WAAW,EAAE,GAAG,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC;AAC/D;AAFS;AAIT,SAAS,iBAAiB,QAAQ,GAAG;AACjC,SAAQ,MAAM,QACR,eAAe,MAAM,IACrB,YAAY,MAAM;AAC5B;AAJS;AAMF,SAAS,SAAS,QAAQ,QAAQ;AACrC,QAAM,IAAI,UAAU;AACpB,SAAO,eAAe,MAAM,IAAI,yBAAyB,QAAQ,CAAC,IAAI,iBAAiB,QAAQ,CAAC;AACpG;AAHgB;;;A9BfhB,SAASC,gBAAe,GAAG,GAAG;AAC1B,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,SAAS,EAAE,EAAE,GAAG,CAAC;AAC/B,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAASC,kBAAiB,GAAG,GAAG;AAC5B,SAAOD,gBAAe,EAAE,YAAY,CAAC;AACzC;AAFS,OAAAC,mBAAA;AAIF,SAAS,yBAAyB,GAAG,GAAG;AAC3C,QAAM,IAAIA,kBAAiB,GAAG,CAAC;AAC/B,SAAO,aAAa,CAAC;AACzB;AAHgB;;;A+BdhB;AAAA;AAAAC;AAUO,SAAS,gBAAgB,GAAG,UAAU,CAAC,GAAG;AAC7C,QAAM,aAAa,EAAE,MAAM,CAAC,WAAWC,UAAS,MAAM,CAAC;AACvD,QAAM,8BAA8B,SAAS,QAAQ,qBAAqB,IACpE,EAAE,uBAAuB,QAAQ,sBAAsB,IACvD,CAAC;AACP,SAAO,WAAY,QAAQ,0BAA0B,SAAS,SAAS,QAAQ,qBAAqB,KAAK,aACnG,EAAE,GAAG,6BAA6B,CAAC,IAAI,GAAG,aAAa,MAAM,UAAU,OAAO,EAAE,IAChF,EAAE,GAAG,6BAA6B,CAAC,IAAI,GAAG,aAAa,OAAO,EAAE,GAAI,OAAO;AACrF;AARgB;;;AlCChB,SAAS,oBAAoB,OAAO;AAChC,SAAO,MAAM,MAAM,UAAQ,WAAW,IAAI,CAAC;AAC/C;AAFS;AAIT,SAASC,wBAAuB,MAAM;AAClC,SAAQ,QAAQ,MAAM,CAAC,YAAY,CAAC;AACxC;AAFS,OAAAA,yBAAA;AAIT,SAASC,wBAAuB,OAAO;AACnC,SAAO,MAAM,IAAI,UAAQ,WAAW,IAAI,IAAID,wBAAuB,IAAI,IAAI,IAAI;AACnF;AAFS,OAAAC,yBAAA;AAIT,SAAS,iBAAiB,OAAO,SAAS;AACtC,SAAQ,oBAAoB,KAAK,IAC3B,SAAS,gBAAgBA,wBAAuB,KAAK,GAAG,OAAO,CAAC,IAChE,gBAAgBA,wBAAuB,KAAK,GAAG,OAAO;AAChE;AAJS;AAMF,SAAS,mBAAmB,OAAO,UAAU,CAAC,GAAG;AACpD,MAAI,MAAM,WAAW;AACjB,WAAO,WAAW,MAAM,CAAC,GAAG,OAAO;AACvC,MAAI,MAAM,WAAW;AACjB,WAAO,MAAM,OAAO;AACxB,MAAI,MAAM,KAAK,CAAC,WAAW,YAAY,MAAM,CAAC;AAC1C,UAAM,IAAI,MAAM,kCAAkC;AACtD,SAAO,iBAAiB,OAAO,OAAO;AAC1C;AARgB;;;AmC7BhB;AAAA;AAAAC;AAQO,SAAS,UAAU,OAAO,SAAS;AACtC,MAAI,MAAM,WAAW;AACjB,WAAO,WAAW,MAAM,CAAC,GAAG,OAAO;AACvC,MAAI,MAAM,WAAW;AACjB,WAAO,MAAM,OAAO;AACxB,MAAI,MAAM,KAAK,CAAC,WAAW,YAAY,MAAM,CAAC;AAC1C,UAAM,IAAI,MAAM,kCAAkC;AACtD,SAAO,gBAAgB,OAAO,OAAO;AACzC;AARgB;;;ACRhB;AAAA;AAAAC;AAIO,SAAS,OAAO,MAAM;AACzB,QAAM,CAAC,MAAM,OAAO,IAAI,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;AAChG,MAAI,OAAO,SAAS;AAChB,UAAM,IAAI,aAAa,4BAA4B;AACvD,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,OAAO,KAAK,GAAG,OAAO;AACtD;AALgB;;;AtCMhB,SAAS,aAAa,QAAQ,YAAY;AACtC,SAAO,SAAS,WAAW,CAAC,SAAS,QAAQ,UAAU,CAAC,CAAC;AAC7D;AAFS;AAIT,SAAS,QAAQ,MAAM;AACnB,SAAO,SAAS,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC;AAC1C;AAFS;AAIT,SAASC,eAAc,OAAO;AAC1B,SAAO,UAAUC,UAAS,KAAK,CAAC;AACpC;AAFS,OAAAD,gBAAA;AAIT,SAASE,WAAU,OAAO;AACtB,SAAO,MAAMD,UAAS,KAAK,CAAC;AAChC;AAFS,OAAAC,YAAA;AAIT,SAAS,YAAY,MAAM;AACvB,SAAO,QAAQ,IAAI;AACvB;AAFS;AAIT,SAASD,UAAS,OAAO;AACrB,SAAO,MAAM,IAAI,UAAQ,QAAQ,IAAI,CAAC;AAC1C;AAFS,OAAAA,WAAA;AAIF,SAAS,QAAQ,MAAM,SAAS;AACnC,SAAO,WAAW,WAAW,IAAI,IAAI,aAAa,KAAK,QAAQ,KAAK,UAAU,IAAI,YAAY,IAAI,IAAID,eAAc,KAAK,KAAK,IAAI,QAAQ,IAAI,IAAIE,WAAU,KAAK,KAAK,IAAIC,WAAU,IAAI,IAAI,YAAY,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,QAAQ,KAAK,IAAI,IAAI,MAAM,OAAO;AACzQ;AAFgB;;;AuClChB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAMA,SAASC,UAAS,OAAO;AACrB,QAAM,SAAS,CAAC;AAChB,aAAW,KAAK;AACZ,WAAO,KAAK,kBAAkB,CAAC,CAAC;AACpC,SAAO;AACX;AALS,OAAAA,WAAA;AAOT,SAASC,eAAc,OAAO;AAC1B,QAAM,oBAAoBD,UAAS,KAAK;AACxC,QAAM,eAAe,aAAa,iBAAiB;AACnD,SAAO;AACX;AAJS,OAAAC,gBAAA;AAMT,SAASC,WAAU,OAAO;AACtB,QAAM,oBAAoBF,UAAS,KAAK;AACxC,QAAM,eAAe,iBAAiB,iBAAiB;AACvD,SAAO;AACX;AAJS,OAAAE,YAAA;AAMT,SAASC,WAAU,OAAO;AACtB,SAAO,MAAM,IAAI,CAAC,GAAG,YAAY,QAAQ,SAAS,CAAC;AACvD;AAFS,OAAAA,YAAA;AAIT,SAASC,WAAU,GAAG;AAClB,SAAQ,CAAC,UAAU;AACvB;AAFS,OAAAA,YAAA;AAIT,SAASC,gBAAe,GAAG;AACvB,SAAQ,WAAW,OAAO,oBAAoB,CAAC;AACnD;AAFS,OAAAA,iBAAA;AAOT,SAAS,sBAAsB,mBAAmB;AAC9C,MAAI,CAAC;AACD,WAAO,CAAC;AACZ,QAAM,sBAAsB,WAAW,OAAO,oBAAoB,iBAAiB;AACnF,SAAO,oBAAoB,IAAI,SAAO;AAClC,WAAQ,IAAI,CAAC,MAAM,OAAO,IAAI,IAAI,SAAS,CAAC,MAAM,MAC5C,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,IAC3B;AAAA,EACV,CAAC;AACL;AATS;AAYF,SAAS,kBAAkB,MAAM;AACpC,SAAQ,YAAY,IAAI,IAAIJ,eAAc,KAAK,KAAK,IAChD,QAAQ,IAAI,IAAIC,WAAU,KAAK,KAAK,IAChC,QAAQ,IAAI,IAAIC,WAAU,KAAK,SAAS,CAAC,CAAC,IACtCG,SAAQ,IAAI,IAAIF,WAAU,KAAK,KAAK,IAChCG,UAAS,IAAI,IAAIF,gBAAe,KAAK,UAAU,IAC3C,SAAS,IAAI,IAAI,sBAAsB,KAAK,iBAAiB,IACzD,CAAC;AAC7B;AARgB;AAYhB,IAAI,2BAA2B;AAExB,SAAS,aAAa,QAAQ;AACjC,6BAA2B;AAC3B,QAAM,OAAO,kBAAkB,MAAM;AACrC,6BAA2B;AAC3B,QAAM,UAAU,KAAK,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG;AAC5C,SAAO,KAAK,QAAQ,KAAK,GAAG,CAAC;AACjC;AANgB;;;ADrDhB,SAASG,cAAa,QAAQ,YAAY;AACtC,SAAO,SAAS,SAAS,CAAC,SAAS,QAAQ,UAAU,CAAC,CAAC;AAC3D;AAFS,OAAAA,eAAA;AAIT,SAASC,SAAQ,MAAM;AACnB,SAAO,SAAS,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC;AACxC;AAFS,OAAAA,UAAA;AAIT,SAAS,cAAc,MAAM,SAAS;AAClC,QAAM,eAAe,kBAAkB,IAAI;AAC3C,QAAM,mBAAmB,wBAAwB,YAAY;AAC7D,QAAM,SAAS,eAAe,gBAAgB;AAC9C,SAAO,WAAW,QAAQ,OAAO;AACrC;AALS;AAOF,SAAS,wBAAwB,cAAc;AAClD,SAAO,aAAa,IAAI,OAAK,MAAM,aAAaC,QAAO,IAAI,QAAQ,CAAC,CAAC;AACzE;AAFgB;AAIT,SAAS,MAAM,MAAM,SAAS;AACjC,SAAQ,WAAW,IAAI,IAAIF,cAAa,KAAK,QAAQ,KAAK,UAAU,IAAI,MAAM,IAAI,IAAIC,SAAQ,KAAK,IAAI,IAAI,eAAe,IAAI,IAAI,sBAAsB,MAAM,OAAO,IAAI,cAAc,MAAM,OAAO;AACxM;AAFgB;;;AD5BhB,SAASE,gBAAe,YAAY,SAAS;AACzC,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM,WAAW,OAAO,oBAAoB,UAAU;AAC7D,WAAO,EAAE,IAAI,MAAM,WAAW,EAAE,GAAG,MAAM,OAAO,CAAC;AACrD,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAASC,kBAAiB,cAAc,SAAS;AAC7C,SAAOD,gBAAe,aAAa,YAAY,OAAO;AAC1D;AAFS,OAAAC,mBAAA;AAIF,SAAS,sBAAsB,cAAc,SAAS;AACzD,QAAM,aAAaA,kBAAiB,cAAc,OAAO;AACzD,SAAO,aAAa,UAAU;AAClC;AAHgB;;;AGfhB;AAAA;AAAAC;AAOO,SAAS,qBAAqB,QAAQ;AACzC,QAAM,OAAO,kBAAkB,MAAM;AACrC,QAAM,UAAU,sBAAsB,QAAQ,IAAI;AAClD,SAAO,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,KAAK,GAAG,QAAQ,KAAK,CAAC,CAAC;AAC/D;AAJgB;;;AJGhB,SAAS,cAAc,GAAG;AACtB,QAAM,MAAM,CAAC;AACb,aAAW,KAAK;AACZ,QAAI,KAAK,GAAG,kBAAkB,CAAC,CAAC;AACpC,SAAO,YAAY,GAAG;AAC1B;AALS;AAOT,SAAS,YAAY,GAAG;AACpB,SAAO,EAAE,OAAO,OAAK,CAAC,QAAQ,CAAC,CAAC;AACpC;AAFS;AAIT,SAAS,kBAAkB,GAAG,GAAG;AAC7B,QAAM,MAAM,CAAC;AACb,aAAW,KAAK;AACZ,QAAI,KAAK,GAAG,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C,SAAO,YAAY,GAAG;AAC1B;AALS;AAOT,SAAS,oBAAoB,GAAG,GAAG;AAC/B,QAAM,MAAM,CAAC;AACb,aAAW,KAAK,GAAG;AACf,QAAI,CAAC,IAAI,mBAAmB,kBAAkB,GAAG,CAAC,CAAC;AAAA,EACvD;AACA,SAAO;AACX;AANS;AAQF,SAAS,UAAU,GAAG,SAAS;AAClC,QAAM,IAAI,cAAc,CAAC;AACzB,QAAM,IAAI,oBAAoB,GAAG,CAAC;AAClC,QAAM,IAAIC,QAAO,GAAG,OAAO;AAC3B,SAAO;AACX;AALgB;;;AKpChB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAASC,MAAK,SAAS;AAC1B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,QAAQ,MAAM,OAAO,GAAG,OAAO;AAC/D;AAFgB,OAAAA,OAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,KAAK,SAAS;AAC1B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,QAAQ,MAAM,OAAO,GAAG,OAAO;AAC/D;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,QAAO,SAAS;AAC5B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,SAAS,GAAG,OAAO;AACnE;AAFgB,OAAAA,SAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,UAAU,SAAS;AAC/B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,aAAa,MAAM,YAAY,GAAG,OAAO;AACzE;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAASC,YAAW,SAAS;AAChC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,cAAc,MAAM,aAAa,GAAG,OAAO;AAC3E;AAFgB,OAAAA,aAAA;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,QAAQ,SAAS;AAC7B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,GAAG,OAAO;AACpD;AAFgB;;;ANgBhB,SAASC,WAAU,GAAG;AAClB,SAAO,EAAE,IAAI,OAAK,UAAU,GAAG,KAAK,CAAC;AACzC;AAFS,OAAAA,YAAA;AAIT,SAASC,gBAAe,OAAO;AAC3B,QAAM,MAAM,CAAC;AACb,aAAW,KAAK,WAAW,OAAO,oBAAoB,KAAK;AACvD,QAAI,CAAC,IAAI,SAAS,UAAU,MAAM,CAAC,GAAG,KAAK,CAAC;AAChD,SAAO;AACX;AALS,OAAAA,iBAAA;AAMT,SAAS,oBAAoB,GAAG,MAAM;AAClC,SAAQ,SAAS,OAAO,IAAI,SAAS,CAAC;AAC1C;AAFS;AAIT,SAAS,UAAU,OAAO,MAAM;AAC5B,SAAQ,gBAAgB,KAAK,IAAI,oBAAoB,IAAI,GAAG,IAAI,IAC5D,WAAW,KAAK,IAAI,oBAAoB,IAAI,GAAG,IAAI,IAC/C,QAAQ,KAAK,IAAI,SAAS,MAAMD,WAAU,KAAK,CAAC,CAAC,IAC7C,aAAa,KAAK,IAAIE,YAAW,IAC7B,OAAO,KAAK,IAAIC,MAAK,IACjB,SAAS,KAAK,IAAI,oBAAoBC,QAAOH,gBAAe,KAAK,CAAC,GAAG,IAAI,IACrE,WAAW,KAAK,IAAI,oBAAoBI,UAAa,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,IACrE,YAAY,KAAK,IAAI,UAAU,IAC3B,OAAO,KAAK,IAAI,KAAK,IACjB,SAAS,KAAK,IAAIC,QAAO,IACrB,SAAS,KAAK,IAAIC,QAAO,IACrB,SAAS,KAAK,IAAI,QAAQ,KAAK,IAC3B,UAAU,KAAK,IAAI,QAAQ,KAAK,IAC5B,SAAS,KAAK,IAAI,QAAQ,KAAK,IAC3BH,QAAO,CAAC,CAAC;AACrE;AAhBS;AAkBF,SAAS,MAAM,GAAG,SAAS;AAC9B,SAAO,WAAW,UAAU,GAAG,IAAI,GAAG,OAAO;AACjD;AAFgB;;;AOnDhB;AAAA;AAAAI;AAIO,SAAS,sBAAsB,QAAQ,SAAS;AACnD,SAAkB,cAAc,MAAM,IAAI,MAAM,OAAO,YAAY,OAAO,IAAI,MAAM,OAAO;AAC/F;AAFgB;;;ACJhB;AAAA;AAAAC;AAQO,SAAS,KAAK,MAAM,SAAS;AAChC,MAAI,YAAY,IAAI;AAChB,UAAM,IAAI,MAAM,yBAAyB;AAC7C,QAAM,UAAU,WAAW,OAAO,oBAAoB,IAAI,EACrD,OAAO,CAAC,QAAQ,MAAM,GAAG,CAAC,EAC1B,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC;AAC3B,QAAM,UAAU,CAAC,GAAG,IAAI,IAAI,OAAO,CAAC;AACpC,QAAM,QAAQ,QAAQ,IAAI,CAAC,UAAU,QAAQ,KAAK,CAAC;AACnD,SAAO,MAAM,OAAO,EAAE,GAAG,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC;AACtD;AATgB;;;ACRhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAUO,IAAM,uBAAN,cAAmC,aAAa;AAAA,EAVvD,OAUuD;AAAA;AAAA;AACvD;AACO,IAAI;AAAA,CACV,SAAUC,gBAAe;AACtB,EAAAA,eAAcA,eAAc,OAAO,IAAI,CAAC,IAAI;AAC5C,EAAAA,eAAcA,eAAc,MAAM,IAAI,CAAC,IAAI;AAC3C,EAAAA,eAAcA,eAAc,OAAO,IAAI,CAAC,IAAI;AAChD,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAKxC,SAAS,kBAAkB,QAAQ;AAC/B,SAAO,WAAW,cAAc,QAAQ,SAAS,cAAc;AACnE;AAFS;AAOT,SAAS,MAAM,SAAS;AACpB,QAAM,IAAI,qBAAqB,OAAO;AAC1C;AAFS;AAOT,SAAS,kBAAkB,OAAO;AAC9B,SAAQ,aAAU,QAAQ,KAAK,KAC3B,aAAU,YAAY,KAAK,KAC3B,aAAU,QAAQ,KAAK,KACvB,aAAU,UAAU,KAAK,KACzB,aAAU,MAAM,KAAK;AAC7B;AANS;AAQT,SAAS,gBAAgB,MAAM,OAAO;AAClC,SAAQ,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACzD,aAAU,YAAY,KAAK,IAAI,mBAAmB,MAAM,KAAK,IACzD,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACjD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,aAAU,MAAM,KAAK,IAAI,aAAa,MAAM,KAAK,IAC7C,MAAM,iBAAiB;AAC/C;AAPS;AAYT,SAAS,aAAa,MAAM,OAAO;AAC/B,SAAO,cAAc;AACzB;AAFS;AAIT,SAAS,QAAQ,MAAM,OAAO;AAC1B,SAAQ,aAAU,YAAY,KAAK,IAAI,mBAAmB,MAAM,KAAK,IAChE,aAAU,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,CAAC,WAAW,aAAU,MAAM,MAAM,KAAK,aAAU,UAAU,MAAM,CAAC,IAAK,cAAc,OAC/H,aAAU,QAAQ,KAAK,IAAI,cAAc,QACrC,aAAU,UAAU,KAAK,IAAI,cAAc,OACvC,aAAU,MAAM,KAAK,IAAI,cAAc,OACnC,cAAc;AACtC;AAPS;AAYT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAQ,aAAU,UAAU,IAAI,IAAI,cAAc,QAC9C,aAAU,MAAM,IAAI,IAAI,cAAc,QAClC,aAAU,QAAQ,IAAI,IAAI,cAAc,OACpC,cAAc;AAC9B;AALS;AAOT,SAASC,WAAU,MAAM,OAAO;AAC5B,SAAQ,aAAU,SAAS,KAAK,KAAK,kBAAkB,KAAK,IAAI,cAAc,OAC1E,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAClD,CAAC,aAAU,QAAQ,KAAK,IAAI,cAAc,QACtC,kBAAkBC,OAAM,KAAK,OAAO,MAAM,KAAK,CAAC;AAChE;AALS,OAAAD,YAAA;AAUT,SAAS,kBAAkB,MAAM,OAAO;AACpC,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,CAAC,aAAU,gBAAgB,KAAK,IAAI,cAAc,QAC9C,kBAAkBC,OAAM,KAAK,OAAO,MAAM,KAAK,CAAC;AAC5D;AAJS;AAST,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,cAAc,OACtC,cAAc;AAClC;AANS;AAWT,SAAS,iBAAiB,MAAM,OAAO;AACnC,SAAQ,aAAU,iBAAiB,IAAI,IAAI,cAAc,OACrD,aAAU,UAAU,IAAI,IAAI,cAAc,OACtC,cAAc;AAC1B;AAJS;AAMT,SAAS,YAAY,MAAM,OAAO;AAC9B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,UAAU,KAAK,IAAI,cAAc,OACvC,cAAc;AAClC;AANS;AAWT,SAAS,gBAAgB,MAAM,OAAO;AAClC,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,CAAC,aAAU,cAAc,KAAK,IAAI,cAAc,QAC5C,KAAK,WAAW,SAAS,MAAM,WAAW,SAAS,cAAc,QAC5D,CAAC,KAAK,WAAW,MAAM,CAAC,QAAQ,UAAU,kBAAkBA,OAAM,MAAM,WAAW,KAAK,GAAG,MAAM,CAAC,MAAM,cAAc,IAAI,IAAK,cAAc,QAC1I,kBAAkBA,OAAM,KAAK,SAAS,MAAM,OAAO,CAAC;AAC5E;AAPS;AAYT,SAAS,SAAS,MAAM,OAAO;AAC3B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,OAAO,KAAK,IAAI,cAAc,OACpC,cAAc;AAClC;AANS;AAWT,SAAS,aAAa,MAAM,OAAO;AAC/B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,CAAC,aAAU,WAAW,KAAK,IAAI,cAAc,QACzC,KAAK,WAAW,SAAS,MAAM,WAAW,SAAS,cAAc,QAC5D,CAAC,KAAK,WAAW,MAAM,CAAC,QAAQ,UAAU,kBAAkBA,OAAM,MAAM,WAAW,KAAK,GAAG,MAAM,CAAC,MAAM,cAAc,IAAI,IAAK,cAAc,QAC1I,kBAAkBA,OAAM,KAAK,SAAS,MAAM,OAAO,CAAC;AAC5E;AAPS;AAYT,SAAS,iBAAiB,MAAM,OAAO;AACnC,SAAQ,aAAU,UAAU,IAAI,KAAK,cAAW,SAAS,KAAK,KAAK,IAAI,cAAc,OACjF,aAAU,SAAS,IAAI,KAAK,aAAU,UAAU,IAAI,IAAI,cAAc,OAClE,cAAc;AAC1B;AAJS;AAMT,SAAS,YAAY,MAAM,OAAO;AAC9B,SAAQ,aAAU,UAAU,KAAK,KAAK,aAAU,SAAS,KAAK,IAAI,cAAc,OAC5E,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAClD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,cAAc;AAClC;AANS;AAWT,SAAS,mBAAmB,MAAM,OAAO;AACrC,SAAO,MAAM,MAAM,MAAM,CAAC,WAAWA,OAAM,MAAM,MAAM,MAAM,cAAc,IAAI,IACzE,cAAc,OACd,cAAc;AACxB;AAJS;AAMT,SAASC,eAAc,MAAM,OAAO;AAChC,SAAO,KAAK,MAAM,KAAK,CAAC,WAAWD,OAAM,QAAQ,KAAK,MAAM,cAAc,IAAI,IACxE,cAAc,OACd,cAAc;AACxB;AAJS,OAAAC,gBAAA;AAST,SAAS,aAAa,MAAM,OAAO;AAC/B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,CAAC,aAAU,WAAW,KAAK,IAAI,cAAc,QACzC,kBAAkBD,OAAM,KAAK,OAAO,MAAM,KAAK,CAAC;AAC5D;AAJS;AAST,SAASE,aAAY,MAAM,OAAO;AAC9B,SAAQ,aAAU,UAAU,KAAK,KAAK,MAAM,UAAU,KAAK,QAAQ,cAAc,OAC7E,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAClD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,cAAc;AAClD;AAVS,OAAAA,cAAA;AAeT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAO,cAAc;AACzB;AAFS;AAIT,SAAS,UAAU,MAAM,OAAO;AAC5B,SAAO,cAAc;AACzB;AAFS;AAOT,SAAS,WAAW,QAAQ;AACxB,MAAI,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC;AACjC,SAAO,MAAM;AACT,QAAI,CAAC,aAAU,MAAM,OAAO;AACxB;AACJ,cAAU,QAAQ;AAClB,aAAS;AAAA,EACb;AACA,SAAO,QAAQ,MAAM,IAAI,UAAU,QAAQ;AAC/C;AATS;AAWT,SAAS,QAAQ,MAAM,OAAO;AAK1B,SAAQ,aAAU,MAAM,IAAI,IAAIF,OAAM,WAAW,IAAI,GAAG,KAAK,IACzD,aAAU,MAAM,KAAK,IAAIA,OAAM,MAAM,WAAW,KAAK,CAAC,IAClD,MAAM,6BAA6B;AAC/C;AARS;AAaT,SAAS,SAAS,MAAM,OAAO;AAC3B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,OAAO,KAAK,IAAI,cAAc,OACpC,cAAc;AAClC;AANS;AAWT,SAAS,gBAAgB,MAAM,OAAO;AAClC,SAAQ,aAAU,gBAAgB,IAAI,IAAI,cAAc,OACpD,aAAU,SAAS,IAAI,KAAK,aAAU,UAAU,IAAI,IAAI,cAAc,OAClE,cAAc;AAC1B;AAJS;AAMT,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,UAAU,KAAK,KAAK,aAAU,SAAS,KAAK,IAAI,cAAc,OACpE,cAAc;AAClC;AANS;AAWT,SAAS,sBAAsB,QAAQG,QAAO;AAC1C,SAAO,OAAO,oBAAoB,OAAO,UAAU,EAAE,WAAWA;AACpE;AAFS;AAIT,SAAS,mBAAmB,QAAQ;AAChC,SAAO,kBAAkB,MAAM;AACnC;AAFS;AAIT,SAAS,mBAAmB,QAAQ;AAChC,SAAO,sBAAsB,QAAQ,CAAC,KAAM,sBAAsB,QAAQ,CAAC,KAAK,iBAAiB,OAAO,cAAc,aAAU,QAAQ,OAAO,WAAW,WAAW,KAAK,OAAO,WAAW,YAAY,MAAM,WAAW,MAAO,aAAU,SAAS,OAAO,WAAW,YAAY,MAAM,CAAC,CAAC,KACrR,aAAU,YAAY,OAAO,WAAW,YAAY,MAAM,CAAC,CAAC,KAAO,aAAU,SAAS,OAAO,WAAW,YAAY,MAAM,CAAC,CAAC,KAC5H,aAAU,YAAY,OAAO,WAAW,YAAY,MAAM,CAAC,CAAC;AACpE;AAJS;AAMT,SAAS,mBAAmB,QAAQ;AAChC,SAAO,sBAAsB,QAAQ,CAAC;AAC1C;AAFS;AAIT,SAAS,oBAAoB,QAAQ;AACjC,SAAO,sBAAsB,QAAQ,CAAC;AAC1C;AAFS;AAIT,SAAS,mBAAmB,QAAQ;AAChC,SAAO,sBAAsB,QAAQ,CAAC;AAC1C;AAFS;AAIT,SAAS,iBAAiB,QAAQ;AAC9B,SAAO,sBAAsB,QAAQ,CAAC;AAC1C;AAFS;AAIT,SAAS,uBAAuB,QAAQ;AACpC,SAAO,kBAAkB,MAAM;AACnC;AAFS;AAIT,SAAS,qBAAqB,QAAQ;AAClC,QAAM,SAASC,QAAO;AACtB,SAAO,sBAAsB,QAAQ,CAAC,KAAM,sBAAsB,QAAQ,CAAC,KAAK,YAAY,OAAO,cAAc,kBAAkBJ,OAAM,OAAO,WAAW,QAAQ,GAAG,MAAM,CAAC,MAAM,cAAc;AACrM;AAHS;AAKT,SAAS,wBAAwB,QAAQ;AACrC,SAAO,sBAAsB,QAAQ,CAAC;AAC1C;AAFS;AAIT,SAAS,kBAAkB,QAAQ;AAC/B,QAAM,SAASI,QAAO;AACtB,SAAO,sBAAsB,QAAQ,CAAC,KAAM,sBAAsB,QAAQ,CAAC,KAAK,YAAY,OAAO,cAAc,kBAAkBJ,OAAM,OAAO,WAAW,QAAQ,GAAG,MAAM,CAAC,MAAM,cAAc;AACrM;AAHS;AAKT,SAAS,oBAAoB,QAAQ;AACjC,QAAM,OAAOK,UAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACxC,SAAO,sBAAsB,QAAQ,CAAC,KAAM,sBAAsB,QAAQ,CAAC,KAAK,UAAU,OAAO,cAAc,kBAAkBL,OAAM,OAAO,WAAW,MAAM,GAAG,IAAI,CAAC,MAAM,cAAc;AAC/L;AAHS;AAQT,SAAS,SAAS,MAAM,OAAO;AAC3B,SAAQA,OAAM,MAAM,KAAK,MAAM,cAAc,QAAQ,cAAc,QAC/D,aAAU,WAAW,IAAI,KAAK,CAAC,aAAU,WAAW,KAAK,IAAI,cAAc,QACvE,cAAc;AAC1B;AAJS;AAMT,SAAS,gBAAgB,MAAM,OAAO;AAClC,SAAQ,aAAU,UAAU,IAAI,IAAI,cAAc,QAC9C,aAAU,MAAM,IAAI,IAAI,cAAc,QAAS,aAAU,QAAQ,IAAI,KAChE,aAAU,gBAAgB,IAAI,KAAK,mBAAmB,KAAK,KAC3D,aAAU,gBAAgB,IAAI,KAAK,mBAAmB,KAAK,KAC3D,aAAU,iBAAiB,IAAI,KAAK,oBAAoB,KAAK,KAC7D,aAAU,SAAS,IAAI,KAAK,mBAAmB,KAAK,KACpD,aAAU,SAAS,IAAI,KAAK,mBAAmB,KAAK,KACpD,aAAU,SAAS,IAAI,KAAK,mBAAmB,KAAK,KACpD,aAAU,SAAS,IAAI,KAAK,mBAAmB,KAAK,KACpD,aAAU,SAAS,IAAI,KAAK,mBAAmB,KAAK,KACpD,aAAU,UAAU,IAAI,KAAK,mBAAmB,KAAK,KACrD,aAAU,UAAU,IAAI,KAAK,oBAAoB,KAAK,KACtD,aAAU,aAAa,IAAI,KAAK,uBAAuB,KAAK,KAC5D,aAAU,OAAO,IAAI,KAAK,iBAAiB,KAAK,KAChD,aAAU,cAAc,IAAI,KAAK,wBAAwB,KAAK,KAC9D,aAAU,WAAW,IAAI,KAAK,qBAAqB,KAAK,IAAM,cAAc,OAC5E,aAAU,SAAS,IAAI,KAAK,aAAU,SAAS,UAAU,IAAI,CAAC,KAAM,MAAM;AAGvE,WAAO,MAAM,IAAI,MAAM,WAAW,cAAc,OAAO,cAAc;AAAA,EACzE,GAAG,IACE,aAAU,SAAS,IAAI,KAAK,aAAU,SAAS,UAAU,IAAI,CAAC,KAAM,MAAM;AACvE,WAAO,sBAAsB,OAAO,CAAC,IAAI,cAAc,OAAO,cAAc;AAAA,EAChF,GAAG,IACC,cAAc;AAClC;AA1BS;AA4BT,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,CAAC,aAAU,SAAS,KAAK,IAAI,cAAc,SACtC,MAAM;AACH,eAAW,OAAO,OAAO,oBAAoB,MAAM,UAAU,GAAG;AAC5D,UAAI,EAAE,OAAO,KAAK,eAAe,CAAC,aAAU,WAAW,MAAM,WAAW,GAAG,CAAC,GAAG;AAC3E,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,aAAU,WAAW,MAAM,WAAW,GAAG,CAAC,GAAG;AAC7C,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,SAAS,KAAK,WAAW,GAAG,GAAG,MAAM,WAAW,GAAG,CAAC,MAAM,cAAc,OAAO;AAC/E,eAAO,cAAc;AAAA,MACzB;AAAA,IACJ;AACA,WAAO,cAAc;AAAA,EACzB,GAAG;AACnB;AAlBS;AAuBT,SAASM,aAAY,MAAM,OAAO;AAC9B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,KAAK,oBAAoB,KAAK,IAAI,cAAc,OACpE,CAAC,aAAU,UAAU,KAAK,IAAI,cAAc,QACxC,kBAAkBN,OAAM,KAAK,MAAM,MAAM,IAAI,CAAC;AAC9D;AALS,OAAAM,cAAA;AAUT,SAAS,UAAU,QAAQ;AACvB,SAAQ,sBAAsB,OAAO,oBAAoBF,QAAO,IAC5D,sBAAsB,OAAO,oBAAoBG,QAAO,IACpD,MAAM,4BAA4B;AAC9C;AAJS;AAMT,SAAS,YAAY,QAAQ;AACzB,SAAQ,sBAAsB,OAAO,oBAAoB,OAAO,kBAAkB,kBAAkB,IAChG,sBAAsB,OAAO,oBAAoB,OAAO,kBAAkB,kBAAkB,IACxF,MAAM,mCAAmC;AACrD;AAJS;AAMT,SAAS,gBAAgB,MAAM,OAAO;AAClC,QAAM,CAAC,KAAKC,MAAK,IAAI,CAAC,UAAU,KAAK,GAAG,YAAY,KAAK,CAAC;AAC1D,SAAS,aAAU,gBAAgB,IAAI,KAAK,aAAU,SAAS,GAAG,KAAK,kBAAkBR,OAAM,MAAMQ,MAAK,CAAC,MAAM,cAAc,OAAQ,cAAc,OACjJ,aAAU,aAAa,IAAI,KAAK,aAAU,SAAS,GAAG,IAAIR,OAAM,MAAMQ,MAAK,IACvE,aAAU,SAAS,IAAI,KAAK,aAAU,SAAS,GAAG,IAAIR,OAAM,MAAMQ,MAAK,IACnE,aAAU,QAAQ,IAAI,KAAK,aAAU,SAAS,GAAG,IAAIR,OAAM,MAAMQ,MAAK,IAClE,aAAU,SAAS,IAAI,KAAK,MAAM;AAC9B,eAAW,OAAO,OAAO,oBAAoB,KAAK,UAAU,GAAG;AAC3D,UAAI,SAASA,QAAO,KAAK,WAAW,GAAG,CAAC,MAAM,cAAc,OAAO;AAC/D,eAAO,cAAc;AAAA,MACzB;AAAA,IACJ;AACA,WAAO,cAAc;AAAA,EACzB,GAAG,IACC,cAAc;AACtC;AAfS;AAiBT,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,CAAC,aAAU,SAAS,KAAK,IAAI,cAAc,QACvCR,OAAM,YAAY,IAAI,GAAG,YAAY,KAAK,CAAC;AAC3D;AALS;AAUT,SAAS,WAAW,MAAM,OAAO;AAG7B,QAAM,IAAI,aAAU,SAAS,IAAI,IAAIO,QAAO,IAAI;AAChD,QAAM,IAAI,aAAU,SAAS,KAAK,IAAIA,QAAO,IAAI;AACjD,SAAOP,OAAM,GAAG,CAAC;AACrB;AANS;AAWT,SAAS,gBAAgB,MAAM,OAAO;AAClC,SAAQ,aAAU,UAAU,IAAI,KAAK,cAAW,SAAS,KAAK,KAAK,IAAI,cAAc,OACjF,aAAU,SAAS,IAAI,IAAI,cAAc,OACrC,cAAc;AAC1B;AAJS;AAMT,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,cAAc,OACtC,cAAc;AAClC;AANS;AAWT,SAAS,WAAW,MAAM,OAAO;AAC7B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,cAAc,OACtC,cAAc;AAClC;AANS;AAWT,SAASS,qBAAoB,MAAM,OAAO;AAItC,SAAQ,aAAU,kBAAkB,IAAI,IAAIT,OAAM,uBAAuB,IAAI,GAAG,KAAK,IACjF,aAAU,kBAAkB,KAAK,IAAIA,OAAM,MAAM,uBAAuB,KAAK,CAAC,IAC1E,MAAM,yCAAyC;AAC3D;AAPS,OAAAS,sBAAA;AAYT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAQ,aAAU,QAAQ,KAAK,KAC3B,KAAK,UAAU,UACf,KAAK,MAAM,MAAM,CAAC,WAAWT,OAAM,QAAQ,MAAM,KAAK,MAAM,cAAc,IAAI;AACtF;AAJS;AAMT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAQ,aAAU,QAAQ,IAAI,IAAI,cAAc,OAC5C,aAAU,UAAU,IAAI,IAAI,cAAc,QACtC,aAAU,MAAM,IAAI,IAAI,cAAc,QAClC,cAAc;AAC9B;AALS;AAOT,SAASU,WAAU,MAAM,OAAO;AAC5B,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,KAAK,kBAAkB,KAAK,IAAI,cAAc,OAClE,aAAU,QAAQ,KAAK,KAAK,eAAe,MAAM,KAAK,IAAI,cAAc,OACpE,CAAC,aAAU,QAAQ,KAAK,IAAI,cAAc,QACrC,cAAW,YAAY,KAAK,KAAK,KAAK,CAAC,cAAW,YAAY,MAAM,KAAK,KAAO,CAAC,cAAW,YAAY,KAAK,KAAK,KAAK,cAAW,YAAY,MAAM,KAAK,IAAK,cAAc,QACxK,cAAW,YAAY,KAAK,KAAK,KAAK,CAAC,cAAW,YAAY,MAAM,KAAK,IAAK,cAAc,OACzF,KAAK,MAAM,MAAM,CAAC,QAAQ,UAAUV,OAAM,QAAQ,MAAM,MAAM,KAAK,CAAC,MAAM,cAAc,IAAI,IAAI,cAAc,OAC1G,cAAc;AAC9C;AATS,OAAAU,YAAA;AAcT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,aAAa,KAAK,IAAI,cAAc,OAC1C,cAAc;AAClC;AANS;AAWT,SAAS,cAAc,MAAM,OAAO;AAChC,SAAQ,kBAAkB,KAAK,IAAI,gBAAgB,MAAM,KAAK,IAC1D,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,OAAO,KAAK,IAAI,cAAc,MAAM,KAAK,IAC/C,aAAU,YAAY,KAAK,IAAI,cAAc,OACzC,cAAc;AACtC;AAPS;AAYT,SAAS,eAAe,MAAM,OAAO;AACjC,SAAO,MAAM,MAAM,KAAK,CAAC,WAAWV,OAAM,MAAM,MAAM,MAAM,cAAc,IAAI,IACxE,cAAc,OACd,cAAc;AACxB;AAJS;AAMT,SAASW,WAAU,MAAM,OAAO;AAC5B,SAAO,KAAK,MAAM,MAAM,CAAC,WAAWX,OAAM,QAAQ,KAAK,MAAM,cAAc,IAAI,IACzE,cAAc,OACd,cAAc;AACxB;AAJS,OAAAW,YAAA;AAST,SAAS,iBAAiB,MAAM,OAAO;AACnC,SAAO,cAAc;AACzB;AAFS;AAIT,SAAS,YAAY,MAAM,OAAO;AAC9B,SAAQ,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACzD,aAAU,YAAY,KAAK,IAAI,mBAAmB,MAAM,KAAK,IACzD,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACjD,aAAU,MAAM,KAAK,IAAI,aAAa,MAAM,KAAK,IAC7C,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACjD,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACjD,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,UAAU,KAAK,IAAI,cAAc,OACvC,cAAc;AAClE;AAdS;AAmBT,SAAS,cAAc,MAAM,OAAO;AAChC,SAAQ,aAAU,YAAY,IAAI,IAAI,cAAc,OAChD,aAAU,YAAY,IAAI,IAAI,cAAc,OACxC,cAAc;AAC1B;AAJS;AAMT,SAAS,SAAS,MAAM,OAAO;AAC3B,SAAQ,aAAU,YAAY,KAAK,IAAI,mBAAmB,MAAM,KAAK,IACjE,aAAU,QAAQ,KAAK,IAAI,eAAe,MAAM,KAAK,IACjD,aAAU,UAAU,KAAK,IAAI,iBAAiB,MAAM,KAAK,IACrD,aAAU,MAAM,KAAK,IAAI,aAAa,MAAM,KAAK,IAC7C,aAAU,SAAS,KAAK,IAAI,gBAAgB,MAAM,KAAK,IACnD,aAAU,OAAO,KAAK,IAAI,cAAc,OACpC,cAAc;AAC1C;AARS;AAUT,SAASX,OAAM,MAAM,OAAO;AACxB;AAAA;AAAA,IAEC,aAAU,kBAAkB,IAAI,KAAK,aAAU,kBAAkB,KAAK,IAAKS,qBAAoB,MAAM,KAAK,IACtG,aAAU,SAAS,IAAI,KAAK,aAAU,SAAS,KAAK,IAAK,WAAW,MAAM,KAAK,IAC3E,aAAU,MAAM,IAAI,KAAK,aAAU,MAAM,KAAK,IAAK,QAAQ,MAAM,KAAK;AAAA;AAAA,MAEnE,aAAU,MAAM,IAAI,IAAI,QAAQ,MAAM,KAAK,IACvC,aAAU,QAAQ,IAAI,IAAIV,WAAU,MAAM,KAAK,IAC3C,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,UAAU,IAAI,IAAI,YAAY,MAAM,KAAK,IAC/C,aAAU,gBAAgB,IAAI,IAAI,kBAAkB,MAAM,KAAK,IAC3D,aAAU,cAAc,IAAI,IAAI,gBAAgB,MAAM,KAAK,IACvD,aAAU,OAAO,IAAI,IAAI,SAAS,MAAM,KAAK,IACzC,aAAU,WAAW,IAAI,IAAI,aAAa,MAAM,KAAK,IACjD,aAAU,UAAU,IAAI,IAAI,YAAY,MAAM,KAAK,IAC/C,aAAU,YAAY,IAAI,IAAIE,eAAc,MAAM,KAAK,IACnD,aAAU,WAAW,IAAI,IAAI,aAAa,MAAM,KAAK,IACjD,aAAU,UAAU,IAAI,IAAIC,aAAY,MAAM,KAAK,IAC/C,aAAU,QAAQ,IAAI,IAAI,UAAU,MAAM,KAAK,IAC3C,aAAU,OAAO,IAAI,IAAI,SAAS,MAAM,KAAK,IACzC,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,SAAS,IAAI,IAAI,WAAW,MAAM,KAAK,IAC7C,aAAU,QAAQ,IAAI,IAAIQ,WAAU,MAAM,KAAK,IAC3C,aAAU,UAAU,IAAI,IAAIJ,aAAY,MAAM,KAAK,IAC/C,aAAU,aAAa,IAAI,IAAI,eAAe,MAAM,KAAK,IACrD,aAAU,YAAY,IAAI,IAAI,cAAc,MAAM,KAAK,IACnD,aAAU,QAAQ,IAAI,IAAIK,WAAU,MAAM,KAAK,IAC3C,aAAU,UAAU,IAAI,IAAI,YAAY,MAAM,KAAK,IAC/C,aAAU,OAAO,IAAI,IAAI,SAAS,MAAM,KAAK,IACzC,MAAM,8BAA8B,KAAK,IAAI,CAAC,GAAG;AAAA;AAAA;AACzK;AAlCS,OAAAX,QAAA;AAmCF,SAAS,aAAa,MAAM,OAAO;AACtC,SAAOA,OAAM,MAAM,KAAK;AAC5B;AAFgB;;;ACxnBhB;AAAA;AAAAY;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIA,SAASC,gBAAe,GAAG,OAAO,MAAM,OAAO,SAAS;AACpD,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,QAAQ,EAAE,EAAE,GAAG,OAAO,MAAM,OAAO,MAAM,OAAO,CAAC;AAC/D,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAASC,kBAAiB,MAAM,OAAO,MAAM,OAAO,SAAS;AACzD,SAAOD,gBAAe,KAAK,YAAY,OAAO,MAAM,OAAO,OAAO;AACtE;AAFS,OAAAC,mBAAA;AAIF,SAAS,wBAAwB,MAAM,OAAO,MAAM,OAAO,SAAS;AACvE,QAAM,IAAIA,kBAAiB,MAAM,OAAO,MAAM,OAAO,OAAO;AAC5D,SAAO,aAAa,CAAC;AACzB;AAHgB;;;ADLhB,SAAS,eAAe,MAAM,OAAO,UAAU,WAAW;AACtD,QAAM,IAAI,aAAa,MAAM,KAAK;AAClC,SAAQ,MAAM,cAAc,QAAQ,MAAM,CAAC,UAAU,SAAS,CAAC,IAC3D,MAAM,cAAc,OAAO,WACvB;AACZ;AALS;AAOF,SAAS,QAAQ,GAAG,GAAG,GAAG,GAAG,SAAS;AAEzC,SAAQ,eAAe,CAAC,IAAI,wBAAwB,GAAG,GAAG,GAAG,GAAG,OAAO,IACnE,YAAY,CAAC,IAAI,WAAW,qBAAqB,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,IACjE,WAAW,eAAe,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO;AAC1D;AALgB;;;ADZhB,SAAS,gBAAgB,GAAG,GAAG,GAAG,GAAG,SAAS;AAC1C,SAAO;AAAA,IACH,CAAC,CAAC,GAAG,QAAQ,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,OAAO,CAAC;AAAA,EACpD;AACJ;AAJS;AAMT,SAAS,iBAAiB,GAAG,GAAG,GAAG,GAAG,SAAS;AAC3C,SAAO,EAAE,OAAO,CAAC,KAAK,OAAO;AACzB,WAAO,EAAE,GAAG,KAAK,GAAG,gBAAgB,IAAI,GAAG,GAAG,GAAG,OAAO,EAAE;AAAA,EAC9D,GAAG,CAAC,CAAC;AACT;AAJS;AAMT,SAASC,eAAc,GAAG,GAAG,GAAG,GAAG,SAAS;AACxC,SAAO,iBAAiB,EAAE,MAAM,GAAG,GAAG,GAAG,OAAO;AACpD;AAFS,OAAAA,gBAAA;AAIF,SAAS,qBAAqB,GAAG,GAAG,GAAG,GAAG,SAAS;AACtD,QAAM,IAAIA,eAAc,GAAG,GAAG,GAAG,GAAG,OAAO;AAC3C,SAAO,aAAa,CAAC;AACzB;AAHgB;;;AGrBhB;AAAA;AAAAC;AAEA,SAASC,WAAU,QAAQ;AACvB,SAAO,OAAO,MAAM,MAAM,CAACC,YAAW,sBAAsBA,OAAM,CAAC;AACvE;AAFS,OAAAD,YAAA;AAGT,SAASE,OAAM,QAAQ;AACnB,SAAO,OAAO,MAAM,KAAK,CAACD,YAAW,sBAAsBA,OAAM,CAAC;AACtE;AAFS,OAAAC,QAAA;AAGT,SAAS,IAAI,QAAQ;AACjB,SAAO,CAAC,sBAAsB,OAAO,GAAG;AAC5C;AAFS;AAKF,SAAS,sBAAsB,QAAQ;AAC1C,SAAQ,OAAO,IAAI,MAAM,cAAcF,WAAU,MAAM,IACnD,OAAO,IAAI,MAAM,UAAUE,OAAM,MAAM,IACnC,OAAO,IAAI,MAAM,QAAQ,IAAI,MAAM,IAC/B,OAAO,IAAI,MAAM,cAAc,OAC3B;AACpB;AANgB;;;ACbhB;AAAA;AAAAC;AAEO,SAAS,2BAA2B,GAAG,GAAG;AAC7C,SAAO,QAAQ,uBAAuB,CAAC,GAAG,CAAC;AAC/C;AAFgB;;;ANQhB,SAAS,YAAY,GAAG,GAAG;AACvB,QAAM,WAAW,EAAE,OAAO,CAAC,UAAU,aAAa,OAAO,CAAC,MAAM,cAAc,KAAK;AACnF,SAAO,SAAS,WAAW,IAAI,SAAS,CAAC,IAAI,MAAM,QAAQ;AAC/D;AAHS;AAKF,SAAS,QAAQ,GAAG,GAAG,UAAU,CAAC,GAAG;AAExC,MAAI,kBAAkB,CAAC;AACnB,WAAO,WAAW,2BAA2B,GAAG,CAAC,GAAG,OAAO;AAC/D,MAAI,eAAe,CAAC;AAChB,WAAO,WAAW,wBAAwB,GAAG,CAAC,GAAG,OAAO;AAE5D,SAAO,WAAW,QAAQ,CAAC,IAAI,YAAY,EAAE,OAAO,CAAC,IACjD,aAAa,GAAG,CAAC,MAAM,cAAc,QAAQ,MAAM,IAAI,GAAG,OAAO;AACzE;AATgB;;;ADZhB,SAASC,gBAAe,GAAG,GAAG;AAC1B,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,QAAQ,EAAE,EAAE,GAAG,CAAC;AAC9B,SAAO;AACX;AALS,OAAAA,iBAAA;AAOT,SAASC,kBAAiB,GAAG,GAAG;AAC5B,SAAOD,gBAAe,EAAE,YAAY,CAAC;AACzC;AAFS,OAAAC,mBAAA;AAIF,SAAS,wBAAwB,GAAG,GAAG;AAC1C,QAAM,IAAIA,kBAAiB,GAAG,CAAC;AAC/B,SAAO,aAAa,CAAC;AACzB;AAHgB;;;AQdhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAEO,SAAS,2BAA2B,GAAG,GAAG;AAC7C,SAAO,QAAQ,uBAAuB,CAAC,GAAG,CAAC;AAC/C;AAFgB;;;ADQhB,SAAS,YAAY,GAAG,GAAG;AACvB,QAAM,YAAY,EAAE,OAAO,CAAC,UAAU,aAAa,OAAO,CAAC,MAAM,cAAc,KAAK;AACpF,SAAO,UAAU,WAAW,IAAI,UAAU,CAAC,IAAI,MAAM,SAAS;AAClE;AAHS;AAKF,SAAS,QAAQ,GAAG,GAAG,SAAS;AAEnC,MAAI,kBAAkB,CAAC;AACnB,WAAO,WAAW,2BAA2B,GAAG,CAAC,GAAG,OAAO;AAC/D,MAAI,eAAe,CAAC;AAChB,WAAO,WAAW,wBAAwB,GAAG,CAAC,GAAG,OAAO;AAE5D,SAAO,WAAW,QAAQ,CAAC,IAAI,YAAY,EAAE,OAAO,CAAC,IACjD,aAAa,GAAG,CAAC,MAAM,cAAc,QAAQ,IAAI,MAAM,GAAG,OAAO;AACzE;AATgB;;;ADZhB,SAASC,iBAAe,GAAG,GAAG;AAC1B,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,QAAQ,EAAE,EAAE,GAAG,CAAC;AAC9B,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,kBAAiB,GAAG,GAAG;AAC5B,SAAOD,iBAAe,EAAE,YAAY,CAAC;AACzC;AAFS,OAAAC,mBAAA;AAIF,SAAS,wBAAwB,GAAG,GAAG;AAC1C,QAAM,IAAIA,kBAAiB,GAAG,CAAC;AAC/B,SAAO,aAAa,CAAC;AACzB;AAHgB;;;AGdhB;AAAA;AAAAC;AAIO,SAAS,aAAa,QAAQ,SAAS;AAC1C,SAAkB,cAAc,MAAM,IAAI,WAAW,OAAO,SAAS,OAAO,IAAI,MAAM,OAAO;AACjG;AAFgB;;;ACJhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,iBAAiB,QAAQ;AACrC,SAAO,SAAS,SAAS,MAAM,CAAC;AACpC;AAFgB;;;ACHhB;AAAA;AAAAC;AAsBA,SAAS,wBAAwB,SAAS,GAAG,SAAS;AAClD,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,UAAU,mBAAmB,EAAE,CAAC,OAAO,GAAG,EAAE,EAAE,GAAG,OAAO;AACxG;AAFS;AAOT,SAAS,qBAAqB,GAAG,GAAG,SAAS;AACzC,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM;AACb,WAAO,EAAE,IAAI;AACjB,SAAOC,QAAO,QAAQ,EAAE,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;AAC1D;AALS;AAOT,SAAS,uBAAuB,GAAG,GAAG,SAAS;AAC3C,SAAQ,wBAAwB,CAAC,IAC3B,qBAAqB,kBAAkB,CAAC,GAAG,GAAG,OAAO,IACrD,wBAAwB,EAAE,SAAS,GAAG,OAAO;AACvD;AAJS;AAMT,SAAS,aAAa,KAAK,MAAM,SAAS;AACtC,SAAO,qBAAqB,kBAAkB,MAAM,GAAG,CAAC,GAAG,MAAM,OAAO;AAC5E;AAFS;AAIT,SAAS,eAAe,KAAK,MAAM,SAAS;AACxC,SAAO,qBAAqB,CAAC,IAAI,SAAS,CAAC,GAAG,MAAM,OAAO;AAC/D;AAFS;AAIT,SAAS,cAAc,KAAK,MAAM,SAAS;AACvC,SAAO,wBAAwB,IAAI,QAAQ,MAAM,OAAO;AAC5D;AAFS;AAIT,SAAS,cAAc,KAAK,MAAM,SAAS;AACvC,QAAM,UAAU,YAAY,IAAI,OAAO,IAAI,qBAAqB,IAAI;AACpE,SAAO,wBAAwB,SAAS,MAAM,OAAO;AACzD;AAHS;AAKT,SAAS,WAAW,GAAG,MAAM,SAAS;AAClC,SAAO,wBAAwB,oBAAoB,MAAM,OAAO;AACpE;AAFS;AAIT,SAAS,aAAa,MAAM,MAAM,SAAS;AACvC,SAAO,wBAAwB,mBAAmB,MAAM,OAAO;AACnE;AAFS;AAIT,SAAS,eAAe,MAAM,MAAM,SAAS;AACzC,SAAOA,QAAO,EAAE,MAAM,MAAM,OAAO,KAAK,GAAG,OAAO;AACtD;AAFS;AAIT,SAAS,eAAe,MAAM,MAAM,SAAS;AACzC,SAAO,wBAAwB,oBAAoB,MAAM,OAAO;AACpE;AAFS;AAIT,SAAS,cAAc,GAAG,MAAM,SAAS;AACrC,SAAO,wBAAwB,oBAAoB,MAAM,OAAO;AACpE;AAFS;AAOF,SAAS,OAAO,KAAK,MAAM,UAAU,CAAC,GAAG;AAE5C,SAAQ,QAAQ,GAAG,IAAI,aAAa,IAAI,OAAO,MAAM,OAAO,IACxD,kBAAkB,GAAG,IAAI,uBAAuB,KAAK,MAAM,OAAO,IAC9D,UAAU,GAAG,IAAI,eAAe,IAAI,OAAO,MAAM,OAAO,IACpDC,WAAU,GAAG,IAAI,eAAe,KAAK,MAAM,OAAO,IAC9CC,WAAU,GAAG,IAAI,eAAe,KAAK,MAAM,OAAO,IAC9CC,UAAS,GAAG,IAAI,cAAc,KAAK,MAAM,OAAO,IAC5CC,UAAS,GAAG,IAAI,cAAc,KAAK,MAAM,OAAO,IAC5CC,UAAS,GAAG,IAAI,cAAc,KAAK,MAAM,OAAO,IAC5C,MAAM,GAAG,IAAI,WAAW,KAAK,MAAM,OAAO,IACtC,QAAQ,GAAG,IAAI,aAAa,KAAK,MAAM,OAAO,IAC1C,MAAM,OAAO;AACzD;AAbgB;AAkBT,SAAS,cAAc,QAAQ;AAClC,SAAO,WAAW,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AAC5E;AAFgB;AAKT,SAASC,WAAU,MAAM;AAC5B,QAAM,UAAU,cAAc,IAAI;AAClC,SAAQ,YAAY,qBAAqBC,QAAO,IAC5C,YAAY,qBAAqBC,QAAO,IACpCD,QAAO,EAAE,QAAQ,CAAC;AAC9B;AALgB,OAAAD,YAAA;AAQT,SAASG,aAAY,MAAM;AAC9B,SAAO,KAAK,kBAAkB,cAAc,IAAI,CAAC;AACrD;AAFgB,OAAAA,cAAA;;;AFvGhB,SAASC,iBAAgB,MAAM,MAAM;AACjC,OAAK,aAAa,UAAU,MAAM,KAAK,UAAU;AACjD,OAAK,UAAU,SAAS,MAAM,KAAK,OAAO;AAC1C,SAAO;AACX;AAJS,OAAAA,kBAAA;AAMT,SAASC,cAAa,MAAM,MAAM;AAC9B,OAAK,aAAa,UAAU,MAAM,KAAK,UAAU;AACjD,OAAK,UAAU,SAAS,MAAM,KAAK,OAAO;AAC1C,SAAO;AACX;AAJS,OAAAA,eAAA;AAMT,SAASC,eAAc,MAAM,MAAM;AAC/B,OAAK,QAAQ,UAAU,MAAM,KAAK,KAAK;AACvC,SAAO;AACX;AAHS,OAAAA,gBAAA;AAKT,SAASC,WAAU,MAAM,MAAM;AAC3B,OAAK,QAAQ,UAAU,MAAM,KAAK,KAAK;AACvC,SAAO;AACX;AAHS,OAAAA,YAAA;AAKT,SAASC,WAAU,MAAM,MAAM;AAC3B,MAAe,YAAY,KAAK,KAAK;AACjC,WAAO;AACX,OAAK,QAAQ,UAAU,MAAM,KAAK,KAAK;AACvC,SAAO;AACX;AALS,OAAAA,YAAA;AAOT,SAASC,WAAU,MAAM,MAAM;AAC3B,OAAK,QAAQ,SAAS,MAAM,KAAK,KAAK;AACtC,SAAO;AACX;AAHS,OAAAA,YAAA;AAKT,SAASC,mBAAkB,MAAM,MAAM;AACnC,OAAK,QAAQ,SAAS,MAAM,KAAK,KAAK;AACtC,SAAO;AACX;AAHS,OAAAA,oBAAA;AAKT,SAASC,cAAa,MAAM,MAAM;AAC9B,OAAK,QAAQ,SAAS,MAAM,KAAK,KAAK;AACtC,SAAO;AACX;AAHS,OAAAA,eAAA;AAKT,SAASC,aAAY,MAAM,MAAM;AAC7B,OAAK,OAAO,SAAS,MAAM,KAAK,IAAI;AACpC,SAAO;AACX;AAHS,OAAAA,cAAA;AAKT,SAASC,YAAW,MAAM,MAAM;AAC5B,QAAM,mBAAmBC,iBAAe,MAAM,KAAK,UAAU;AAC7D,SAAO,EAAE,GAAG,MAAM,GAAGC,QAAO,gBAAgB,EAAE;AAClD;AAHS,OAAAF,aAAA;AAKT,SAASG,YAAW,MAAM,MAAM;AAC5B,QAAM,YAAY,SAAS,MAAMC,WAAU,IAAI,CAAC;AAChD,QAAM,cAAc,SAAS,MAAMC,aAAY,IAAI,CAAC;AACpD,QAAM,SAAS,OAAO,WAAW,WAAW;AAC5C,SAAO,EAAE,GAAG,MAAM,GAAG,OAAO;AAChC;AALS,OAAAF,aAAA;AAOT,SAAS,aAAa,MAAM,UAAU;AAClC,SAAO,SAAS,SAAS,OAAO,KAAK,SAAS,KAAK,IAAI,QAAQ;AACnE;AAFS;AAIT,SAASG,cAAa,MAAM,MAAM;AAC9B,QAAM,aAAuB,WAAW,IAAI;AAC5C,QAAMC,cAAuB,WAAW,IAAI;AAC5C,QAAM,SAAS,SAAS,MAAM,IAAI;AAClC,SAAQ,cAAcA,cAAa,iBAAiB,MAAM,IACtD,cAAc,CAACA,cAAa,SAAS,MAAM,IACvC,CAAC,cAAcA,cAAa,SAAS,MAAM,IACvC;AAChB;AARS,OAAAD,eAAA;AAUT,SAASL,iBAAe,MAAM,YAAY;AACtC,SAAO,WAAW,OAAO,oBAAoB,UAAU,EAAE,OAAO,CAAC,QAAQ,QAAQ;AAC7E,WAAO,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAGK,cAAa,MAAM,WAAW,GAAG,CAAC,EAAE;AAAA,EACnE,GAAG,CAAC,CAAC;AACT;AAJS,OAAAL,kBAAA;AAMF,SAAS,UAAU,MAAM,OAAO;AACnC,SAAO,MAAM,IAAI,UAAQ,SAAS,MAAM,IAAI,CAAC;AACjD;AAFgB;AAIhB,SAAS,SAAS,MAAM,MAAM;AAC1B,SAAkB,cAAc,IAAI,IAAIV,iBAAgB,MAAM,IAAI,IACpDiB,YAAW,IAAI,IAAIhB,cAAa,MAAM,IAAI,IACtC,YAAY,IAAI,IAAIC,eAAc,MAAM,IAAI,IACxC,QAAQ,IAAI,IAAIC,WAAU,MAAM,IAAI,IAChC,QAAQ,IAAI,IAAIC,WAAU,MAAM,IAAI,IAChCc,SAAQ,IAAI,IAAIb,WAAU,MAAM,IAAI,IAChCc,iBAAgB,IAAI,IAAIb,mBAAkB,MAAM,IAAI,IAChDc,YAAW,IAAI,IAAIb,cAAa,MAAM,IAAI,IACtCc,WAAU,IAAI,IAAIb,aAAY,MAAM,IAAI,IACpCc,UAAS,IAAI,IAAIb,YAAW,MAAM,IAAI,IAClC,SAAS,IAAI,IAAIG,YAAW,MAAM,IAAI,IAClC,WAAW,IAAI,IAAI,aAAa,MAAM,IAAI,IAChD;AACpD;AAdS;AAiBF,SAAS,YAAY,MAAM,MAAM;AACpC,SAAO,SAAS,MAAM,UAAU,IAAI,CAAC;AACzC;AAFgB;;;AGhHhB;AAAA;AAAAW;AAGO,SAAS,QAAQ,SAAS;AAC7B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,WAAW,MAAM,UAAU,GAAG,OAAO;AACrE;AAFgB;;;ACHhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAKA,SAAS,2BAA2B,GAAG,GAAG,SAAS;AAC/C,SAAO;AAAA,IACH,CAAC,CAAC,GAAG,UAAU,QAAQ,CAAC,GAAG,GAAG,MAAM,OAAO,CAAC;AAAA,EAChD;AACJ;AAJS;AAMT,SAAS,4BAA4B,GAAG,GAAG,SAAS;AAChD,QAAM,SAAS,EAAE,OAAO,CAAC,KAAK,MAAM;AAChC,WAAO,EAAE,GAAG,KAAK,GAAG,2BAA2B,GAAG,GAAG,OAAO,EAAE;AAAA,EAClE,GAAG,CAAC,CAAC;AACL,SAAO;AACX;AALS;AAOT,SAAS,0BAA0B,GAAG,GAAG,SAAS;AAC9C,SAAO,4BAA4B,EAAE,MAAM,GAAG,GAAG,OAAO;AAC5D;AAFS;AAIF,SAAS,uBAAuB,GAAG,GAAG,SAAS;AAClD,QAAM,IAAI,0BAA0B,GAAG,GAAG,OAAO;AACjD,SAAO,aAAa,CAAC;AACzB;AAHgB;;;ADVhB,SAAS,kBAAkB,OAAO;AAC9B,QAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACxD,SAAO,CAAC,MAAM,YAAY,GAAG,IAAI,EAAE,KAAK,EAAE;AAC9C;AAHS;AAIT,SAAS,gBAAgB,OAAO;AAC5B,QAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACxD,SAAO,CAAC,MAAM,YAAY,GAAG,IAAI,EAAE,KAAK,EAAE;AAC9C;AAHS;AAIT,SAAS,eAAe,OAAO;AAC3B,SAAO,MAAM,YAAY;AAC7B;AAFS;AAGT,SAAS,eAAe,OAAO;AAC3B,SAAO,MAAM,YAAY;AAC7B;AAFS;AAGT,SAASC,qBAAoB,QAAQ,MAAM,SAAS;AAGhD,QAAM,aAAa,0BAA0B,OAAO,OAAO;AAC3D,QAAM,SAAS,kCAAkC,UAAU;AAC3D,MAAI,CAAC;AACD,WAAO,EAAE,GAAG,QAAQ,SAAS,iBAAiB,OAAO,SAAS,IAAI,EAAE;AACxE,QAAM,UAAU,CAAC,GAAG,kCAAkC,UAAU,CAAC;AACjE,QAAM,WAAW,QAAQ,IAAI,CAAC,UAAU,QAAQ,KAAK,CAAC;AACtD,QAAM,SAASC,UAAS,UAAU,IAAI;AACtC,QAAMC,SAAQ,MAAM,MAAM;AAC1B,SAAO,gBAAgB,CAACA,MAAK,GAAG,OAAO;AAC3C;AAZS,OAAAF,sBAAA;AAcT,SAAS,iBAAiB,OAAO,MAAM;AACnC,SAAQ,OAAO,UAAU,WAAY,SAAS,iBAAiB,kBAAkB,KAAK,IAClF,SAAS,eAAe,gBAAgB,KAAK,IACzC,SAAS,cAAc,eAAe,KAAK,IACvC,SAAS,cAAc,eAAe,KAAK,IACvC,QAAS,MAAM,SAAS;AAC5C;AANS;AAQT,SAASC,UAAS,GAAG,GAAG;AACpB,SAAO,EAAE,IAAI,OAAK,UAAU,GAAG,CAAC,CAAC;AACrC;AAFS,OAAAA,WAAA;AAIF,SAAS,UAAU,QAAQ,MAAM,UAAU,CAAC,GAAG;AAElD;AAAA;AAAA,IAEA,YAAY,MAAM,IAAI,uBAAuB,QAAQ,MAAM,OAAO;AAAA;AAAA,MAE9D,kBAAkB,MAAM,IAAID,qBAAoB,QAAQ,MAAM,OAAO,IACjE,QAAQ,MAAM,IAAI,MAAMC,UAAS,OAAO,OAAO,IAAI,GAAG,OAAO,IACzD,UAAU,MAAM,IAAI,QAAQ,iBAAiB,OAAO,OAAO,IAAI,GAAG,OAAO;AAAA;AAAA,QAErE,WAAW,QAAQ,OAAO;AAAA;AAAA;AAAA;AAC9C;AAXgB;;;ADlDT,SAAS,WAAW,GAAG,UAAU,CAAC,GAAG;AACxC,SAAO,UAAU,GAAG,cAAc,OAAO;AAC7C;AAFgB;;;AGFhB;AAAA;AAAAE;AAEO,SAAS,UAAU,GAAG,UAAU,CAAC,GAAG;AACvC,SAAO,UAAU,GAAG,aAAa,OAAO;AAC5C;AAFgB;;;ACFhB;AAAA;AAAAC;AAEO,SAAS,aAAa,GAAG,UAAU,CAAC,GAAG;AAC1C,SAAO,UAAU,GAAG,gBAAgB,OAAO;AAC/C;AAFgB;;;ACFhB;AAAA;AAAAC;AAEO,SAAS,UAAU,GAAG,UAAU,CAAC,GAAG;AACvC,SAAO,UAAU,GAAG,aAAa,OAAO;AAC5C;AAFgB;;;ACFhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIA,SAASC,iBAAe,YAAY,cAAc,SAAS;AACvD,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM,WAAW,OAAO,oBAAoB,UAAU;AAC7D,WAAO,EAAE,IAAI,KAAK,WAAW,EAAE,GAAG,cAAc,MAAM,OAAO,CAAC;AAClE,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,kBAAiB,cAAc,cAAc,SAAS;AAC3D,SAAOD,iBAAe,aAAa,YAAY,cAAc,OAAO;AACxE;AAFS,OAAAC,mBAAA;AAIF,SAAS,qBAAqB,cAAc,cAAc,SAAS;AACtE,QAAM,aAAaA,kBAAiB,cAAc,cAAc,OAAO;AACvE,SAAO,aAAa,UAAU;AAClC;AAHgB;;;ADKhB,SAASC,eAAc,OAAO,cAAc;AACxC,SAAO,MAAM,IAAI,CAAC,SAAS,YAAY,MAAM,YAAY,CAAC;AAC9D;AAFS,OAAAA,gBAAA;AAIT,SAASC,WAAU,OAAO,cAAc;AACpC,SAAO,MAAM,IAAI,CAAC,SAAS,YAAY,MAAM,YAAY,CAAC;AAC9D;AAFS,OAAAA,YAAA;AAOT,SAASC,cAAa,YAAY,KAAK;AACnC,QAAM,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI;AAC3B,SAAO;AACX;AAHS,OAAAA,eAAA;AAKT,SAASC,iBAAe,YAAY,cAAc;AAC9C,SAAO,aAAa,OAAO,CAAC,GAAG,OAAOD,cAAa,GAAG,EAAE,GAAG,UAAU;AACzE;AAFS,OAAAC,kBAAA;AAIT,SAASC,YAAW,YAAY,cAAc;AAC1C,QAAM,UAAU,QAAQ,YAAY,CAAC,eAAe,OAAO,YAAY,YAAY,CAAC;AACpF,QAAM,oBAAoBD,iBAAe,WAAW,YAAY,GAAG,YAAY;AAC/E,SAAOE,QAAO,mBAAmB,OAAO;AAC5C;AAJS,OAAAD,aAAA;AAMT,SAAS,sBAAsB,cAAc;AACzC,QAAM,SAAS,aAAa,OAAO,CAACE,SAAQ,QAAQ,eAAe,GAAG,IAAI,CAAC,GAAGA,SAAQ,QAAQ,GAAG,CAAC,IAAIA,SAAQ,CAAC,CAAC;AAChH,SAAO,MAAM,MAAM;AACvB;AAHS;AAKT,SAAS,YAAY,YAAY,cAAc;AAC3C,SAAQ,YAAY,UAAU,IAAI,UAAUN,eAAc,WAAW,OAAO,YAAY,CAAC,IACrF,QAAQ,UAAU,IAAI,MAAMC,WAAU,WAAW,OAAO,YAAY,CAAC,IACjEM,UAAS,UAAU,IAAIH,YAAW,YAAY,YAAY,IACtDC,QAAO,CAAC,CAAC;AACzB;AALS;AAQF,SAAS,KAAK,MAAM,KAAK,SAAS;AACrC,QAAM,UAAU,QAAa,GAAG,IAAI,sBAAsB,GAAG,IAAI;AACjE,QAAM,eAAe,SAAS,GAAG,IAAI,kBAAkB,GAAG,IAAI;AAC9D,QAAM,YAAY,MAAM,IAAI;AAC5B,QAAM,WAAW,MAAM,GAAG;AAC1B,SAAQ,eAAe,IAAI,IAAI,qBAAqB,MAAM,cAAc,OAAO,IAC3E,YAAY,GAAG,IAAI,kBAAkB,MAAM,KAAK,OAAO,IAClD,aAAa,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAC9D,CAAC,aAAa,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAC/D,aAAa,CAAC,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAChE,WAAW,EAAE,GAAG,YAAY,MAAM,YAAY,GAAG,GAAG,QAAQ,CAAC;AACrF;AAXgB;;;ADvDhB,SAASG,iBAAgB,MAAM,KAAK,SAAS;AACzC,SAAO,EAAE,CAAC,GAAG,GAAG,KAAK,MAAM,CAAC,GAAG,GAAG,MAAM,OAAO,CAAC,EAAE;AACtD;AAFS,OAAAA,kBAAA;AAIT,SAASC,kBAAiB,MAAM,cAAc,SAAS;AACnD,SAAO,aAAa,OAAO,CAAC,KAAK,OAAO;AACpC,WAAO,EAAE,GAAG,KAAK,GAAGD,iBAAgB,MAAM,IAAI,OAAO,EAAE;AAAA,EAC3D,GAAG,CAAC,CAAC;AACT;AAJS,OAAAC,mBAAA;AAMT,SAASC,eAAc,MAAM,WAAW,SAAS;AAC7C,SAAOD,kBAAiB,MAAM,UAAU,MAAM,OAAO;AACzD;AAFS,OAAAC,gBAAA;AAIF,SAAS,kBAAkB,MAAM,WAAW,SAAS;AACxD,QAAM,aAAaA,eAAc,MAAM,WAAW,OAAO;AACzD,SAAO,aAAa,UAAU;AAClC;AAHgB;;;AGlBhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIA,SAASC,iBAAe,YAAY,cAAc,SAAS;AACvD,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM,WAAW,OAAO,oBAAoB,UAAU;AAC7D,WAAO,EAAE,IAAI,KAAK,WAAW,EAAE,GAAG,cAAc,MAAM,OAAO,CAAC;AAClE,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,mBAAiB,cAAc,cAAc,SAAS;AAC3D,SAAOD,iBAAe,aAAa,YAAY,cAAc,OAAO;AACxE;AAFS,OAAAC,oBAAA;AAIF,SAAS,qBAAqB,cAAc,cAAc,SAAS;AACtE,QAAM,aAAaA,mBAAiB,cAAc,cAAc,OAAO;AACvE,SAAO,aAAa,UAAU;AAClC;AAHgB;;;ADIhB,SAASC,eAAc,OAAO,cAAc;AACxC,SAAO,MAAM,IAAI,CAAC,SAAS,YAAY,MAAM,YAAY,CAAC;AAC9D;AAFS,OAAAA,gBAAA;AAIT,SAASC,WAAU,OAAO,cAAc;AACpC,SAAO,MAAM,IAAI,CAAC,SAAS,YAAY,MAAM,YAAY,CAAC;AAC9D;AAFS,OAAAA,YAAA;AAIT,SAASC,iBAAe,YAAY,cAAc;AAC9C,QAAM,SAAS,CAAC;AAChB,aAAW,MAAM;AACb,QAAI,MAAM;AACN,aAAO,EAAE,IAAI,WAAW,EAAE;AAClC,SAAO;AACX;AANS,OAAAA,kBAAA;AAQT,SAASC,YAAW,GAAG,GAAG;AACtB,QAAM,UAAU,QAAQ,GAAG,CAAC,eAAe,OAAO,YAAY,YAAY,CAAC;AAC3E,QAAM,aAAaD,iBAAe,EAAE,YAAY,GAAG,CAAC;AACpD,SAAOE,QAAO,YAAY,OAAO;AACrC;AAJS,OAAAD,aAAA;AAMT,SAASE,uBAAsB,cAAc;AACzC,QAAM,SAAS,aAAa,OAAO,CAACC,SAAQ,QAAQ,eAAe,GAAG,IAAI,CAAC,GAAGA,SAAQ,QAAQ,GAAG,CAAC,IAAIA,SAAQ,CAAC,CAAC;AAChH,SAAO,MAAM,MAAM;AACvB;AAHS,OAAAD,wBAAA;AAKT,SAAS,YAAY,YAAY,cAAc;AAC3C,SAAQ,YAAY,UAAU,IAAI,UAAUL,eAAc,WAAW,OAAO,YAAY,CAAC,IACrF,QAAQ,UAAU,IAAI,MAAMC,WAAU,WAAW,OAAO,YAAY,CAAC,IACjEM,UAAS,UAAU,IAAIJ,YAAW,YAAY,YAAY,IACtDC,QAAO,CAAC,CAAC;AACzB;AALS;AAQF,SAAS,KAAK,MAAM,KAAK,SAAS;AACrC,QAAM,UAAU,QAAa,GAAG,IAAIC,uBAAsB,GAAG,IAAI;AACjE,QAAM,eAAe,SAAS,GAAG,IAAI,kBAAkB,GAAG,IAAI;AAC9D,QAAM,YAAY,MAAM,IAAI;AAC5B,QAAM,WAAW,MAAM,GAAG;AAC1B,SAAQ,eAAe,IAAI,IAAI,qBAAqB,MAAM,cAAc,OAAO,IAC3E,YAAY,GAAG,IAAI,kBAAkB,MAAM,KAAK,OAAO,IAClD,aAAa,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAC9D,CAAC,aAAa,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAC/D,aAAa,CAAC,WAAY,SAAS,QAAQ,CAAC,MAAM,OAAO,GAAG,OAAO,IAChE,WAAW,EAAE,GAAG,YAAY,MAAM,YAAY,GAAG,GAAG,QAAQ,CAAC;AACrF;AAXgB;;;ADlDhB,SAASG,iBAAgB,MAAM,KAAK,SAAS;AACzC,SAAO;AAAA,IACH,CAAC,GAAG,GAAG,KAAK,MAAM,CAAC,GAAG,GAAG,MAAM,OAAO,CAAC;AAAA,EAC3C;AACJ;AAJS,OAAAA,kBAAA;AAMT,SAASC,kBAAiB,MAAM,cAAc,SAAS;AACnD,SAAO,aAAa,OAAO,CAAC,QAAQ,YAAY;AAC5C,WAAO,EAAE,GAAG,QAAQ,GAAGD,iBAAgB,MAAM,SAAS,OAAO,EAAE;AAAA,EACnE,GAAG,CAAC,CAAC;AACT;AAJS,OAAAC,mBAAA;AAMT,SAASC,eAAc,MAAM,WAAW,SAAS;AAC7C,SAAOD,kBAAiB,MAAM,UAAU,MAAM,OAAO;AACzD;AAFS,OAAAC,gBAAA;AAIF,SAAS,kBAAkB,MAAM,WAAW,SAAS;AACxD,QAAM,aAAaA,eAAc,MAAM,WAAW,OAAO;AACzD,SAAO,aAAa,UAAU;AAClC;AAHgB;;;AGpBhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAeA,SAASC,cAAa,QAAQ,YAAY;AACtC,SAAO,SAAS,WAAW,CAAC,SAAS,QAAQ,UAAU,CAAC,CAAC;AAC7D;AAFS,OAAAA,eAAA;AAIT,SAASC,SAAQ,MAAM;AACnB,SAAO,SAAS,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC;AAC1C;AAFS,OAAAA,UAAA;AAIT,SAASC,iBAAe,YAAY;AAChC,QAAM,oBAAoB,CAAC;AAC3B,aAAW,KAAK,WAAW,OAAO,oBAAoB,UAAU;AAC5D,sBAAkB,CAAC,IAAI,SAAS,WAAW,CAAC,CAAC;AACjD,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,YAAW,MAAM;AACtB,QAAM,UAAU,QAAQ,MAAM,CAAC,eAAe,OAAO,YAAY,YAAY,CAAC;AAC9E,QAAM,aAAaD,iBAAe,KAAK,YAAY,CAAC;AACpD,SAAOE,QAAO,YAAY,OAAO;AACrC;AAJS,OAAAD,aAAA;AAMT,SAASE,UAAS,OAAO;AACrB,SAAO,MAAM,IAAI,UAAQ,eAAe,IAAI,CAAC;AACjD;AAFS,OAAAA,WAAA;AAOT,SAAS,eAAe,MAAM;AAC1B;AAAA;AAAA,IAEU,WAAW,IAAI,IAAIL,cAAa,KAAK,QAAQ,KAAK,UAAU,IACxD,MAAM,IAAI,IAAIC,SAAQ,KAAK,IAAI,IAC3B,YAAY,IAAI,IAAI,UAAUI,UAAS,KAAK,KAAK,CAAC,IAC9C,QAAQ,IAAI,IAAI,MAAMA,UAAS,KAAK,KAAK,CAAC,IACtCC,UAAS,IAAI,IAAIH,YAAW,IAAI;AAAA;AAAA,MAE5BI,UAAS,IAAI,IAAI,OACbC,WAAU,IAAI,IAAI,OACdC,WAAU,IAAI,IAAI,OACd,UAAU,IAAI,IAAI,OACdC,QAAO,IAAI,IAAI,OACXC,UAAS,IAAI,IAAI,OACbC,UAAS,IAAI,IAAI,OACbC,UAAS,IAAI,IAAI,OACbC,aAAY,IAAI,IAAI;AAAA;AAAA,QAE1BV,QAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AACrE;AApBS;AAsBF,SAAS,QAAQ,MAAM,SAAS;AACnC,MAAc,eAAe,IAAI,GAAG;AAChC,WAAO,wBAAwB,MAAM,OAAO;AAAA,EAChD,OACK;AAED,WAAO,WAAW,EAAE,GAAG,eAAe,IAAI,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC7D;AACJ;AARgB;;;AD7DhB,SAASW,iBAAe,GAAG,SAAS;AAChC,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,QAAQ,EAAE,EAAE,GAAG,MAAM,OAAO,CAAC;AAC3C,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,mBAAiB,GAAG,SAAS;AAClC,SAAOD,iBAAe,EAAE,YAAY,OAAO;AAC/C;AAFS,OAAAC,oBAAA;AAIF,SAAS,wBAAwB,GAAG,SAAS;AAChD,QAAM,IAAIA,mBAAiB,GAAG,OAAO;AACrC,SAAO,aAAa,CAAC;AACzB;AAHgB;;;AEfhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAcA,SAASC,cAAa,QAAQ,YAAY;AACtC,SAAO,SAAS,YAAY,CAAC,SAAS,QAAQ,UAAU,CAAC,CAAC;AAC9D;AAFS,OAAAA,eAAA;AAIT,SAASC,SAAQ,MAAM;AACnB,SAAO,SAAS,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;AAC3C;AAFS,OAAAA,UAAA;AAIT,SAASC,iBAAe,YAAY;AAChC,QAAM,qBAAqB,CAAC;AAC5B,aAAW,KAAK,WAAW,OAAO,oBAAoB,UAAU;AAC5D,uBAAmB,CAAC,IAAI,QAAQ,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC;AACjE,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,YAAW,MAAM;AACtB,QAAM,UAAU,QAAQ,MAAM,CAAC,eAAe,OAAO,YAAY,YAAY,CAAC;AAC9E,QAAM,aAAaD,iBAAe,KAAK,YAAY,CAAC;AACpD,SAAOE,QAAO,YAAY,OAAO;AACrC;AAJS,OAAAD,aAAA;AAMT,SAASE,UAAS,OAAO;AACrB,SAAO,MAAM,IAAI,UAAQ,gBAAgB,IAAI,CAAC;AAClD;AAFS,OAAAA,WAAA;AAOT,SAAS,gBAAgB,MAAM;AAC3B;AAAA;AAAA,IAEU,WAAW,IAAI,IAAIL,cAAa,KAAK,QAAQ,KAAK,UAAU,IACxD,MAAM,IAAI,IAAIC,SAAQ,KAAK,IAAI,IAC3B,YAAY,IAAI,IAAI,UAAUI,UAAS,KAAK,KAAK,CAAC,IAC9C,QAAQ,IAAI,IAAI,MAAMA,UAAS,KAAK,KAAK,CAAC,IACtCC,UAAS,IAAI,IAAIH,YAAW,IAAI;AAAA;AAAA,MAE5BI,UAAS,IAAI,IAAI,OACbC,WAAU,IAAI,IAAI,OACdC,WAAU,IAAI,IAAI,OACd,UAAU,IAAI,IAAI,OACdC,QAAO,IAAI,IAAI,OACXC,UAAS,IAAI,IAAI,OACbC,UAAS,IAAI,IAAI,OACbC,UAAS,IAAI,IAAI,OACbC,aAAY,IAAI,IAAI;AAAA;AAAA,QAE1BV,QAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AACrE;AApBS;AAsBF,SAAS,SAAS,MAAM,SAAS;AACpC,MAAc,eAAe,IAAI,GAAG;AAChC,WAAO,yBAAyB,MAAM,OAAO;AAAA,EACjD,OACK;AAED,WAAO,WAAW,EAAE,GAAG,gBAAgB,IAAI,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC9D;AACJ;AARgB;;;AD7DhB,SAASW,iBAAe,GAAG,SAAS;AAChC,QAAM,MAAM,CAAC;AACb,aAAW,MAAM,WAAW,OAAO,oBAAoB,CAAC;AACpD,QAAI,EAAE,IAAI,SAAS,EAAE,EAAE,GAAG,OAAO;AACrC,SAAO;AACX;AALS,OAAAA,kBAAA;AAOT,SAASC,mBAAiB,GAAG,SAAS;AAClC,SAAOD,iBAAe,EAAE,YAAY,OAAO;AAC/C;AAFS,OAAAC,oBAAA;AAIF,SAAS,yBAAyB,GAAG,SAAS;AACjD,QAAM,IAAIA,mBAAiB,GAAG,OAAO;AACrC,SAAO,aAAa,CAAC;AACzB;AAHgB;;;ATgBhB,SAAS,sBAAsB,kBAAkB,OAAO;AACpD,SAAO,MAAM,IAAI,CAAC,SAAS;AACvB,WAAiB,MAAM,IAAI,IACrB,YAAY,kBAAkB,KAAK,IAAI,IACvCC,UAAS,kBAAkB,IAAI;AAAA,EACzC,CAAC;AACL;AANS;AAQT,SAAS,YAAY,kBAAkB,KAAK;AACxC,SAAQ,OAAO,mBACC,MAAM,iBAAiB,GAAG,CAAC,IACjC,YAAY,kBAAkB,iBAAiB,GAAG,EAAE,IAAI,IACxDA,UAAS,kBAAkB,iBAAiB,GAAG,CAAC,IACpD,MAAM;AAChB;AANS;AAQT,SAAS,YAAY,YAAY;AAC7B,SAAO,QAAQ,WAAW,CAAC,CAAC;AAChC;AAFS;AAIT,SAAS,UAAU,YAAY;AAC3B,SAAO,MAAM,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC;AAC7C;AAFS;AAIT,SAAS,UAAU,YAAY;AAC3B,SAAO,MAAM,WAAW,CAAC,CAAC;AAC9B;AAFS;AAIT,SAAS,YAAY,YAAY;AAC7B,SAAO,QAAQ,WAAW,CAAC,CAAC;AAChC;AAFS;AAIT,SAAS,SAAS,YAAY;AAC1B,SAAO,KAAK,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC;AAC5C;AAFS;AAIT,SAAS,SAAS,YAAY;AAC1B,SAAO,KAAK,WAAW,CAAC,GAAG,WAAW,CAAC,CAAC;AAC5C;AAFS;AAIT,SAAS,aAAa,YAAY;AAC9B,SAAO,SAAS,WAAW,CAAC,CAAC;AACjC;AAFS;AAIT,SAASC,cAAa,kBAAkB,QAAQ,YAAY;AACxD,QAAM,eAAe,sBAAsB,kBAAkB,UAAU;AACvE,SAAQ,WAAW,YAAY,YAAY,YAAY,IACnD,WAAW,UAAU,UAAU,YAAY,IACvC,WAAW,UAAU,UAAU,YAAY,IACvC,WAAW,YAAY,YAAY,YAAY,IAC3C,WAAW,SAAS,SAAS,YAAY,IACrC,WAAW,SAAS,SAAS,YAAY,IACrC,WAAW,aAAa,aAAa,YAAY,IAC7C,MAAM;AACtC;AAVS,OAAAA,eAAA;AAWT,SAASC,WAAU,kBAAkB,MAAM;AACvC,SAAOC,OAAMH,UAAS,kBAAkB,IAAI,CAAC;AACjD;AAFS,OAAAE,YAAA;AAGT,SAASE,mBAAkB,kBAAkB,MAAM;AAC/C,SAAO,cAAcJ,UAAS,kBAAkB,IAAI,CAAC;AACzD;AAFS,OAAAI,oBAAA;AAIT,SAASC,iBAAgB,kBAAkB,YAAY,cAAc;AACjE,SAAO,YAAYC,WAAU,kBAAkB,UAAU,GAAGN,UAAS,kBAAkB,YAAY,CAAC;AACxG;AAFS,OAAAK,kBAAA;AAIT,SAASE,cAAa,kBAAkB,YAAY,YAAY;AAC5D,SAAOC,UAAaF,WAAU,kBAAkB,UAAU,GAAGN,UAAS,kBAAkB,UAAU,CAAC;AACvG;AAFS,OAAAO,eAAA;AAGT,SAASE,eAAc,kBAAkB,OAAO;AAC5C,SAAO,UAAUH,WAAU,kBAAkB,KAAK,CAAC;AACvD;AAFS,OAAAG,gBAAA;AAGT,SAASC,cAAa,kBAAkB,MAAM;AAC1C,SAAO,SAASV,UAAS,kBAAkB,IAAI,CAAC;AACpD;AAFS,OAAAU,eAAA;AAGT,SAASC,YAAW,kBAAkB,YAAY;AAC9C,SAAOC,QAAO,WAAW,OAAO,KAAK,UAAU,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACrE,WAAO,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAGZ,UAAS,kBAAkB,WAAW,GAAG,CAAC,EAAE;AAAA,EAC3E,GAAG,CAAC,CAAC,CAAC;AACV;AAJS,OAAAW,aAAA;AAMT,SAASE,YAAW,kBAAkB,MAAM;AACxC,QAAM,CAAC,OAAO,OAAO,IAAI,CAACb,UAAS,kBAAkBc,aAAY,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC;AAC5F,QAAM,SAAS,UAAU,IAAI;AAC7B,SAAO,kBAAkB,OAAO,IAAI;AACpC,SAAO;AACX;AALS,OAAAD,aAAA;AAOT,SAAS,cAAc,kBAAkB,WAAW;AAChD,SAAkB,MAAM,SAAS,IAC3B,EAAE,GAAG,YAAY,kBAAkB,UAAU,IAAI,GAAG,CAAC,aAAa,GAAG,UAAU,aAAa,EAAE,IAC9F;AACV;AAJS;AAKT,SAASE,WAAU,kBAAkB,OAAO;AACxC,SAAO,MAAMT,WAAU,kBAAkB,KAAK,CAAC;AACnD;AAFS,OAAAS,YAAA;AAGT,SAASC,YAAU,kBAAkB,OAAO;AACxC,SAAO,MAAMV,WAAU,kBAAkB,KAAK,CAAC;AACnD;AAFS,OAAAU,aAAA;AAGT,SAASV,WAAU,kBAAkB,OAAO;AACxC,SAAO,MAAM,IAAI,CAAC,SAASN,UAAS,kBAAkB,IAAI,CAAC;AAC/D;AAFS,OAAAM,YAAA;AAIF,SAASN,UAAS,kBAAkB,MAAM;AAC7C;AAAA;AAAA,IAEU,WAAW,IAAI,IAAI,WAAWA,UAAS,kBAAkB,QAAQ,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,IACzF,WAAW,IAAI,IAAI,WAAWA,UAAS,kBAAkB,QAAQ,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI;AAAA;AAAA,MAEzF,YAAY,IAAI,IAAI,WAAW,cAAc,kBAAkB,IAAI,GAAG,IAAI;AAAA;AAAA,QAEtEiB,SAAQ,IAAI,IAAI,WAAWf,WAAU,kBAAkB,KAAK,KAAK,GAAG,IAAI,IACpEgB,iBAAgB,IAAI,IAAI,WAAWd,mBAAkB,kBAAkB,KAAK,KAAK,GAAG,IAAI,IACpF,WAAW,IAAI,IAAI,WAAWH,cAAa,kBAAkB,KAAK,QAAQ,KAAK,UAAU,CAAC,IACtF,cAAc,IAAI,IAAI,WAAWI,iBAAgB,kBAAkB,KAAK,YAAY,KAAK,OAAO,GAAG,IAAI,IACnGc,YAAW,IAAI,IAAI,WAAWZ,cAAa,kBAAkB,KAAK,YAAY,KAAK,OAAO,GAAG,IAAI,IAC7F,YAAY,IAAI,IAAI,WAAWE,eAAc,kBAAkB,KAAK,KAAK,GAAG,IAAI,IAC5EW,YAAW,IAAI,IAAI,WAAWV,cAAa,kBAAkB,KAAK,KAAK,GAAG,IAAI,IAC1EW,UAAS,IAAI,IAAI,WAAWV,YAAW,kBAAkB,KAAK,UAAU,GAAG,IAAI,IAC3E,SAAS,IAAI,IAAI,WAAWE,YAAW,kBAAkB,IAAI,CAAC,IAC1D,QAAQ,IAAI,IAAI,WAAWE,WAAU,kBAAkB,KAAK,SAAS,CAAC,CAAC,GAAG,IAAI,IAC1E,QAAQ,IAAI,IAAI,WAAWC,YAAU,kBAAkB,KAAK,KAAK,GAAG,IAAI,IAC9E;AAAA;AAAA;AAAA;AAC5D;AApBgB,OAAAhB,WAAA;AAsBT,SAAS,YAAY,kBAAkB,KAAK;AAC/C,SAAQ,OAAO,mBACTA,UAAS,kBAAkB,iBAAiB,GAAG,CAAC,IAChD,MAAM;AAChB;AAJgB;AAMT,SAAS,wBAAwB,kBAAkB;AACtD,SAAO,WAAW,OAAO,oBAAoB,gBAAgB,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACnF,WAAO,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAG,YAAY,kBAAkB,GAAG,EAAE;AAAA,EAClE,GAAG,CAAC,CAAC;AACT;AAJgB;;;ADvJT,IAAM,UAAN,MAAc;AAAA,EAVrB,OAUqB;AAAA;AAAA;AAAA,EACjB,YAAY,OAAO;AACf,UAAM,WAAW,wBAAwB,KAAK;AAC9C,UAAM,aAAa,KAAK,gBAAgB,QAAQ;AAChD,SAAK,QAAQ;AAAA,EACjB;AAAA;AAAA,EAEA,OAAO,KAAK,SAAS;AACjB,UAAM,QAAQ,EAAE,GAAG,KAAK,OAAO,CAAC,GAAG,GAAG,WAAW,KAAK,MAAM,GAAG,GAAG,OAAO,EAAE;AAC3E,WAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,OAAO,MAAM,IAAI,CAAC;AAAA,EAC5D;AAAA;AAAA,EAEA,gBAAgB,OAAO;AACnB,WAAO,WAAW,OAAO,oBAAoB,KAAK,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACxE,aAAO,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAG,EAAE,GAAG,MAAM,GAAG,GAAG,KAAK,IAAI,EAAE;AAAA,IAC3D,GAAG,CAAC,CAAC;AAAA,EACT;AACJ;AAEO,SAAS,OAAO,YAAY;AAC/B,SAAO,IAAI,QAAQ,UAAU;AACjC;AAFgB;;;AY7BhB;AAAA;AAAAsB;AAGO,SAASC,KAAI,MAAM,SAAS;AAC/B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO;AAC3D;AAFgB,OAAAA,MAAA;;;ACHhB;AAAA;AAAAC;AAIO,SAAS,WAAW,QAAQ,SAAS;AACxC,SAAkBC,YAAW,MAAM,IAAI,MAAM,OAAO,YAAY,OAAO,IAAI,MAAM;AACrF;AAFgB;;;ACJhB;AAAA;AAAAC;AAKA,IAAI,UAAU;AAEP,SAAS,UAAU,UAAU,UAAU,CAAC,GAAG;AAC9C,MAAI,YAAY,QAAQ,GAAG;AACvB,YAAQ,MAAM,IAAI,SAAS;AAC/B,QAAM,WAAW,UAAU,SAAS,EAAE,CAAC,IAAI,GAAG,QAAQ,MAAM,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;AAC/E,WAAS,MAAM,QAAQ;AAEvB,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,aAAa,GAAG,SAAS,GAAG,OAAO;AACnE;AAPgB;;;ACPhB;AAAA;AAAAC;AAIO,SAASC,QAAO,YAAY,SAAS;AACxC,QAAM,OAAO,SAAS,UAAU,IAAI,IAAI,WAAW,OAAO,UAAU,IAAI;AACxE,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,UAAU,QAAQ,KAAK,QAAQ,OAAO,KAAK,MAAM,GAAG,OAAO;AAC3G;AAHgB,OAAAA,SAAA;;;ACJhB;AAAA;AAAAC;AAKA,SAAS,YAAY,GAAG;AACpB,SAAQ,YAAY,CAAC,IAAI,EAAE,QACvB,QAAQ,CAAC,IAAI,EAAE,QACX,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,IACrB,CAAC;AACjB;AALS;AAOF,SAAS,KAAK,GAAG;AACpB,SAAO,YAAY,CAAC;AACxB;AAFgB;;;ACZhB;AAAA;AAAAC;AAIO,SAAS,WAAW,QAAQ,SAAS;AACxC,SAAkBC,YAAW,MAAM,IAAI,WAAW,OAAO,SAAS,OAAO,IAAI,MAAM,OAAO;AAC9F;AAFgB;;;ACJhB;AAAA;AAAAC;AAQO,IAAM,yBAAN,MAA6B;AAAA,EARpC,OAQoC;AAAA;AAAA;AAAA,EAChC,YAAY,QAAQ;AAChB,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,OAAOC,SAAQ;AACX,WAAO,IAAI,uBAAuB,KAAK,QAAQA,OAAM;AAAA,EACzD;AACJ;AAEO,IAAM,yBAAN,MAA6B;AAAA,EAjBpC,OAiBoC;AAAA;AAAA;AAAA,EAChC,YAAY,QAAQA,SAAQ;AACxB,SAAK,SAAS;AACd,SAAK,SAASA;AAAA,EAClB;AAAA,EACA,gBAAgBC,SAAQ,QAAQ;AAC5B,UAAMC,UAAS,wBAAC,UAAU,OAAO,aAAa,EAAE,OAAOD,QAAO,KAAK,CAAC,GAArD;AACf,UAAME,UAAS,wBAAC,UAAU,KAAK,OAAO,OAAO,aAAa,EAAE,OAAO,KAAK,CAAC,GAA1D;AACf,UAAM,QAAQ,EAAE,QAAQD,SAAQ,QAAQC,QAAO;AAC/C,WAAO,EAAE,GAAG,QAAQ,CAAC,aAAa,GAAG,MAAM;AAAA,EAC/C;AAAA,EACA,aAAaF,SAAQ,QAAQ;AACzB,UAAM,QAAQ,EAAE,QAAQ,KAAK,QAAQ,QAAQA,QAAO;AACpD,WAAO,EAAE,GAAG,QAAQ,CAAC,aAAa,GAAG,MAAM;AAAA,EAC/C;AAAA,EACA,OAAOA,SAAQ;AACX,WAAQ,YAAY,KAAK,MAAM,IAAI,KAAK,gBAAgBA,SAAQ,KAAK,MAAM,IAAI,KAAK,aAAaA,SAAQ,KAAK,MAAM;AAAA,EACxH;AACJ;AAEO,SAAS,UAAU,QAAQ;AAC9B,SAAO,IAAI,uBAAuB,MAAM;AAC5C;AAFgB;;;ACrChB;AAAA;AAAAG;AAGO,SAAS,OAAO,UAAU,CAAC,GAAG;AACjC,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,QAAQ,IAAI,KAAK,SAAS,GAAG,OAAO;AACpE;AAFgB;;;ACHhB;AAAA;AAAAC;AAGO,SAAS,KAAK,SAAS;AAC1B,SAAO,WAAW,EAAE,CAAC,IAAI,GAAG,QAAQ,MAAM,OAAO,GAAG,OAAO;AAC/D;AAFgB;;;ACHhB;AAAA;AAAAC;;;ACAA,IAAAC,gBAAA;AAAA,SAAAA,eAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,kBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA,oBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;;;ADUA,IAAM,OAAOC;;;AtHsOb,uCAAmC;;;AwHhPnC;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAAS,qBAAqBC,QAAO;AACxC,UAAQA,OAAM,WAAW;AAAA,IACrB,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,0CAA0CA,OAAM,OAAO,WAAW;AAAA,IAC7E,KAAK,eAAe;AAChB,aAAO,sCAAsCA,OAAM,OAAO,WAAW;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO,gDAAgDA,OAAM,OAAO,QAAQ;AAAA,IAChF,KAAK,eAAe;AAChB,aAAO,mDAAmDA,OAAM,OAAO,QAAQ;AAAA,IACnF,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,mCAAmCA,OAAM,OAAO,gBAAgB;AAAA,IAC3E,KAAK,eAAe;AAChB,aAAO,sCAAsCA,OAAM,OAAO,gBAAgB;AAAA,IAC9E,KAAK,eAAe;AAChB,aAAO,0CAA0CA,OAAM,OAAO,OAAO;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO,6CAA6CA,OAAM,OAAO,OAAO;AAAA,IAC5E,KAAK,eAAe;AAChB,aAAO,uCAAuCA,OAAM,OAAO,UAAU;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,8CAA8CA,OAAM,OAAO,yBAAyB;AAAA,IAC/F,KAAK,eAAe;AAChB,aAAO,2CAA2CA,OAAM,OAAO,yBAAyB;AAAA,IAC5F,KAAK,eAAe;AAChB,aAAO,qDAAqDA,OAAM,OAAO,gBAAgB;AAAA,IAC7F,KAAK,eAAe;AAChB,aAAO,kDAAkDA,OAAM,OAAO,gBAAgB;AAAA,IAC1F,KAAK,eAAe;AAChB,aAAO,+CAA+CA,OAAM,OAAO,mBAAmB;AAAA,IAC1F,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,oCAAoCA,OAAM,OAAO,gBAAgB;AAAA,IAC5E,KAAK,eAAe;AAChB,aAAO,uCAAuCA,OAAM,OAAO,gBAAgB;AAAA,IAC/E,KAAK,eAAe;AAChB,aAAO,2CAA2CA,OAAM,OAAO,OAAO;AAAA,IAC1E,KAAK,eAAe;AAChB,aAAO,8CAA8CA,OAAM,OAAO,OAAO;AAAA,IAC7E,KAAK,eAAe;AAChB,aAAO,wCAAwCA,OAAM,OAAO,UAAU;AAAA,IAC1E,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,YAAY,OAAOA,OAAM,OAAO,UAAU,WAAW,IAAIA,OAAM,OAAO,KAAK,MAAMA,OAAM,OAAO,KAAK;AAAA,IAC9G,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,mCAAmCA,OAAM,OAAO,gBAAgB;AAAA,IAC3E,KAAK,eAAe;AAChB,aAAO,sCAAsCA,OAAM,OAAO,gBAAgB;AAAA,IAC9E,KAAK,eAAe;AAChB,aAAO,0CAA0CA,OAAM,OAAO,OAAO;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO,6CAA6CA,OAAM,OAAO,OAAO;AAAA,IAC5E,KAAK,eAAe;AAChB,aAAO,uCAAuCA,OAAM,OAAO,UAAU;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,wCAAwCA,OAAM,OAAO,aAAa;AAAA,IAC7E,KAAK,eAAe;AAChB,aAAO,oCAAoCA,OAAM,OAAO,aAAa;AAAA,IACzE,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,mBAAmBA,OAAM,OAAO,MAAM;AAAA,IACjD,KAAK,eAAe;AAChB,aAAO,6BAA6BA,OAAM,OAAO,MAAM;AAAA,IAC3D,KAAK,eAAe;AAChB,aAAO,2CAA2CA,OAAM,OAAO,SAAS;AAAA,IAC5E,KAAK,eAAe;AAChB,aAAO,8CAA8CA,OAAM,OAAO,SAAS;AAAA,IAC/E,KAAK,eAAe;AAChB,aAAO,6BAA6BA,OAAM,OAAO,OAAO;AAAA,IAC5D,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,0BAA0BA,OAAM,OAAO,YAAY,CAAC;AAAA,IAC/D,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,yCAAyCA,OAAM,OAAO,aAAa;AAAA,IAC9E,KAAK,eAAe;AAChB,aAAO,4CAA4CA,OAAM,OAAO,aAAa;AAAA,IACjF,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO;AAAA,IACX,KAAK,eAAe;AAChB,aAAO,kBAAkBA,OAAM,OAAO,IAAI,CAAC;AAAA,IAC/C;AACI,aAAO;AAAA,EACf;AACJ;AArIgB;AAuIhB,IAAI,gBAAgB;AAMb,SAAS,mBAAmB;AAC/B,SAAO;AACX;AAFgB;;;AChJhB;AAAA;AAAAC;AAGO,IAAM,uBAAN,cAAmC,aAAa;AAAA,EAHvD,OAGuD;AAAA;AAAA;AAAA,EACnD,YAAY,QAAQ;AAChB,UAAM,0CAA0C,OAAO,IAAI,GAAG;AAC9D,SAAK,SAAS;AAAA,EAClB;AACJ;AACA,SAAS,QAAQ,QAAQ,YAAY;AACjC,QAAM,SAAS,WAAW,KAAK,CAACC,YAAWA,QAAO,QAAQ,OAAO,IAAI;AACrE,MAAI,WAAW;AACX,UAAM,IAAI,qBAAqB,MAAM;AACzC,SAAO,MAAM,QAAQ,UAAU;AACnC;AALS;AAOF,SAAS,QAAQ,QAAQ,YAAY;AACxC,MAAI,CAACC,UAAS,OAAO,GAAG,KAAK,WAAW,KAAK,CAAC,WAAW,OAAO,QAAQ,OAAO,GAAG;AAC9E,WAAO;AACX,aAAW,KAAK,MAAM;AACtB,SAAO;AACX;AALgB;AAOT,SAAS,MAAM,QAAQ,YAAY;AAEtC,SAAQ,OAAO,IAAI,MAAM,UAAU,OAAO,IAAI,MAAM,QAC9C,QAAQ,QAAQ,UAAU,IAC1B;AACV;AALgB;;;ACvBhB;AAAA;AAAAC;AAKO,IAAM,iBAAN,cAA6B,aAAa;AAAA,EALjD,OAKiD;AAAA;AAAA;AAAA,EAC7C,YAAY,OAAO;AACf,UAAM,sBAAsB;AAC5B,SAAK,QAAQ;AAAA,EACjB;AACJ;AAIA,IAAI;AAAA,CACH,SAAUC,aAAY;AACnB,EAAAA,YAAWA,YAAW,WAAW,IAAI,CAAC,IAAI;AAC1C,EAAAA,YAAWA,YAAW,MAAM,IAAI,CAAC,IAAI;AACrC,EAAAA,YAAWA,YAAW,SAAS,IAAI,CAAC,IAAI;AACxC,EAAAA,YAAWA,YAAW,QAAQ,IAAI,CAAC,IAAI;AACvC,EAAAA,YAAWA,YAAW,QAAQ,IAAI,CAAC,IAAI;AACvC,EAAAA,YAAWA,YAAW,QAAQ,IAAI,CAAC,IAAI;AACvC,EAAAA,YAAWA,YAAW,OAAO,IAAI,CAAC,IAAI;AACtC,EAAAA,YAAWA,YAAW,MAAM,IAAI,CAAC,IAAI;AACrC,EAAAA,YAAWA,YAAW,YAAY,IAAI,CAAC,IAAI;AAC3C,EAAAA,YAAWA,YAAW,QAAQ,IAAI,CAAC,IAAI;AACvC,EAAAA,YAAWA,YAAW,QAAQ,IAAI,EAAE,IAAI;AAC5C,GAAG,eAAe,aAAa,CAAC,EAAE;AAIlC,IAAI,cAAc,OAAO,sBAAsB;AAC/C,IAAM,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,eAAe,GAAG;AAAA,EAAO;AAAA;AAAmC,CAAC;AAC3F,IAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,OAAO,CAAC,CAAC;AACjE,IAAM,MAAM,IAAI,aAAa,CAAC;AAC9B,IAAM,QAAQ,IAAI,SAAS,IAAI,MAAM;AACrC,IAAM,SAAS,IAAI,WAAW,IAAI,MAAM;AAIxC,UAAU,cAAc,OAAO;AAC3B,QAAM,YAAY,UAAU,IAAI,IAAI,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC;AAClF,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,UAAO,SAAU,KAAK,YAAY,IAAI,KAAO;AAAA,EACjD;AACJ;AALU;AASV,SAASC,WAAU,OAAO;AACtB,UAAQ,WAAW,KAAK;AACxB,aAAW,QAAQ,OAAO;AACtB,IAAAC,OAAM,IAAI;AAAA,EACd;AACJ;AALS,OAAAD,YAAA;AAMT,SAAS,YAAY,OAAO;AACxB,UAAQ,WAAW,OAAO;AAC1B,UAAQ,QAAQ,IAAI,CAAC;AACzB;AAHS;AAIT,SAAS,WAAW,OAAO;AACvB,UAAQ,WAAW,MAAM;AACzB,QAAM,YAAY,GAAG,KAAK;AAC1B,aAAWE,SAAQ,QAAQ;AACvB,YAAQA,KAAI;AAAA,EAChB;AACJ;AANS;AAOT,SAASC,UAAS,OAAO;AACrB,UAAQ,WAAW,IAAI;AACvB,EAAAF,OAAM,MAAM,QAAQ,CAAC;AACzB;AAHS,OAAAE,WAAA;AAIT,SAAS,SAAS,OAAO;AACrB,UAAQ,WAAW,IAAI;AAC3B;AAFS;AAGT,SAAS,WAAW,OAAO;AACvB,UAAQ,WAAW,MAAM;AACzB,QAAM,WAAW,GAAG,KAAK;AACzB,aAAWD,SAAQ,QAAQ;AACvB,YAAQA,KAAI;AAAA,EAChB;AACJ;AANS;AAOT,SAASE,YAAW,OAAO;AACvB,UAAQ,WAAW,MAAM;AACzB,aAAW,OAAO,WAAW,OAAO,oBAAoB,KAAK,EAAE,KAAK,GAAG;AACnE,IAAAH,OAAM,GAAG;AACT,IAAAA,OAAM,MAAM,GAAG,CAAC;AAAA,EACpB;AACJ;AANS,OAAAG,aAAA;AAOT,SAAS,WAAW,OAAO;AACvB,UAAQ,WAAW,MAAM;AACzB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,eAAWF,SAAQ,cAAc,MAAM,WAAW,CAAC,CAAC,GAAG;AACnD,cAAQA,KAAI;AAAA,IAChB;AAAA,EACJ;AACJ;AAPS;AAQT,SAAS,WAAW,OAAO;AACvB,UAAQ,WAAW,MAAM;AACzB,EAAAD,OAAM,MAAM,WAAW;AAC3B;AAHS;AAIT,SAASI,gBAAe,OAAO;AAC3B,UAAQ,WAAW,UAAU;AAC7B,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAQ,MAAM,CAAC,CAAC;AAAA,EACpB;AACJ;AALS,OAAAA,iBAAA;AAMT,SAAS,cAAc,OAAO;AAC1B,SAAO,QAAQ,WAAW,SAAS;AACvC;AAFS;AAGT,SAASJ,OAAM,OAAO;AAClB,MAAIK,SAAQ,KAAK;AACb,WAAON,WAAU,KAAK;AAC1B,MAAIO,WAAU,KAAK;AACf,WAAO,YAAY,KAAK;AAC5B,MAAIC,UAAS,KAAK;AACd,WAAO,WAAW,KAAK;AAC3B,MAAIC,QAAO,KAAK;AACZ,WAAON,UAAS,KAAK;AACzB,MAAIO,QAAO,KAAK;AACZ,WAAO,SAAS,KAAK;AACzB,MAAIC,UAAS,KAAK;AACd,WAAO,WAAW,KAAK;AAC3B,MAAIC,UAAS,KAAK;AACd,WAAOR,YAAW,KAAK;AAC3B,MAAIS,UAAS,KAAK;AACd,WAAO,WAAW,KAAK;AAC3B,MAAIC,UAAS,KAAK;AACd,WAAO,WAAW,KAAK;AAC3B,MAAIC,cAAa,KAAK;AAClB,WAAOV,gBAAe,KAAK;AAC/B,MAAIW,aAAY,KAAK;AACjB,WAAO,cAAc,KAAK;AAC9B,QAAM,IAAI,eAAe,KAAK;AAClC;AAxBS,OAAAf,QAAA;AAyBT,SAAS,QAAQC,OAAM;AACnB,gBAAc,cAAc,MAAMA,KAAI;AACtC,gBAAe,cAAc,QAAS;AAC1C;AAHS;AAQF,SAAS,KAAK,OAAO;AACxB,gBAAc,OAAO,sBAAsB;AAC3C,EAAAD,OAAM,KAAK;AACX,SAAO;AACX;AAJgB;;;AC7IhB;AAAA;AAAAgB;AAoBO,IAAM,6BAAN,cAAyC,aAAa;AAAA,EApB7D,OAoB6D;AAAA;AAAA;AAAA,EACzD,YAAY,QAAQ;AAChB,UAAM,cAAc;AACpB,SAAK,SAAS;AAAA,EAClB;AACJ;AAIA,SAAS,eAAe,QAAQ;AAC5B,SAAO,OAAO,IAAI,MAAM,SAAS,OAAO,IAAI,MAAM;AACtD;AAFS;AAMT,SAAS,UAAU,OAAO;AACtB,SAAO,UAAU;AACrB;AAFS;AAMT,SAASC,SAAQ,QAAQ,YAAY,OAAO;AACxC,SAAO;AACX;AAFS,OAAAA,UAAA;AAGT,SAASC,cAAa,QAAQ,YAAY,OAAO;AAC7C,SAAO;AACX;AAFS,OAAAA,eAAA;AAGT,SAASC,WAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,CAACC,SAAQ,KAAK;AACd,WAAO;AACX,MAAI,UAAU,OAAO,QAAQ,KAAK,EAAE,MAAM,UAAU,OAAO,WAAW;AAClE,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,QAAQ,KAAK,EAAE,MAAM,UAAU,OAAO,WAAW;AAClE,WAAO;AAAA,EACX;AACA,MAAI,CAAC,MAAM,MAAM,CAACC,WAAUC,OAAM,OAAO,OAAO,YAAYD,MAAK,CAAC,GAAG;AACjE,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,gBAAgB,QAAQ,CAAG,WAAY;AAAE,UAAME,OAAM,oBAAI,IAAI;AAAG,eAAW,WAAW,OAAO;AACpG,YAAM,SAAS,KAAK,OAAO;AAC3B,UAAIA,KAAI,IAAI,MAAM,GAAG;AACjB,eAAO;AAAA,MACX,OACK;AACD,QAAAA,KAAI,IAAI,MAAM;AAAA,MAClB;AAAA,IACJ;AAAE,WAAO;AAAA,EAAM,EAAG,GAAI;AAClB,WAAO;AAAA,EACX;AAEA,MAAI,EAAE,UAAU,OAAO,QAAQ,KAAKC,UAAS,OAAO,WAAW,KAAKA,UAAS,OAAO,WAAW,IAAI;AAC/F,WAAO;AAAA,EACX;AACA,QAAM,iBAAiB,UAAU,OAAO,QAAQ,IAAI,OAAO,WAAW,MAAM;AAC5E,QAAM,gBAAgB,MAAM,OAAO,CAAC,KAAKH,WAAWC,OAAM,gBAAgB,YAAYD,MAAK,IAAI,MAAM,IAAI,KAAM,CAAC;AAChH,MAAI,kBAAkB,GAAG;AACrB,WAAO;AAAA,EACX;AACA,MAAIG,UAAS,OAAO,WAAW,KAAK,gBAAgB,OAAO,aAAa;AACpE,WAAO;AAAA,EACX;AACA,MAAIA,UAAS,OAAO,WAAW,KAAK,gBAAgB,OAAO,aAAa;AACpE,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAxCS,OAAAL,YAAA;AAyCT,SAASM,mBAAkB,QAAQ,YAAY,OAAO;AAClD,SAAOC,iBAAgB,KAAK;AAChC;AAFS,OAAAD,oBAAA;AAGT,SAASE,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAACC,UAAS,KAAK;AACf,WAAO;AACX,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,OAAO,CAAC,IAAI;AAC5E,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAnBS,OAAAD,aAAA;AAoBT,SAASE,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAOC,WAAU,KAAK;AAC1B;AAFS,OAAAD,cAAA;AAGT,SAASE,iBAAgB,QAAQ,YAAY,OAAO;AAChD,SAAOT,OAAM,OAAO,SAAS,YAAY,MAAM,SAAS;AAC5D;AAFS,OAAAS,kBAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,MAAI,CAACC,QAAO,KAAK;AACb,WAAO;AACX,MAAI,UAAU,OAAO,yBAAyB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,4BAA4B;AACtG,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,yBAAyB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,4BAA4B;AACtG,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,MAAM,QAAQ,KAAK,OAAO,mBAAmB;AACrF,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,MAAM,QAAQ,KAAK,OAAO,mBAAmB;AACrF,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,mBAAmB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,wBAAwB,IAAI;AAChG,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAnBS,OAAAD,WAAA;AAoBT,SAASE,cAAa,QAAQ,YAAY,OAAO;AAC7C,SAAOC,YAAW,KAAK;AAC3B;AAFS,OAAAD,eAAA;AAGT,SAAS,WAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOZ,OAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK;AAC/D;AAJS;AAKT,SAASc,aAAY,QAAQ,YAAY,OAAO;AAC5C,MAAI,CAAC,UAAU,KAAK,GAAG;AACnB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,IAAI;AACpE,WAAO;AAAA,EACX;AACA,SAAO;AACX;AApBS,OAAAA,cAAA;AAqBT,SAASC,eAAc,QAAQ,YAAY,OAAO;AAC9C,QAAM,SAAS,OAAO,MAAM,MAAM,CAACC,YAAWhB,OAAMgB,SAAQ,YAAY,KAAK,CAAC;AAC9E,MAAI,OAAO,0BAA0B,OAAO;AACxC,UAAM,aAAa,IAAI,OAAO,aAAa,MAAM,CAAC;AAClD,UAAM,SAAS,OAAO,oBAAoB,KAAK,EAAE,MAAM,CAAC,QAAQ,WAAW,KAAK,GAAG,CAAC;AACpF,WAAO,UAAU;AAAA,EACrB,WACS,SAAS,OAAO,qBAAqB,GAAG;AAC7C,UAAM,WAAW,IAAI,OAAO,aAAa,MAAM,CAAC;AAChD,UAAM,SAAS,OAAO,oBAAoB,KAAK,EAAE,MAAM,CAAC,QAAQ,SAAS,KAAK,GAAG,KAAKhB,OAAM,OAAO,uBAAuB,YAAY,MAAM,GAAG,CAAC,CAAC;AACjJ,WAAO,UAAU;AAAA,EACrB,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAfS,OAAAe,gBAAA;AAgBT,SAASE,cAAa,QAAQ,YAAY,OAAO;AAC7C,SAAOC,YAAW,KAAK;AAC3B;AAFS,OAAAD,eAAA;AAGT,SAASE,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO,UAAU,OAAO;AAC5B;AAFS,OAAAA,cAAA;AAGT,SAASC,WAAU,QAAQ,YAAY,OAAO;AAC1C,SAAO;AACX;AAFS,OAAAA,YAAA;AAGT,SAASC,SAAQ,QAAQ,YAAY,OAAO;AACxC,SAAO,CAACrB,OAAM,OAAO,KAAK,YAAY,KAAK;AAC/C;AAFS,OAAAqB,UAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAOC,QAAO,KAAK;AACvB;AAFS,OAAAD,WAAA;AAGT,SAASE,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAAC,iBAAiB,aAAa,KAAK;AACpC,WAAO;AACX,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,IAAI;AACpE,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAnBS,OAAAA,aAAA;AAoBT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAAC,iBAAiB,aAAa,KAAK;AACpC,WAAO;AACX,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,WAAO;AAAA,EACX;AACA,QAAM,YAAY,OAAO,oBAAoB,OAAO,UAAU;AAC9D,aAAW,YAAY,WAAW;AAC9B,UAAM,WAAW,OAAO,WAAW,QAAQ;AAC3C,QAAI,OAAO,YAAY,OAAO,SAAS,SAAS,QAAQ,GAAG;AACvD,UAAI,CAACzB,OAAM,UAAU,YAAY,MAAM,QAAQ,CAAC,GAAG;AAC/C,eAAO;AAAA,MACX;AACA,WAAK,sBAAsB,QAAQ,KAAK,eAAe,QAAQ,MAAM,EAAE,YAAY,QAAQ;AACvF,eAAO;AAAA,MACX;AAAA,IACJ,OACK;AACD,UAAI,iBAAiB,wBAAwB,OAAO,QAAQ,KAAK,CAACA,OAAM,UAAU,YAAY,MAAM,QAAQ,CAAC,GAAG;AAC5G,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,OAAO,yBAAyB,OAAO;AACvC,UAAM,YAAY,OAAO,oBAAoB,KAAK;AAElD,QAAI,OAAO,YAAY,OAAO,SAAS,WAAW,UAAU,UAAU,UAAU,WAAW,UAAU,QAAQ;AACzG,aAAO;AAAA,IACX,OACK;AACD,aAAO,UAAU,MAAM,CAAC,aAAa,UAAU,SAAS,QAAQ,CAAC;AAAA,IACrE;AAAA,EACJ,WACS,OAAO,OAAO,yBAAyB,UAAU;AACtD,UAAM,YAAY,OAAO,oBAAoB,KAAK;AAClD,WAAO,UAAU,MAAM,CAAC,QAAQ,UAAU,SAAS,GAAG,KAAKA,OAAM,OAAO,sBAAsB,YAAY,MAAM,GAAG,CAAC,CAAC;AAAA,EACzH,OACK;AACD,WAAO;AAAA,EACX;AACJ;AA3CS,OAAAyB,aAAA;AA4CT,SAASC,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO,UAAU,KAAK;AAC1B;AAFS,OAAAA,cAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAAC,iBAAiB,aAAa,KAAK,GAAG;AACvC,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,WAAO;AAAA,EACX;AACA,QAAM,CAAC,YAAY,aAAa,IAAI,OAAO,QAAQ,OAAO,iBAAiB,EAAE,CAAC;AAC9E,QAAMC,SAAQ,IAAI,OAAO,UAAU;AAEnC,QAAM,SAAS,OAAO,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAC,KAAK7B,MAAK,MAAM;AACzD,WAAQ6B,OAAM,KAAK,GAAG,IAAK5B,OAAM,eAAe,YAAYD,MAAK,IAAI;AAAA,EACzE,CAAC;AAED,QAAM,SAAS,OAAO,OAAO,yBAAyB,WAAW,OAAO,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAC,KAAKA,MAAK,MAAM;AAC3G,WAAQ,CAAC6B,OAAM,KAAK,GAAG,IAAK5B,OAAM,OAAO,sBAAsB,YAAYD,MAAK,IAAI;AAAA,EACxF,CAAC,IAAI;AACL,QAAM,SAAS,OAAO,yBAAyB,QACzC,OAAO,oBAAoB,KAAK,EAAE,MAAM,CAAC,QAAQ;AAC/C,WAAO6B,OAAM,KAAK,GAAG;AAAA,EACzB,CAAC,IACC;AACN,SAAO,UAAU,UAAU;AAC/B;AA1BS,OAAAD,aAAA;AA2BT,SAASE,SAAQ,QAAQ,YAAY,OAAO;AACxC,SAAO7B,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAA6B,UAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,QAAMF,SAAQ,IAAI,OAAO,OAAO,QAAQ,OAAO,KAAK;AACpD,MAAI,UAAU,OAAO,SAAS,GAAG;AAC7B,QAAI,EAAE,MAAM,UAAU,OAAO;AACzB,aAAO;AAAA,EACf;AACA,MAAI,UAAU,OAAO,SAAS,GAAG;AAC7B,QAAI,EAAE,MAAM,UAAU,OAAO;AACzB,aAAO;AAAA,EACf;AACA,SAAOA,OAAM,KAAK,KAAK;AAC3B;AAXS,OAAAE,aAAA;AAYT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAACC,UAAS,KAAK,GAAG;AAClB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,SAAS,GAAG;AAC7B,QAAI,EAAE,MAAM,UAAU,OAAO;AACzB,aAAO;AAAA,EACf;AACA,MAAI,UAAU,OAAO,SAAS,GAAG;AAC7B,QAAI,EAAE,MAAM,UAAU,OAAO;AACzB,aAAO;AAAA,EACf;AACA,MAAI,UAAU,OAAO,OAAO,GAAG;AAC3B,UAAMJ,SAAQ,IAAI,OAAO,OAAO,OAAO;AACvC,QAAI,CAACA,OAAM,KAAK,KAAK;AACjB,aAAO;AAAA,EACf;AACA,MAAI,UAAU,OAAO,MAAM,GAAG;AAC1B,QAAI,CAAC,eAAe,IAAI,OAAO,MAAM;AACjC,aAAO;AACX,UAAM,OAAO,eAAe,IAAI,OAAO,MAAM;AAC7C,WAAO,KAAK,KAAK;AAAA,EACrB;AACA,SAAO;AACX;AAxBS,OAAAG,aAAA;AAyBT,SAASE,YAAW,QAAQ,YAAY,OAAO;AAC3C,SAAOC,UAAS,KAAK;AACzB;AAFS,OAAAD,aAAA;AAGT,SAASE,qBAAoB,QAAQ,YAAY,OAAO;AACpD,SAAOH,UAAS,KAAK,KAAK,IAAI,OAAO,OAAO,OAAO,EAAE,KAAK,KAAK;AACnE;AAFS,OAAAG,sBAAA;AAGT,SAAS,SAAS,QAAQ,YAAY,OAAO;AACzC,SAAOnC,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS;AAGT,SAASoC,WAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,CAACtC,SAAQ,KAAK,GAAG;AACjB,WAAO;AAAA,EACX;AACA,MAAI,OAAO,UAAU,UAAa,EAAE,MAAM,WAAW,IAAI;AACrD,WAAO;AAAA,EACX;AACA,MAAI,EAAE,MAAM,WAAW,OAAO,WAAW;AACrC,WAAO;AAAA,EACX;AACA,MAAI,CAAC,OAAO,OAAO;AACf,WAAO;AAAA,EACX;AACA,WAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ,KAAK;AAC1C,QAAI,CAACE,OAAM,OAAO,MAAM,CAAC,GAAG,YAAY,MAAM,CAAC,CAAC;AAC5C,aAAO;AAAA,EACf;AACA,SAAO;AACX;AAlBS,OAAAoC,YAAA;AAmBT,SAASC,eAAc,QAAQ,YAAY,OAAO;AAC9C,SAAOC,aAAY,KAAK;AAC5B;AAFS,OAAAD,gBAAA;AAGT,SAASE,YAAU,QAAQ,YAAY,OAAO;AAC1C,SAAO,OAAO,MAAM,KAAK,CAAC,UAAUvC,OAAM,OAAO,YAAY,KAAK,CAAC;AACvE;AAFS,OAAAuC,aAAA;AAGT,SAASC,gBAAe,QAAQ,YAAY,OAAO;AAC/C,MAAI,CAACC,cAAa,KAAK,GAAG;AACtB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,MAAM,UAAU,OAAO,gBAAgB;AAC5E,WAAO;AAAA,EACX;AACA,MAAI,UAAU,OAAO,aAAa,KAAK,EAAE,MAAM,UAAU,OAAO,gBAAgB;AAC5E,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAXS,OAAAD,iBAAA;AAYT,SAASE,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO;AACX;AAFS,OAAAA,cAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAO,iBAAiB,WAAW,KAAK;AAC5C;AAFS,OAAAA,WAAA;AAGT,SAAS,SAAS,QAAQ,YAAY,OAAO;AACzC,MAAI,CAACC,cAAa,IAAI,OAAO,IAAI,CAAC;AAC9B,WAAO;AACX,QAAM,OAAOA,cAAa,IAAI,OAAO,IAAI,CAAC;AAC1C,SAAO,KAAK,QAAQ,KAAK;AAC7B;AALS;AAMT,SAAS5C,OAAM,QAAQ,YAAY,OAAO;AACtC,QAAM,cAAc,UAAU,OAAO,GAAG,IAAI,QAAQ,QAAQ,UAAU,IAAI;AAC1E,QAAM,UAAU;AAChB,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACnB,KAAK;AACD,aAAOL,SAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,cAAa,SAAS,aAAa,KAAK;AAAA,IACnD,KAAK;AACD,aAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOM,mBAAkB,SAAS,aAAa,KAAK;AAAA,IACxD,KAAK;AACD,aAAOE,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOE,iBAAgB,SAAS,aAAa,KAAK;AAAA,IACtD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOE,cAAa,SAAS,aAAa,KAAK;AAAA,IACnD,KAAK;AACD,aAAO,WAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,eAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOE,cAAa,SAAS,aAAa,KAAK;AAAA,IACnD,KAAK;AACD,aAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOC,SAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOE,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,SAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,qBAAoB,SAAS,aAAa,KAAK;AAAA,IAC1D,KAAK;AACD,aAAO,SAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOC,eAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOE,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOC,gBAAe,SAAS,aAAa,KAAK;AAAA,IACrD,KAAK;AACD,aAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C;AACI,UAAI,CAACC,cAAa,IAAI,QAAQ,IAAI,CAAC;AAC/B,cAAM,IAAI,2BAA2B,OAAO;AAChD,aAAO,SAAS,SAAS,aAAa,KAAK;AAAA,EACnD;AACJ;AA3ES,OAAA5C,QAAA;AA6EF,SAAS,SAAS,MAAM;AAC3B,SAAO,KAAK,WAAW,IAAIA,OAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,OAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5F;AAFgB;;;AJ/bT,IAAI;AAAA,CACV,SAAU6C,iBAAgB;AACvB,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,CAAC,IAAI;AACtD,EAAAA,gBAAeA,gBAAe,kBAAkB,IAAI,CAAC,IAAI;AACzD,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,CAAC,IAAI;AACtD,EAAAA,gBAAeA,gBAAe,kBAAkB,IAAI,CAAC,IAAI;AACzD,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,CAAC,IAAI;AACtD,EAAAA,gBAAeA,gBAAe,kBAAkB,IAAI,CAAC,IAAI;AACzD,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,CAAC,IAAI;AAC9C,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,CAAC,IAAI;AACtD,EAAAA,gBAAeA,gBAAe,wBAAwB,IAAI,CAAC,IAAI;AAC/D,EAAAA,gBAAeA,gBAAe,wBAAwB,IAAI,CAAC,IAAI;AAC/D,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,EAAE,IAAI;AACvD,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,EAAE,IAAI;AACvD,EAAAA,gBAAeA,gBAAe,kBAAkB,IAAI,EAAE,IAAI;AAC1D,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,SAAS,IAAI,EAAE,IAAI;AACjD,EAAAA,gBAAeA,gBAAe,+BAA+B,IAAI,EAAE,IAAI;AACvE,EAAAA,gBAAeA,gBAAe,+BAA+B,IAAI,EAAE,IAAI;AACvE,EAAAA,gBAAeA,gBAAe,sBAAsB,IAAI,EAAE,IAAI;AAC9D,EAAAA,gBAAeA,gBAAe,sBAAsB,IAAI,EAAE,IAAI;AAC9D,EAAAA,gBAAeA,gBAAe,yBAAyB,IAAI,EAAE,IAAI;AACjE,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,EAAE,IAAI;AAC9C,EAAAA,gBAAeA,gBAAe,UAAU,IAAI,EAAE,IAAI;AAClD,EAAAA,gBAAeA,gBAAe,yBAAyB,IAAI,EAAE,IAAI;AACjE,EAAAA,gBAAeA,gBAAe,yBAAyB,IAAI,EAAE,IAAI;AACjE,EAAAA,gBAAeA,gBAAe,gBAAgB,IAAI,EAAE,IAAI;AACxD,EAAAA,gBAAeA,gBAAe,gBAAgB,IAAI,EAAE,IAAI;AACxD,EAAAA,gBAAeA,gBAAe,mBAAmB,IAAI,EAAE,IAAI;AAC3D,EAAAA,gBAAeA,gBAAe,SAAS,IAAI,EAAE,IAAI;AACjD,EAAAA,gBAAeA,gBAAe,gCAAgC,IAAI,EAAE,IAAI;AACxE,EAAAA,gBAAeA,gBAAe,WAAW,IAAI,EAAE,IAAI;AACnD,EAAAA,gBAAeA,gBAAe,UAAU,IAAI,EAAE,IAAI;AAClD,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,EAAE,IAAI;AAC9C,EAAAA,gBAAeA,gBAAe,SAAS,IAAI,EAAE,IAAI;AACjD,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,EAAE,IAAI;AAC/C,EAAAA,gBAAeA,gBAAe,KAAK,IAAI,EAAE,IAAI;AAC7C,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,EAAE,IAAI;AAC9C,EAAAA,gBAAeA,gBAAe,wBAAwB,IAAI,EAAE,IAAI;AAChE,EAAAA,gBAAeA,gBAAe,wBAAwB,IAAI,EAAE,IAAI;AAChE,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,EAAE,IAAI;AACvD,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,EAAE,IAAI;AACvD,EAAAA,gBAAeA,gBAAe,kBAAkB,IAAI,EAAE,IAAI;AAC1D,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,4BAA4B,IAAI,EAAE,IAAI;AACpE,EAAAA,gBAAeA,gBAAe,qBAAqB,IAAI,EAAE,IAAI;AAC7D,EAAAA,gBAAeA,gBAAe,qBAAqB,IAAI,EAAE,IAAI;AAC7D,EAAAA,gBAAeA,gBAAe,wBAAwB,IAAI,EAAE,IAAI;AAChE,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,SAAS,IAAI,EAAE,IAAI;AACjD,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,qBAAqB,IAAI,EAAE,IAAI;AAC7D,EAAAA,gBAAeA,gBAAe,cAAc,IAAI,EAAE,IAAI;AACtD,EAAAA,gBAAeA,gBAAe,iBAAiB,IAAI,EAAE,IAAI;AACzD,EAAAA,gBAAeA,gBAAe,iBAAiB,IAAI,EAAE,IAAI;AACzD,EAAAA,gBAAeA,gBAAe,eAAe,IAAI,EAAE,IAAI;AACvD,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,EAAE,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,aAAa,IAAI,EAAE,IAAI;AACrD,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,EAAE,IAAI;AAC/C,EAAAA,gBAAeA,gBAAe,yBAAyB,IAAI,EAAE,IAAI;AACjE,EAAAA,gBAAeA,gBAAe,yBAAyB,IAAI,EAAE,IAAI;AACjE,EAAAA,gBAAeA,gBAAe,YAAY,IAAI,EAAE,IAAI;AACpD,EAAAA,gBAAeA,gBAAe,WAAW,IAAI,EAAE,IAAI;AACnD,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,EAAE,IAAI;AAC/C,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,EAAE,IAAI;AAClD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAInC,IAAM,8BAAN,cAA0C,aAAa;AAAA,EAzF9D,OAyF8D;AAAA;AAAA;AAAA,EAC1D,YAAY,QAAQ;AAChB,UAAM,cAAc;AACpB,SAAK,SAAS;AAAA,EAClB;AACJ;AAIA,SAAS,UAAU,KAAK;AACpB,SAAO,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,OAAO,IAAI;AACtD;AAFS;AAMT,SAASC,WAAU,OAAO;AACtB,SAAO,UAAU;AACrB;AAFS,OAAAA,YAAA;AAMF,IAAM,qBAAN,MAAyB;AAAA,EA9GhC,OA8GgC;AAAA;AAAA;AAAA,EAC5B,YAAY,UAAU;AAClB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,QAAQ;AACJ,UAAM,OAAO,KAAK,SAAS,KAAK;AAChC,WAAO,KAAK,OAAO,SAAY,KAAK;AAAA,EACxC;AACJ;AAIA,SAAS,OAAO,WAAW,QAAQ,MAAM,OAAO,SAAS,CAAC,GAAG;AACzD,SAAO;AAAA,IACH,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,iBAAiB,EAAE,EAAE,WAAW,MAAM,QAAQ,OAAO,OAAO,CAAC;AAAA,IACtE;AAAA,EACJ;AACJ;AATS;AAaT,UAAUC,SAAQ,QAAQ,YAAY,MAAM,OAAO;AAAE;AAA3C,OAAAA,UAAA;AACV,UAAUC,cAAa,QAAQ,YAAY,MAAM,OAAO;AAAE;AAAhD,OAAAA,eAAA;AACV,UAAUC,WAAU,QAAQ,YAAY,MAAM,OAAO;AACjD,MAAI,CAACC,SAAQ,KAAK,GAAG;AACjB,WAAO,MAAM,OAAO,eAAe,OAAO,QAAQ,MAAM,KAAK;AAAA,EACjE;AACA,MAAIJ,WAAU,OAAO,QAAQ,KAAK,EAAE,MAAM,UAAU,OAAO,WAAW;AAClE,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIA,WAAU,OAAO,QAAQ,KAAK,EAAE,MAAM,UAAU,OAAO,WAAW;AAClE,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,WAAOK,OAAM,OAAO,OAAO,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;AAAA,EACnE;AAEA,MAAI,OAAO,gBAAgB,QAAQ,CAAG,WAAY;AAAE,UAAMC,OAAM,oBAAI,IAAI;AAAG,eAAW,WAAW,OAAO;AACpG,YAAM,SAAS,KAAK,OAAO;AAC3B,UAAIA,KAAI,IAAI,MAAM,GAAG;AACjB,eAAO;AAAA,MACX,OACK;AACD,QAAAA,KAAI,IAAI,MAAM;AAAA,MAClB;AAAA,IACJ;AAAE,WAAO;AAAA,EAAM,EAAG,GAAI;AAClB,UAAM,OAAO,eAAe,kBAAkB,QAAQ,MAAM,KAAK;AAAA,EACrE;AAEA,MAAI,EAAEN,WAAU,OAAO,QAAQ,KAAKA,WAAU,OAAO,WAAW,KAAKA,WAAU,OAAO,WAAW,IAAI;AACjG;AAAA,EACJ;AACA,QAAM,iBAAiBA,WAAU,OAAO,QAAQ,IAAI,OAAO,WAAW,MAAM;AAC5E,QAAM,gBAAgB,MAAM,OAAO,CAAC,KAAKO,QAAO,UAAWF,OAAM,gBAAgB,YAAY,GAAG,IAAI,GAAG,KAAK,IAAIE,MAAK,EAAE,KAAK,EAAE,SAAS,OAAO,MAAM,IAAI,KAAM,CAAC;AAC/J,MAAI,kBAAkB,GAAG;AACrB,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIC,UAAS,OAAO,WAAW,KAAK,gBAAgB,OAAO,aAAa;AACpE,UAAM,OAAO,eAAe,kBAAkB,QAAQ,MAAM,KAAK;AAAA,EACrE;AACA,MAAIA,UAAS,OAAO,WAAW,KAAK,gBAAgB,OAAO,aAAa;AACpE,UAAM,OAAO,eAAe,kBAAkB,QAAQ,MAAM,KAAK;AAAA,EACrE;AACJ;AAxCU,OAAAL,YAAA;AAyCV,UAAUM,mBAAkB,QAAQ,YAAY,MAAM,OAAO;AACzD,MAAI,CAACC,iBAAgB,KAAK;AACtB,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AACtE;AAHU,OAAAD,oBAAA;AAIV,UAAUE,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAACC,UAAS,KAAK;AACf,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAIZ,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,wBAAwB,QAAQ,MAAM,KAAK;AAAA,EAC3E;AACA,MAAIA,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,wBAAwB,QAAQ,MAAM,KAAK;AAAA,EAC3E;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIA,WAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,OAAO,CAAC,IAAI;AAC5E,UAAM,OAAO,eAAe,kBAAkB,QAAQ,MAAM,KAAK;AAAA,EACrE;AACJ;AAlBU,OAAAW,aAAA;AAmBV,UAAUE,aAAY,QAAQ,YAAY,MAAM,OAAO;AACnD,MAAI,CAACC,WAAU,KAAK;AAChB,UAAM,OAAO,eAAe,SAAS,QAAQ,MAAM,KAAK;AAChE;AAHU,OAAAD,cAAA;AAIV,UAAUE,iBAAgB,QAAQ,YAAY,MAAM,OAAO;AACvD,SAAOV,OAAM,OAAO,SAAS,YAAY,MAAM,MAAM,SAAS;AAClE;AAFU,OAAAU,kBAAA;AAGV,UAAUC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAChD,MAAI,CAACC,QAAO,KAAK;AACb,WAAO,MAAM,OAAO,eAAe,MAAM,QAAQ,MAAM,KAAK;AAChE,MAAIjB,WAAU,OAAO,yBAAyB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,4BAA4B;AACtG,UAAM,OAAO,eAAe,+BAA+B,QAAQ,MAAM,KAAK;AAAA,EAClF;AACA,MAAIA,WAAU,OAAO,yBAAyB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,4BAA4B;AACtG,UAAM,OAAO,eAAe,+BAA+B,QAAQ,MAAM,KAAK;AAAA,EAClF;AACA,MAAIA,WAAU,OAAO,gBAAgB,KAAK,EAAE,MAAM,QAAQ,KAAK,OAAO,mBAAmB;AACrF,UAAM,OAAO,eAAe,sBAAsB,QAAQ,MAAM,KAAK;AAAA,EACzE;AACA,MAAIA,WAAU,OAAO,gBAAgB,KAAK,EAAE,MAAM,QAAQ,KAAK,OAAO,mBAAmB;AACrF,UAAM,OAAO,eAAe,sBAAsB,QAAQ,MAAM,KAAK;AAAA,EACzE;AACA,MAAIA,WAAU,OAAO,mBAAmB,KAAK,EAAE,MAAM,QAAQ,IAAI,OAAO,wBAAwB,IAAI;AAChG,UAAM,OAAO,eAAe,yBAAyB,QAAQ,MAAM,KAAK;AAAA,EAC5E;AACJ;AAlBU,OAAAgB,WAAA;AAmBV,UAAUE,cAAa,QAAQ,YAAY,MAAM,OAAO;AACpD,MAAI,CAACC,YAAW,KAAK;AACjB,UAAM,OAAO,eAAe,UAAU,QAAQ,MAAM,KAAK;AACjE;AAHU,OAAAD,eAAA;AAIV,UAAUE,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOf,OAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,MAAM,KAAK;AACrE;AAJU,OAAAe,aAAA;AAKV,UAAUC,aAAY,QAAQ,YAAY,MAAM,OAAO;AACnD,MAAI,CAAC,UAAU,KAAK;AAChB,WAAO,MAAM,OAAO,eAAe,SAAS,QAAQ,MAAM,KAAK;AACnE,MAAIrB,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,yBAAyB,QAAQ,MAAM,KAAK;AAAA,EAC5E;AACA,MAAIA,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,yBAAyB,QAAQ,MAAM,KAAK;AAAA,EAC5E;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,gBAAgB,QAAQ,MAAM,KAAK;AAAA,EACnE;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,gBAAgB,QAAQ,MAAM,KAAK;AAAA,EACnE;AACA,MAAIA,WAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,IAAI;AACpE,UAAM,OAAO,eAAe,mBAAmB,QAAQ,MAAM,KAAK;AAAA,EACtE;AACJ;AAlBU,OAAAqB,cAAA;AAmBV,UAAUC,gBAAc,QAAQ,YAAY,MAAM,OAAO;AACrD,MAAI,WAAW;AACf,aAAW,SAAS,OAAO,OAAO;AAC9B,eAAWC,UAASlB,OAAM,OAAO,YAAY,MAAM,KAAK,GAAG;AACvD,iBAAW;AACX,YAAMkB;AAAA,IACV;AAAA,EACJ;AACA,MAAI,UAAU;AACV,WAAO,MAAM,OAAO,eAAe,WAAW,QAAQ,MAAM,KAAK;AAAA,EACrE;AACA,MAAI,OAAO,0BAA0B,OAAO;AACxC,UAAM,WAAW,IAAI,OAAO,aAAa,MAAM,CAAC;AAChD,eAAW,YAAY,OAAO,oBAAoB,KAAK,GAAG;AACtD,UAAI,CAAC,SAAS,KAAK,QAAQ,GAAG;AAC1B,cAAM,OAAO,eAAe,gCAAgC,QAAQ,GAAG,IAAI,IAAI,QAAQ,IAAI,KAAK;AAAA,MACpG;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,OAAO,OAAO,0BAA0B,UAAU;AAClD,UAAM,WAAW,IAAI,OAAO,aAAa,MAAM,CAAC;AAChD,eAAW,YAAY,OAAO,oBAAoB,KAAK,GAAG;AACtD,UAAI,CAAC,SAAS,KAAK,QAAQ,GAAG;AAC1B,cAAM,OAAOlB,OAAM,OAAO,uBAAuB,YAAY,GAAG,IAAI,IAAI,QAAQ,IAAI,MAAM,QAAQ,CAAC,EAAE,KAAK;AAC1G,YAAI,CAAC,KAAK;AACN,gBAAM,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;AA7BU,OAAAiB,iBAAA;AA8BV,UAAUE,cAAa,QAAQ,YAAY,MAAM,OAAO;AACpD,MAAI,CAACC,YAAW,KAAK;AACjB,UAAM,OAAO,eAAe,UAAU,QAAQ,MAAM,KAAK;AACjE;AAHU,OAAAD,eAAA;AAIV,UAAUE,aAAY,QAAQ,YAAY,MAAM,OAAO;AACnD,MAAI,EAAE,UAAU,OAAO;AACnB,UAAM,OAAO,eAAe,SAAS,QAAQ,MAAM,KAAK;AAChE;AAHU,OAAAA,cAAA;AAIV,UAAUC,WAAU,QAAQ,YAAY,MAAM,OAAO;AACjD,QAAM,OAAO,eAAe,OAAO,QAAQ,MAAM,KAAK;AAC1D;AAFU,OAAAA,YAAA;AAGV,UAAUC,SAAQ,QAAQ,YAAY,MAAM,OAAO;AAC/C,MAAIvB,OAAM,OAAO,KAAK,YAAY,MAAM,KAAK,EAAE,KAAK,EAAE,SAAS;AAC3D,UAAM,OAAO,eAAe,KAAK,QAAQ,MAAM,KAAK;AAC5D;AAHU,OAAAuB,UAAA;AAIV,UAAUC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAChD,MAAI,CAACC,QAAO,KAAK;AACb,UAAM,OAAO,eAAe,MAAM,QAAQ,MAAM,KAAK;AAC7D;AAHU,OAAAD,WAAA;AAIV,UAAUE,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAAC,iBAAiB,aAAa,KAAK;AACpC,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAI/B,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,wBAAwB,QAAQ,MAAM,KAAK;AAAA,EAC3E;AACA,MAAIA,WAAU,OAAO,gBAAgB,KAAK,EAAE,QAAQ,OAAO,mBAAmB;AAC1E,UAAM,OAAO,eAAe,wBAAwB,QAAQ,MAAM,KAAK;AAAA,EAC3E;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIA,WAAU,OAAO,OAAO,KAAK,EAAE,SAAS,OAAO,UAAU;AACzD,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACA,MAAIA,WAAU,OAAO,UAAU,KAAK,EAAE,QAAQ,OAAO,eAAe,IAAI;AACpE,UAAM,OAAO,eAAe,kBAAkB,QAAQ,MAAM,KAAK;AAAA,EACrE;AACJ;AAlBU,OAAA+B,aAAA;AAmBV,UAAUC,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAAC,iBAAiB,aAAa,KAAK;AACpC,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAIhC,WAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,UAAM,OAAO,eAAe,qBAAqB,QAAQ,MAAM,KAAK;AAAA,EACxE;AACA,MAAIA,WAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,UAAM,OAAO,eAAe,qBAAqB,QAAQ,MAAM,KAAK;AAAA,EACxE;AACA,QAAM,eAAe,MAAM,QAAQ,OAAO,QAAQ,IAAI,OAAO,WAAW,CAAC;AACzE,QAAM,YAAY,OAAO,oBAAoB,OAAO,UAAU;AAC9D,QAAM,cAAc,OAAO,oBAAoB,KAAK;AACpD,aAAW,eAAe,cAAc;AACpC,QAAI,YAAY,SAAS,WAAW;AAChC;AACJ,UAAM,OAAO,eAAe,wBAAwB,OAAO,WAAW,WAAW,GAAG,GAAG,IAAI,IAAI,UAAU,WAAW,CAAC,IAAI,MAAS;AAAA,EACtI;AACA,MAAI,OAAO,yBAAyB,OAAO;AACvC,eAAW,YAAY,aAAa;AAChC,UAAI,CAAC,UAAU,SAAS,QAAQ,GAAG;AAC/B,cAAM,OAAO,eAAe,4BAA4B,QAAQ,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AAAA,MACrH;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,OAAO,OAAO,yBAAyB,UAAU;AACjD,eAAW,YAAY,aAAa;AAChC,UAAI,UAAU,SAAS,QAAQ;AAC3B;AACJ,aAAOK,OAAM,OAAO,sBAAsB,YAAY,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AAAA,IAC3G;AAAA,EACJ;AACA,aAAW,YAAY,WAAW;AAC9B,UAAM,WAAW,OAAO,WAAW,QAAQ;AAC3C,QAAI,OAAO,YAAY,OAAO,SAAS,SAAS,QAAQ,GAAG;AACvD,aAAOA,OAAM,UAAU,YAAY,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AACpF,UAAI,sBAAsB,MAAM,KAAK,EAAE,YAAY,QAAQ;AACvD,cAAM,OAAO,eAAe,wBAAwB,UAAU,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,MAAS;AAAA,MAC7G;AAAA,IACJ,OACK;AACD,UAAI,iBAAiB,wBAAwB,OAAO,QAAQ,GAAG;AAC3D,eAAOA,OAAM,UAAU,YAAY,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC;AAAA,MACxF;AAAA,IACJ;AAAA,EACJ;AACJ;AA7CU,OAAA2B,aAAA;AA8CV,UAAUC,aAAY,QAAQ,YAAY,MAAM,OAAO;AACnD,MAAI,CAAC,UAAU,KAAK;AAChB,UAAM,OAAO,eAAe,SAAS,QAAQ,MAAM,KAAK;AAChE;AAHU,OAAAA,cAAA;AAIV,UAAUC,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAAC,iBAAiB,aAAa,KAAK;AACpC,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAIlC,WAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,UAAM,OAAO,eAAe,qBAAqB,QAAQ,MAAM,KAAK;AAAA,EACxE;AACA,MAAIA,WAAU,OAAO,aAAa,KAAK,EAAE,OAAO,oBAAoB,KAAK,EAAE,UAAU,OAAO,gBAAgB;AACxG,UAAM,OAAO,eAAe,qBAAqB,QAAQ,MAAM,KAAK;AAAA,EACxE;AACA,QAAM,CAAC,YAAY,aAAa,IAAI,OAAO,QAAQ,OAAO,iBAAiB,EAAE,CAAC;AAC9E,QAAMmC,SAAQ,IAAI,OAAO,UAAU;AACnC,aAAW,CAAC,aAAa,aAAa,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC9D,QAAIA,OAAM,KAAK,WAAW;AACtB,aAAO9B,OAAM,eAAe,YAAY,GAAG,IAAI,IAAI,UAAU,WAAW,CAAC,IAAI,aAAa;AAAA,EAClG;AACA,MAAI,OAAO,OAAO,yBAAyB,UAAU;AACjD,eAAW,CAAC,aAAa,aAAa,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC9D,UAAI,CAAC8B,OAAM,KAAK,WAAW;AACvB,eAAO9B,OAAM,OAAO,sBAAsB,YAAY,GAAG,IAAI,IAAI,UAAU,WAAW,CAAC,IAAI,aAAa;AAAA,IAChH;AAAA,EACJ;AACA,MAAI,OAAO,yBAAyB,OAAO;AACvC,eAAW,CAAC,aAAa,aAAa,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC9D,UAAI8B,OAAM,KAAK,WAAW;AACtB;AACJ,aAAO,MAAM,OAAO,eAAe,4BAA4B,QAAQ,GAAG,IAAI,IAAI,UAAU,WAAW,CAAC,IAAI,aAAa;AAAA,IAC7H;AAAA,EACJ;AACJ;AA5BU,OAAAD,aAAA;AA6BV,UAAUE,SAAQ,QAAQ,YAAY,MAAM,OAAO;AAC/C,SAAO/B,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,MAAM,KAAK;AACnE;AAFU,OAAA+B,UAAA;AAGV,UAAUC,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAACC,UAAS,KAAK;AACf,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAItC,WAAU,OAAO,SAAS,KAAK,EAAE,MAAM,UAAU,OAAO,YAAY;AACpE,UAAM,OAAO,eAAe,iBAAiB,QAAQ,MAAM,KAAK;AAAA,EACpE;AACA,MAAIA,WAAU,OAAO,SAAS,KAAK,EAAE,MAAM,UAAU,OAAO,YAAY;AACpE,UAAM,OAAO,eAAe,iBAAiB,QAAQ,MAAM,KAAK;AAAA,EACpE;AACA,QAAMmC,SAAQ,IAAI,OAAO,OAAO,QAAQ,OAAO,KAAK;AACpD,MAAI,CAACA,OAAM,KAAK,KAAK,GAAG;AACpB,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAAA,EAClE;AACJ;AAbU,OAAAE,aAAA;AAcV,UAAUE,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAACD,UAAS,KAAK;AACf,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,MAAItC,WAAU,OAAO,SAAS,KAAK,EAAE,MAAM,UAAU,OAAO,YAAY;AACpE,UAAM,OAAO,eAAe,iBAAiB,QAAQ,MAAM,KAAK;AAAA,EACpE;AACA,MAAIA,WAAU,OAAO,SAAS,KAAK,EAAE,MAAM,UAAU,OAAO,YAAY;AACpE,UAAM,OAAO,eAAe,iBAAiB,QAAQ,MAAM,KAAK;AAAA,EACpE;AACA,MAAIsC,UAAS,OAAO,OAAO,GAAG;AAC1B,UAAMH,SAAQ,IAAI,OAAO,OAAO,OAAO;AACvC,QAAI,CAACA,OAAM,KAAK,KAAK,GAAG;AACpB,YAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,IAClE;AAAA,EACJ;AACA,MAAIG,UAAS,OAAO,MAAM,GAAG;AACzB,QAAI,CAAC,eAAe,IAAI,OAAO,MAAM,GAAG;AACpC,YAAM,OAAO,eAAe,qBAAqB,QAAQ,MAAM,KAAK;AAAA,IACxE,OACK;AACD,YAAM,SAAS,eAAe,IAAI,OAAO,MAAM;AAC/C,UAAI,CAAC,OAAO,KAAK,GAAG;AAChB,cAAM,OAAO,eAAe,cAAc,QAAQ,MAAM,KAAK;AAAA,MACjE;AAAA,IACJ;AAAA,EACJ;AACJ;AA1BU,OAAAC,aAAA;AA2BV,UAAUC,YAAW,QAAQ,YAAY,MAAM,OAAO;AAClD,MAAI,CAACC,UAAS,KAAK;AACf,UAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAC/D;AAHU,OAAAD,aAAA;AAIV,UAAUE,qBAAoB,QAAQ,YAAY,MAAM,OAAO;AAC3D,MAAI,CAACJ,UAAS,KAAK;AACf,WAAO,MAAM,OAAO,eAAe,QAAQ,QAAQ,MAAM,KAAK;AAClE,QAAMH,SAAQ,IAAI,OAAO,OAAO,OAAO;AACvC,MAAI,CAACA,OAAM,KAAK,KAAK,GAAG;AACpB,UAAM,OAAO,eAAe,eAAe,QAAQ,MAAM,KAAK;AAAA,EAClE;AACJ;AAPU,OAAAO,sBAAA;AAQV,UAAUC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAChD,SAAOtC,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,MAAM,KAAK;AACnE;AAFU,OAAAsC,WAAA;AAGV,UAAUC,WAAU,QAAQ,YAAY,MAAM,OAAO;AACjD,MAAI,CAACxC,SAAQ,KAAK;AACd,WAAO,MAAM,OAAO,eAAe,OAAO,QAAQ,MAAM,KAAK;AACjE,MAAI,OAAO,UAAU,UAAa,EAAE,MAAM,WAAW,IAAI;AACrD,WAAO,MAAM,OAAO,eAAe,aAAa,QAAQ,MAAM,KAAK;AAAA,EACvE;AACA,MAAI,EAAE,MAAM,WAAW,OAAO,WAAW;AACrC,WAAO,MAAM,OAAO,eAAe,aAAa,QAAQ,MAAM,KAAK;AAAA,EACvE;AACA,MAAI,CAAC,OAAO,OAAO;AACf;AAAA,EACJ;AACA,WAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ,KAAK;AAC1C,WAAOC,OAAM,OAAO,MAAM,CAAC,GAAG,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;AAAA,EACtE;AACJ;AAfU,OAAAuC,YAAA;AAgBV,UAAUC,eAAc,QAAQ,YAAY,MAAM,OAAO;AACrD,MAAI,CAACC,aAAY,KAAK;AAClB,UAAM,OAAO,eAAe,WAAW,QAAQ,MAAM,KAAK;AAClE;AAHU,OAAAD,gBAAA;AAIV,UAAUE,YAAU,QAAQ,YAAY,MAAM,OAAO;AACjD,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B;AACJ,QAAM,SAAS,OAAO,MAAM,IAAI,CAAC,YAAY,IAAI,mBAAmB1C,OAAM,SAAS,YAAY,MAAM,KAAK,CAAC,CAAC;AAC5G,QAAM,OAAO,eAAe,OAAO,QAAQ,MAAM,OAAO,MAAM;AAClE;AALU,OAAA0C,aAAA;AAMV,UAAUC,gBAAe,QAAQ,YAAY,MAAM,OAAO;AACtD,MAAI,CAACC,cAAa,KAAK;AACnB,WAAO,MAAM,OAAO,eAAe,YAAY,QAAQ,MAAM,KAAK;AACtE,MAAIjD,WAAU,OAAO,aAAa,KAAK,EAAE,MAAM,UAAU,OAAO,gBAAgB;AAC5E,UAAM,OAAO,eAAe,yBAAyB,QAAQ,MAAM,KAAK;AAAA,EAC5E;AACA,MAAIA,WAAU,OAAO,aAAa,KAAK,EAAE,MAAM,UAAU,OAAO,gBAAgB;AAC5E,UAAM,OAAO,eAAe,yBAAyB,QAAQ,MAAM,KAAK;AAAA,EAC5E;AACJ;AATU,OAAAgD,iBAAA;AAUV,UAAUE,aAAY,QAAQ,YAAY,MAAM,OAAO;AAAE;AAA/C,OAAAA,cAAA;AACV,UAAUC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAChD,MAAI,CAAC,iBAAiB,WAAW,KAAK;AAClC,UAAM,OAAO,eAAe,MAAM,QAAQ,MAAM,KAAK;AAC7D;AAHU,OAAAA,WAAA;AAIV,UAAUC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAChD,QAAM,QAAQC,cAAa,IAAI,OAAO,IAAI,CAAC;AAC3C,MAAI,CAAC,MAAM,QAAQ,KAAK;AACpB,UAAM,OAAO,eAAe,MAAM,QAAQ,MAAM,KAAK;AAC7D;AAJU,OAAAD,WAAA;AAKV,UAAU/C,OAAM,QAAQ,YAAY,MAAM,OAAO;AAC7C,QAAM,cAAcL,WAAU,OAAO,GAAG,IAAI,CAAC,GAAG,YAAY,MAAM,IAAI;AACtE,QAAM,UAAU;AAChB,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACnB,KAAK;AACD,aAAO,OAAOC,SAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IAC3D,KAAK;AACD,aAAO,OAAOC,cAAa,SAAS,aAAa,MAAM,KAAK;AAAA,IAChE,KAAK;AACD,aAAO,OAAOC,WAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IAC7D,KAAK;AACD,aAAO,OAAOM,mBAAkB,SAAS,aAAa,MAAM,KAAK;AAAA,IACrE,KAAK;AACD,aAAO,OAAOE,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOE,aAAY,SAAS,aAAa,MAAM,KAAK;AAAA,IAC/D,KAAK;AACD,aAAO,OAAOE,iBAAgB,SAAS,aAAa,MAAM,KAAK;AAAA,IACnE,KAAK;AACD,aAAO,OAAOC,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IAC5D,KAAK;AACD,aAAO,OAAOE,cAAa,SAAS,aAAa,MAAM,KAAK;AAAA,IAChE,KAAK;AACD,aAAO,OAAOE,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOC,aAAY,SAAS,aAAa,MAAM,KAAK;AAAA,IAC/D,KAAK;AACD,aAAO,OAAOC,gBAAc,SAAS,aAAa,MAAM,KAAK;AAAA,IACjE,KAAK;AACD,aAAO,OAAOE,cAAa,SAAS,aAAa,MAAM,KAAK;AAAA,IAChE,KAAK;AACD,aAAO,OAAOE,aAAY,SAAS,aAAa,MAAM,KAAK;AAAA,IAC/D,KAAK;AACD,aAAO,OAAOC,WAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IAC7D,KAAK;AACD,aAAO,OAAOC,SAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IAC3D,KAAK;AACD,aAAO,OAAOC,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IAC5D,KAAK;AACD,aAAO,OAAOE,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOC,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOC,aAAY,SAAS,aAAa,MAAM,KAAK;AAAA,IAC/D,KAAK;AACD,aAAO,OAAOC,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOE,SAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IAC3D,KAAK;AACD,aAAO,OAAOC,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOE,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOC,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IAC9D,KAAK;AACD,aAAO,OAAOE,qBAAoB,SAAS,aAAa,MAAM,KAAK;AAAA,IACvE,KAAK;AACD,aAAO,OAAOC,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IAC5D,KAAK;AACD,aAAO,OAAOC,WAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IAC7D,KAAK;AACD,aAAO,OAAOC,eAAc,SAAS,aAAa,MAAM,KAAK;AAAA,IACjE,KAAK;AACD,aAAO,OAAOE,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IAC7D,KAAK;AACD,aAAO,OAAOC,gBAAe,SAAS,aAAa,MAAM,KAAK;AAAA,IAClE,KAAK;AACD,aAAO,OAAOE,aAAY,SAAS,aAAa,MAAM,KAAK;AAAA,IAC/D,KAAK;AACD,aAAO,OAAOC,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IAC5D;AACI,UAAI,CAACE,cAAa,IAAI,QAAQ,IAAI,CAAC;AAC/B,cAAM,IAAI,4BAA4B,MAAM;AAChD,aAAO,OAAOD,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,EAChE;AACJ;AA3EU,OAAA/C,QAAA;AA6EH,SAAS,UAAU,MAAM;AAC5B,QAAM,WAAW,KAAK,WAAW,IAAIA,OAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,IAAIA,OAAM,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;AAC1G,SAAO,IAAI,mBAAmB,QAAQ;AAC1C;AAHgB;;;AK5kBhB;AAAA;AAAAiD;AAAA,IAAI,yBAAkE,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAI,yBAAkE,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI;AAAJ,IAA4B;AAA5B,IAAmD;AAO5C,IAAM,cAAN,cAA0B,aAAa;AAAA,EAlB9C,OAkB8C;AAAA;AAAA;AAAA,EAC1C,YAAY,UAAU;AAClB,UAAMC,SAAQ,SAAS,MAAM;AAC7B,UAAMA,WAAU,SAAY,kBAAkBA,OAAM,OAAO;AAC3D,2BAAuB,IAAI,IAAI;AAC/B,0BAAsB,IAAI,MAAM,MAAM;AACtC,2BAAuB,MAAM,uBAAuB,UAAU,GAAG;AACjE,SAAK,QAAQA;AAAA,EACjB;AAAA;AAAA,EAEA,SAAS;AACL,WAAO,IAAI,mBAAmB,uBAAuB,MAAM,wBAAwB,KAAK,qBAAqB,EAAE,KAAK,IAAI,CAAC;AAAA,EAC7H;AACJ;AACA,wBAAwB,oBAAI,QAAQ,GAAG,yBAAyB,oBAAI,QAAQ,GAAG,wBAAwB,iCAAUC,yBAAwB;AACrI,MAAI,KAAK;AACL,UAAM,KAAK;AACf,SAAO,uBAAuB,MAAM,uBAAuB,GAAG;AAClE,GAJuG;AAQvG,SAAS,YAAY,QAAQ,YAAY,OAAO;AAC5C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B;AACJ,QAAM,IAAI,YAAY,OAAO,QAAQ,YAAY,KAAK,CAAC;AAC3D;AAJS;AAMF,SAAS,UAAU,MAAM;AAC5B,SAAO,KAAK,WAAW,IAAI,YAAY,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AACxG;AAFgB;;;AC9ChB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAOA,SAASC,aAAW,OAAO;AACvB,QAAM,MAAM,CAAC;AACb,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,QAAI,GAAG,IAAIC,OAAM,MAAM,GAAG,CAAC;AAAA,EAC/B;AACA,aAAW,OAAO,OAAO,sBAAsB,KAAK,GAAG;AACnD,QAAI,GAAG,IAAIA,OAAM,MAAM,GAAG,CAAC;AAAA,EAC/B;AACA,SAAO;AACX;AATS,OAAAD,cAAA;AAUT,SAASE,WAAU,OAAO;AACtB,SAAO,MAAM,IAAI,CAAC,YAAYD,OAAM,OAAO,CAAC;AAChD;AAFS,OAAAC,YAAA;AAGT,SAAS,eAAe,OAAO;AAC3B,SAAO,MAAM,MAAM;AACvB;AAFS;AAGT,SAAS,QAAQ,OAAO;AACpB,SAAO,IAAI,IAAID,OAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,CAAC;AAC9C;AAFS;AAGT,SAAS,QAAQ,OAAO;AACpB,SAAO,IAAI,IAAIA,OAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,CAAC,CAAC;AAC9C;AAFS;AAGT,SAASE,UAAS,OAAO;AACrB,SAAO,IAAI,KAAK,MAAM,YAAY,CAAC;AACvC;AAFS,OAAAA,WAAA;AAGT,SAASC,WAAU,OAAO;AACtB,SAAO;AACX;AAFS,OAAAA,YAAA;AAOF,SAASH,OAAM,OAAO;AACzB,MAAII,SAAQ,KAAK;AACb,WAAOH,WAAU,KAAK;AAC1B,MAAII,QAAO,KAAK;AACZ,WAAOH,UAAS,KAAK;AACzB,MAAI,aAAa,KAAK;AAClB,WAAO,eAAe,KAAK;AAC/B,MAAI,MAAM,KAAK;AACX,WAAO,QAAQ,KAAK;AACxB,MAAI,MAAM,KAAK;AACX,WAAO,QAAQ,KAAK;AACxB,MAAII,UAAS,KAAK;AACd,WAAOP,aAAW,KAAK;AAC3B,MAAI,YAAY,KAAK;AACjB,WAAOI,WAAU,KAAK;AAC1B,QAAM,IAAI,MAAM,mCAAmC;AACvD;AAhBgB,OAAAH,QAAA;;;AD3BT,IAAM,mBAAN,cAA+B,aAAa;AAAA,EAZnD,OAYmD;AAAA;AAAA;AAAA,EAC/C,YAAY,QAAQ,SAAS;AACzB,UAAM,OAAO;AACb,SAAK,SAAS;AAAA,EAClB;AACJ;AAIA,SAAS,YAAY,OAAO;AACxB,SAAOO,YAAW,KAAK,IAAI,MAAM,IAAIC,OAAM,KAAK;AACpD;AAFS;AAMT,SAASC,SAAQ,QAAQ,YAAY;AACjC,MAAIC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,CAAC;AAAA,EACZ;AACJ;AAPS,OAAAD,UAAA;AAQT,SAASE,cAAa,QAAQ,YAAY;AACtC,SAAO,CAAC;AACZ;AAFS,OAAAA,eAAA;AAGT,SAASC,YAAU,QAAQ,YAAY;AACnC,MAAI,OAAO,gBAAgB,QAAQ,CAACF,gBAAe,QAAQ,SAAS,GAAG;AACnE,UAAM,IAAI,iBAAiB,QAAQ,gEAAgE;AAAA,EACvG,WACS,cAAc,UAAU,CAACA,gBAAe,QAAQ,SAAS,GAAG;AACjE,UAAM,IAAI,iBAAiB,QAAQ,6DAA6D;AAAA,EACpG,WACS,aAAa,QAAQ;AAC1B,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,aAAa,QAAW;AACpC,WAAO,MAAM,KAAK,EAAE,QAAQ,OAAO,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS;AACzD,aAAOG,OAAM,OAAO,OAAO,UAAU;AAAA,IACzC,CAAC;AAAA,EACL,OACK;AACD,WAAO,CAAC;AAAA,EACZ;AACJ;AAlBS,OAAAD,aAAA;AAmBT,SAASE,mBAAkB,QAAQ,YAAY;AAC3C,MAAIJ,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAQ,mBAAmB;AAAA,IAAE,EAAG;AAAA,EACpC;AACJ;AAPS,OAAAI,oBAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAIL,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,OAAO,CAAC;AAAA,EACnB;AACJ;AAPS,OAAAK,aAAA;AAQT,SAASC,aAAY,QAAQ,YAAY;AACrC,MAAIN,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAPS,OAAAM,cAAA;AAQT,SAASC,iBAAgB,QAAQ,YAAY;AACzC,MAAIP,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,QAAQG,OAAM,OAAO,SAAS,UAAU;AAC9C,QAAI,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AACpD,aAAO,MAAM;AAAA,QACT,cAAc;AACV,qBAAW,CAAC,KAAK,GAAG,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC5C,kBAAMK,QAAO;AACb,YAAAA,MAAK,GAAG,IAAI;AAAA,UAChB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,OACK;AACD,aAAO,MAAM;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AACJ;AArBS,OAAAD,kBAAA;AAsBT,SAASE,UAAS,QAAQ,YAAY;AAClC,MAAIT,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,qBAAqB,QAAW;AAC5C,WAAO,IAAI,KAAK,OAAO,gBAAgB;AAAA,EAC3C,OACK;AACD,WAAO,oBAAI,KAAK;AAAA,EACpB;AACJ;AAVS,OAAAS,WAAA;AAWT,SAASC,cAAa,QAAQ,YAAY;AACtC,MAAIV,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,MAAMG,OAAM,OAAO,SAAS,UAAU;AAAA,EACjD;AACJ;AAPS,OAAAO,eAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOR,OAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,CAAC;AACxD;AAJS,OAAAQ,aAAA;AAKT,SAASC,aAAY,QAAQ,YAAY;AACrC,MAAIZ,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,YAAY,QAAW;AACnC,WAAO,OAAO;AAAA,EAClB,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAVS,OAAAY,cAAA;AAWT,SAASC,gBAAc,QAAQ,YAAY;AACvC,MAAIb,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AAQD,UAAM,QAAQ,OAAO,MAAM,OAAO,CAAC,KAAKc,YAAW;AAC/C,YAAM,OAAOX,OAAMW,SAAQ,UAAU;AACrC,aAAO,OAAO,SAAS,WAAW,EAAE,GAAG,KAAK,GAAG,KAAK,IAAI;AAAA,IAC5D,GAAG,CAAC,CAAC;AACL,QAAI,CAAC,MAAM,QAAQ,YAAY,KAAK;AAChC,YAAM,IAAI,iBAAiB,QAAQ,mEAAmE;AAC1G,WAAO;AAAA,EACX;AACJ;AApBS,OAAAD,iBAAA;AAqBT,SAASE,cAAa,QAAQ,YAAY;AACtC,MAAIf,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAQ,aAAa;AAAA,IAAE,EAAG;AAAA,EAC9B;AACJ;AAPS,OAAAe,eAAA;AAQT,SAASC,aAAY,QAAQ,YAAY;AACrC,MAAIhB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,OAAO;AAAA,EAClB;AACJ;AAPS,OAAAgB,cAAA;AAQT,SAASC,WAAU,QAAQ,YAAY;AACnC,MAAIjB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,IAAI,iBAAiB,QAAQ,gEAAgE;AAAA,EACvG;AACJ;AAPS,OAAAiB,YAAA;AAQT,SAASC,SAAQ,QAAQ,YAAY;AACjC,MAAIlB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,IAAI,iBAAiB,QAAQ,qCAAqC;AAAA,EAC5E;AACJ;AAPS,OAAAkB,UAAA;AAQT,SAASC,UAAS,QAAQ,YAAY;AAClC,MAAInB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAPS,OAAAmB,WAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAIpB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,YAAY,QAAW;AACnC,WAAO,OAAO;AAAA,EAClB,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAVS,OAAAoB,aAAA;AAWT,SAASC,aAAW,QAAQ,YAAY;AACpC,MAAIrB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,WAAW,IAAI,IAAI,OAAO,QAAQ;AACxC,UAAM,MAAM,CAAC;AACb,eAAW,CAAC,KAAK,SAAS,KAAK,OAAO,QAAQ,OAAO,UAAU,GAAG;AAC9D,UAAI,CAAC,SAAS,IAAI,GAAG;AACjB;AACJ,UAAI,GAAG,IAAIG,OAAM,WAAW,UAAU;AAAA,IAC1C;AACA,WAAO;AAAA,EACX;AACJ;AAdS,OAAAkB,cAAA;AAeT,SAASC,aAAY,QAAQ,YAAY;AACrC,MAAItB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,QAAQ,QAAQG,OAAM,OAAO,MAAM,UAAU,CAAC;AAAA,EACzD;AACJ;AAPS,OAAAmB,cAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAIvB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,CAAC;AAAA,EACZ;AACJ;AAPS,OAAAuB,aAAA;AAQT,SAASC,SAAQ,QAAQ,YAAY;AACjC,MAAIxB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAOG,OAAM,MAAM,QAAQ,UAAU,GAAG,UAAU;AAAA,EACtD;AACJ;AAPS,OAAAqB,UAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAIzB,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,IAAI,iBAAiB,QAAQ,iEAAiE;AAAA,EACxG;AACJ;AAPS,OAAAyB,aAAA;AAQT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAI,OAAO,YAAY,QAAW;AAC9B,QAAI,CAAC1B,gBAAe,QAAQ,SAAS,GAAG;AACpC,YAAM,IAAI,iBAAiB,QAAQ,yDAAyD;AAAA,IAChG,OACK;AACD,aAAO,YAAY,OAAO,OAAO;AAAA,IACrC;AAAA,EACJ,WACS,OAAO,WAAW,QAAW;AAClC,QAAI,CAACA,gBAAe,QAAQ,SAAS,GAAG;AACpC,YAAM,IAAI,iBAAiB,QAAQ,wDAAwD;AAAA,IAC/F,OACK;AACD,aAAO,YAAY,OAAO,OAAO;AAAA,IACrC;AAAA,EACJ,OACK;AACD,QAAIA,gBAAe,QAAQ,SAAS,GAAG;AACnC,aAAO,YAAY,OAAO,OAAO;AAAA,IACrC,WACS,OAAO,cAAc,QAAW;AAErC,aAAO,MAAM,KAAK,EAAE,QAAQ,OAAO,UAAU,CAAC,EAAE,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE;AAAA,IAC1E,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AA7BS,OAAA0B,aAAA;AA8BT,SAASC,YAAW,QAAQ,YAAY;AACpC,MAAI3B,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,WAAW,QAAQ;AACxB,WAAO,OAAO,IAAI,OAAO,KAAK;AAAA,EAClC,OACK;AACD,WAAO,OAAO;AAAA,EAClB;AACJ;AAVS,OAAA2B,aAAA;AAWT,SAASC,qBAAoB,QAAQ,YAAY;AAC7C,MAAI5B,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC;AACA,MAAI,CAAC,wBAAwB,MAAM;AAC/B,UAAM,IAAI,iBAAiB,QAAQ,mGAAmG;AAC1I,QAAM,YAAY,wBAAwB,MAAM;AAChD,SAAO,UAAU,CAAC;AACtB;AARS,OAAA4B,sBAAA;AAST,SAASC,UAAS,QAAQ,YAAY;AAClC,MAAI,mBAAmB;AACnB,UAAM,IAAI,iBAAiB,QAAQ,yFAAyF;AAChI,MAAI7B,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAOG,OAAM,MAAM,QAAQ,UAAU,GAAG,UAAU;AAAA,EACtD;AACJ;AATS,OAAA0B,WAAA;AAUT,SAASC,WAAU,QAAQ,YAAY;AACnC,MAAI9B,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC;AACA,MAAI,OAAO,UAAU,QAAW;AAC5B,WAAO,CAAC;AAAA,EACZ,OACK;AACD,WAAO,MAAM,KAAK,EAAE,QAAQ,OAAO,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,UAAUG,OAAM,OAAO,MAAM,KAAK,GAAG,UAAU,CAAC;AAAA,EAC3G;AACJ;AAVS,OAAA2B,YAAA;AAWT,SAASC,eAAc,QAAQ,YAAY;AACvC,MAAI/B,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAPS,OAAA+B,gBAAA;AAQT,SAASC,YAAU,QAAQ,YAAY;AACnC,MAAIhC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,MAAM,WAAW,GAAG;AAChC,UAAM,IAAI,MAAM,2DAA2D;AAAA,EAC/E,OACK;AACD,WAAOG,OAAM,OAAO,MAAM,CAAC,GAAG,UAAU;AAAA,EAC5C;AACJ;AAVS,OAAA6B,aAAA;AAWT,SAASC,gBAAe,QAAQ,YAAY;AACxC,MAAIjC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,WACS,OAAO,kBAAkB,QAAW;AACzC,WAAO,IAAI,WAAW,OAAO,aAAa;AAAA,EAC9C,OACK;AACD,WAAO,IAAI,WAAW,CAAC;AAAA,EAC3B;AACJ;AAVS,OAAAiC,iBAAA;AAWT,SAASC,aAAY,QAAQ,YAAY;AACrC,MAAIlC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO,CAAC;AAAA,EACZ;AACJ;AAPS,OAAAkC,cAAA;AAQT,SAASC,UAAS,QAAQ,YAAY;AAClC,MAAInC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAPS,OAAAmC,WAAA;AAQT,SAASC,UAAS,QAAQ,YAAY;AAClC,MAAIpC,gBAAe,QAAQ,SAAS,GAAG;AACnC,WAAO,YAAY,OAAO,OAAO;AAAA,EACrC,OACK;AACD,UAAM,IAAI,MAAM,iDAAiD;AAAA,EACrE;AACJ;AAPS,OAAAoC,WAAA;AAQT,SAASjC,OAAM,QAAQ,YAAY;AAC/B,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACnB,KAAK;AACD,aAAOJ,SAAQ,SAAS,WAAW;AAAA,IACvC,KAAK;AACD,aAAOE,cAAa,SAAS,WAAW;AAAA,IAC5C,KAAK;AACD,aAAOC,YAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOE,mBAAkB,SAAS,WAAW;AAAA,IACjD,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,iBAAgB,SAAS,WAAW;AAAA,IAC/C,KAAK;AACD,aAAOE,UAAS,SAAS,WAAW;AAAA,IACxC,KAAK;AACD,aAAOC,cAAa,SAAS,WAAW;AAAA,IAC5C,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,gBAAc,SAAS,WAAW;AAAA,IAC7C,KAAK;AACD,aAAOE,cAAa,SAAS,WAAW;AAAA,IAC5C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,WAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOC,SAAQ,SAAS,WAAW;AAAA,IACvC,KAAK;AACD,aAAOC,UAAS,SAAS,WAAW;AAAA,IACxC,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,aAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,SAAQ,SAAS,WAAW;AAAA,IACvC,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,qBAAoB,SAAS,WAAW;AAAA,IACnD,KAAK;AACD,aAAOC,UAAS,SAAS,WAAW;AAAA,IACxC,KAAK;AACD,aAAOC,WAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOC,eAAc,SAAS,WAAW;AAAA,IAC7C,KAAK;AACD,aAAOC,YAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOC,gBAAe,SAAS,WAAW;AAAA,IAC9C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,UAAS,SAAS,WAAW;AAAA,IACxC;AACI,UAAI,CAACE,cAAa,IAAI,QAAQ,IAAI,CAAC;AAC/B,cAAM,IAAI,iBAAiB,SAAS,cAAc;AACtD,aAAOD,UAAS,SAAS,WAAW;AAAA,EAC5C;AACJ;AA3ES,OAAAjC,QAAA;AA+ET,IAAM,oBAAoB;AAC1B,IAAI,iBAAiB;AAEd,SAASmC,WAAU,MAAM;AAC5B,mBAAiB;AACjB,SAAO,KAAK,WAAW,IAAInC,OAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,OAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1E;AAHgB,OAAAmC,SAAA;;;ADtcT,IAAM,iBAAN,cAA6B,aAAa;AAAA,EAVjD,OAUiD;AAAA;AAAA;AAAA,EAC7C,YAAY,QAAQ,SAAS;AACzB,UAAM,OAAO;AACb,SAAK,SAAS;AAAA,EAClB;AACJ;AAUA,SAAS,WAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,OAAO,IAAI,MAAM,YAAY,OAAO,UAAU,YAAY,CAACC,QAAO,KAAK,GAAG;AAC1E,UAAMC,UAAS;AACf,UAAM,OAAO,OAAO,oBAAoB,KAAK;AAC7C,UAAM,UAAU,OAAO,QAAQA,QAAO,UAAU;AAChD,WAAO,QAAQ,OAAO,CAAC,KAAK,CAAC,KAAKC,OAAM,MAAM;AAC1C,YAAM,UAAUA,QAAO,IAAI,MAAM,aAAaA,QAAO,UAAU,MAAM,GAAG,IAAI,MAAM;AAClF,YAAM,SAAS,MAAMA,SAAQ,YAAY,MAAM,GAAG,CAAC,IAAI,KAAK;AAC5D,YAAMC,UAAS,KAAK,SAAS,GAAG,IAAI,IAAI;AACxC,aAAO,OAAO,UAAU,SAASA;AAAA,IACrC,GAAG,CAAC;AAAA,EACR,WACS,OAAO,IAAI,MAAM,SAAS;AAC/B,UAAM,UAAU,OAAO,MAAM,IAAI,CAACD,YAAW,MAAMA,SAAQ,UAAU,CAAC;AACtE,UAAM,SAAS,QAAQ,IAAI,CAACA,YAAW,WAAWA,SAAQ,YAAY,KAAK,CAAC;AAC5E,WAAO,KAAK,IAAI,GAAG,MAAM;AAAA,EAC7B,OACK;AACD,WAAO,MAAM,QAAQ,YAAY,KAAK,IAAI,IAAI;AAAA,EAClD;AACJ;AApBS;AAqBT,SAAS,YAAYE,QAAO,YAAY,OAAO;AAC3C,QAAM,UAAUA,OAAM,MAAM,IAAI,CAAC,WAAW,MAAM,QAAQ,UAAU,CAAC;AACrE,MAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AACnC,aAAW,UAAU,SAAS;AAC1B,UAAM,QAAQ,WAAW,QAAQ,YAAY,KAAK;AAClD,QAAI,QAAQ,MAAM;AACd,eAAS;AACT,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAXS;AAYT,SAAS,UAAUA,QAAO,YAAY,OAAO;AACzC,MAAI,aAAaA,QAAO;AACpB,WAAO,OAAO,UAAU,aAAaA,OAAM,UAAUC,OAAMD,OAAM,OAAO;AAAA,EAC5E,OACK;AACD,UAAM,SAAS,YAAYA,QAAO,YAAY,KAAK;AACnD,WAAO,KAAK,QAAQ,YAAY,KAAK;AAAA,EACzC;AACJ;AARS;AAYT,SAAS,aAAa,QAAQ,YAAY,OAAO;AAC7C,SAAO,MAAM,QAAQ,YAAY,KAAK,IAAIC,OAAM,KAAK,IAAIC,QAAO,QAAQ,UAAU;AACtF;AAFS;AAGT,SAAS,QAAQ,QAAQ,YAAY,OAAO;AACxC,SAAO,MAAM,QAAQ,YAAY,KAAK,IAAI,QAAQA,QAAO,QAAQ,UAAU;AAC/E;AAFS;AAMT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAOF,OAAM,KAAK;AACtB,QAAM,UAAUG,SAAQ,KAAK,IAAIH,OAAM,KAAK,IAAIC,QAAO,QAAQ,UAAU;AACzE,QAAM,UAAUG,UAAS,OAAO,QAAQ,KAAK,QAAQ,SAAS,OAAO,WAAW,CAAC,GAAG,SAAS,GAAG,MAAM,KAAK,EAAE,QAAQ,OAAO,WAAW,QAAQ,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI;AACxK,QAAM,UAAUA,UAAS,OAAO,QAAQ,KAAK,QAAQ,SAAS,OAAO,WAAW,QAAQ,MAAM,GAAG,OAAO,QAAQ,IAAI;AACpH,QAAM,SAAS,QAAQ,IAAI,CAACC,WAAUC,OAAM,OAAO,OAAO,YAAYD,MAAK,CAAC;AAC5E,MAAI,OAAO,gBAAgB;AACvB,WAAO;AACX,QAAM,SAAS,CAAC,GAAG,IAAI,IAAI,MAAM,CAAC;AAClC,MAAI,CAAC,MAAM,QAAQ,YAAY,MAAM;AACjC,UAAM,IAAI,eAAe,QAAQ,gEAAgE;AACrG,SAAO;AACX;AAbS,OAAAH,aAAA;AAcT,SAASK,iBAAgB,QAAQ,YAAY,OAAO;AAChD,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAON,QAAO,QAAQ,UAAU;AACpC,QAAM,WAAW,IAAI,IAAI,OAAO,QAAQ,YAAY,CAAC,CAAC;AACtD,QAAM,SAAS,kCAAY;AAAA,EAAE,GAAd;AACf,aAAW,CAAC,KAAK,QAAQ,KAAK,OAAO,QAAQ,OAAO,QAAQ,UAAU,GAAG;AACrE,QAAI,CAAC,SAAS,IAAI,GAAG,KAAK,MAAM,UAAU,GAAG,MAAM;AAC/C;AACJ,WAAO,UAAU,GAAG,IAAIK,OAAM,UAAU,YAAY,MAAM,UAAU,GAAG,CAAC;AAAA,EAC5E;AACA,SAAO;AACX;AAXS,OAAAC,kBAAA;AAYT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOF,OAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK;AAC/D;AAJS,OAAAE,aAAA;AAQT,SAAS,gBAAgB,SAAS,OAAO;AAErC,MAAKC,UAAS,OAAO,KAAK,CAACA,UAAS,KAAK,KAAO,CAACA,UAAS,OAAO,KAAKA,UAAS,KAAK;AAChF,WAAO;AACX,MAAI,CAACA,UAAS,OAAO,KAAK,CAACA,UAAS,KAAK;AACrC,WAAO;AACX,SAAO,WAAW,OAAO,oBAAoB,OAAO,EAAE,OAAO,CAAC,QAAQ,QAAQ;AAC1E,UAAM,WAAW,OAAO,QAAQ,gBAAgB,QAAQ,GAAG,GAAG,MAAM,GAAG,CAAC,IAAI,QAAQ,GAAG;AACvF,WAAO,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAG,SAAS;AAAA,EACxC,GAAG,CAAC,CAAC;AACT;AAVS;AAWT,SAASC,gBAAc,QAAQ,YAAY,OAAO;AAC9C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAO;AACX,QAAM,UAAUT,QAAO,QAAQ,UAAU;AACzC,QAAM,WAAW,gBAAgB,SAAS,KAAK;AAC/C,SAAO,MAAM,QAAQ,YAAY,QAAQ,IAAI,WAAW;AAC5D;AANS,OAAAS,iBAAA;AAOT,SAASC,WAAU,QAAQ,YAAY,OAAO;AAC1C,QAAM,IAAI,eAAe,QAAQ,4BAA4B;AACjE;AAFS,OAAAA,YAAA;AAGT,SAASC,aAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAO;AACX,MAAI,UAAU,QAAQ,OAAO,UAAU;AACnC,WAAOX,QAAO,QAAQ,UAAU;AACpC,QAAM,WAAW,IAAI,IAAI,OAAO,YAAY,CAAC,CAAC;AAC9C,QAAM,SAAS,CAAC;AAChB,aAAW,CAAC,KAAK,QAAQ,KAAK,OAAO,QAAQ,OAAO,UAAU,GAAG;AAC7D,QAAI,CAAC,SAAS,IAAI,GAAG,KAAK,MAAM,GAAG,MAAM;AACrC;AACJ,WAAO,GAAG,IAAIK,OAAM,UAAU,YAAY,MAAM,GAAG,CAAC;AAAA,EACxD;AAEA,MAAI,OAAO,OAAO,yBAAyB,UAAU;AACjD,UAAM,gBAAgB,OAAO,oBAAoB,OAAO,UAAU;AAClE,eAAW,gBAAgB,OAAO,oBAAoB,KAAK,GAAG;AAC1D,UAAI,cAAc,SAAS,YAAY;AACnC;AACJ,aAAO,YAAY,IAAIA,OAAM,OAAO,sBAAsB,YAAY,MAAM,YAAY,CAAC;AAAA,IAC7F;AAAA,EACJ;AACA,SAAO;AACX;AAtBS,OAAAM,cAAA;AAuBT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAOb,OAAM,KAAK;AACtB,MAAI,UAAU,QAAQ,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,KAAK,iBAAiB;AACxF,WAAOC,QAAO,QAAQ,UAAU;AACpC,QAAM,wBAAwB,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AACpF,QAAM,YAAY,OAAO,kBAAkB,qBAAqB;AAChE,QAAM,SAAS,CAAC;AAChB,aAAW,CAAC,SAAS,SAAS,KAAK,OAAO,QAAQ,KAAK,GAAG;AACtD,WAAO,OAAO,IAAIK,OAAM,WAAW,YAAY,SAAS;AAAA,EAC5D;AACA,SAAO;AACX;AAZS,OAAAO,aAAA;AAaT,SAASC,SAAQ,QAAQ,YAAY,OAAO;AACxC,SAAOR,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAQ,UAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAOT,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAS,WAAA;AAGT,SAASC,WAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,MAAM,QAAQ,YAAY,KAAK;AAC/B,WAAOhB,OAAM,KAAK;AACtB,MAAI,CAACG,SAAQ,KAAK;AACd,WAAOF,QAAO,QAAQ,UAAU;AACpC,MAAI,OAAO,UAAU;AACjB,WAAO,CAAC;AACZ,SAAO,OAAO,MAAM,IAAI,CAACJ,SAAQ,UAAUS,OAAMT,SAAQ,YAAY,MAAM,KAAK,CAAC,CAAC;AACtF;AARS,OAAAmB,YAAA;AAST,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,SAAO,MAAM,QAAQ,YAAY,KAAK,IAAIjB,OAAM,KAAK,IAAI,UAAU,QAAQ,YAAY,KAAK;AAChG;AAFS,OAAAiB,aAAA;AAGT,SAASX,OAAM,QAAQ,YAAY,OAAO;AACtC,QAAM,cAAcY,UAAS,OAAO,GAAG,IAAI,QAAQ,QAAQ,UAAU,IAAI;AACzE,QAAM,UAAU;AAChB,UAAQ,OAAO,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA,IAIlB,KAAK;AACD,aAAOhB,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOK,iBAAgB,SAAS,aAAa,KAAK;AAAA,IACtD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,gBAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,SAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,KAAK;AAAA;AAAA;AAAA;AAAA,IAIhD,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,aAAa,QAAQ,YAAY,KAAK;AAAA;AAAA;AAAA;AAAA,IAIjD;AACI,aAAO,QAAQ,SAAS,aAAa,KAAK;AAAA,EAClD;AACJ;AA1CS,OAAAX,QAAA;AA4CF,SAAS,QAAQ,MAAM;AAC1B,SAAO,KAAK,WAAW,IAAIA,OAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,OAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5F;AAFgB;;;AGxOhB;AAAA;AAAAa;AAkBA,SAAS,YAAY,QAAQ;AACzB,SAAO,OAAO,MAAM,KAAK,OAAO,IAAI,MAAM;AAC9C;AAFS;AAMT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,CAACC,SAAQ,KAAK;AACd,WAAO;AACX,SAAO,MAAM,IAAI,CAACC,WAAUC,OAAM,OAAO,OAAO,YAAYD,MAAK,CAAC;AACtE;AAJS,OAAAF,aAAA;AAKT,SAASI,YAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOD,OAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK;AAC/D;AAJS,OAAAC,aAAA;AAKT,SAASC,gBAAc,QAAQ,YAAY,OAAO;AAC9C,QAAM,wBAAwB,OAAO;AACrC,QAAM,gBAAgB,OAAO,MAAM,IAAI,CAACC,YAAWH,OAAMG,SAAQ,YAAYC,OAAM,KAAK,CAAC,CAAC;AAC1F,QAAM,YAAY,cAAc,OAAO,CAAC,KAAKL,WAAWM,UAASN,MAAK,IAAI,EAAE,GAAG,KAAK,GAAGA,OAAM,IAAIA,QAAQ,CAAC,CAAC;AAC3G,MAAI,CAACM,UAAS,KAAK,KAAK,CAACA,UAAS,SAAS,KAAK,CAAC,OAAO,qBAAqB;AACzE,WAAO;AACX,QAAM,YAAY,kBAAkB,MAAM;AAC1C,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,QAAI,UAAU,SAAS,GAAG;AACtB;AACJ,QAAI,MAAM,uBAAuB,YAAY,MAAM,GAAG,CAAC,GAAG;AACtD,gBAAU,GAAG,IAAIL,OAAM,uBAAuB,YAAY,MAAM,GAAG,CAAC;AAAA,IACxE;AAAA,EACJ;AACA,SAAO;AACX;AAfS,OAAAE,iBAAA;AAgBT,SAASI,aAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAACD,UAAS,KAAK,KAAKP,SAAQ,KAAK;AACjC,WAAO;AACX,QAAM,uBAAuB,OAAO;AACpC,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,QAAIS,gBAAe,OAAO,YAAY,GAAG,GAAG;AACxC,YAAM,GAAG,IAAIP,OAAM,OAAO,WAAW,GAAG,GAAG,YAAY,MAAM,GAAG,CAAC;AACjE;AAAA,IACJ;AACA,QAAI,OAAO,oBAAoB,KAAK,MAAM,sBAAsB,YAAY,MAAM,GAAG,CAAC,GAAG;AACrF,YAAM,GAAG,IAAIA,OAAM,sBAAsB,YAAY,MAAM,GAAG,CAAC;AAC/D;AAAA,IACJ;AACA,WAAO,MAAM,GAAG;AAAA,EACpB;AACA,SAAO;AACX;AAhBS,OAAAM,cAAA;AAiBT,SAASE,YAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAACH,UAAS,KAAK;AACf,WAAO;AACX,QAAM,uBAAuB,OAAO;AACpC,QAAM,eAAe,OAAO,oBAAoB,KAAK;AACrD,QAAM,CAAC,aAAa,cAAc,IAAI,OAAO,QAAQ,OAAO,iBAAiB,EAAE,CAAC;AAChF,QAAM,kBAAkB,IAAI,OAAO,WAAW;AAC9C,aAAW,OAAO,cAAc;AAC5B,QAAI,gBAAgB,KAAK,GAAG,GAAG;AAC3B,YAAM,GAAG,IAAIL,OAAM,gBAAgB,YAAY,MAAM,GAAG,CAAC;AACzD;AAAA,IACJ;AACA,QAAI,OAAO,oBAAoB,KAAK,MAAM,sBAAsB,YAAY,MAAM,GAAG,CAAC,GAAG;AACrF,YAAM,GAAG,IAAIA,OAAM,sBAAsB,YAAY,MAAM,GAAG,CAAC;AAC/D;AAAA,IACJ;AACA,WAAO,MAAM,GAAG;AAAA,EACpB;AACA,SAAO;AACX;AAnBS,OAAAQ,aAAA;AAoBT,SAASC,SAAQ,QAAQ,YAAY,OAAO;AACxC,SAAOT,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAS,UAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAOV,OAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAU,WAAA;AAGT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,MAAI,CAACb,SAAQ,KAAK;AACd,WAAO;AACX,MAAIc,aAAY,OAAO,KAAK;AACxB,WAAO,CAAC;AACZ,QAAM,SAAS,KAAK,IAAI,MAAM,QAAQ,OAAO,MAAM,MAAM;AACzD,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,UAAM,CAAC,IAAIZ,OAAM,OAAO,MAAM,CAAC,GAAG,YAAY,MAAM,CAAC,CAAC;AAAA,EAC1D;AAEA,SAAO,MAAM,SAAS,SAChB,MAAM,MAAM,GAAG,MAAM,IACrB;AACV;AAbS,OAAAW,aAAA;AAcT,SAASE,YAAU,QAAQ,YAAY,OAAO;AAC1C,aAAW,SAAS,OAAO,OAAO;AAC9B,QAAI,YAAY,KAAK,KAAK,MAAM,OAAO,YAAY,KAAK,GAAG;AACvD,aAAOb,OAAM,OAAO,YAAY,KAAK;AAAA,IACzC;AAAA,EACJ;AACA,SAAO;AACX;AAPS,OAAAa,aAAA;AAQT,SAASb,OAAM,QAAQ,YAAY,OAAO;AACtC,QAAM,cAAcc,UAAS,OAAO,GAAG,IAAI,QAAQ,QAAQ,UAAU,IAAI;AACzE,QAAM,UAAU;AAChB,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACnB,KAAK;AACD,aAAOjB,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOI,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,gBAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOI,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOE,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,SAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOE,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD;AACI,aAAO;AAAA,EACf;AACJ;AAzBS,OAAAb,QAAA;AA2BF,SAAS,SAAS,MAAM;AAC3B,SAAO,KAAK,WAAW,IAAIA,OAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,OAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5F;AAFgB;;;AC9IhB;AAAA;AAAAe;AAWA,SAAS,gBAAgB,OAAO;AAC5B,SAAOC,UAAS,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,WAAW,KAAK,CAAC;AACvE;AAFS;AAGT,SAAS,gBAAgB,OAAO;AAC5B,SAAOC,UAAS,KAAK,KAAKC,WAAU,KAAK,KAAKC,UAAS,KAAK;AAChE;AAFS;AAGT,SAAS,YAAY,OAAO;AACxB,SAAO,UAAU,QAASA,UAAS,KAAK,KAAK,UAAU,KAAOF,UAAS,KAAK,KAAK,UAAU,OAAO,GAAG,KAAOD,UAAS,KAAK,MAAM,MAAM,YAAY,MAAM,UAAU,UAAU;AAChL;AAFS;AAGT,SAAS,aAAa,OAAO;AACzB,SAAO,UAAU,SAAUG,UAAS,KAAK,MAAM,UAAU,KAAK,OAAO,GAAG,OAAO,EAAE,MAAQF,UAAS,KAAK,KAAK,UAAU,OAAO,GAAG,KAAOD,UAAS,KAAK,MAAM,MAAM,YAAY,MAAM,WAAW,UAAU,OAAO,UAAU;AAC7N;AAFS;AAGT,SAAS,yBAAyB,OAAO;AACrC,SAAOA,UAAS,KAAK,KAAK,6EAA6E,KAAK,KAAK;AACrH;AAFS;AAGT,SAAS,4BAA4B,OAAO;AACxC,SAAOA,UAAS,KAAK,KAAK,2CAA2C,KAAK,KAAK;AACnF;AAFS;AAGT,SAAS,6BAA6B,OAAO;AACzC,SAAOA,UAAS,KAAK,KAAK,sGAAsG,KAAK,KAAK;AAC9I;AAFS;AAGT,SAAS,gCAAgC,OAAO;AAC5C,SAAOA,UAAS,KAAK,KAAK,oEAAoE,KAAK,KAAK;AAC5G;AAFS;AAGT,SAAS,aAAa,OAAO;AACzB,SAAOA,UAAS,KAAK,KAAK,8BAA8B,KAAK,KAAK;AACtE;AAFS;AAMT,SAAS,wBAAwB,OAAO,QAAQ;AAC5C,QAAM,aAAa,iBAAiB,KAAK;AACzC,SAAO,eAAe,SAAS,aAAa;AAChD;AAHS;AAIT,SAAS,wBAAwB,OAAO,QAAQ;AAC5C,QAAM,aAAa,iBAAiB,KAAK;AACzC,SAAO,eAAe,SAAS,aAAa;AAChD;AAHS;AAIT,SAAS,yBAAyB,OAAO,QAAQ;AAC7C,QAAM,aAAa,kBAAkB,KAAK;AAC1C,SAAO,eAAe,SAAS,aAAa;AAChD;AAHS;AAKT,SAAS,kBAAkB,QAAQ,OAAO;AACtC,SAAQA,UAAS,OAAO,KAAK,IAAI,wBAAwB,OAAO,OAAO,KAAK,IACxEG,UAAS,OAAO,KAAK,IAAI,wBAAwB,OAAO,OAAO,KAAK,IAChED,WAAU,OAAO,KAAK,IAAI,yBAAyB,OAAO,OAAO,KAAK,IAClE;AAChB;AALS;AAMT,SAAS,kBAAkB,OAAO;AAC9B,SAAO,YAAY,KAAK,IAAI,OAAO,aAAa,KAAK,IAAI,QAAQ;AACrE;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,QAAM,kBAAkB,wBAACE,WAAUA,OAAM,MAAM,GAAG,EAAE,CAAC,GAA7B;AACxB,SAAO,gBAAgB,KAAK,IAAI,OAAO,gBAAgB,KAAK,CAAC,IAAID,UAAS,KAAK,IAAI,OAAO,KAAK,MAAM,KAAK,CAAC,IAAI,aAAa,KAAK,IAAI,OAAO,CAAC,IAAI,YAAY,KAAK,IAAI,OAAO,CAAC,IAAI;AACtL;AAHS;AAIT,SAAS,iBAAiB,OAAO;AAC7B,SAAOE,UAAS,KAAK,KAAK,MAAM,gBAAgB,SAAY,MAAM,YAAY,SAAS,IAAI,gBAAgB,KAAK,IAAI,MAAM,SAAS,IAAI;AAC3I;AAFS;AAGT,SAAS,iBAAiB,OAAO;AAC7B,SAAO,gBAAgB,KAAK,IAAI,WAAW,KAAK,IAAI,YAAY,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI;AAC3G;AAFS;AAGT,SAAS,kBAAkB,OAAO;AAC9B,SAAO,gBAAgB,KAAK,IAAI,SAAS,KAAK,IAAIF,UAAS,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,YAAY,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,IAAI;AAC/I;AAFS;AAGT,SAAS,eAAe,OAAO;AAC3B,SAAOH,UAAS,KAAK,KAAK,MAAM,YAAY,MAAM,SAAS,OAAO;AACtE;AAFS;AAGT,SAAS,oBAAoB,OAAO;AAChC,SAAOA,UAAS,KAAK,KAAK,UAAU,cAAc,SAAY;AAClE;AAFS;AAWT,SAAS,eAAe,OAAO;AAC3B,SAAQM,QAAO,KAAK,IAAI,QACpBH,UAAS,KAAK,IAAI,IAAI,KAAK,KAAK,IAC5B,YAAY,KAAK,IAAI,oBAAI,KAAK,CAAC,IAC3B,aAAa,KAAK,IAAI,oBAAI,KAAK,CAAC,IAC5B,gBAAgB,KAAK,IAAI,IAAI,KAAK,SAAS,KAAK,CAAC,IAC7C,4BAA4B,KAAK,IAAI,oBAAI,KAAK,cAAc,KAAK,OAAO,IACpE,yBAAyB,KAAK,IAAI,oBAAI,KAAK,cAAc,KAAK,EAAE,IAC5D,gCAAgC,KAAK,IAAI,oBAAI,KAAK,GAAG,KAAK,OAAO,IAC7D,6BAA6B,KAAK,IAAI,IAAI,KAAK,KAAK,IAChD,aAAa,KAAK,IAAI,oBAAI,KAAK,GAAG,KAAK,gBAAgB,IACnD;AAC5C;AAZS;AAgBT,SAASI,SAAQ,OAAO;AACpB,SAAO;AACX;AAFS,OAAAA,UAAA;AAMT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,QAAM,WAAWC,SAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAChD,SAAO,SAAS,IAAI,CAAC,YAAYC,QAAM,OAAO,OAAO,YAAY,OAAO,CAAC;AAC7E;AAHS,OAAAF,aAAA;AAIT,SAASG,YAAW,QAAQ,YAAY,OAAO;AAC3C,SAAO,iBAAiB,KAAK;AACjC;AAFS,OAAAA,aAAA;AAGT,SAASC,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO,kBAAkB,KAAK;AAClC;AAFS,OAAAA,cAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAO,eAAe,KAAK;AAC/B;AAFS,OAAAA,WAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOJ,QAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK;AAC/D;AAJS,OAAAI,aAAA;AAKT,SAASC,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO,kBAAkB,KAAK;AAClC;AAFS,OAAAA,cAAA;AAGT,SAASC,gBAAc,QAAQ,YAAY,OAAO;AAC9C,SAAO,OAAO,MAAM,OAAO,CAACZ,QAAOa,YAAWP,QAAMO,SAAQ,YAAYb,MAAK,GAAG,KAAK;AACzF;AAFS,OAAAY,iBAAA;AAGT,SAASE,aAAY,QAAQ,YAAY,OAAO;AAC5C,SAAO,kBAAkB,QAAQ,KAAK;AAC1C;AAFS,OAAAA,cAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAO,eAAe,KAAK;AAC/B;AAFS,OAAAA,WAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,SAAO,iBAAiB,KAAK;AACjC;AAFS,OAAAA,aAAA;AAIT,SAASC,aAAW,QAAQ,YAAY,OAAO;AAC3C,MAAI,CAACC,UAAS,KAAK,KAAKb,SAAQ,KAAK;AACjC,WAAO;AACX,aAAW,eAAe,OAAO,oBAAoB,OAAO,UAAU,GAAG;AACrE,QAAI,CAACc,gBAAe,OAAO,WAAW;AAClC;AACJ,UAAM,WAAW,IAAIb,QAAM,OAAO,WAAW,WAAW,GAAG,YAAY,MAAM,WAAW,CAAC;AAAA,EAC7F;AACA,SAAO;AACX;AATS,OAAAW,cAAA;AAUT,SAASG,YAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,gBAAgBF,UAAS,KAAK,KAAK,CAACb,SAAQ,KAAK;AACvD,MAAI,CAAC;AACD,WAAO;AACX,QAAM,cAAc,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AAC1E,QAAM,WAAW,OAAO,kBAAkB,WAAW;AACrD,aAAW,CAAC,SAAS,SAAS,KAAK,OAAO,QAAQ,KAAK,GAAG;AACtD,UAAM,OAAO,IAAIC,QAAM,UAAU,YAAY,SAAS;AAAA,EAC1D;AACA,SAAO;AACX;AAVS,OAAAc,aAAA;AAWT,SAASC,UAAQ,QAAQ,YAAY,OAAO;AACxC,SAAOf,QAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAe,WAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,SAAO,iBAAiB,KAAK;AACjC;AAFS,OAAAA,aAAA;AAGT,SAASC,YAAW,QAAQ,YAAY,OAAO;AAC3C,SAAO3B,UAAS,KAAK,KAAKG,UAAS,KAAK,IAAI,OAAO,KAAK,IAAI;AAChE;AAFS,OAAAwB,aAAA;AAGT,SAASC,UAAS,QAAQ,YAAY,OAAO;AACzC,SAAOlB,QAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAkB,WAAA;AAIT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,QAAM,gBAAgBpB,SAAQ,KAAK,KAAK,CAACqB,aAAY,OAAO,KAAK;AACjE,MAAI,CAAC;AACD,WAAO;AACX,SAAO,MAAM,IAAI,CAAC1B,QAAO,UAAU;AAC/B,WAAQ,QAAQ,OAAO,MAAM,SACvBM,QAAM,OAAO,MAAM,KAAK,GAAG,YAAYN,MAAK,IAC5CA;AAAA,EACV,CAAC;AACL;AATS,OAAAyB,aAAA;AAUT,SAASE,eAAc,QAAQ,YAAY,OAAO;AAC9C,SAAO,oBAAoB,KAAK;AACpC;AAFS,OAAAA,gBAAA;AAGT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAE1C,aAAW,aAAa,OAAO,OAAO;AAClC,QAAI,MAAM,WAAW,YAAY,KAAK,GAAG;AACrC,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,aAAW,aAAa,OAAO,OAAO;AAClC,UAAM,YAAYtB,QAAM,WAAW,YAAYuB,OAAM,KAAK,CAAC;AAC3D,QAAI,CAAC,MAAM,WAAW,YAAY,SAAS;AACvC;AACJ,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAfS,OAAAD,aAAA;AAgBT,SAAStB,QAAM,QAAQ,YAAY,OAAO;AACtC,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,UAAQ,OAAO,IAAI,GAAG;AAAA,IAClB,KAAK;AACD,aAAOF,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOG,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,gBAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,IAClD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOG,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,UAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOE,eAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD;AACI,aAAOzB,SAAQ,KAAK;AAAA,EAC5B;AACJ;AA7CS,OAAAG,SAAA;AAgDF,SAAS,WAAW,MAAM;AAC7B,SAAO,KAAK,WAAW,IAAIA,QAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,QAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5F;AAFgB;;;ACjQhB;AAAA;AAAAwB;;;ACAA;AAAA;AAAAC;AAmBO,IAAM,4BAAN,cAAwC,aAAa;AAAA,EAnB5D,OAmB4D;AAAA;AAAA;AAAA,EACxD,YAAY,QAAQ,OAAOC,QAAO;AAC9B,UAAM,iEAAiE;AACvE,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,QAAQA;AAAA,EACjB;AACJ;AAEO,IAAM,uBAAN,cAAmC,aAAa;AAAA,EA5BvD,OA4BuD;AAAA;AAAA;AAAA,EACnD,YAAY,QAAQ,MAAM,OAAOA,QAAO;AACpC,UAAMA,kBAAiB,QAAQA,OAAM,UAAU,eAAe;AAC9D,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,QAAQA;AAAA,EACjB;AACJ;AAKA,SAASC,SAAQ,QAAQ,MAAM,OAAO;AAClC,MAAI;AACA,WAAO,YAAY,MAAM,IAAI,OAAO,aAAa,EAAE,OAAO,KAAK,IAAI;AAAA,EACvE,SACOD,QAAO;AACV,UAAM,IAAI,qBAAqB,QAAQ,MAAM,OAAOA,MAAK;AAAA,EAC7D;AACJ;AAPS,OAAAC,UAAA;AAST,SAASC,YAAU,QAAQ,YAAY,MAAM,OAAO;AAChD,SAAQC,SAAQ,KAAK,IACfF,SAAQ,QAAQ,MAAM,MAAM,IAAI,CAACG,QAAO,UAAUC,QAAM,OAAO,OAAO,YAAY,GAAG,IAAI,IAAI,KAAK,IAAID,MAAK,CAAC,CAAC,IAC7GH,SAAQ,QAAQ,MAAM,KAAK;AACrC;AAJS,OAAAC,aAAA;AAMT,SAASI,gBAAc,QAAQ,YAAY,MAAM,OAAO;AACpD,MAAI,CAACC,UAAS,KAAK,KAAK,YAAY,KAAK;AACrC,WAAON,SAAQ,QAAQ,MAAM,KAAK;AACtC,QAAM,eAAe,qBAAqB,MAAM;AAChD,QAAM,YAAY,aAAa,IAAI,WAAS,MAAM,CAAC,CAAC;AACpD,QAAM,kBAAkB,EAAE,GAAG,MAAM;AACnC,aAAW,CAAC,UAAU,WAAW,KAAK;AAClC,QAAI,YAAY,iBAAiB;AAC7B,sBAAgB,QAAQ,IAAII,QAAM,aAAa,YAAY,GAAG,IAAI,IAAI,QAAQ,IAAI,gBAAgB,QAAQ,CAAC;AAAA,IAC/G;AACJ,MAAI,CAAC,YAAY,OAAO,qBAAqB,GAAG;AAC5C,WAAOJ,SAAQ,QAAQ,MAAM,eAAe;AAAA,EAChD;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,wBAAwB,OAAO;AACrC,QAAM,oBAAoB,EAAE,GAAG,gBAAgB;AAC/C,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC1B,wBAAkB,GAAG,IAAIA,SAAQ,uBAAuB,GAAG,IAAI,IAAI,GAAG,IAAI,kBAAkB,GAAG,CAAC;AAAA,IACpG;AACJ,SAAOA,SAAQ,QAAQ,MAAM,iBAAiB;AAClD;AArBS,OAAAK,iBAAA;AAuBT,SAASE,YAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,QAAM,aAAa,WAAW,OAAO,OAAO,OAAO,KAAK;AACxD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,QAAM,SAASH,QAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,UAAU,GAAG,MAAM,KAAK;AACxE,SAAOJ,SAAQ,QAAQ,MAAM,MAAM;AACvC;AALS,OAAAO,aAAA;AAMT,SAASC,SAAQ,QAAQ,YAAY,MAAM,OAAO;AAC9C,SAAOR,SAAQ,QAAQ,MAAMI,QAAM,OAAO,KAAK,YAAY,MAAM,KAAK,CAAC;AAC3E;AAFS,OAAAI,UAAA;AAIT,SAASC,aAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,MAAI,CAACH,UAAS,KAAK;AACf,WAAON,SAAQ,QAAQ,MAAM,KAAK;AACtC,QAAM,YAAY,kBAAkB,MAAM;AAC1C,QAAM,kBAAkB,EAAE,GAAG,MAAM;AACnC,aAAW,OAAO,WAAW;AACzB,QAAI,CAACU,gBAAe,iBAAiB,GAAG;AACpC;AAIJ,QAAIC,aAAiB,gBAAgB,GAAG,CAAC,MAAM,CAACA,aAAY,OAAO,WAAW,GAAG,CAAC,KAC9E,iBAAiB,wBAAwB,iBAAiB,GAAG;AAC7D;AAEJ,oBAAgB,GAAG,IAAIP,QAAM,OAAO,WAAW,GAAG,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,IAAI,gBAAgB,GAAG,CAAC;AAAA,EAC3G;AACA,MAAI,CAAC,SAAS,OAAO,oBAAoB,GAAG;AACxC,WAAOJ,SAAQ,QAAQ,MAAM,eAAe;AAAA,EAChD;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,uBAAuB,OAAO;AACpC,QAAM,oBAAoB,EAAE,GAAG,gBAAgB;AAC/C,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC1B,wBAAkB,GAAG,IAAIA,SAAQ,sBAAsB,GAAG,IAAI,IAAI,GAAG,IAAI,kBAAkB,GAAG,CAAC;AAAA,IACnG;AACJ,SAAOA,SAAQ,QAAQ,MAAM,iBAAiB;AAClD;AA5BS,OAAAS,cAAA;AA8BT,SAASG,aAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,MAAI,CAACN,UAAS,KAAK;AACf,WAAON,SAAQ,QAAQ,MAAM,KAAK;AACtC,QAAM,UAAU,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AACtE,QAAM,YAAY,IAAI,OAAO,OAAO;AACpC,QAAM,kBAAkB,EAAE,GAAG,MAAM;AACnC,aAAW,OAAO,OAAO,oBAAoB,KAAK;AAC9C,QAAI,UAAU,KAAK,GAAG,GAAG;AACrB,sBAAgB,GAAG,IAAII,QAAM,OAAO,kBAAkB,OAAO,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,IAAI,gBAAgB,GAAG,CAAC;AAAA,IACtH;AACJ,MAAI,CAAC,SAAS,OAAO,oBAAoB,GAAG;AACxC,WAAOJ,SAAQ,QAAQ,MAAM,eAAe;AAAA,EAChD;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,uBAAuB,OAAO;AACpC,QAAM,oBAAoB,EAAE,GAAG,gBAAgB;AAC/C,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,KAAK,GAAG,GAAG;AACtB,wBAAkB,GAAG,IAAIA,SAAQ,sBAAsB,GAAG,IAAI,IAAI,GAAG,IAAI,kBAAkB,GAAG,CAAC;AAAA,IACnG;AACJ,SAAOA,SAAQ,QAAQ,MAAM,iBAAiB;AAClD;AArBS,OAAAY,cAAA;AAuBT,SAASC,UAAQ,QAAQ,YAAY,MAAM,OAAO;AAC9C,QAAM,SAAS,MAAM,QAAQ,UAAU;AACvC,SAAOb,SAAQ,QAAQ,MAAMI,QAAM,QAAQ,YAAY,MAAM,KAAK,CAAC;AACvE;AAHS,OAAAS,WAAA;AAKT,SAASC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAC/C,QAAM,SAAS,MAAM,QAAQ,UAAU;AACvC,SAAOd,SAAQ,QAAQ,MAAMI,QAAM,QAAQ,YAAY,MAAM,KAAK,CAAC;AACvE;AAHS,OAAAU,WAAA;AAKT,SAASC,YAAU,QAAQ,YAAY,MAAM,OAAO;AAChD,SAAQb,SAAQ,KAAK,KAAKA,SAAQ,OAAO,KAAK,IACxCF,SAAQ,QAAQ,MAAM,OAAO,MAAM,IAAI,CAACgB,SAAQ,UAAUZ,QAAMY,SAAQ,YAAY,GAAG,IAAI,IAAI,KAAK,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,IACtHhB,SAAQ,QAAQ,MAAM,KAAK;AACrC;AAJS,OAAAe,aAAA;AAMT,SAASE,YAAU,QAAQ,YAAY,MAAM,OAAO;AAChD,aAAW,aAAa,OAAO,OAAO;AAClC,QAAI,CAAC,MAAM,WAAW,YAAY,KAAK;AACnC;AAEJ,UAAM,UAAUb,QAAM,WAAW,YAAY,MAAM,KAAK;AACxD,WAAOJ,SAAQ,QAAQ,MAAM,OAAO;AAAA,EACxC;AACA,SAAOA,SAAQ,QAAQ,MAAM,KAAK;AACtC;AATS,OAAAiB,aAAA;AAWT,SAASb,QAAM,QAAQ,YAAY,MAAM,OAAO;AAC5C,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,UAAQ,OAAO,IAAI,GAAG;AAAA,IAClB,KAAK;AACD,aAAOH,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD,KAAK;AACD,aAAOM,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOF,gBAAc,SAAS,aAAa,MAAM,KAAK;AAAA,IAC1D,KAAK;AACD,aAAOG,SAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IACpD,KAAK;AACD,aAAOC,aAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOG,aAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOC,UAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IACpD,KAAK;AACD,aAAOb,SAAQ,SAAS,MAAM,KAAK;AAAA,IACvC,KAAK;AACD,aAAOc,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IACrD,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD,KAAK;AACD,aAAOE,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD;AACI,aAAOjB,SAAQ,SAAS,MAAM,KAAK;AAAA,EAC3C;AACJ;AA7BS,OAAAI,SAAA;AAmCF,SAAS,gBAAgB,QAAQ,YAAY,OAAO;AACvD,SAAOA,QAAM,QAAQ,YAAY,IAAI,KAAK;AAC9C;AAFgB;;;AC5MhB;AAAA;AAAAc;AAkBO,IAAM,4BAAN,cAAwC,aAAa;AAAA,EAlB5D,OAkB4D;AAAA;AAAA;AAAA,EACxD,YAAY,QAAQ,OAAOC,QAAO;AAC9B,UAAM,sDAAsD;AAC5D,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,QAAQA;AAAA,EACjB;AACJ;AAEO,IAAM,uBAAN,cAAmC,aAAa;AAAA,EA3BvD,OA2BuD;AAAA;AAAA;AAAA,EACnD,YAAY,QAAQ,MAAM,OAAOA,QAAO;AACpC,UAAM,GAAGA,kBAAiB,QAAQA,OAAM,UAAU,eAAe,EAAE;AACnE,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,QAAQA;AAAA,EACjB;AACJ;AAKA,SAASC,SAAQ,QAAQ,MAAM,OAAO;AAClC,MAAI;AACA,WAAO,YAAY,MAAM,IAAI,OAAO,aAAa,EAAE,OAAO,KAAK,IAAI;AAAA,EACvE,SACOD,QAAO;AACV,UAAM,IAAI,qBAAqB,QAAQ,MAAM,OAAOA,MAAK;AAAA,EAC7D;AACJ;AAPS,OAAAC,UAAA;AAST,SAASC,YAAU,QAAQ,YAAY,MAAM,OAAO;AAChD,QAAM,YAAYD,SAAQ,QAAQ,MAAM,KAAK;AAC7C,SAAOE,SAAQ,SAAS,IAClB,UAAU,IAAI,CAACC,QAAO,UAAUC,QAAM,OAAO,OAAO,YAAY,GAAG,IAAI,IAAI,KAAK,IAAID,MAAK,CAAC,IAC1F;AACV;AALS,OAAAF,aAAA;AAOT,SAASI,YAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,QAAM,aAAa,WAAW,OAAO,OAAO,OAAO,KAAK;AACxD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,QAAM,SAASL,SAAQ,QAAQ,MAAM,KAAK;AAC1C,SAAOI,QAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,UAAU,GAAG,MAAM,MAAM;AACrE;AALS,OAAAC,aAAA;AAOT,SAASC,gBAAc,QAAQ,YAAY,MAAM,OAAO;AACpD,QAAM,YAAYN,SAAQ,QAAQ,MAAM,KAAK;AAC7C,MAAI,CAACO,UAAS,KAAK,KAAK,YAAY,KAAK;AACrC,WAAO;AACX,QAAM,eAAe,qBAAqB,MAAM;AAChD,QAAM,YAAY,aAAa,IAAI,WAAS,MAAM,CAAC,CAAC;AACpD,QAAM,kBAAkB,EAAE,GAAG,UAAU;AACvC,aAAW,CAAC,UAAU,WAAW,KAAK;AAClC,QAAI,YAAY,iBAAiB;AAC7B,sBAAgB,QAAQ,IAAIH,QAAM,aAAa,YAAY,GAAG,IAAI,IAAI,QAAQ,IAAI,gBAAgB,QAAQ,CAAC;AAAA,IAC/G;AACJ,MAAI,CAAC,YAAY,OAAO,qBAAqB,GAAG;AAC5C,WAAO;AAAA,EACX;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,wBAAwB,OAAO;AACrC,QAAM,aAAa,EAAE,GAAG,gBAAgB;AACxC,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC1B,iBAAW,GAAG,IAAIJ,SAAQ,uBAAuB,GAAG,IAAI,IAAI,GAAG,IAAI,WAAW,GAAG,CAAC;AAAA,IACtF;AACJ,SAAO;AACX;AAtBS,OAAAM,iBAAA;AAwBT,SAASE,SAAQ,QAAQ,YAAY,MAAM,OAAO;AAC9C,SAAOR,SAAQ,OAAO,KAAK,MAAMA,SAAQ,QAAQ,MAAM,KAAK,CAAC;AACjE;AAFS,OAAAQ,UAAA;AAIT,SAASC,aAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,QAAM,YAAYT,SAAQ,QAAQ,MAAM,KAAK;AAC7C,MAAI,CAACO,UAAS,SAAS;AACnB,WAAO;AACX,QAAM,YAAY,kBAAkB,MAAM;AAC1C,QAAM,kBAAkB,EAAE,GAAG,UAAU;AACvC,aAAW,OAAO,WAAW;AACzB,QAAI,CAACG,gBAAe,iBAAiB,GAAG;AACpC;AAIJ,QAAIC,aAAiB,gBAAgB,GAAG,CAAC,MAAM,CAACA,aAAY,OAAO,WAAW,GAAG,CAAC,KAC9E,iBAAiB,wBAAwB,iBAAiB,GAAG;AAC7D;AAEJ,oBAAgB,GAAG,IAAIP,QAAM,OAAO,WAAW,GAAG,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,IAAI,gBAAgB,GAAG,CAAC;AAAA,EAC3G;AACA,MAAI,CAAC,SAAS,OAAO,oBAAoB,GAAG;AACxC,WAAO;AAAA,EACX;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,uBAAuB,OAAO;AACpC,QAAM,aAAa,EAAE,GAAG,gBAAgB;AACxC,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC1B,iBAAW,GAAG,IAAIJ,SAAQ,sBAAsB,GAAG,IAAI,IAAI,GAAG,IAAI,WAAW,GAAG,CAAC;AAAA,IACrF;AACJ,SAAO;AACX;AA7BS,OAAAS,cAAA;AA+BT,SAASG,aAAW,QAAQ,YAAY,MAAM,OAAO;AACjD,QAAM,YAAYZ,SAAQ,QAAQ,MAAM,KAAK;AAC7C,MAAI,CAACO,UAAS,KAAK;AACf,WAAO;AACX,QAAM,UAAU,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AACtE,QAAM,YAAY,IAAI,OAAO,OAAO;AACpC,QAAM,kBAAkB,EAAE,GAAG,UAAU;AACvC,aAAW,OAAO,OAAO,oBAAoB,KAAK;AAC9C,QAAI,UAAU,KAAK,GAAG,GAAG;AACrB,sBAAgB,GAAG,IAAIH,QAAM,OAAO,kBAAkB,OAAO,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,IAAI,gBAAgB,GAAG,CAAC;AAAA,IACtH;AACJ,MAAI,CAAC,SAAS,OAAO,oBAAoB,GAAG;AACxC,WAAO;AAAA,EACX;AACA,QAAM,cAAc,OAAO,oBAAoB,eAAe;AAC9D,QAAM,uBAAuB,OAAO;AACpC,QAAM,aAAa,EAAE,GAAG,gBAAgB;AACxC,aAAW,OAAO;AACd,QAAI,CAAC,UAAU,KAAK,GAAG,GAAG;AACtB,iBAAW,GAAG,IAAIJ,SAAQ,sBAAsB,GAAG,IAAI,IAAI,GAAG,IAAI,WAAW,GAAG,CAAC;AAAA,IACrF;AACJ,SAAO;AACX;AAtBS,OAAAY,cAAA;AAwBT,SAASC,UAAQ,QAAQ,YAAY,MAAM,OAAO;AAC9C,QAAM,SAAS,MAAM,QAAQ,UAAU;AACvC,QAAM,WAAWT,QAAM,QAAQ,YAAY,MAAM,KAAK;AACtD,SAAOJ,SAAQ,QAAQ,MAAM,QAAQ;AACzC;AAJS,OAAAa,WAAA;AAMT,SAASC,UAAS,QAAQ,YAAY,MAAM,OAAO;AAC/C,QAAM,SAAS,MAAM,QAAQ,UAAU;AACvC,QAAM,WAAWV,QAAM,QAAQ,YAAY,MAAM,KAAK;AACtD,SAAOJ,SAAQ,QAAQ,MAAM,QAAQ;AACzC;AAJS,OAAAc,WAAA;AAMT,SAASC,YAAU,QAAQ,YAAY,MAAM,OAAO;AAChD,QAAM,SAASf,SAAQ,QAAQ,MAAM,KAAK;AAC1C,SAAOE,SAAQ,OAAO,KAAK,IAAI,OAAO,MAAM,IAAI,CAACc,SAAQ,UAAUZ,QAAMY,SAAQ,YAAY,GAAG,IAAI,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,CAAC,IAAI,CAAC;AACxI;AAHS,OAAAD,aAAA;AAKT,SAASE,YAAU,QAAQ,YAAY,MAAM,OAAO;AAEhD,aAAW,aAAa,OAAO,OAAO;AAClC,QAAI,CAAC,MAAM,WAAW,YAAY,KAAK;AACnC;AACJ,UAAM,SAASb,QAAM,WAAW,YAAY,MAAM,KAAK;AACvD,WAAOJ,SAAQ,QAAQ,MAAM,MAAM;AAAA,EACvC;AAEA,aAAW,aAAa,OAAO,OAAO;AAClC,UAAM,SAASI,QAAM,WAAW,YAAY,MAAM,KAAK;AACvD,QAAI,CAAC,MAAM,QAAQ,YAAY,MAAM;AACjC;AACJ,WAAOJ,SAAQ,QAAQ,MAAM,MAAM;AAAA,EACvC;AACA,SAAOA,SAAQ,QAAQ,MAAM,KAAK;AACtC;AAhBS,OAAAiB,aAAA;AAkBT,SAASb,QAAM,QAAQ,YAAY,MAAM,OAAO;AAC5C,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,UAAQ,OAAO,IAAI,GAAG;AAAA,IAClB,KAAK;AACD,aAAOH,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD,KAAK;AACD,aAAOI,YAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOC,gBAAc,SAAS,aAAa,MAAM,KAAK;AAAA,IAC1D,KAAK;AACD,aAAOE,SAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IACpD,KAAK;AACD,aAAOC,aAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOG,aAAW,SAAS,aAAa,MAAM,KAAK;AAAA,IACvD,KAAK;AACD,aAAOC,UAAQ,SAAS,aAAa,MAAM,KAAK;AAAA,IACpD,KAAK;AACD,aAAOC,UAAS,SAAS,aAAa,MAAM,KAAK;AAAA,IACrD,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD,KAAK;AACD,aAAOE,YAAU,SAAS,aAAa,MAAM,KAAK;AAAA,IACtD;AACI,aAAOjB,SAAQ,SAAS,MAAM,KAAK;AAAA,EAC3C;AACJ;AA3BS,OAAAI,SAAA;AAkCF,SAAS,gBAAgB,QAAQ,YAAY,OAAO;AACvD,SAAOA,QAAM,QAAQ,YAAY,IAAI,KAAK;AAC9C;AAFgB;;;ACvNhB;AAAA;AAAAc;AAWA,SAASC,YAAU,QAAQ,YAAY;AACnC,SAAO,YAAY,MAAM,KAAKC,QAAM,OAAO,OAAO,UAAU;AAChE;AAFS,OAAAD,aAAA;AAIT,SAASE,mBAAkB,QAAQ,YAAY;AAC3C,SAAO,YAAY,MAAM,KAAKD,QAAM,OAAO,OAAO,UAAU;AAChE;AAFS,OAAAC,oBAAA;AAIT,SAASC,iBAAgB,QAAQ,YAAY;AACzC,SAAO,YAAY,MAAM,KAAKF,QAAM,OAAO,SAAS,UAAU,KAAK,OAAO,WAAW,KAAK,CAACG,YAAWH,QAAMG,SAAQ,UAAU,CAAC;AACnI;AAFS,OAAAD,kBAAA;AAIT,SAASE,cAAa,QAAQ,YAAY;AACtC,SAAO,YAAY,MAAM,KAAKJ,QAAM,OAAO,SAAS,UAAU,KAAK,OAAO,WAAW,KAAK,CAACG,YAAWH,QAAMG,SAAQ,UAAU,CAAC;AACnI;AAFS,OAAAC,eAAA;AAIT,SAASC,gBAAc,QAAQ,YAAY;AACvC,SAAO,YAAY,MAAM,KAAK,YAAY,OAAO,qBAAqB,KAAK,OAAO,MAAM,KAAK,CAACF,YAAWH,QAAMG,SAAQ,UAAU,CAAC;AACtI;AAFS,OAAAE,iBAAA;AAIT,SAASC,YAAW,QAAQ,YAAY;AACpC,QAAM,aAAa,WAAW,OAAO,oBAAoB,OAAO,KAAK,EAAE,OAAO,CAAC,QAAQ,QAAQ,CAAC,GAAG,QAAQ,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACjI,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAO,YAAY,MAAM,KAAKN,QAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,UAAU,CAAC;AAC9E;AAJS,OAAAM,aAAA;AAMT,SAASC,cAAa,QAAQ,YAAY;AACtC,SAAO,YAAY,MAAM,KAAKP,QAAM,OAAO,OAAO,UAAU;AAChE;AAFS,OAAAO,eAAA;AAIT,SAASC,SAAQ,QAAQ,YAAY;AACjC,SAAO,YAAY,MAAM,KAAKR,QAAM,OAAO,KAAK,UAAU;AAC9D;AAFS,OAAAQ,UAAA;AAIT,SAASC,aAAW,QAAQ,YAAY;AACpC,SAAQ,YAAY,MAAM,KACtB,OAAO,OAAO,OAAO,UAAU,EAAE,KAAK,CAACN,YAAWH,QAAMG,SAAQ,UAAU,CAAC,KAC1E,SAAS,OAAO,oBAAoB,KAAKH,QAAM,OAAO,sBAAsB,UAAU;AAC/F;AAJS,OAAAS,cAAA;AAMT,SAASC,aAAY,QAAQ,YAAY;AACrC,SAAO,YAAY,MAAM,KAAKV,QAAM,OAAO,MAAM,UAAU;AAC/D;AAFS,OAAAU,cAAA;AAIT,SAASC,aAAW,QAAQ,YAAY;AACpC,QAAM,UAAU,OAAO,oBAAoB,OAAO,iBAAiB,EAAE,CAAC;AACtE,QAAM,WAAW,OAAO,kBAAkB,OAAO;AACjD,SAAO,YAAY,MAAM,KAAKX,QAAM,UAAU,UAAU,KAAM,SAAS,OAAO,oBAAoB,KAAK,YAAY,OAAO,oBAAoB;AAClJ;AAJS,OAAAW,cAAA;AAMT,SAASC,UAAQ,QAAQ,YAAY;AACjC,MAAI,YAAY,MAAM;AAClB,WAAO;AACX,SAAOZ,QAAM,MAAM,QAAQ,UAAU,GAAG,UAAU;AACtD;AAJS,OAAAY,WAAA;AAMT,SAASC,UAAS,QAAQ,YAAY;AAClC,MAAI,YAAY,MAAM;AAClB,WAAO;AACX,SAAOb,QAAM,MAAM,QAAQ,UAAU,GAAG,UAAU;AACtD;AAJS,OAAAa,WAAA;AAMT,SAASC,YAAU,QAAQ,YAAY;AACnC,SAAO,YAAY,MAAM,KAAM,CAACC,aAAY,OAAO,KAAK,KAAK,OAAO,MAAM,KAAK,CAACZ,YAAWH,QAAMG,SAAQ,UAAU,CAAC;AACxH;AAFS,OAAAW,aAAA;AAIT,SAASE,YAAU,QAAQ,YAAY;AACnC,SAAO,YAAY,MAAM,KAAK,OAAO,MAAM,KAAK,CAACb,YAAWH,QAAMG,SAAQ,UAAU,CAAC;AACzF;AAFS,OAAAa,aAAA;AAIT,SAAShB,QAAM,QAAQ,YAAY;AAC/B,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,MAAI,OAAO,OAAO,QAAQ,IAAI,OAAO,GAAG;AACpC,WAAO;AACX,MAAI,OAAO;AACP,YAAQ,IAAI,OAAO,GAAG;AAC1B,UAAQ,OAAO,IAAI,GAAG;AAAA,IAClB,KAAK;AACD,aAAOD,YAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOE,mBAAkB,SAAS,WAAW;AAAA,IACjD,KAAK;AACD,aAAOC,iBAAgB,SAAS,WAAW;AAAA,IAC/C,KAAK;AACD,aAAOE,cAAa,SAAS,WAAW;AAAA,IAC5C,KAAK;AACD,aAAOE,YAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOD,gBAAc,SAAS,WAAW;AAAA,IAC7C,KAAK;AACD,aAAOE,cAAa,SAAS,WAAW;AAAA,IAC5C,KAAK;AACD,aAAOC,SAAQ,SAAS,WAAW;AAAA,IACvC,KAAK;AACD,aAAOC,aAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,aAAY,SAAS,WAAW;AAAA,IAC3C,KAAK;AACD,aAAOC,aAAW,SAAS,WAAW;AAAA,IAC1C,KAAK;AACD,aAAOC,UAAQ,SAAS,WAAW;AAAA,IACvC,KAAK;AACD,aAAOC,UAAS,SAAS,WAAW;AAAA,IACxC,KAAK;AACD,aAAOC,YAAU,SAAS,WAAW;AAAA,IACzC,KAAK;AACD,aAAOE,YAAU,SAAS,WAAW;AAAA,IACzC;AACI,aAAO,YAAY,MAAM;AAAA,EACjC;AACJ;AAzCS,OAAAhB,SAAA;AA0CT,IAAM,UAAU,oBAAI,IAAI;AAEjB,SAAS,aAAa,QAAQ,YAAY;AAC7C,UAAQ,MAAM;AACd,SAAOA,QAAM,QAAQ,UAAU;AACnC;AAHgB;;;AHzHT,SAAS,UAAU,MAAM;AAC5B,QAAM,CAAC,QAAQ,YAAY,KAAK,IAAI,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC3G,MAAI,CAAC,MAAM,QAAQ,YAAY,KAAK;AAChC,UAAM,IAAI,0BAA0B,QAAQ,OAAO,OAAO,QAAQ,YAAY,KAAK,EAAE,MAAM,CAAC;AAChG,SAAO,aAAa,QAAQ,UAAU,IAAI,gBAAgB,QAAQ,YAAY,KAAK,IAAI;AAC3F;AALgB;;;AIJhB;AAAA;AAAAiB;AAeA,SAAS,eAAe,QAAQ,OAAO;AACnC,QAAM,eAAeC,gBAAe,QAAQ,SAAS,IAAI,OAAO,UAAU;AAC1E,QAAM,QAAQC,YAAW,YAAY,IAAI,aAAa,IAAIC,OAAM,YAAY;AAC5E,SAAOC,aAAY,KAAK,IAAI,QAAQC,UAAS,KAAK,KAAKA,UAAS,KAAK,IAAI,OAAO,OAAO,OAAO,KAAK,IAAI;AAC3G;AAJS;AAQT,SAAS,mBAAmB,QAAQ;AAChC,SAAO,OAAO,MAAM,KAAK,aAAa;AAC1C;AAFS;AAMT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAE1C,MAAIC,SAAQ,KAAK,GAAG;AAChB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,CAAC,IAAIC,QAAM,OAAO,OAAO,YAAY,MAAM,CAAC,CAAC;AAAA,IACvD;AACA,WAAO;AAAA,EACX;AAEA,QAAM,YAAY,eAAe,QAAQ,KAAK;AAC9C,MAAI,CAACD,SAAQ,SAAS;AAClB,WAAO;AACX,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,cAAU,CAAC,IAAIC,QAAM,OAAO,OAAO,YAAY,UAAU,CAAC,CAAC;AAAA,EAC/D;AACA,SAAO;AACX;AAhBS,OAAAF,aAAA;AAiBT,SAASG,UAAS,QAAQ,YAAY,OAAO;AAEzC,SAAOC,QAAO,KAAK,IAAI,QAAQ,eAAe,QAAQ,KAAK;AAC/D;AAHS,OAAAD,WAAA;AAIT,SAASE,aAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,cAAc,WAAW,OAAO,OAAO,OAAO,KAAK;AACzD,QAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACvC,SAAOH,QAAM,QAAQ,CAAC,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK;AAC/D;AAJS,OAAAG,cAAA;AAKT,SAASC,gBAAc,QAAQ,YAAY,OAAO;AAC9C,QAAM,YAAY,eAAe,QAAQ,KAAK;AAC9C,SAAO,OAAO,MAAM,OAAO,CAAC,KAAKC,YAAW;AACxC,UAAM,OAAOL,QAAMK,SAAQ,YAAY,SAAS;AAChD,WAAOR,UAAS,IAAI,IAAI,EAAE,GAAG,KAAK,GAAG,KAAK,IAAI;AAAA,EAClD,GAAG,CAAC,CAAC;AACT;AANS,OAAAO,iBAAA;AAOT,SAASE,aAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,YAAY,eAAe,QAAQ,KAAK;AAE9C,MAAI,CAACT,UAAS,SAAS;AACnB,WAAO;AACX,QAAM,oBAAoB,OAAO,oBAAoB,OAAO,UAAU;AAEtE,aAAW,OAAO,mBAAmB;AAIjC,UAAM,gBAAgBG,QAAM,OAAO,WAAW,GAAG,GAAG,YAAY,UAAU,GAAG,CAAC;AAC9E,QAAIJ,aAAY,aAAa;AACzB;AACJ,cAAU,GAAG,IAAII,QAAM,OAAO,WAAW,GAAG,GAAG,YAAY,UAAU,GAAG,CAAC;AAAA,EAC7E;AAEA,MAAI,CAAC,mBAAmB,OAAO,oBAAoB;AAC/C,WAAO;AAEX,aAAW,OAAO,OAAO,oBAAoB,SAAS,GAAG;AACrD,QAAI,kBAAkB,SAAS,GAAG;AAC9B;AACJ,cAAU,GAAG,IAAIA,QAAM,OAAO,sBAAsB,YAAY,UAAU,GAAG,CAAC;AAAA,EAClF;AACA,SAAO;AACX;AA1BS,OAAAM,cAAA;AA2BT,SAASC,aAAW,QAAQ,YAAY,OAAO;AAC3C,QAAM,YAAY,eAAe,QAAQ,KAAK;AAC9C,MAAI,CAACV,UAAS,SAAS;AACnB,WAAO;AACX,QAAM,6BAA6B,OAAO;AAC1C,QAAM,CAAC,oBAAoB,cAAc,IAAI,OAAO,QAAQ,OAAO,iBAAiB,EAAE,CAAC;AACvF,QAAM,mBAAmB,IAAI,OAAO,kBAAkB;AAEtD,aAAW,OAAO,OAAO,oBAAoB,SAAS,GAAG;AACrD,QAAI,EAAE,iBAAiB,KAAK,GAAG,KAAK,mBAAmB,cAAc;AACjE;AACJ,cAAU,GAAG,IAAIG,QAAM,gBAAgB,YAAY,UAAU,GAAG,CAAC;AAAA,EACrE;AAEA,MAAI,CAAC,mBAAmB,0BAA0B;AAC9C,WAAO;AAEX,aAAW,OAAO,OAAO,oBAAoB,SAAS,GAAG;AACrD,QAAI,iBAAiB,KAAK,GAAG;AACzB;AACJ,cAAU,GAAG,IAAIA,QAAM,4BAA4B,YAAY,UAAU,GAAG,CAAC;AAAA,EACjF;AACA,SAAO;AACX;AAvBS,OAAAO,cAAA;AAwBT,SAASC,UAAQ,QAAQ,YAAY,OAAO;AACxC,SAAOR,QAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,eAAe,QAAQ,KAAK,CAAC;AACrF;AAFS,OAAAQ,WAAA;AAGT,SAASC,WAAS,QAAQ,YAAY,OAAO;AACzC,SAAOT,QAAM,MAAM,QAAQ,UAAU,GAAG,YAAY,KAAK;AAC7D;AAFS,OAAAS,YAAA;AAGT,SAASC,YAAU,QAAQ,YAAY,OAAO;AAC1C,QAAM,YAAY,eAAe,QAAQ,KAAK;AAC9C,MAAI,CAACX,SAAQ,SAAS,KAAKH,aAAY,OAAO,KAAK;AAC/C,WAAO;AACX,QAAM,CAAC,OAAOe,IAAG,IAAI,CAAC,OAAO,OAAO,KAAK,IAAI,OAAO,MAAM,QAAQ,UAAU,MAAM,CAAC;AACnF,WAAS,IAAI,GAAG,IAAIA,MAAK,KAAK;AAC1B,QAAI,IAAI,MAAM;AACV,gBAAU,CAAC,IAAIX,QAAM,MAAM,CAAC,GAAG,YAAY,UAAU,CAAC,CAAC;AAAA,EAC/D;AACA,SAAO;AACX;AAVS,OAAAU,aAAA;AAWT,SAASE,YAAU,QAAQ,YAAY,OAAO;AAC1C,QAAM,YAAY,eAAe,QAAQ,KAAK;AAC9C,aAAW,SAAS,OAAO,OAAO;AAC9B,UAAM,SAASZ,QAAM,OAAO,YAAYL,OAAM,SAAS,CAAC;AACxD,QAAI,MAAM,OAAO,YAAY,MAAM,GAAG;AAClC,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AATS,OAAAiB,aAAA;AAUT,SAASZ,QAAM,QAAQ,YAAY,OAAO;AACtC,QAAM,cAAc,QAAQ,QAAQ,UAAU;AAC9C,QAAM,UAAU;AAChB,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACnB,KAAK;AACD,aAAOF,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOG,UAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOE,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,gBAAc,SAAS,aAAa,KAAK;AAAA,IACpD,KAAK;AACD,aAAOE,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,IACjD,KAAK;AACD,aAAOC,UAAQ,SAAS,aAAa,KAAK;AAAA,IAC9C,KAAK;AACD,aAAOC,WAAS,SAAS,aAAa,KAAK;AAAA,IAC/C,KAAK;AACD,aAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD,KAAK;AACD,aAAOE,YAAU,SAAS,aAAa,KAAK;AAAA,IAChD;AACI,aAAO,eAAe,SAAS,KAAK;AAAA,EAC5C;AACJ;AA3BS,OAAAZ,SAAA;AA6BF,SAASa,YAAW,MAAM;AAC7B,SAAO,KAAK,WAAW,IAAIb,QAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAIA,QAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5F;AAFgB,OAAAa,UAAA;;;ACzKhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,aAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA,WAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;AAIO,IAAM,2BAAN,cAAuC,aAAa;AAAA,EAJ3D,OAI2D;AAAA;AAAA;AAAA,EACvD,YAAY,OAAO,MAAM,QAAQ;AAC7B,UAAM,uBAAuB;AAC7B,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAClB;AACJ;AACO,IAAM,8BAAN,cAA0C,aAAa;AAAA,EAZ9D,OAY8D;AAAA;AAAA;AAAA,EAC1D,YAAY,OAAO,MAAM;AACrB,UAAM,0BAA0B;AAChC,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAMA,SAASC,QAAO,WAAW;AACvB,SAAO,UAAU,QAAQ,GAAG,MAAM,KAAK,YAAY,UAAU,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AACvG;AAFS,OAAAA,SAAA;AAKF,UAAU,OAAO,SAAS;AAC7B,MAAI,YAAY;AACZ;AACJ,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AACxB,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,UAAM,OAAO,QAAQ,OAAO,CAAC;AAC7B,QAAI,SAAS,KAAK;AACd,UAAI,MAAM,GAAG;AACT,gBAAQ,IAAI;AAAA,MAChB,OACK;AACD,cAAM;AACN,cAAMA,QAAO,QAAQ,MAAM,OAAO,GAAG,CAAC;AACtC,gBAAQ,IAAI;AAAA,MAChB;AAAA,IACJ,OACK;AACD,YAAM;AAAA,IACV;AAAA,EACJ;AACA,QAAMA,QAAO,QAAQ,MAAM,KAAK,CAAC;AACrC;AArBiB;AAwBV,SAASC,KAAI,OAAO,SAAS,QAAQ;AACxC,MAAI,YAAY;AACZ,UAAM,IAAI,yBAAyB,OAAO,SAAS,MAAM;AAC7D,MAAI,CAAC,OAAO,MAAM,GAAG,IAAI,CAAC,MAAM,OAAO,EAAE;AACzC,aAAW,aAAa,OAAO,OAAO,GAAG;AACrC,QAAI,KAAK,SAAS,MAAM;AACpB,WAAK,SAAS,IAAI,CAAC;AACvB,YAAQ;AACR,WAAO,KAAK,SAAS;AACrB,UAAM;AAAA,EACV;AACA,QAAM,GAAG,IAAI;AACjB;AAZgB,OAAAA,MAAA;AAeT,SAASC,QAAO,OAAO,SAAS;AACnC,MAAI,YAAY;AACZ,UAAM,IAAI,4BAA4B,OAAO,OAAO;AACxD,MAAI,CAAC,OAAO,MAAM,GAAG,IAAI,CAAC,MAAM,OAAO,EAAE;AACzC,aAAW,aAAa,OAAO,OAAO,GAAG;AACrC,QAAI,KAAK,SAAS,MAAM,UAAa,KAAK,SAAS,MAAM;AACrD;AACJ,YAAQ;AACR,WAAO,KAAK,SAAS;AACrB,UAAM;AAAA,EACV;AACA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,UAAM,QAAQ,SAAS,GAAG;AAC1B,UAAM,OAAO,OAAO,CAAC;AAAA,EACzB,OACK;AACD,WAAO,MAAM,GAAG;AAAA,EACpB;AACJ;AAlBgB,OAAAA,SAAA;AAqBT,SAASC,KAAI,OAAO,SAAS;AAChC,MAAI,YAAY;AACZ,WAAO;AACX,MAAI,CAAC,OAAO,MAAM,GAAG,IAAI,CAAC,MAAM,OAAO,EAAE;AACzC,aAAW,aAAa,OAAO,OAAO,GAAG;AACrC,QAAI,KAAK,SAAS,MAAM;AACpB,aAAO;AACX,YAAQ;AACR,WAAO,KAAK,SAAS;AACrB,UAAM;AAAA,EACV;AACA,SAAO,OAAO,oBAAoB,KAAK,EAAE,SAAS,GAAG;AACzD;AAZgB,OAAAA,MAAA;AAeT,SAASC,KAAI,OAAO,SAAS;AAChC,MAAI,YAAY;AACZ,WAAO;AACX,MAAI,UAAU;AACd,aAAW,aAAa,OAAO,OAAO,GAAG;AACrC,QAAI,QAAQ,SAAS,MAAM;AACvB,aAAO;AACX,cAAU,QAAQ,SAAS;AAAA,EAC/B;AACA,SAAO;AACX;AAVgB,OAAAA,MAAA;;;ACxGhB;AAAA;AAAAC;AAIA,SAASC,YAAW,MAAM,OAAO;AAC7B,MAAI,CAACC,UAAS,KAAK;AACf,WAAO;AACX,QAAM,WAAW,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG,GAAG,OAAO,sBAAsB,IAAI,CAAC;AAC7E,QAAM,YAAY,CAAC,GAAG,OAAO,KAAK,KAAK,GAAG,GAAG,OAAO,sBAAsB,KAAK,CAAC;AAChF,MAAI,SAAS,WAAW,UAAU;AAC9B,WAAO;AACX,SAAO,SAAS,MAAM,CAAC,QAAQ,MAAM,KAAK,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC;AAC/D;AARS,OAAAD,aAAA;AAST,SAASE,UAAS,MAAM,OAAO;AAC3B,SAAOC,QAAO,KAAK,KAAK,KAAK,QAAQ,MAAM,MAAM,QAAQ;AAC7D;AAFS,OAAAD,WAAA;AAGT,SAASE,WAAU,MAAM,OAAO;AAC5B,MAAI,CAACC,SAAQ,KAAK,KAAK,KAAK,WAAW,MAAM;AACzC,WAAO;AACX,SAAO,KAAK,MAAM,CAAC,OAAO,UAAU,MAAM,OAAO,MAAM,KAAK,CAAC,CAAC;AAClE;AAJS,OAAAD,YAAA;AAKT,SAAS,eAAe,MAAM,OAAO;AACjC,MAAI,CAAC,aAAa,KAAK,KAAK,KAAK,WAAW,MAAM,UAAU,OAAO,eAAe,IAAI,EAAE,YAAY,SAAS,OAAO,eAAe,KAAK,EAAE,YAAY;AAClJ,WAAO;AACX,SAAO,KAAK,MAAM,CAAC,OAAO,UAAU,MAAM,OAAO,MAAM,KAAK,CAAC,CAAC;AAClE;AAJS;AAKT,SAAS,UAAU,MAAM,OAAO;AAC5B,SAAO,SAAS;AACpB;AAFS;AAOF,SAAS,MAAM,MAAM,OAAO;AAC/B,MAAID,QAAO,IAAI;AACX,WAAOD,UAAS,MAAM,KAAK;AAC/B,MAAI,aAAa,IAAI;AACjB,WAAO,eAAe,MAAM,KAAK;AACrC,MAAIG,SAAQ,IAAI;AACZ,WAAOD,WAAU,MAAM,KAAK;AAChC,MAAIH,UAAS,IAAI;AACb,WAAOD,YAAW,MAAM,KAAK;AACjC,MAAI,YAAY,IAAI;AAChB,WAAO,UAAU,MAAM,KAAK;AAChC,QAAM,IAAI,MAAM,sCAAsC;AAC1D;AAZgB;;;AHvBT,IAAM,SAASM,QAAO;AAAA,EACzB,MAAM,QAAQ,QAAQ;AAAA,EACtB,MAAMC,QAAO;AAAA,EACb,OAAO,QAAQ;AACnB,CAAC;AACM,IAAM,SAASD,QAAO;AAAA,EACzB,MAAM,QAAQ,QAAQ;AAAA,EACtB,MAAMC,QAAO;AAAA,EACb,OAAO,QAAQ;AACnB,CAAC;AACM,IAAMC,UAASF,QAAO;AAAA,EACzB,MAAM,QAAQ,QAAQ;AAAA,EACtB,MAAMC,QAAO;AACjB,CAAC;AACM,IAAM,OAAO,MAAM,CAAC,QAAQ,QAAQC,OAAM,CAAC;AAI3C,IAAM,iBAAN,cAA6B,aAAa;AAAA,EA5BjD,OA4BiD;AAAA;AAAA;AAAA,EAC7C,YAAY,OAAO,SAAS;AACxB,UAAM,OAAO;AACb,SAAK,QAAQ;AAAA,EACjB;AACJ;AAIA,SAAS,aAAa,MAAM,OAAO;AAC/B,SAAO,EAAE,MAAM,UAAU,MAAM,MAAM;AACzC;AAFS;AAGT,SAAS,aAAa,MAAM,OAAO;AAC/B,SAAO,EAAE,MAAM,UAAU,MAAM,MAAM;AACzC;AAFS;AAGT,SAAS,aAAa,MAAM;AACxB,SAAO,EAAE,MAAM,UAAU,KAAK;AAClC;AAFS;AAMT,SAAS,eAAe,OAAO;AAC3B,MAAI,WAAW,OAAO,sBAAsB,KAAK,EAAE,SAAS;AACxD,UAAM,IAAI,eAAe,OAAO,kCAAkC;AAC1E;AAHS;AAOT,UAAUC,YAAW,MAAM,SAAS,MAAM;AACtC,iBAAe,OAAO;AACtB,iBAAe,IAAI;AACnB,MAAI,CAAC,iBAAiB,IAAI;AACtB,WAAO,MAAM,aAAa,MAAM,IAAI;AACxC,QAAM,cAAc,WAAW,OAAO,oBAAoB,OAAO;AACjE,QAAM,WAAW,WAAW,OAAO,oBAAoB,IAAI;AAI3D,aAAW,OAAO,UAAU;AACxB,QAAIC,gBAAe,SAAS,GAAG;AAC3B;AACJ,UAAM,aAAa,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,CAAC;AAAA,EAClD;AAIA,aAAW,OAAO,aAAa;AAC3B,QAAI,CAACA,gBAAe,MAAM,GAAG;AACzB;AACJ,QAAI,MAAM,SAAS,IAAI;AACnB;AACJ,WAAOC,QAAM,GAAG,IAAI,IAAI,GAAG,IAAI,QAAQ,GAAG,GAAG,KAAK,GAAG,CAAC;AAAA,EAC1D;AAIA,aAAW,OAAO,aAAa;AAC3B,QAAID,gBAAe,MAAM,GAAG;AACxB;AACJ,UAAM,aAAa,GAAG,IAAI,IAAI,GAAG,EAAE;AAAA,EACvC;AACJ;AAjCU,OAAAD,aAAA;AAkCV,UAAUG,WAAU,MAAM,SAAS,MAAM;AACrC,MAAI,CAACC,SAAQ,IAAI;AACb,WAAO,MAAM,aAAa,MAAM,IAAI;AACxC,WAAS,IAAI,GAAG,IAAI,KAAK,IAAI,QAAQ,QAAQ,KAAK,MAAM,GAAG,KAAK;AAC5D,WAAOF,QAAM,GAAG,IAAI,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,EACpD;AACA,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,QAAI,IAAI,QAAQ;AACZ;AACJ,UAAM,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;AAAA,EAC9C;AACA,WAAS,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,QAAI,IAAI,KAAK;AACT;AACJ,UAAM,aAAa,GAAG,IAAI,IAAI,CAAC,EAAE;AAAA,EACrC;AACJ;AAhBU,OAAAC,YAAA;AAiBV,UAAUE,gBAAe,MAAM,SAAS,MAAM;AAC1C,MAAI,CAAC,aAAa,IAAI,KAAK,QAAQ,WAAW,KAAK,UAAU,WAAW,OAAO,eAAe,OAAO,EAAE,YAAY,SAAS,WAAW,OAAO,eAAe,IAAI,EAAE,YAAY;AAC3K,WAAO,MAAM,aAAa,MAAM,IAAI;AACxC,WAAS,IAAI,GAAG,IAAI,KAAK,IAAI,QAAQ,QAAQ,KAAK,MAAM,GAAG,KAAK;AAC5D,WAAOH,QAAM,GAAG,IAAI,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,EACpD;AACJ;AANU,OAAAG,iBAAA;AAOV,UAAUC,WAAU,MAAM,SAAS,MAAM;AACrC,MAAI,YAAY;AACZ;AACJ,QAAM,aAAa,MAAM,IAAI;AACjC;AAJU,OAAAA,YAAA;AAKV,UAAUJ,QAAM,MAAM,SAAS,MAAM;AACjC,MAAI,iBAAiB,OAAO;AACxB,WAAO,OAAOF,YAAW,MAAM,SAAS,IAAI;AAChD,MAAII,SAAQ,OAAO;AACf,WAAO,OAAOD,WAAU,MAAM,SAAS,IAAI;AAC/C,MAAI,aAAa,OAAO;AACpB,WAAO,OAAOE,gBAAe,MAAM,SAAS,IAAI;AACpD,MAAI,YAAY,OAAO;AACnB,WAAO,OAAOC,WAAU,MAAM,SAAS,IAAI;AAC/C,QAAM,IAAI,eAAe,SAAS,sBAAsB;AAC5D;AAVU,OAAAJ,SAAA;AAcH,SAAS,KAAK,SAAS,MAAM;AAChC,SAAO,CAAC,GAAGA,QAAM,IAAI,SAAS,IAAI,CAAC;AACvC;AAFgB;AAMhB,SAAS,aAAa,OAAO;AACzB,SAAO,MAAM,SAAS,KAAK,MAAM,CAAC,EAAE,SAAS,MAAM,MAAM,CAAC,EAAE,SAAS;AACzE;AAFS;AAGT,SAAS,WAAW,OAAO;AACvB,SAAO,MAAM,WAAW;AAC5B;AAFS;AAGF,SAAS,MAAM,SAAS,OAAO;AAClC,MAAI,aAAa,KAAK,GAAG;AACrB,WAAOK,OAAM,MAAM,CAAC,EAAE,KAAK;AAAA,EAC/B;AACA,MAAI,WAAW,KAAK,GAAG;AACnB,WAAOA,OAAM,OAAO;AAAA,EACxB;AACA,QAAM,QAAQA,OAAM,OAAO;AAC3B,aAAW,QAAQ,OAAO;AACtB,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK,UAAU;AACX,wBAAa,IAAI,OAAO,KAAK,MAAM,KAAK,KAAK;AAC7C;AAAA,MACJ;AAAA,MACA,KAAK,UAAU;AACX,wBAAa,IAAI,OAAO,KAAK,MAAM,KAAK,KAAK;AAC7C;AAAA,MACJ;AAAA,MACA,KAAK,UAAU;AACX,wBAAa,OAAO,OAAO,KAAK,IAAI;AACpC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAzBgB;;;AIjJhB;AAAA;AAAAC;AAIO,SAAS,UAAU,MAAM;AAC5B,QAAM,CAAC,QAAQ,YAAY,KAAK,IAAI,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAC3G,QAAM,UAAU,aAAa,QAAQ,UAAU,IAAI,gBAAgB,QAAQ,YAAY,KAAK,IAAI;AAChG,MAAI,CAAC,MAAM,QAAQ,YAAY,OAAO;AAClC,UAAM,IAAI,0BAA0B,QAAQ,SAAS,OAAO,QAAQ,YAAY,OAAO,EAAE,MAAM,CAAC;AACpG,SAAO;AACX;AANgB;;;ACJhB;AAAA;AAAAC;AAOA,SAASC,kBAAiB,OAAO;AAC7B,SAAOC,UAAS,KAAK,KAAK,CAACC,SAAQ,KAAK;AAC5C;AAFS,OAAAF,mBAAA;AAMF,IAAM,mBAAN,cAA+B,aAAa;AAAA,EAbnD,OAamD;AAAA;AAAA;AAAA,EAC/C,YAAY,SAAS;AACjB,UAAM,OAAO;AAAA,EACjB;AACJ;AACA,SAASG,YAAW,MAAM,MAAM,SAAS,MAAM;AAC3C,MAAI,CAACH,kBAAiB,OAAO,GAAG;AAC5B,oBAAa,IAAI,MAAM,MAAMI,OAAM,IAAI,CAAC;AAAA,EAC5C,OACK;AACD,UAAM,cAAc,OAAO,oBAAoB,OAAO;AACtD,UAAM,WAAW,OAAO,oBAAoB,IAAI;AAChD,eAAW,cAAc,aAAa;AAClC,UAAI,CAAC,SAAS,SAAS,UAAU,GAAG;AAChC,eAAO,QAAQ,UAAU;AAAA,MAC7B;AAAA,IACJ;AACA,eAAW,WAAW,UAAU;AAC5B,UAAI,CAAC,YAAY,SAAS,OAAO,GAAG;AAChC,gBAAQ,OAAO,IAAI;AAAA,MACvB;AAAA,IACJ;AACA,eAAW,WAAW,UAAU;AAC5B,MAAAC,QAAM,MAAM,GAAG,IAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,GAAG,KAAK,OAAO,CAAC;AAAA,IACrE;AAAA,EACJ;AACJ;AArBS,OAAAF,aAAA;AAsBT,SAASG,WAAU,MAAM,MAAM,SAAS,MAAM;AAC1C,MAAI,CAACJ,SAAQ,OAAO,GAAG;AACnB,oBAAa,IAAI,MAAM,MAAME,OAAM,IAAI,CAAC;AAAA,EAC5C,OACK;AACD,aAAS,QAAQ,GAAG,QAAQ,KAAK,QAAQ,SAAS;AAC9C,MAAAC,QAAM,MAAM,GAAG,IAAI,IAAI,KAAK,IAAI,QAAQ,KAAK,GAAG,KAAK,KAAK,CAAC;AAAA,IAC/D;AACA,YAAQ,OAAO,KAAK,MAAM;AAAA,EAC9B;AACJ;AAVS,OAAAC,YAAA;AAWT,SAASC,gBAAe,MAAM,MAAM,SAAS,MAAM;AAC/C,MAAI,aAAa,OAAO,KAAK,QAAQ,WAAW,KAAK,QAAQ;AACzD,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,cAAQ,CAAC,IAAI,KAAK,CAAC;AAAA,IACvB;AAAA,EACJ,OACK;AACD,oBAAa,IAAI,MAAM,MAAMH,OAAM,IAAI,CAAC;AAAA,EAC5C;AACJ;AATS,OAAAG,iBAAA;AAUT,SAASC,WAAU,MAAM,MAAM,SAAS,MAAM;AAC1C,MAAI,YAAY;AACZ;AACJ,kBAAa,IAAI,MAAM,MAAM,IAAI;AACrC;AAJS,OAAAA,YAAA;AAKT,SAASH,QAAM,MAAM,MAAM,SAAS,MAAM;AACtC,MAAIH,SAAQ,IAAI;AACZ,WAAOI,WAAU,MAAM,MAAM,SAAS,IAAI;AAC9C,MAAI,aAAa,IAAI;AACjB,WAAOC,gBAAe,MAAM,MAAM,SAAS,IAAI;AACnD,MAAIP,kBAAiB,IAAI;AACrB,WAAOG,YAAW,MAAM,MAAM,SAAS,IAAI;AAC/C,MAAI,YAAY,IAAI;AAChB,WAAOK,WAAU,MAAM,MAAM,SAAS,IAAI;AAClD;AATS,OAAAH,SAAA;AAaT,SAAS,kBAAkB,OAAO;AAC9B,SAAO,aAAa,KAAK,KAAK,YAAY,KAAK;AACnD;AAFS;AAGT,SAAS,kBAAkB,SAAS,MAAM;AAEtC,SAASL,kBAAiB,OAAO,KAAKE,SAAQ,IAAI,KAC7CA,SAAQ,OAAO,KAAKF,kBAAiB,IAAI;AAClD;AAJS;AASF,SAAS,OAAO,SAAS,MAAM;AAClC,MAAI,kBAAkB,OAAO,KAAK,kBAAkB,IAAI;AACpD,UAAM,IAAI,iBAAiB,8DAA8D;AAC7F,MAAI,kBAAkB,SAAS,IAAI;AAC/B,UAAM,IAAI,iBAAiB,sDAAsD;AACrF,EAAAK,QAAM,SAAS,IAAI,SAAS,IAAI;AACpC;AANgB;;;AC3FhB;AAAA;AAAAI;AAeO,IAAM,aAAN,cAAyB,aAAa;AAAA,EAf7C,OAe6C;AAAA;AAAA;AAAA,EACzC,YAAY,SAAS;AACjB,UAAM,OAAO;AAAA,EACjB;AACJ;AAEO,IAAI;AAAA,CACV,SAAUC,gBAAe;AACtB,QAAM,WAAW,oBAAI,IAAI;AAAA,IACrB,CAAC,UAAU,CAAC,MAAM,YAAY,UAAU;AAAE,aAAO,MAAM,YAAY,KAAK;AAAG,aAAO;AAAA,IAAO,CAAC;AAAA,IAC1F,CAAC,QAAQ,CAAC,MAAM,YAAY,UAAU,KAAK,MAAM,YAAY,KAAK,CAAC;AAAA,IACnE,CAAC,SAAS,CAAC,MAAM,YAAY,UAAU,MAAM,MAAM,YAAY,KAAK,CAAC;AAAA,IACrE,CAAC,SAAS,CAAC,OAAO,aAAa,UAAUC,OAAM,KAAK,CAAC;AAAA,IACrD,CAAC,WAAW,CAAC,MAAM,YAAY,UAAU,QAAQ,MAAM,YAAY,KAAK,CAAC;AAAA,IACzE,CAAC,UAAU,CAAC,MAAM,YAAY,UAAW,aAAa,MAAM,UAAU,IAAI,gBAAgB,MAAM,YAAY,KAAK,IAAI,KAAM;AAAA,IAC3H,CAAC,WAAW,CAAC,MAAM,YAAY,UAAUC,SAAQ,MAAM,YAAY,KAAK,CAAC;AAAA,IACzE,CAAC,UAAU,CAAC,MAAM,YAAY,UAAW,aAAa,MAAM,UAAU,IAAI,gBAAgB,MAAM,YAAY,KAAK,IAAI,KAAM;AAAA,EAC/H,CAAC;AAED,WAASC,QAAO,KAAK;AACjB,aAAS,OAAO,GAAG;AAAA,EACvB;AAFS,SAAAA,SAAA;AAGT,EAAAH,eAAc,SAASG;AAEvB,WAASC,KAAI,KAAK,UAAU;AACxB,aAAS,IAAI,KAAK,QAAQ;AAAA,EAC9B;AAFS,SAAAA,MAAA;AAGT,EAAAJ,eAAc,MAAMI;AAEpB,WAASC,KAAI,KAAK;AACd,WAAO,SAAS,IAAI,GAAG;AAAA,EAC3B;AAFS,SAAAA,MAAA;AAGT,EAAAL,eAAc,MAAMK;AACxB,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAKjC,IAAM,eAAe;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAIA,SAAS,WAAW,YAAY,MAAM,YAAY,OAAO;AACrD,SAAO,WAAW,OAAO,CAACC,QAAO,iBAAiB;AAC9C,UAAM,YAAY,cAAc,IAAI,YAAY;AAChD,QAAIC,aAAY,SAAS;AACrB,YAAM,IAAI,WAAW,mCAAmC,YAAY,GAAG;AAC3E,WAAO,UAAU,MAAM,YAAYD,MAAK;AAAA,EAC5C,GAAG,KAAK;AACZ;AAPS;AASF,SAAS,SAAS,MAAM;AAE3B,QAAM,CAAC,YAAY,QAAQ,YAAY,KAAK,IAAK,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IACpG,KAAK,WAAW,IAAIE,SAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAC7G,KAAK,WAAW,IAAI,CAAC,cAAc,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,KAClD,MAAM;AAAE,UAAM,IAAI,WAAW,mBAAmB;AAAA,EAAG,GAAG;AACnE,SAAO,WAAW,YAAY,QAAQ,YAAY,KAAK;AAC3D;AAPgB;;;ACzEhB;AAAA;AAAAC;;;ACAA,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,iBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAuBO,IAAM,YAAN,MAAgB;AAAA,EAvBvB,OAuBuB;AAAA;AAAA;AAAA,EACnB,YAAY,QAAQ,YAAY,WAAW,MAAM;AAC7C,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,YAAY;AACjB,SAAK,OAAO;AACZ,SAAK,eAAe,aAAa,QAAQ,UAAU;AAAA,EACvD;AAAA;AAAA,EAEA,OAAO;AACH,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,SAAS;AACL,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,aAAa;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,OAAO,OAAO;AACV,WAAO,OAAO,KAAK,QAAQ,KAAK,YAAY,KAAK;AAAA,EACrD;AAAA;AAAA,EAEA,MAAM,OAAO;AACT,WAAO,KAAK,UAAU,KAAK;AAAA,EAC/B;AAAA;AAAA,EAEA,OAAO,OAAO;AACV,QAAI,CAAC,KAAK,UAAU,KAAK;AACrB,YAAM,IAAI,0BAA0B,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,EAAE,MAAM,CAAC;AACtF,WAAQ,KAAK,eAAe,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,IAAI;AAAA,EACvF;AAAA;AAAA,EAEA,OAAO,OAAO;AACV,UAAM,UAAU,KAAK,eAAe,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,IAAI;AAC3F,QAAI,CAAC,KAAK,UAAU,OAAO;AACvB,YAAM,IAAI,0BAA0B,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,EAAE,MAAM,CAAC;AACtF,WAAO;AAAA,EACX;AACJ;AAIA,IAAI;AAAA,CACH,SAAUC,YAAW;AAClB,WAAS,WAAW,MAAM;AACtB,WAAO,SAAS;AAAA,EACpB;AAFS;AAGT,EAAAA,WAAU,aAAa;AACvB,WAAS,aAAa,MAAM;AACxB,WAAO,SAAS;AAAA,EACpB;AAFS;AAGT,EAAAA,WAAU,eAAe;AACzB,WAAS,QAAQ,MAAM;AACnB,WAAQ,QAAQ,MAAM,QAAQ,MAAQ,QAAQ,MAAM,QAAQ;AAAA,EAChE;AAFS;AAGT,EAAAA,WAAU,UAAU;AACpB,WAAS,UAAU,MAAM;AACrB,WAAO,QAAQ,MAAM,QAAQ;AAAA,EACjC;AAFS;AAGT,EAAAA,WAAU,YAAY;AAC1B,GAAG,cAAc,YAAY,CAAC,EAAE;AAIhC,IAAI;AAAA,CACH,SAAUC,mBAAkB;AACzB,WAAS,wBAAwB,OAAO;AACpC,QAAI,MAAM,WAAW;AACjB,aAAO;AACX,WAAO,UAAU,UAAU,MAAM,WAAW,CAAC,CAAC;AAAA,EAClD;AAJS;AAKT,WAAS,WAAW,OAAO;AACvB,QAAI,wBAAwB,KAAK;AAC7B,aAAO;AACX,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAM,OAAO,MAAM,WAAW,CAAC;AAC/B,YAAM,QAAQ,UAAU,QAAQ,IAAI,KAAK,UAAU,UAAU,IAAI,KAAK,UAAU,WAAW,IAAI,KAAK,UAAU,aAAa,IAAI;AAC/H,UAAI,CAAC;AACD,eAAO;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAVS;AAWT,WAAS,aAAa,KAAK;AACvB,WAAO,IAAI,QAAQ,MAAM,KAAK;AAAA,EAClC;AAFS;AAGT,WAASC,QAAOC,SAAQ,KAAK;AACzB,WAAO,WAAW,GAAG,IAAI,GAAGA,OAAM,IAAI,GAAG,KAAK,GAAGA,OAAM,KAAK,aAAa,GAAG,CAAC;AAAA,EACjF;AAFS,SAAAD,SAAA;AAGT,EAAAD,kBAAiB,SAASC;AAC9B,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;AAI9C,IAAI;AAAA,CACH,SAAUE,aAAY;AACnB,WAASF,QAAO,KAAK;AACjB,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,UAAI,UAAU,UAAU,IAAI,KAAK,UAAU,QAAQ,IAAI,GAAG;AACtD,eAAO,KAAK,IAAI,OAAO,CAAC,CAAC;AAAA,MAC7B,OACK;AACD,eAAO,KAAK,IAAI,IAAI,GAAG;AAAA,MAC3B;AAAA,IACJ;AACA,WAAO,OAAO,KAAK,EAAE,EAAE,QAAQ,OAAO,GAAG;AAAA,EAC7C;AAZS,SAAAA,SAAA;AAaT,EAAAE,YAAW,SAASF;AACxB,GAAG,eAAe,aAAa,CAAC,EAAE;AAIlC,IAAI;AAAA,CACH,SAAUG,gBAAe;AACtB,WAASC,QAAO,SAAS;AACrB,WAAO,QAAQ,QAAQ,MAAM,KAAK;AAAA,EACtC;AAFS,SAAAA,SAAA;AAGT,EAAAD,eAAc,SAASC;AAC3B,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAIjC,IAAM,+BAAN,cAA2C,aAAa;AAAA,EArJ/D,OAqJ+D;AAAA;AAAA;AAAA,EAC3D,YAAY,QAAQ;AAChB,UAAM,cAAc;AACpB,SAAK,SAAS;AAAA,EAClB;AACJ;AACO,IAAM,6BAAN,cAAyC,aAAa;AAAA,EA3J7D,OA2J6D;AAAA;AAAA;AAAA,EACzD,YAAY,QAAQ;AAChB,UAAM,iEAAiE;AACvE,SAAK,SAAS;AAAA,EAClB;AACJ;AAIO,IAAI;AAAA,CACV,SAAUC,SAAQ;AACf,WAAS,wBAAwB,OAAO,KAAK,YAAY;AACrD,WAAO,iBAAiB,6BAA6B,KAAK,GAAG,QAAQ,KAAK,MAAM,UAAU,aAAa,IAAI,iBAAiB,OAAO,OAAO,GAAG,CAAC,oBAAoB,UAAU;AAAA,EAChL;AAFS;AAGT,EAAAA,QAAO,0BAA0B;AACjC,WAAS,aAAa,OAAO;AACzB,WAAO,CAAC,iBAAiB,mBAAmB,WAAW,KAAK,oBAAoB,KAAK,+BAA+B,KAAK,OAAO,WAAW,KAAK,oBAAoB,KAAK;AAAA,EAC7K;AAFS;AAGT,EAAAA,QAAO,eAAe;AACtB,WAAS,aAAa,OAAO;AACzB,WAAO,CAAC,iBAAiB,mBACnB,WAAW,KAAK,oBAAoB,KAAK,+BAA+B,KAAK,UAAU,KAAK,0BAA0B,KAAK,6BAC3H,WAAW,KAAK,oBAAoB,KAAK,kBAAkB,KAAK,0BAA0B,KAAK;AAAA,EACzG;AAJS;AAKT,EAAAA,QAAO,eAAe;AACtB,WAAS,aAAa,OAAO;AACzB,WAAO,iBAAiB,WAAW,UAAU,KAAK,kBAAkB,mBAAmB,KAAK;AAAA,EAChG;AAFS;AAGT,EAAAA,QAAO,eAAe;AACtB,WAAS,WAAW,OAAO;AACvB,WAAO,iBAAiB,gBAAgB,IAAI,KAAK,qBAAqB,KAAK,eAAe,GAAG,KAAK;AAAA,EACtG;AAFS;AAGT,EAAAA,QAAO,aAAa;AACxB,GAAG,WAAW,SAAS,CAAC,EAAE;AAEnB,IAAI;AAAA,CACV,SAAUC,eAAc;AAIrB,WAASC,gBAAe,QAAQ;AAC5B,WAAO,OAAO,IAAI,MAAM,SAAS,OAAO,IAAI,MAAM;AAAA,EACtD;AAFS,SAAAA,iBAAA;AAMT,YAAUC,SAAQ,QAAQ,YAAY,OAAO;AACzC,UAAM;AAAA,EACV;AAFU,SAAAA,UAAA;AAGV,YAAUC,cAAa,QAAQ,YAAY,OAAO;AAC9C,UAAM;AAAA,EACV;AAFU,SAAAA,eAAA;AAGV,YAAUC,YAAU,QAAQ,YAAY,OAAO;AAC3C,UAAM,iBAAiB,KAAK;AAC5B,UAAM,CAAC,WAAW,WAAW,IAAI,CAAC,gBAAgB,SAAS,KAAK,GAAG,gBAAgB,OAAO,QAAQ,CAAC;AACnG,QAAIC,UAAS,OAAO,QAAQ;AACxB,YAAM,GAAG,KAAK,cAAc,OAAO,QAAQ;AAC/C,QAAIA,UAAS,OAAO,QAAQ;AACxB,YAAM,GAAG,KAAK,cAAc,OAAO,QAAQ;AAC/C,UAAM,oBAAoB,iBAAiB,OAAO,OAAO,YAAY,OAAO;AAC5E,UAAM,GAAG,KAAK,WAAW,SAAS,QAAQ,iBAAiB;AAC3D,QAAIC,UAAS,OAAO,QAAQ,KAAKD,UAAS,OAAO,WAAW,KAAKA,UAAS,OAAO,WAAW,GAAG;AAC3F,YAAM,iBAAiBC,UAAS,OAAO,QAAQ,IAAI,OAAO,WAAW,MAAM;AAC3E,YAAM,kBAAkB,iBAAiB,gBAAgB,YAAY,OAAO;AAC5E,YAAM,mBAAmBD,UAAS,OAAO,WAAW,IAAI,CAAC,aAAa,OAAO,WAAW,GAAG,IAAI,CAAC;AAChG,YAAM,mBAAmBA,UAAS,OAAO,WAAW,IAAI,CAAC,aAAa,OAAO,WAAW,GAAG,IAAI,CAAC;AAChG,YAAM,aAAa,+BAA+B,WAAW,KAAK,SAAS,QAAQ,eAAe;AAClG,YAAM,QAAQ,CAAC,eAAe,GAAG,kBAAkB,GAAG,gBAAgB,EAAE,KAAK,MAAM;AACnF,YAAM,KAAK,SAAS,UAAU,UAAU,YAAY,KAAK,MAAM,KAAK;AAAA,IACxE;AACA,QAAI,OAAO,gBAAgB,MAAM;AAC7B,YAAM,QAAQ;AACd,YAAM,QAAQ,wDAAwD,KAAK;AAC3E,YAAM,KAAK,SAAS,UAAU,KAAK,MAAM,KAAK;AAAA,IAClD;AAAA,EACJ;AAvBU,SAAAD,aAAA;AAwBV,YAAUG,mBAAkB,QAAQ,YAAY,OAAO;AACnD,UAAM,yDAAyD,KAAK;AAAA,EACxE;AAFU,SAAAA,oBAAA;AAGV,YAAUC,YAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,WAAW,KAAK;AACtB,QAAIC,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,aAAa,OAAO,gBAAgB;AACtD,QAAIA,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,aAAa,OAAO,gBAAgB;AACtD,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,cAAc,OAAO,OAAO;AAC9C,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,cAAc,OAAO,OAAO;AAC9C,QAAIA,UAAS,OAAO,UAAU;AAC1B,YAAM,IAAI,KAAK,aAAa,OAAO,UAAU;AAAA,EACrD;AAZU,SAAAD,aAAA;AAaV,YAAUE,aAAY,QAAQ,YAAY,OAAO;AAC7C,UAAM,WAAW,KAAK;AAAA,EAC1B;AAFU,SAAAA,cAAA;AAGV,YAAUC,iBAAgB,QAAQ,YAAY,OAAO;AACjD,WAAOC,QAAM,OAAO,SAAS,YAAY,GAAG,KAAK,YAAY;AAAA,EACjE;AAFU,SAAAD,kBAAA;AAGV,YAAUE,UAAS,QAAQ,YAAY,OAAO;AAC1C,UAAM,IAAI,KAAK,wCAAwC,KAAK;AAC5D,QAAIR,UAAS,OAAO,yBAAyB;AACzC,YAAM,GAAG,KAAK,gBAAgB,OAAO,yBAAyB;AAClE,QAAIA,UAAS,OAAO,yBAAyB;AACzC,YAAM,GAAG,KAAK,gBAAgB,OAAO,yBAAyB;AAClE,QAAIA,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,iBAAiB,OAAO,gBAAgB;AAC1D,QAAIA,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,iBAAiB,OAAO,gBAAgB;AAC1D,QAAIA,UAAS,OAAO,mBAAmB;AACnC,YAAM,IAAI,KAAK,gBAAgB,OAAO,mBAAmB;AAAA,EACjE;AAZU,SAAAQ,WAAA;AAaV,YAAUC,cAAa,QAAQ,YAAY,OAAO;AAC9C,UAAM,WAAW,KAAK;AAAA,EAC1B;AAFU,SAAAA,eAAA;AAGV,YAAUC,aAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,UAAU,WAAW,OAAO,oBAAoB,OAAO,KAAK,EAAE,OAAO,CAAC,QAAQ,QAAQ;AACxF,aAAO,CAAC,GAAG,QAAQ,OAAO,MAAM,GAAG,CAAC;AAAA,IACxC,GAAG,CAAC,CAAC;AACL,WAAOH,QAAM,IAAI,OAAO,IAAI,GAAG,CAAC,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK;AAAA,EACrE;AALU,SAAAG,cAAA;AAMV,YAAUC,aAAY,QAAQ,YAAY,OAAO;AAC7C,UAAM,oBAAoB,KAAK;AAC/B,QAAIX,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,MAAM,OAAO,gBAAgB;AAC/C,QAAIA,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,MAAM,OAAO,gBAAgB;AAC/C,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,OAAO,OAAO,OAAO;AACvC,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,OAAO,OAAO,OAAO;AACvC,QAAIA,UAAS,OAAO,UAAU;AAC1B,YAAM,IAAI,KAAK,MAAM,OAAO,UAAU;AAAA,EAC9C;AAZU,SAAAW,cAAA;AAaV,YAAUC,gBAAc,QAAQ,YAAY,OAAO;AAC/C,UAAM,SAAS,OAAO,MAAM,IAAI,CAACC,YAAW,iBAAiBA,SAAQ,YAAY,KAAK,CAAC,EAAE,KAAK,MAAM;AACpG,QAAI,OAAO,0BAA0B,OAAO;AACxC,YAAM,WAAW,eAAe,GAAG,IAAI,OAAO,aAAa,MAAM,CAAC,CAAC,GAAG;AACtE,YAAM,SAAS,8BAA8B,KAAK,kBAAkB,QAAQ;AAC5E,YAAM,IAAI,MAAM,OAAO,MAAM;AAAA,IACjC,WACSZ,UAAS,OAAO,qBAAqB,GAAG;AAC7C,YAAM,WAAW,eAAe,GAAG,IAAI,OAAO,aAAa,MAAM,CAAC,CAAC,GAAG;AACtE,YAAM,SAAS,8BAA8B,KAAK,kBAAkB,QAAQ,iBAAiB,iBAAiB,OAAO,uBAAuB,YAAY,GAAG,KAAK,OAAO,CAAC;AACxK,YAAM,IAAI,MAAM,OAAO,MAAM;AAAA,IACjC,OACK;AACD,YAAM,IAAI,MAAM;AAAA,IACpB;AAAA,EACJ;AAfU,SAAAW,iBAAA;AAgBV,YAAUE,cAAa,QAAQ,YAAY,OAAO;AAC9C,UAAM,oDAAoD,KAAK;AAAA,EACnE;AAFU,SAAAA,eAAA;AAGV,YAAUC,aAAY,QAAQ,YAAY,OAAO;AAC7C,QAAI,OAAO,OAAO,UAAU,YAAY,OAAO,OAAO,UAAU,WAAW;AACvE,YAAM,IAAI,KAAK,QAAQ,OAAO,KAAK;AAAA,IACvC,OACK;AACD,YAAM,IAAI,KAAK,SAAS,cAAc,OAAO,OAAO,KAAK,CAAC;AAAA,IAC9D;AAAA,EACJ;AAPU,SAAAA,cAAA;AAQV,YAAUC,WAAU,QAAQ,YAAY,OAAO;AAC3C,UAAM;AAAA,EACV;AAFU,SAAAA,YAAA;AAGV,YAAUC,SAAQ,QAAQ,YAAY,OAAO;AACzC,UAAM,aAAa,iBAAiB,OAAO,KAAK,YAAY,KAAK;AACjE,UAAM,KAAK,UAAU;AAAA,EACzB;AAHU,SAAAA,UAAA;AAIV,YAAUC,UAAS,QAAQ,YAAY,OAAO;AAC1C,UAAM,IAAI,KAAK;AAAA,EACnB;AAFU,SAAAA,WAAA;AAGV,YAAUC,YAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,OAAO,aAAa,KAAK;AAC/B,QAAInB,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,MAAM,OAAO,gBAAgB;AAC/C,QAAIA,UAAS,OAAO,gBAAgB;AAChC,YAAM,GAAG,KAAK,MAAM,OAAO,gBAAgB;AAC/C,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,OAAO,OAAO,OAAO;AACvC,QAAIA,UAAS,OAAO,OAAO;AACvB,YAAM,GAAG,KAAK,OAAO,OAAO,OAAO;AACvC,QAAIA,UAAS,OAAO,UAAU;AAC1B,YAAM,IAAI,KAAK,MAAM,OAAO,UAAU;AAAA,EAC9C;AAZU,SAAAmB,aAAA;AAaV,YAAUC,aAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,OAAO,aAAa,KAAK;AAC/B,QAAIpB,UAAS,OAAO,aAAa;AAC7B,YAAM,8BAA8B,KAAK,eAAe,OAAO,aAAa;AAChF,QAAIA,UAAS,OAAO,aAAa;AAC7B,YAAM,8BAA8B,KAAK,eAAe,OAAO,aAAa;AAChF,UAAM,YAAY,OAAO,oBAAoB,OAAO,UAAU;AAC9D,eAAW,YAAY,WAAW;AAC9B,YAAM,mBAAmB,iBAAiB,OAAO,OAAO,QAAQ;AAChE,YAAM,WAAW,OAAO,WAAW,QAAQ;AAC3C,UAAI,OAAO,YAAY,OAAO,SAAS,SAAS,QAAQ,GAAG;AACvD,eAAOO,QAAM,UAAU,YAAY,gBAAgB;AACnD,YAAI,sBAAsB,QAAQ,KAAKX,gBAAe,QAAQ;AAC1D,gBAAM,KAAK,QAAQ,QAAQ,KAAK;AAAA,MACxC,OACK;AACD,cAAM,aAAa,iBAAiB,UAAU,YAAY,gBAAgB;AAC1E,cAAM,OAAO,wBAAwB,OAAO,UAAU,UAAU;AAAA,MACpE;AAAA,IACJ;AACA,QAAI,OAAO,yBAAyB,OAAO;AACvC,UAAI,OAAO,YAAY,OAAO,SAAS,WAAW,UAAU,QAAQ;AAChE,cAAM,8BAA8B,KAAK,gBAAgB,UAAU,MAAM;AAAA,MAC7E,OACK;AACD,cAAM,OAAO,IAAI,UAAU,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC;AAC9D,cAAM,8BAA8B,KAAK,kBAAkB,IAAI;AAAA,MACnE;AAAA,IACJ;AACA,QAAI,OAAO,OAAO,yBAAyB,UAAU;AACjD,YAAM,aAAa,iBAAiB,OAAO,sBAAsB,YAAY,GAAG,KAAK,OAAO;AAC5F,YAAM,OAAO,IAAI,UAAU,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC;AAC9D,YAAM,+BAA+B,KAAK,kBAAkB,IAAI,qBAAqB,UAAU;AAAA,IACnG;AAAA,EACJ;AAlCU,SAAAwB,cAAA;AAmCV,YAAUC,aAAY,QAAQ,YAAY,OAAO;AAC7C,UAAM,GAAG,KAAK;AAAA,EAClB;AAFU,SAAAA,cAAA;AAGV,YAAUC,aAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,OAAO,aAAa,KAAK;AAC/B,QAAItB,UAAS,OAAO,aAAa;AAC7B,YAAM,8BAA8B,KAAK,eAAe,OAAO,aAAa;AAChF,QAAIA,UAAS,OAAO,aAAa;AAC7B,YAAM,8BAA8B,KAAK,eAAe,OAAO,aAAa;AAChF,UAAM,CAAC,YAAY,aAAa,IAAI,OAAO,QAAQ,OAAO,iBAAiB,EAAE,CAAC;AAC9E,UAAM,WAAW,eAAe,GAAG,IAAI,OAAO,UAAU,CAAC,EAAE;AAC3D,UAAM,SAAS,iBAAiB,eAAe,YAAY,OAAO;AAClE,UAAM,SAASC,UAAS,OAAO,oBAAoB,IAAI,iBAAiB,OAAO,sBAAsB,YAAY,KAAK,IAAI,OAAO,yBAAyB,QAAQ,UAAU;AAC5K,UAAM,aAAa,IAAI,QAAQ,gBAAgB,MAAM,MAAM,MAAM;AACjE,UAAM,mBAAmB,KAAK,6BAA6B,UAAU;AAAA,EACzE;AAZU,SAAAqB,cAAA;AAaV,YAAUC,UAAQ,QAAQ,YAAY,OAAO;AACzC,UAAM,SAAS,MAAM,QAAQ,UAAU;AAGvC,QAAI,MAAM,UAAU,IAAI,OAAO,IAAI;AAC/B,aAAO,MAAM,GAAG,mBAAmB,OAAO,IAAI,CAAC,IAAI,KAAK;AAC5D,WAAOhB,QAAM,QAAQ,YAAY,KAAK;AAAA,EAC1C;AAPU,SAAAgB,WAAA;AAQV,YAAUC,YAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,WAAW,eAAe,GAAG,IAAI,OAAO,OAAO,QAAQ,OAAO,KAAK,CAAC,GAAG;AAC7E,UAAM,WAAW,KAAK;AACtB,QAAIxB,UAAS,OAAO,SAAS;AACzB,YAAM,GAAG,KAAK,cAAc,OAAO,SAAS;AAChD,QAAIA,UAAS,OAAO,SAAS;AACzB,YAAM,GAAG,KAAK,cAAc,OAAO,SAAS;AAChD,UAAM,GAAG,QAAQ,SAAS,KAAK;AAAA,EACnC;AARU,SAAAwB,aAAA;AASV,YAAUC,YAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,WAAW,KAAK;AACtB,QAAIzB,UAAS,OAAO,SAAS;AACzB,YAAM,GAAG,KAAK,cAAc,OAAO,SAAS;AAChD,QAAIA,UAAS,OAAO,SAAS;AACzB,YAAM,GAAG,KAAK,cAAc,OAAO,SAAS;AAChD,QAAI,OAAO,YAAY,QAAW;AAC9B,YAAM,WAAW,eAAe,GAAG,IAAI,OAAO,OAAO,OAAO,CAAC,GAAG;AAChE,YAAM,GAAG,QAAQ,SAAS,KAAK;AAAA,IACnC;AACA,QAAI,OAAO,WAAW,QAAW;AAC7B,YAAM,WAAW,OAAO,MAAM,MAAM,KAAK;AAAA,IAC7C;AAAA,EACJ;AAbU,SAAAyB,aAAA;AAcV,YAAUC,YAAW,QAAQ,YAAY,OAAO;AAC5C,UAAM,WAAW,KAAK;AAAA,EAC1B;AAFU,SAAAA,aAAA;AAGV,YAAUC,qBAAoB,QAAQ,YAAY,OAAO;AACrD,UAAM,WAAW,KAAK;AACtB,UAAM,WAAW,eAAe,GAAG,IAAI,OAAO,OAAO,OAAO,CAAC,GAAG;AAChE,UAAM,GAAG,QAAQ,SAAS,KAAK;AAAA,EACnC;AAJU,SAAAA,sBAAA;AAKV,YAAUC,WAAS,QAAQ,YAAY,OAAO;AAE1C,UAAM,GAAG,mBAAmB,OAAO,IAAI,CAAC,IAAI,KAAK;AAAA,EACrD;AAHU,SAAAA,YAAA;AAIV,YAAUC,YAAU,QAAQ,YAAY,OAAO;AAC3C,UAAM,iBAAiB,KAAK;AAC5B,QAAI,OAAO,UAAU;AACjB,aAAO,MAAM,GAAG,KAAK;AACzB,UAAM,IAAI,KAAK,eAAe,OAAO,QAAQ;AAC7C,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ,KAAK;AAC1C,YAAM,aAAa,iBAAiB,OAAO,MAAM,CAAC,GAAG,YAAY,GAAG,KAAK,IAAI,CAAC,GAAG;AACjF,YAAM,GAAG,UAAU;AAAA,IACvB;AAAA,EACJ;AATU,SAAAA,aAAA;AAUV,YAAUC,eAAc,QAAQ,YAAY,OAAO;AAC/C,UAAM,GAAG,KAAK;AAAA,EAClB;AAFU,SAAAA,gBAAA;AAGV,YAAUC,YAAU,QAAQ,YAAY,OAAO;AAC3C,UAAM,cAAc,OAAO,MAAM,IAAI,CAAClB,YAAW,iBAAiBA,SAAQ,YAAY,KAAK,CAAC;AAC5F,UAAM,IAAI,YAAY,KAAK,MAAM,CAAC;AAAA,EACtC;AAHU,SAAAkB,aAAA;AAIV,YAAUC,gBAAe,QAAQ,YAAY,OAAO;AAChD,UAAM,GAAG,KAAK;AACd,QAAIhC,UAAS,OAAO,aAAa;AAC7B,YAAM,IAAI,KAAK,cAAc,OAAO,aAAa;AACrD,QAAIA,UAAS,OAAO,aAAa;AAC7B,YAAM,IAAI,KAAK,cAAc,OAAO,aAAa;AAAA,EACzD;AANU,SAAAgC,iBAAA;AAOV,YAAUC,aAAY,QAAQ,YAAY,OAAO;AAC7C,UAAM;AAAA,EACV;AAFU,SAAAA,cAAA;AAGV,YAAUC,UAAS,QAAQ,YAAY,OAAO;AAC1C,UAAM,OAAO,WAAW,KAAK;AAAA,EACjC;AAFU,SAAAA,WAAA;AAGV,YAAUC,UAAS,QAAQ,YAAY,OAAO;AAC1C,UAAM,WAAW,MAAM,UAAU;AACjC,UAAM,UAAU,IAAI,UAAU,MAAM;AACpC,UAAM,SAAS,OAAO,IAAI,CAAC,MAAM,QAAQ,KAAK,KAAK;AAAA,EACvD;AAJU,SAAAA,WAAA;AAKV,YAAU5B,QAAM,QAAQ,YAAY,OAAO,cAAc,MAAM;AAC3D,UAAM,cAAc6B,UAAS,OAAO,GAAG,IAAI,CAAC,GAAG,YAAY,MAAM,IAAI;AACrE,UAAM,UAAU;AAIhB,QAAI,eAAeA,UAAS,OAAO,GAAG,GAAG;AACrC,YAAM,eAAe,mBAAmB,OAAO,GAAG;AAClD,UAAI,MAAM,UAAU,IAAI,YAAY,GAAG;AACnC,eAAO,MAAM,GAAG,YAAY,IAAI,KAAK;AAAA,MACzC,OACK;AAID,cAAM,UAAU,IAAI,cAAc,YAAY;AAC9C,cAAM,eAAe,eAAe,cAAc,QAAQ,YAAY,SAAS,KAAK;AACpF,cAAM,UAAU,IAAI,cAAc,YAAY;AAC9C,eAAO,MAAM,GAAG,YAAY,IAAI,KAAK;AAAA,MACzC;AAAA,IACJ;AACA,YAAQ,QAAQ,IAAI,GAAG;AAAA,MACnB,KAAK;AACD,eAAO,OAAOvC,SAAQ,SAAS,aAAa,KAAK;AAAA,MACrD,KAAK;AACD,eAAO,OAAOC,cAAa,SAAS,aAAa,KAAK;AAAA,MAC1D,KAAK;AACD,eAAO,OAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,MACvD,KAAK;AACD,eAAO,OAAOG,mBAAkB,SAAS,aAAa,KAAK;AAAA,MAC/D,KAAK;AACD,eAAO,OAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOE,aAAY,SAAS,aAAa,KAAK;AAAA,MACzD,KAAK;AACD,eAAO,OAAOC,iBAAgB,SAAS,aAAa,KAAK;AAAA,MAC7D,KAAK;AACD,eAAO,OAAOE,UAAS,SAAS,aAAa,KAAK;AAAA,MACtD,KAAK;AACD,eAAO,OAAOC,cAAa,SAAS,aAAa,KAAK;AAAA,MAC1D,KAAK;AACD,eAAO,OAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,MACzD,KAAK;AACD,eAAO,OAAOC,gBAAc,SAAS,aAAa,KAAK;AAAA,MAC3D,KAAK;AACD,eAAO,OAAOE,cAAa,SAAS,aAAa,KAAK;AAAA,MAC1D,KAAK;AACD,eAAO,OAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,MACzD,KAAK;AACD,eAAO,OAAOC,WAAU,SAAS,aAAa,KAAK;AAAA,MACvD,KAAK;AACD,eAAO,OAAOC,SAAQ,SAAS,aAAa,KAAK;AAAA,MACrD,KAAK;AACD,eAAO,OAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,MACtD,KAAK;AACD,eAAO,OAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,MACzD,KAAK;AACD,eAAO,OAAOC,aAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,UAAQ,SAAS,aAAa,KAAK;AAAA,MACrD,KAAK;AACD,eAAO,OAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,YAAW,SAAS,aAAa,KAAK;AAAA,MACxD,KAAK;AACD,eAAO,OAAOC,qBAAoB,SAAS,aAAa,KAAK;AAAA,MACjE,KAAK;AACD,eAAO,OAAOC,WAAS,SAAS,aAAa,KAAK;AAAA,MACtD,KAAK;AACD,eAAO,OAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,MACvD,KAAK;AACD,eAAO,OAAOC,eAAc,SAAS,aAAa,KAAK;AAAA,MAC3D,KAAK;AACD,eAAO,OAAOC,YAAU,SAAS,aAAa,KAAK;AAAA,MACvD,KAAK;AACD,eAAO,OAAOC,gBAAe,SAAS,aAAa,KAAK;AAAA,MAC5D,KAAK;AACD,eAAO,OAAOC,aAAY,SAAS,aAAa,KAAK;AAAA,MACzD,KAAK;AACD,eAAO,OAAOC,UAAS,SAAS,aAAa,KAAK;AAAA,MACtD;AACI,YAAI,CAACG,cAAa,IAAI,QAAQ,IAAI,CAAC;AAC/B,gBAAM,IAAI,6BAA6B,MAAM;AACjD,eAAO,OAAOF,UAAS,SAAS,aAAa,KAAK;AAAA,IAC1D;AAAA,EACJ;AA7FU,SAAA5B,SAAA;AAkGV,QAAM,QAAQ;AAAA,IACV,UAAU;AAAA;AAAA,IACV,WAAW,oBAAI,IAAI;AAAA;AAAA,IACnB,WAAW,oBAAI,IAAI;AAAA;AAAA,IACnB,WAAW,oBAAI,IAAI;AAAA;AAAA,EACvB;AAIA,WAAS,iBAAiB,QAAQ,YAAY,OAAO,cAAc,MAAM;AACrE,WAAO,IAAI,CAAC,GAAGA,QAAM,QAAQ,YAAY,OAAO,WAAW,CAAC,EAAE,KAAK,MAAM,CAAC;AAAA,EAC9E;AAFS;AAGT,WAAS,mBAAmB,KAAK;AAC7B,WAAO,SAAS,WAAW,OAAO,GAAG,CAAC;AAAA,EAC1C;AAFS;AAGT,WAAS,eAAe,YAAY;AAChC,UAAM,eAAe,SAAS,MAAM,UAAU,IAAI;AAClD,UAAM,UAAU,IAAI,cAAc,SAAS,YAAY,MAAM,UAAU,EAAE;AACzE,WAAO;AAAA,EACX;AAJS;AAKT,WAAS,eAAe,MAAM,QAAQ,YAAY,OAAO,cAAc,MAAM;AACzE,UAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,SAAS,QAAQ,GAAG,CAAC;AAClE,UAAM,YAAY,gBAAgB,SAAS,KAAK;AAChD,UAAM,UAAU,cAAc,SAAS;AACvC,UAAM,aAAa,CAAC,GAAGA,QAAM,QAAQ,YAAY,OAAO,WAAW,CAAC,EAAE,IAAI,CAAC+B,gBAAe,GAAG,IAAI,CAAC,CAAC,GAAGA,WAAU,EAAE,EAAE,KAAK,MAAM,OAAO,EAAE;AACxI,WAAO,YAAY,IAAI,IAAI,SAAS,IAAI,OAAO,KAAK,OAAO,GAAG,IAAI,CAAC,CAAC,WAAW,OAAO,GAAG,UAAU,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC;AAAA;AAAA,EAC1H;AANS;AAOT,WAAS,gBAAgB,MAAM,MAAM;AACjC,UAAM,aAAa,MAAM,aAAa,eAAe,KAAK,IAAI,KAAK;AACnE,WAAO,GAAG,IAAI,GAAG,UAAU;AAAA,EAC/B;AAHS;AAIT,WAAS,cAAc,MAAM;AACzB,WAAO,MAAM,aAAa,eAAe,KAAK,IAAI,KAAK;AAAA,EAC3D;AAFS;AAMT,WAAS,MAAM,QAAQ,YAAY,SAAS;AACxC,UAAM,eAAe,eAAe,SAAS,QAAQ,YAAY,OAAO;AACxE,UAAM,YAAY,gBAAgB,SAAS,KAAK;AAChD,UAAM,UAAU,cAAc,SAAS;AACvC,UAAM,YAAY,CAAC,GAAG,MAAM,UAAU,OAAO,CAAC;AAC9C,UAAM,YAAY,CAAC,GAAG,MAAM,UAAU,OAAO,CAAC;AAE9C,UAAM,gBAAgBF,UAAS,OAAO,GAAG,IACnC,yBAAyB,SAAS,IAAI,OAAO;AAAA,WAAgB,mBAAmB,OAAO,GAAG,CAAC;AAAA,KAC3F,UAAU,YAAY;AAC5B,WAAO,CAAC,GAAG,WAAW,GAAG,WAAW,aAAa,EAAE,KAAK,IAAI;AAAA,EAChE;AAXS;AAaT,WAAS,QAAQ,MAAM;AACnB,UAAM,WAAW,EAAE,UAAU,aAAa;AAE1C,UAAM,CAAC,QAAQ,YAAY,OAAO,IAAK,KAAK,WAAW,KAAKG,SAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,IACtG,KAAK,WAAW,KAAK,CAACA,SAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAC1D,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,IAC1C,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,IACtC,CAAC,MAAM,CAAC,GAAG,QAAQ;AAEnC,UAAM,WAAW,QAAQ;AACzB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AACtB,QAAI,CAACtC,UAAS,MAAM;AAChB,YAAM,IAAI,2BAA2B,MAAM;AAC/C,eAAWY,WAAU;AACjB,UAAI,CAACZ,UAASY,OAAM;AAChB,cAAM,IAAI,2BAA2BA,OAAM;AACnD,WAAO,MAAM,QAAQ,YAAY,OAAO;AAAA,EAC5C;AAnBS;AAoBT,EAAAlB,cAAa,OAAO;AAEpB,WAAS,QAAQ,QAAQ,aAAa,CAAC,GAAG;AACtC,UAAM,gBAAgB,KAAK,QAAQ,YAAY,EAAE,UAAU,aAAa,CAAC;AACzE,UAAM,mBAAmB,WAAW,SAAS,QAAQ,UAAU,QAAQ,aAAa;AACpF,UAAM,YAAY,IAAI,IAAI,MAAM,SAAS;AACzC,aAAS,qBAAqB,MAAM,UAAU,OAAO;AACjD,UAAI,CAAC0C,cAAa,IAAI,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ;AAClD,eAAO;AACX,YAAM,YAAYA,cAAa,IAAI,IAAI;AACvC,YAAMxB,UAAS,UAAU,IAAI,QAAQ;AACrC,aAAO,UAAUA,SAAQ,KAAK;AAAA,IAClC;AANS;AAOT,aAAS,uBAAuB,QAAQ,OAAO;AAC3C,UAAI,CAAC,eAAe,IAAI,MAAM;AAC1B,eAAO;AACX,YAAM,YAAY,eAAe,IAAI,MAAM;AAC3C,aAAO,UAAU,KAAK;AAAA,IAC1B;AALS;AAMT,aAAS,aAAa,OAAO;AACzB,aAAO,KAAK,KAAK;AAAA,IACrB;AAFS;AAGT,UAAM,gBAAgB,iBAAiB,sBAAsB,wBAAwB,YAAY;AACjG,WAAO,IAAI,UAAU,QAAQ,YAAY,eAAe,aAAa;AAAA,EACzE;AAtBS;AAuBT,EAAAlB,cAAa,UAAU;AAC3B,GAAG,iBAAiB,eAAe,CAAC,EAAE;;;AlJgxCtC,oBAAiC;AACjC,IAAA6C,oCAAmB;AAwpCnB,IAAAC,oCAAoB;AAGpB,IAAAA,oCAAoB;;;AmJjkGpB;AAAA;AAAAC;AAEA,IAAIC,QAAO,OAAO,IAAI,cAAc;AACpC,IAAIC,QAAO,OAAO,IAAI,cAAc;AACpC,IAAI,oBAAoB,wBAAC,SAAS,eAAe,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAtD;AACxB,IAAI,eAAe,wBAAC,IAAI,IAAIC,cAAa,UAAU;AACjD,MAAI,OAAO,OAAO,SAAU,QAAO,GAAG,EAAE,IAAI,EAAE;AAC9C,MAAI,kBAAkB,EAAE,EAAG,QAAO,GAAG,EAAE,GAAGA,cAAa,OAAO,EAAE,KAAK,EAAE;AACvE,SAAO,GAAG,EAAE,GAAGA,cAAa,MAAM,EAAE,IAAI,EAAE;AAC5C,GAJmB;AAKnB,IAAI,iBAAiB,wBAAC,MAAM,kBAAkB,CAAC,IAAI,IAAI,CAAC,MAAM,GAAzC;AACrB,IAAI,WAAW,wBAAC,KAAK,YAAY,GAAG,WAAW;AAC7C,MAAI,OAAO,SAAS,YAAY,OAAO,SAAS,OAAO,QAAS,QAAO;AACvE,MAAI,MAAM;AACV,WAAS,IAAI,YAAY,GAAG,KAAK,GAAG,IAAK,QAAO,MAAM,CAAC;AACvD,SAAO,MAAM,MAAM,IAAI,OAAO,SAAS;AACzC,GALe;AAMf,IAAI,0BAA0B,wBAAC,WAAW;AACxC,MAAI,CAAC,OAAO,SAASF,SAAQ,WAAW,OAAOA,KAAI,MAAM,eAAe,OAAO,SAAS;AACtF,WAAO;AACT,QAAM,EAAE,OAAO,GAAG,UAAU,IAAI;AAChC,YAAU,aAAa,CAAC;AACxB,MAAIA,SAAQ,UAAW,WAAUA,KAAI,IAAI;AACzC,aAAW,QAAQ,OAAO;AACxB,QAAI,KAAK,SAAS,SAAU;AAC5B,UAAM,EAAE,YAAY,UAAU,MAAM,GAAG,CAACA,KAAI,GAAG,IAAI,GAAG,KAAK,IAAI;AAC/D,QAAI;AACF,gBAAU,WAAW,UAAU,WAAW,UAAU,SAAS,OAAO,QAAQ,IAAI;AAClF,WAAO,OAAO,WAAW,IAAI;AAC7B,eAAW,YAAY,KAAK;AAC1B,gBAAU,WAAW,QAAQ,IAAI;AAAA,QAC/B,KAAK,WAAW,QAAQ;AAAA,MAC1B;AAAA,EACJ;AACA,SAAO;AACT,GAlB8B;AAmB9B,IAAI,eAAe,wBAAC,QAAQ,UAAU,gBAAgB;AACpD,QAAM,QAAQ,OAAO,kBAAkB,QAAQ,KAAK,OAAO,kBAAkB,OAAO,KAAK,OAAO,iBAAiB,EAAE,CAAC,CAAC;AACrH,MAAI,CAAC,MAAO,QAAO;AACnB,QAAM,IAAI,YAAY;AACtB,cAAY;AACZ,MAAI,IAAI,iBAAiB,CAAC,iBAAiB,QAAQ,OAAO,CAAC,wBAAwB,CAAC,yBAAyB,CAAC,KAAK,QAAQ,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,OAAO,OAAO,KAAK,CAAC,KAAK,WAAW,CAAC;AACpM,QAAM,YAAY,YAAY,iBAAiB,IAAI,CAAC;AACpD,MAAI;AACF,aAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,YAAM,SAAS,KAAK,CAAC,OAAO,CAAC,SAAS,UAAU,EAAE,CAAC;AACnD,WAAK,OAAO,MAAM,uBAAuB,MAAM;AAAA,IACjD;AACF,OAAK,aAAa,CAAC;AACnB,SAAO;AACT,GAdmB;AAenB,IAAI,cAAc,wBAAC,QAAQ,UAAU,gBAAgB;AACnD,QAAM,IAAI,YAAY;AACtB,cAAY;AACZ,QAAM,SAAS,aAAa,OAAO,CAAC,YAAY,OAAO;AACvD,MAAI,IAAI;AACR,MAAI,CAAC,OAAQ,KAAI;AACjB,OAAK,WAAW,CAAC;AACjB,WAAS,KAAK,GAAG,KAAK,OAAO,QAAQ,MAAM;AACzC,QAAI,OAAO,EAAG,MAAK;AACnB,SAAK;AAAA,MACH,OAAO,EAAE;AAAA,MACT,aAAa,UAAU,IAAI,YAAY,gBAAgB;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AACA,OAAK;AACL,MAAI,CAAC,OAAQ,MAAK,YAAY,CAAC;AAC/B,SAAO;AACT,GAlBkB;AAmBlB,SAAS,UAAU,QAAQ,OAAuB,oBAAI,QAAQ,GAAG;AAC/D,MAAI,WAAW,QAAQ,OAAO,WAAW,YAAY,OAAO,WAAW;AACrE,WAAO;AACT,MAAI,KAAK,IAAI,MAAM,EAAG,QAAO,KAAK,IAAI,MAAM;AAC5C,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,UAAM,OAAO,IAAI,MAAM,OAAO,MAAM;AACpC,SAAK,IAAI,QAAQ,IAAI;AACrB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ;AACjC,WAAK,CAAC,IAAI,UAAU,OAAO,CAAC,GAAG,IAAI;AACrC,WAAO;AAAA,EACT;AACA,MAAI,OAAO,WAAW,UAAU;AAC9B,UAAM,OAAO,OAAO,KAAK,MAAM,EAAE;AAAA,MAC/B,OAAO,sBAAsB,MAAM;AAAA,IACrC;AACA,UAAM,SAAS,CAAC;AAChB,eAAW,OAAO;AAChB,aAAO,GAAG,IAAI,UAAU,OAAO,GAAG,GAAG,IAAI;AAC3C,WAAO;AAAA,EACT;AACA,SAAO;AACT;AArBS;AAsBT,IAAI,cAAc,wBAAC,SAAS,UAAU,gBAAgB;AACpD,MAAI,YAAY,iBAAiB,QAAQ;AACvC,QAAI,CAAC,YAAY,oBAAoB;AACnC,cAAQ;AAAA,QACN,IAAI;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,kBAAY,qBAAqB;AAAA,IACnC;AACA,WAAO;AAAA,EACT;AACA,cAAY,UAAU,QAAQ,IAAI;AAClC,QAAM,KAAK,YAAY,OAAO;AAC9B,QAAM,aAAa,YAAY,OAAO,EAAE,IAAI,CAAC;AAC7C,MAAI,IAAI;AAAA;AAER,QAAM,YAAY,wBAAC,SAAS;AAC1B,QAAI,EAAEA,SAAQ,SAAS,CAAC,KAAK,KAAM,QAAO;AAC1C,QAAI,KAAKA,KAAI,MAAM,QAAQ;AACzB,aAAO,UAAU,YAAY,YAAY,KAAK,IAAI,CAAC;AAAA,IACrD,WAAW,KAAKA,KAAI,MAAM,OAAO;AAC/B,UAAI,CAAC,YAAY;AACf,gBAAQ;AAAA,UACN,IAAI;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA;AAEA,eAAO,YAAY,QAAQ;AAAA,UACzB,KAAK;AAAA,QACP;AAAA,IACJ;AACA,WAAO;AAAA,EACT,GAjBkB;AAkBlB,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,OAAO,UAAU,QAAQ,CAAC,CAAC;AAC/B,QAAI,MAAM,QAAQ,KAAK,KAAK;AAC1B,eAAS,KAAK,GAAG,KAAK,KAAK,MAAM,QAAQ;AACvC,aAAK,MAAM,EAAE,IAAI,UAAU,KAAK,MAAM,EAAE,CAAC;AAAA,aACpC,KAAK,OAAO;AACnB,UAAI,MAAM,QAAQ,KAAK,KAAK;AAC1B,iBAAS,KAAK,GAAG,KAAK,KAAK,MAAM,QAAQ;AACvC,eAAK,MAAM,EAAE,IAAI,UAAU,KAAK,MAAM,EAAE,CAAC;AAAA,UACxC,MAAK,QAAQ,UAAU,KAAK,KAAK;AAAA,IACxC;AACA,eAAW,KAAK,aAAa,QAAQ,IAAI,CAAC;AAC1C,SAAK,eAAe,EAAE,KAAK,CAAC,WAAW,QAAQ,aAAa;AAAA,MAC1D;AAAA,MACA;AAAA,MACA;AAAA,QACE,GAAG;AAAA,QACH,WAAW,YAAY,YAAY;AAAA,QACnC,kBAAkB;AAAA,MACpB;AAAA,IACF,CAAC;AAAA;AAAA,EAEH;AACA,OAAK,UAAU,YAAY,yBAAyB,cAAc,QAAQ;AAC1E,SAAO;AACT,GA5DkB;AA6DlB,IAAI,SAAS,wBAAC,QAAQ,UAAU,gBAAgB;AAC9C,MAAI,CAAC,OAAQ,QAAO;AACpB,QAAM,SAAS,aAAa,OAAO,CAAC,YAAY,OAAO;AACvD,MAAIA,SAAQ,UAAU,OAAOA,KAAI,MAAM,YAAY,OAAO,QAAQ,OAAO;AACvE,WAAO,OAAO,OAAO,MAAM,OAAO,IAAI,GAAG,UAAU;AAAA,MACjD,GAAG;AAAA,MACH,aAAa,OAAO,OAAO,YAAY,aAAa,OAAO,KAAK;AAAA,IAClE,CAAC;AACH,MAAI,UAAU,OAAO,SAAS,YAAY,OAAO,SAAS,WAAW,CAAC,OAAO;AAC3E,WAAO,UAAU,SAAS,KAAK,YAAY,UAAU,QAAQ,MAAM,CAAC;AACtE,MAAI,YAAY,aAAa,YAAY,eAAgB,QAAO;AAChE,MAAI,IAAI;AACR,MAAI,OAAO,OAAOC,SAAQ;AACxB,gBAAY,YAAY,OAAO,GAAG,IAAI;AACxC,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK;AACH,UAAI,OAAOD,KAAI,MAAM,UAAU;AAC7B,YAAI,aAAa,QAAQ,UAAU,WAAW;AAC9C;AAAA,MACF;AACA,eAAS,wBAAwB,MAAM;AACvC,WAAK;AACL,UAAI,OAAO,qBAAsB,MAAK,MAAM,QAAQ;AACpD,YAAM,OAAO,OAAO,KAAK,OAAO,UAAU;AAC1C,eAAS,KAAK,GAAG,KAAK,KAAK,QAAQ,MAAM;AACvC,cAAM,MAAM,KAAK,EAAE;AACnB,YAAIE;AAAA;AAAA,UAEF,CAAC,OAAO;AAAA,UACR,OAAO,YAAY,CAAC,OAAO,SAAS,SAAS,GAAG,KAAK,MAAM,QAAQ,OAAO,WAAW,GAAG,EAAE,KAAK;AAAA;AAEjG,cAAM,OAAO;AAAA,UACX;AAAA,UACA;AAAA,UACA,YAAY;AAAA,QACd;AACA,YAAIA,aAAY;AACd,gBAAM,QAAQ,YAAY;AAC1B,cAAI,SAAS,WAAW,IAAI,GAAG;AAC7B,kBAAM,UAAU,KAAK,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC;AAChD,kBAAMC,SAAQ,YAAY;AAC1B,gBAAIA,OAAM,KAAK,EAAG,CAAAA,OAAM,KAAK,EAAE,KAAK,OAAO;AAAA,gBACtC,CAAAA,OAAM,KAAK,IAAI,CAAC,OAAO;AAAA,UAC9B,OAAO;AACL,wBAAY,UAAU,KAAK,IAAI;AAAA,UACjC;AAAA,QACF;AACA,cAAM,QAAQ,OAAO,WAAW,GAAG;AACnC,YAAI,OAAO,EAAG,MAAK;AACnB,aAAK,GAAG,eAAe,GAAG,CAAC,IAAID,cAAa,GAAG,IAAI,4BAA4B,EAAE,GAAG;AAAA,UAClF;AAAA,UACA;AAAA,UACA;AAAA,YACE,GAAG;AAAA,YACH,WAAW,YAAY,YAAY;AAAA,YACnC,kBAAkBA;AAAA,UACpB;AAAA,QACF,CAAC;AAAA,MACH;AACA,WAAK;AACL;AAAA,IACF,KAAK;AACH,UAAI,OAAO,MAAM,SAAS,YAAY,OAAO,MAAM,SAAS,SAAS;AACnE,YAAI,MAAM,QAAQ,OAAO,KAAK,GAAG;AAC/B,cAAI,YAAY,OAAO,OAAO,UAAU,WAAW;AACnD;AAAA,QACF,WAAW,OAAQ,QAAO;AAAA,iBACjBF,SAAQ,OAAO,SAAS,OAAO,MAAM,SAAS,OAAO,MAAMA,KAAI,MAAM,SAAS,OAAO,MAAMA,KAAI,MAAM;AAC5G,cAAI;AAAA,YACF,UAAU,YAAY,YAAY,OAAO,MAAM,IAAI,CAAC;AAAA,YACpD;AAAA,YACA;AAAA,cACE,GAAG;AAAA,cACH,kBAAkB;AAAA,cAClB,WAAW,YAAY,YAAY;AAAA,YACrC;AAAA,UACF;AAAA,aACG;AACH,cAAI;AACJ;AAAA,QACF;AAAA,MACF;AACA,YAAM,IAAI,YAAY;AACtB,kBAAY;AACZ,UAAI,YAAY;AAChB,UAAI,OAAQ,KAAI,WAAW,CAAC,eAAe,QAAQ;AAAA,WAC9C;AACH,oBAAY,KAAK,CAAC;AAClB,YAAI,KAAK,SAAS,eAAe,CAAC,eAAe,SAAS;AAAA,MAC5D;AACA,WAAK,iBAAiB,SAAS,wBAAwB,CAAC,KAAK,SAAS,SAAS,CAAC,QAAQ,OAAO,OAAO,OAAO,KAAK,CAAC,KAAK,WAAW,CAAC;AACpI,YAAM,YAAY,YAAY,iBAAiB,IAAI,CAAC;AACpD,UAAI,WAAW;AACb,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,gBAAM,SAAS,KAAK,CAAC,QAAQ,UAAU,EAAE,CAAC;AAC1C,eAAK,OAAO,MAAM,uBAAuB,MAAM;AAAA,QACjD;AAAA,MACF;AACA,WAAK;AACL,UAAI,CAAC,OAAQ,MAAK,YAAY,CAAC,OAAO,QAAQ;AAC9C;AAAA,IACF;AACE,UAAI,OAAO,QAAQ,OAAO,QAAQ,YAAY;AAC5C,eAAO;AAAA,UACL,YAAY,YAAY,OAAO,IAAI;AAAA,UACnC;AAAA,UACA;AAAA,QACF;AACF,UAAI,MAAM,QAAQ,OAAO,KAAK,GAAG;AAC/B,YAAI,YAAY,OAAO,OAAO,UAAU,WAAW;AACnD;AAAA,MACF;AACA,UAAI,SAAS,UAAU,YAAY,UAAU,QAAQ,MAAM;AAC3D;AAAA,EACJ;AACA,MAAI,CAAC,OAAQ,QAAO;AACpB,MAAI,OAAO,SAAS,SAAS;AAC3B,QAAI,GAAG,CAAC;AAAA,EACV,OAAO;AACL,QAAI,WAAW,CAAC;AAAA;AAAA,EAElB;AACA,WAAS,IAAI,GAAG,IAAI,YAAY,UAAU,QAAQ,KAAK;AACrD,UAAM,MAAM,YAAY,UAAU,CAAC;AACnC,UAAM,OAAO,IAAI,MAAM,CAAC;AACxB,SAAK,MAAM,GAAG;AACd,QAAI,YAAY,UAAU,GAAG,EAAG,MAAK,MAAM,IAAI;AAC/C,UAAM,iBAAiB,KAAK,WAAW,CAAC,MAAM,MAAM,OAAO,SAAS;AACpE,SAAK,YAAY,iBAAiB,KAAK,WAAW,CAAC,MAAM,KAAK,OAAO,MAAM,EAAE,GAAG,IAAI;AAAA;AAAA,EAEtF;AACA,SAAO,GAAG,CAAC;AACb,GApIa;AAqIb,IAAI,eAAe,wBAAC,QAAQ;AAAA,EAC1B,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,iBAAiB;AAAA,EACjB,yBAAyB;AAC3B,IAAI,CAAC,MAAM;AACT,QAAM,SAAS,CAAC;AAChB,MAAI,OAAO,cAAc,WAAY,aAAY,CAAC,SAAS;AAC3D,QAAM,IAAI,OAAO,QAAQ,KAAK;AAAA,IAC5B,WAAW,CAAC;AAAA,IACZ,kBAAkB,CAAC;AAAA,IACnB,OAAO;AAAA,IACP,kBAAkB;AAAA,IAClB;AAAA,IACA,WAAW,CAAC;AAAA,IACZ,cAAc;AAAA,IACd;AAAA;AAAA,IAEA,aAAa,eAAe,SAAS,SAAS,CAAC;AAAA,IAC/C,UAAU;AAAA,IACV,WAAW;AAAA,IACX;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI,CAAC,OAAO,UAAU,CAAC,WAAW,OAAQ,QAAO,SAAS,KAAK,CAAC;AAChE,MAAI;AACJ,MAAI,WAAW,QAAQ;AACrB,UAAM,CAAC;AACP,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAK,KAAI,IAAI,CAAC,EAAE,IAAI,UAAU,CAAC;AAAA,EACvE;AACA,SAAO;AAAA,IACL;AAAA,IACA,6BAA6B,CAAC;AAAA,EAChC,EAAE;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH,GAvCmB;;;AnJ7RnB,IAAI,aAAa,wBAAC,MAAM,UAAU;AAChC,MAAI,WAAW,OAAO,SAAS,CAAC,IAAI;AACpC,MAAI;AACF,aAAS,SAAS;AAChB,eAAS,MAAM,KAAK,WAAW,CAAC,CAAC,IAAI;AACzC,SAAO;AAAA,IACL;AAAA,IACA,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,eAAe;AAAA,EACjB;AACF,GAZiB;AAAjB,IAYG,YAAY,wBAAC,MAAM,UAAU;AAAA,EAC9B,GAAG;AAAA,EACH;AACF,IAHe;AAZf,IAeI,kBAAkB,wBAAC,UAAU;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AACT,IAJsB;AAftB,IAmBI,YAAY,MAAM,WAAW;AAAA,EApBjC,OAoBiC;AAAA;AAAA;AAAA,EAC/B,YAAYI,UAAS,CAAC,GAAG;AACvB,SAAK,SAASA,SAAQA,QAAO,SAAS,KAAK,OAAO,KAAK,WAAWA,QAAO,WAAW,CAAC,MAAM,QAAQA,QAAO,OAAO,MAAM,KAAK,OAAO,UAAU;AAAA,MAC3I,KAAK,OAAO;AAAA,IACd;AAAA,EACF;AAAA,EACA,OAAO,CAAC;AAAA,EACR,UAAU,CAAC;AAAA,EACX,WAAW,CAAC;AAAA,EACZ,OAAO,QAAQ;AAAA,IACb,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,gBAAgB;AAAA,EAClB;AAAA,EACA,WAAW,wBAAC,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK,MAAM,GAAG,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK,MAAlF;AAAA,EACX,QAAQ;AACN,QAAI,KAAK,OAAO,MAAM;AACpB,eAAS,CAAC,QAAQ,MAAM,KAAK,KAAK,KAAK;AACrC,aAAK,IAAI,QAAQ,MAAM,OAAO,EAAE,MAAM,OAAI,eAAe,KAAG,CAAC;AAC/D,WAAK,WAAW,CAAC,GAAG,KAAK,OAAO,CAAC,QAAQ,QAAQ;AAC/C,YAAI,OAAO,KAAK,KAAK,MAAM;AAC3B,eAAO,OAAO;AAAA,UACZ;AAAA,UACA,IAAI;AAAA,UACJ;AAAA,UACA;AAAA,UACA,KAAK,OAAO;AAAA,QACd,IAAI;AAAA,MACN;AAAA,IACF;AAAA,EACF;AAAA,EACA,IAAI,QAAQ,MAAM,OAAO;AAAA,IACvB,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,OAAO,KAAK,OAAO;AAAA,EACrB,IAAI,CAAC,GAAG;AACN,QAAI;AACF,aAAO,KAAK,OAAO,KAAK,UAAU,KAAK,SAAS,KAAK,CAAC,QAAQ,MAAM,KAAK,CAAC,GAAG;AAC/E,QAAI,OAAO,QAAQ;AACjB,YAAM,IAAI,UAAU,6BAA6B;AACnD,aAAS,KAAK,OAAO,MAAM,KAAK,CAAC,MAAM,QAAQ,OAAO,IAAI,IAAI;AAC9D,QAAI,aAAa,KAAK,KAAK,SAAS,CAAC,MAAM,KAAK,iBAAiB,KAAK,MAAM,WAAW,MAAM,cAAc;AAC3G,QAAI,gBAAgB;AAClB,UAAI,eAAe,KAAK,WAAW,KAAK,EAAE;AAC1C,WAAK,IAAI,QAAQ,cAAc,OAAO;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD,eAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,YAAI,UAAU,KAAK,QAAQ,eAAe,CAAC,GAAG,EAAE;AAChD,aAAK,IAAI,QAAQ,SAAS,OAAO;AAAA,UAC/B,aAAa;AAAA,UACb;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT;AACA,QAAI,mBAAmB,OAAO,KAAK,WAAW,KAAK,EAAE,IAAI,KAAK,QAAQ,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,MAAM,UAAU,MAAM,IAAI;AAClH,aAAO;AACT,KAAC,cAAc,kBAAkB,KAAK,WAAW,KAAK,SAAS,CAAC,MAAM,QAAQ,OAAO,KAAK,MAAM,GAAG,EAAE,IAAI,iBAAiB,KAAK,QAAQ,KAAK,CAAC,QAAQ,MAAM,KAAK,CAAC;AACjK,QAAI,aAAa,KAAK,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,KAAK,MAAM,WAAW,MAAM,MAAM,KAAK,CAAC;AAC3G,eAAW,WAAW,SAAS,CAAC,MAAM,MAAM,WAAW,IAAI;AAC3D,QAAI;AACJ,SAAK,KAAK,MAAM,IAAI,OAAO,KAAK,KAAK,MAAM,IAAI,OAAO,KAAK,KAAK,MAAM,IAAI,WAAW,GAAG;AACxF,QAAI,kBAAkB;AACtB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC1C,UAAI,OAAO,WAAW,CAAC;AACvB,UAAI,IAAI,GAAG;AACT,YAAI,QAAQ,WAAW,iBAAiB,EAAE,MAAM,CAAC;AACjD,YAAI,KAAK,WAAW;AAClB,eAAK,SAAS,gBAAgB,KAAK;AAAA,iBAC5B,KAAK,OAAO,SAAS,OAAO;AACnC,cAAI;AACF,mBAAO;AACT,gBAAM,IAAI;AAAA,YACR,wBAAwB,IAAI,qBAAqB,KAAK,sEAAsE,KAAK,OAAO,IAAI;AAAA,UAC9I;AAAA,QACF;AACA,YAAI,SAAS,KAAK;AAClB,YAAI,OAAO,UAAU,MAAM;AACzB,iBAAO,OAAO,QAAQ,WAAW,IAAI;AACrC;AAAA,QACF;AACA,eAAO,OAAO;AAAA,MAChB;AACA,eAAS,IAAI,OAAO;AAClB,YAAI,MAAM,KAAK,QAAQ;AACrB,cAAI,IAAI,KAAK,KAAK,QAAQ;AACxB,gBAAI,YAAY,UAAU,MAAM,KAAK,KAAK,MAAM,CAAC,CAAC;AAClD,mBAAO,OAAO,MAAM,WAAW,MAAM,CAAC,SAAS,CAAC,CAAC;AAAA,UACnD;AACA;AAAA,QACF;AACA,YAAI,MAAM,KAAK,KAAK,QAAQ;AAC1B,eAAK,UAAU,SAAS,KAAK,QAAQ,CAAC;AACtC,cAAI,QAAQ,KAAK,MAAM,KAAK,WAAW,CAAC,CAAC;AACzC,cAAI,OAAO;AACT,mBAAO,OAAO,OAAO,KAAK,MAAM,CAAC,GAAG,IAAI;AACxC;AAAA,UACF;AACA,cAAI,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACxC,eAAK,MAAM,KAAK,WAAW,CAAC,CAAC,IAAI,WAAW,OAAO;AACnD;AAAA,QACF;AACA,YAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,GAAG;AAC5B,cAAI,gBAAgB,UAAU,MAAM,KAAK,KAAK,MAAM,CAAC,CAAC,GAAG,WAAW,WAAW,KAAK,MAAM,CAAC,CAAC;AAC5F,iBAAO;AAAA,YACL;AAAA,YACA,WAAW,KAAK,KAAK,MAAM,GAAG,CAAC,GAAG;AAAA,cAChC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH,GAAG,OAAO;AACV;AAAA,QACF;AACA,UAAE;AAAA,MACJ;AAAA,IACF;AACA,QAAI,kBAAkB,WAAW,QAAQ;AACvC,UAAI,OAAO,WAAW,eAAe,EAAE,MAAM,CAAC;AAC9C,UAAI,KAAK,WAAW;AAClB,aAAK,SAAS,gBAAgB,IAAI;AAAA,eAC3B,KAAK,OAAO,SAAS,MAAM;AAClC,YAAI;AACF,iBAAO;AACT,cAAM,IAAI;AAAA,UACR,wBAAwB,IAAI,qBAAqB,IAAI,sEAAsE,KAAK,OAAO,IAAI;AAAA,QAC7I;AAAA,MACF;AACA,aAAO,KAAK,OAAO,UAAU,SAAS,KAAK,OAAO,QAAQ,QAAQ,KAAK,OAAO;AAAA,IAChF;AACA,WAAO,cAAc,KAAK,kBAAkB,SAAS,KAAK,gBAAgB,QAAQ,KAAK,kBAAkB,KAAK,UAAU,SAAS,KAAK,QAAQ,QAAQ,KAAK;AAAA,EAC7J;AAAA,EACA,KAAK,QAAQ,KAAK;AAChB,QAAI,OAAO,KAAK,KAAK,MAAM;AAC3B,WAAO,OAAO;AAAA,MACZ;AAAA,MACA,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MACA,KAAK,OAAO;AAAA,IACd,IAAI;AAAA,EACN;AACF;AApKA,IAoKG,aAAa,wBAAC,KAAK,WAAW,MAAM,YAAY,YAAY;AAC7D,MAAI,OAAO,KAAK,MAAM,SAAS,KAAK,QAAQ,WAAW,aAAa;AACpE,MAAI,SAAS,GAAG;AACd,QAAI,WAAW;AACb,aAAO;AACT,QAAI,SAAS,IAAI;AACf,eAAS,IAAI,GAAG,IAAI,aAAa,GAAG,IAAI,QAAQ,EAAE,GAAG,EAAE;AACrD,YAAI,KAAK,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC;AACzC,iBAAO;AAAA,IACb,WAAW,IAAI,MAAM,YAAY,QAAQ,MAAM;AAC7C,aAAO;AAAA,EACX;AACA,MAAI,aAAa;AACf,WAAO,KAAK,UAAU,OAAO;AAAA,MAC3B,OAAO,KAAK;AAAA,MACZ,QAAQ,CAAC;AAAA,IACX,IAAI,KAAK,kBAAkB,OAAO;AAAA,MAChC,OAAO,KAAK;AAAA,MACZ,QAAQ,EAAE,KAAK,GAAG;AAAA,IACpB,IAAI;AACN,MAAI,KAAK,UAAU,MAAM;AACvB,QAAI,QAAQ,KAAK,MAAM,IAAI,WAAW,QAAQ,CAAC;AAC/C,QAAI,UAAU,QAAQ;AACpB,UAAI,QAAQ,WAAW,KAAK,WAAW,OAAO,UAAU,OAAO;AAC/D,UAAI,UAAU;AACZ,eAAO;AAAA,IACX;AAAA,EACF;AACA,MAAI,KAAK,WAAW,MAAM;AACxB,QAAI,EAAE,OAAO,MAAM,MAAM,IAAI,KAAK,QAAQ,aAAa,IAAI,QAAQ,KAAK,QAAQ;AAChF,QAAI,eAAe,UAAU;AAC3B,UAAI,eAAe,MAAM,cAAc,WAAW;AAChD,YAAI,UAAU,MAAM;AAClB,cAAI,SAAS,CAAC;AACd,cAAI,OAAO,IAAI,IAAI,IAAI,UAAU,UAAU,SAAS,GAAG;AACrD,qBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,kBAAI,OAAO,QAAQ,CAAC,EAAE,OAAO,IAAI,GAAG,IAAI;AACxC,uBAAS,WAAW,OAAO,IAAI,IAAI;AAAA,YACrC;AACF,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF,WAAW,UAAU,MAAM;AACzB,YAAI,QAAQ;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,YAAI,UAAU,MAAM;AAClB,cAAI,MAAM,OAAO,IAAI,IAAI,IAAI,UAAU,UAAU,UAAU,GAAG;AAC5D,qBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,kBAAI,OAAO,QAAQ,CAAC,EAAE,MAAM,OAAO,IAAI,GAAG,IAAI;AAC9C,uBAAS,WAAW,MAAM,OAAO,IAAI,IAAI;AAAA,YAC3C;AACF,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,KAAK,kBAAkB,OAAO;AAAA,IACnC,OAAO,KAAK;AAAA,IACZ,QAAQ;AAAA,MACN,KAAK,IAAI,UAAU,UAAU,SAAS;AAAA,IACxC;AAAA,EACF,IAAI;AACN,GArEgB;AAkFhB,IAAI,cAAc;AAAA;AAAA,EAEhB;AAAA;AAAA,EAEA,MAAM,QAAQ,IAAE;AAAA,EAChB,aAAa,YAAY,IAAE;AAAA,EAC3B,YAAY,QAAQ,KAAE;AAAA,EACtB,iBAAiB,YAAY,KAAE;AAAA;AAAA,EAE/B,UAAU;AAAA,EACV;AAAA,EACA,iBAAiB;AAAA;AAAA,EAEjB,gBAAgB;AAAA;AAAA;AAAA,EAGhB,KAAK;AAAA,EACL,OAAO;AAAA,EACP,UAAU;AAAA;AAAA,EAEV,MAAM;AAAA,EACN,MAAM;AAAA,EACN;AAAA;AAAA,EAEA,MAAM;AAAA;AAAA;AAAA,EAGN,gBAAgB;AAAA,EAChB,6BAA6B;AAAA;AAAA,EAE7B,yBAAyB;AAAA;AAAA;AAAA,EAGzB;AAAA;AAAA,EAEA,OAAO,EAAE,MAAM,UAAU,UAAU,cAAc;AAAA;AAAA,EAEjD,OAAO,EAAE,MAAM,UAAU,UAAU,cAAc;AAAA;AAAA,EAEjD,OAAO,EAAE,MAAM,UAAU,UAAU,eAAe;AAAA;AAAA,EAElD,QAAQ,EAAE,MAAM,UAAU,UAAU,eAAe;AAAA;AAAA,EAEnD,UAAU;AAAA;AAAA,EAEV,QAAQ;AACV;AACA,SAAS,WAAW,MAAM;AACxB,SAAO,OAAO,MAAM,MAAM,OAAO,QAAQ,KAAK,OAAO,QAAQ;AAC/D;AAFS;AAGT,IAAI,OAAO;AAAX,IAAyC,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAClG,SAAS,KAAK,KAAK;AACjB,MAAI,UAAU,KAAK,KAAK,GAAG;AAC3B,MAAI,CAAC,QAAS,QAAO;AACrB,MAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC7D,SAAO,SAAS,KAAK,SAAS,MAAM,OAAO,KAAK,QAAQ,UAAU,KAAK,WAAW,IAAI,IAAI,KAAK,KAAK,KAAK;AAC3G;AALS;AAMT,IAAI,OAAO;AACX,SAAS,QAAQ,gBAAgB;AAC/B,SAAO,SAAS,KAAK;AACnB,QAAI,UAAU,KAAK,KAAK,GAAG;AAC3B,QAAI,CAAC,QAAS,QAAO;AACrB,QAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,SAAS,QAAQ,CAAC,MAAM,MAAM,KAAK,GAAG,MAAM,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,EAAE,QAAQ,CAAC,KAAK;AACnK,QAAI,MAAM,MAAM,MAAM,MAAM,kBAAkB,CAAC,GAAI,QAAO;AAC1D,QAAI,MAAM,MAAM,OAAO,MAAM,MAAM,GAAI,QAAO;AAC9C,QAAI,SAAS,MAAM,MAAM,QAAQ,QAAQ,KAAK,MAAM,UAAU,SAAS,IAAI,IAAI;AAC/E,YAAQ,UAAU,MAAM,UAAU,QAAQ,WAAW,MAAM,WAAW,OAAO,MAAM;AAAA,EACrF;AACF;AAVS;AAWT,IAAI,0BAA0B,wBAAC,QAAQ,IAAI,WAAW,IAAI,SAAS,CAAC,MAAM,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI,MAAM,IAAI,MAAM,EAAE,IAAI,KAA1F;AAA9B,IAA6H,sBAAsB;AACnJ,SAAS,YAAY,gBAAgB;AACnC,MAAIC,QAAO,QAAQ,cAAc;AACjC,SAAO,SAAS,KAAK;AACnB,QAAI,WAAW,IAAI,MAAM,mBAAmB;AAC5C,WAAO,SAAS,WAAW,KAAK,KAAK,SAAS,CAAC,CAAC,KAAKA,MAAK,SAAS,CAAC,CAAC;AAAA,EACvE;AACF;AANS;AAOT,IAAI,mBAAmB;AAAvB,IAA+B,MAAM;AACrC,SAAS,IAAI,KAAK;AAChB,SAAO,iBAAiB,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG;AACnD;AAFS;AAGT,IAAI,OAAO;AACX,SAAS,KAAK,KAAK;AACjB,SAAO,KAAK,YAAY,GAAG,KAAK,KAAK,GAAG;AAC1C;AAFS;AAGT,IAAI,YAAY,EAAE,KAAK;AAAvB,IAA4B,YAAY,KAAK,KAAK;AAClD,SAAS,cAAc,OAAO;AAC5B,SAAO,OAAO,UAAU,KAAK,KAAK,SAAS,aAAa,SAAS;AACnE;AAFS;AAGT,SAAS,cAAc,OAAO;AAC5B,SAAO,OAAO,UAAU,KAAK;AAC/B;AAFS;AAGT,SAAS,iBAAiB;AACxB,SAAO;AACT;AAFS;AAGT,IAAI,WAAW;AACf,SAAS,MAAM,KAAK;AAClB,MAAI,SAAS,KAAK,GAAG,EAAG,QAAO;AAC/B,MAAI;AACF,WAAO,IAAI,OAAO,GAAG,GAAG;AAAA,EAC1B,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAPS;AAQT,IAAI,YAAY;AAAhB,IAAkO,eAAe;AAAjP,IAAuY,gBAAgB;AAAvZ,IAA4nB,gBAAgB,YAAY;AAAxpB,IAA8pB,oBAAoB,YAAY,WAAW;AACzsB,eAAe,IAAI,MAAM,KAAK,eAAe,IAAI,QAAQ,CAAC,UAAU;AAClE,MAAI,OAAO,wBAAwB,KAAK,EAAE,QAAQ,MAAM,EAAE;AAC1D,MAAI,UAAU,KAAK,IAAI,KAAK,aAAa,KAAK,IAAI,KAAK,cAAc,KAAK,IAAI,KAAK,cAAc,IAAI,GAAG;AACtG,QAAI,QAAQ,IAAI,KAAK,IAAI;AACzB,QAAI,CAAC,OAAO,MAAM,MAAM,QAAQ,CAAC,EAAG,QAAO;AAAA,EAC7C;AACA,SAAO;AACT,CAAC;AACD,eAAe,IAAI,WAAW,KAAK,eAAe,IAAI,aAAa,CAAC,UAAU;AAC5E,MAAI,OAAO,MAAM,QAAQ,MAAM,EAAE;AACjC,MAAI,UAAU,KAAK,IAAI,KAAK,aAAa,KAAK,IAAI,KAAK,cAAc,KAAK,IAAI,KAAK,kBAAkB,IAAI,GAAG;AAC1G,QAAI,QAAQ,IAAI,KAAK,IAAI;AACzB,QAAI,CAAC,OAAO,MAAM,MAAM,QAAQ,CAAC,EAAG,QAAO;AAAA,EAC7C;AACA,SAAO;AACT,CAAC;AACD,OAAO,QAAQ,WAAW,EAAE,QAAQ,CAAC,gBAAgB;AACnD,MAAI,CAAC,YAAY,WAAW,IAAI;AAChC,iBAAe,IAAI,UAAU,MAAM,uBAAuB,SAAS,eAAe,IAAI,YAAY,CAAC,UAAU,YAAY,KAAK,KAAK,CAAC,IAAI,OAAO,eAAe,cAAc,eAAe,IAAI,YAAY,WAAW;AACxN,CAAC;AACD,eAAe,IAAI,SAAS,KAAK,eAAe,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;AACnG,eAAe,IAAI,SAAS,KAAK,eAAe;AAAA,EAC9C;AAAA,EACA,CAAC,UAAU,CAAC,CAAC,SAAS,OAAO,UAAU,CAAC,KAAK;AAC/C;AACA,eAAe,IAAI,SAAS,KAAK,eAAe;AAAA,EAC9C;AAAA,EACA,CAAC,UAAU,UAAU,UAAU,UAAU;AAC3C;AACA,eAAe,IAAI,cAAc,KAAK,eAAe,IAAI,gBAAgB,CAAC,UAAU;AAClF,MAAI,QAAQ,MAAM,WAAW,CAAC;AAC9B,OAAK,UAAU,KAAK,UAAU,MAAM,UAAU,QAAQ,QAAQ,MAAM,UAAU,EAAE,WAAW,CAAC,IAAI,UAAU,OAAO,UAAU,GAAI,QAAO;AACtI,MAAI;AACF,WAAO,KAAK,MAAM,KAAK,GAAG;AAAA,EAC5B,QAAQ;AACN,WAAO;AAAA,EACT;AACF,CAAC;AACD,eAAe,IAAI,aAAa,KAAK,eAAe,IAAI,eAAe,CAAC,UAAU;AAChF,MAAI,QAAQ,MAAM,WAAW,CAAC;AAC9B,OAAK,UAAU,KAAK,UAAU,MAAM,UAAU,QAAQ,QAAQ,MAAM,UAAU,EAAE,WAAW,CAAC,IAAI,UAAU,OAAO,UAAU,GAAI,QAAO;AACtI,MAAI;AACF,WAAO,KAAK,MAAM,KAAK,GAAG;AAAA,EAC5B,QAAQ;AACN,WAAO;AAAA,EACT;AACF,CAAC;AAYD,IAAI,QAAQ,OAAO,MAAM;AAGzB,IAAI,OAAO;AAAA,EACT,KAAK;AAAA,EACL,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,UAAU;AAAA,EACV,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,8BAA8B;AAAA,EAC9B,QAAQ;AAAA,EACR,+BAA+B;AAAA,EAC/B,MAAM;AACR;AA5EA,IA4EG,mBAAmB,wBAAC,SAAS;AAC9B,MAAI,QAAQ,KAAK,YAAY,GAAG;AAChC,SAAO,UAAU,KAAK,KAAK,KAAK,MAAM,QAAQ,CAAC;AACjD,GAHsB;AA5EtB,IA+E0CC;AA/E1C,IA+E4DC;AA/E5D,IA+EkE,aAAa,MAAM;AAAA,EA5erF,OA4eqF;AAAA;AAAA;AAAA,EACnF,YAAY,MAAM;AAChB,SAAK,OAAO;AACZ,QAAI,MAAO,MAAK,QAAQ,IAAI,KAAK,IAAI;AAAA,aAC5B,OAAO,SAAS;AACvB,cAAQ,KAAK,2CAA2C;AAAA,aACjD,CAACD,qBAAoB,CAACC;AAC7B,UAAI;AACF,aAAK,QAAQ,uDAAa,KAAK,CAAC,QAAQD,oBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,IAAI,EAAE,GAAG,KAAK,QAAQ,mEAAsB,KAAK,CAAC,QAAQC,QAAO,GAAG,MAAM,GAAG,KAAK,IAAI,EAAE;AAAA,MAC9L,QAAQ;AAAA,MACR;AAAA;AAEA,WAAK,QAAQD,kBAAiB,IAAI,GAAG,KAAK,QAAQC,MAAK,IAAI;AAAA,EAC/D;AAAA,EACA,IAAI,OAAO;AACT;AAAA;AAAA,MAEE,KAAK,iBAAiB,KAAK,IAAI,CAAC,KAAK;AAAA;AAAA,EAEzC;AAAA,EACA,IAAI,SAAS;AACX,WAAO,QAAQ,KAAK,MAAM,OAAO,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK;AAAA,EACtE;AACF;AAMA,IAAI,qBAAqB,YAAY,IAAI,QAAQ;AAAjD,IAAoD,iBAAiB,wBAAC,KAAK,aAAa;AACtF,MAAI,YAAY,IAAI,IAAI,GAAG;AAC3B,SAAO,UAAU,WAAW,UAAU,UAAU,SAAS;AAC3D,GAHqE;AAArE,IAGG,UAAU,wBAAC,MAAM,OAAO,KAAK,cAAc,eAAe,KAAK,EAAE,SAAS,CAAC;AAC9E,EAAE;AAAA;AAAA;AAGF,EAAE,SAAS,EAAE,WAAW,UAAU,KAAK,EAAE,SAAS,MAAM;AACxD,WAAW,OAAO,eAAe,CAAC,CAAC,GALtB;AAHb,IAQsC,WAAW,wBAAC,SAAS,QAAQ,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,IAAI,GAAhE;AARjD,IAQoH,YAAY,wBAAC,QAAQ,QAAQ,YAAY;AAC3J,MAAI,WAAW,SAAS,UAAU,WAAW,SAAS,YAAY;AAClE,MAAI,CAAC,SAAS,MAAM,KAAK,CAAC,SAAS,MAAM,EAAG,QAAO;AACnD,WAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM;AAC5C,QAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC5B,UAAI,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO,WAAW,QAAQ,KAAK,GAAG;AAC1D,SAAC,YAAY,EAAE,OAAO,aAAa,OAAO,GAAG,IAAI;AACjD;AAAA,MACF;AACA,aAAO,GAAG,IAAI;AAAA,QACZ,OAAO,GAAG;AAAA,QACV;AAAA,QACA,EAAE,UAAU,SAAS;AAAA,MACvB;AAAA,IACF;AACF,SAAO;AACT,GAhBgI;AARhI,IAwBG,cAAc,wBAAC,GAAG,MAAM;AACzB,MAAI,IAAI,UAAU,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG;AAAA,IACzC,UAAU,CAAC,YAAY;AAAA,EACzB,CAAC;AACD,SAAO,EAAE,cAAc,OAAO,EAAE,YAAY;AAC9C,GALiB;AAxBjB,IA6BG,mBAAmB,wBAAC,GAAG,MAAM;AAC9B,MAAI,CAAC,EAAG,QAAO;AACf,MAAIC,SAAQ,CAAC,GAAG,YAAY,CAAC;AAC7B,MAAI,GAAG;AACL,UAAM,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;AAC3B,aAAS,QAAQ;AACf,MAAAA,OAAM,KAAK,IAAI,GAAG,KAAK,YAAY,UAAU,KAAK,KAAK,QAAQ;AAAA,EACnE;AACA,MAAI,GAAG;AACL,UAAM,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;AAC3B,aAAS,QAAQ;AACf,gBAAU,SAAS,KAAK,QAAQ,KAAKA,OAAM,KAAK,IAAI;AAAA,EACxD;AACA,SAAOA;AACT,GAdsB;AA7BtB,IA2CG,iBAAiB;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AA/DA,IA+DG,mBAAmB,eAAe;AAAA,EACnC,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,MAAI;AAAA,EAC1B,CAAC;AACH;AAlEA,IAkEG,iBAAiB,wBAAC,MAAM,OAAO,KAAK,YAAY,OAAO,KAAK,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAvE;AAlEpB,IAkE8F,gBAAgB,wBAAC,GAAG,MAAM,eAAe,CAAC,KAAK,eAAe,CAAC,IAAI,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,KAAK,eAAe,CAAC,IAAI,OAAO,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,KAAK,GAAhK;AAlE9G,IAkEiR,uBAAuB,wBAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI;AAAA,EAC3T,MAAM;AAAA,EACN,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AACZ,IAAI;AAAA,EACF,MAAM,GAAG,QAAQ,GAAG;AAAA,EACpB,SAAS,GAAG,WAAW,GAAG;AAAA,EAC1B,QAAQ,GAAG,UAAU,GAAG;AAAA,EACxB,OAAO,GAAG,SAAS,GAAG;AAAA,EACtB,QAAQ,GAAG,UAAU,GAAG;AAAA;AAAA,EAExB,UAAU;AAAA;AAAA,IAER,GAAG;AAAA;AAAA,IAEH,GAAG;AAAA,EACL;AACF,GApBwS;AAlExS,IAsFG,YAAY,wBAAC,GAAG,MAAM;AACvB,MAAI,CAAC,OAAO,OAAO,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,IAAI;AACzC,WAAO,EAAE,GAAG,EAAE;AAChB,MAAI,OAAO;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA;AAAA;AAAA,IAGH,MAAM,GAAG,QAAQ,GAAG;AAAA;AAAA,IAEpB,SAAS,GAAG,WAAW,GAAG;AAAA;AAAA,IAE1B,QAAQ,GAAG,UAAU,GAAG;AAAA;AAAA,IAExB,OAAO,GAAG,SAAS,GAAG;AAAA;AAAA,IAEtB,QAAQ,GAAG,UAAU,GAAG;AAAA;AAAA,IAExB,UAAU;AAAA;AAAA,MAER,GAAG;AAAA;AAAA,MAEH,GAAG;AAAA,IACL;AAAA,IACA,MAAM,GAAG,QAAQ,GAAG;AAAA,IACpB,QAAQ;AAAA;AAAA,MAEN,GAAG,UAAU,CAAC;AAAA;AAAA,MAEd,GAAG,UAAU,CAAC;AAAA,IAChB;AAAA,IACA,OAAO,iBAAiB,GAAG,OAAO,GAAG,KAAK;AAAA,IAC1C,WAAW,iBAAiB,GAAG,WAAW,GAAG,SAAS;AAAA,IACtD,cAAc;AAAA,MACZ;AAAA;AAAA,QAEE,cAAc,GAAG,SAAS,SAAS;AAAA,QACnC,GAAG;AAAA,MACL;AAAA,MACA;AAAA,QACE,cAAc,EAAE,SAAS,SAAS;AAAA,QAClC,GAAG;AAAA,MACL;AAAA,IACF;AAAA,IACA,aAAa,iBAAiB,GAAG,aAAa,GAAG,WAAW;AAAA,IAC5D,aAAa,iBAAiB,GAAG,aAAa,GAAG,WAAW;AAAA,IAC5D,eAAe;AAAA,MACb,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,IACA,OAAO,iBAAiB,GAAG,OAAO,GAAG,KAAK;AAAA,IAC1C,OAAO,iBAAiB,GAAG,OAAO,GAAG,KAAK;AAAA,EAC5C;AACA,SAAO,KAAK,WAAW,OAAO,KAAK,SAAS;AAC9C,GAtDe;AAtFf,IA4IG,mBAAmB,wBAAC,MAAM;AAC3B,IAAE,SAAS,CAAC,MAAM,QAAQ,EAAE,KAAK,MAAM,EAAE,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,aAAa,CAAC,MAAM,QAAQ,EAAE,SAAS,MAAM,EAAE,YAAY,CAAC,EAAE,SAAS,IAAI,EAAE,eAAe,CAAC,MAAM,QAAQ,EAAE,WAAW,MAAM,EAAE,cAAc,CAAC,EAAE,WAAW,IAAI,EAAE,eAAe,CAAC,MAAM,QAAQ,EAAE,WAAW,MAAM,EAAE,cAAc,CAAC,EAAE,WAAW,IAAI,EAAE,iBAAiB,CAAC,MAAM,QAAQ,EAAE,aAAa,MAAM,EAAE,gBAAgB,CAAC,EAAE,aAAa,IAAI,EAAE,SAAS,CAAC,MAAM,QAAQ,EAAE,KAAK,MAAM,EAAE,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,SAAS,CAAC,MAAM,QAAQ,EAAE,KAAK,MAAM,EAAE,QAAQ,CAAC,EAAE,KAAK;AACvgB,MAAI,eAAe,CAAC;AACpB,SAAO,EAAE,YAAY,eAAe;AAAA;AAAA,IAElC,MAAM,QAAQ,EAAE,OAAO,IAAI,EAAE,UAAU,CAAC,EAAE,OAAO;AAAA,IACjD;AAAA,EACF,GAAG,OAAO,EAAE,UAAU,EAAE,iBAAiB,aAAa,SAAS,eAAe,aAAa;AAAA,IACzF,MAAM,QAAQ,EAAE,YAAY,IAAI,EAAE,eAAe,CAAC,EAAE,YAAY;AAAA,EAClE,IAAI,eAAe,MAAM,QAAQ,EAAE,YAAY,IAAI,EAAE,eAAe,CAAC,EAAE,YAAY,IAAI,aAAa,WAAW,EAAE,eAAe,eAAe;AACjJ,GAVsB;AA5ItB,IAsJG,SAAS,OAAO,MAAM;AAtJzB,IAsJ8B,aAAa,UAAU,OAAO,IAAI,QAAQ;AAtJxE,IAsJoF,WAAW,wBAAC,MAAM;AACpG,MAAI,WAAY,QAAO,IAAI,KAAK,CAAC;AACjC,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,EAAE,SAAU,KAAI,KAAK,KAAK,IAAI,EAAE,WAAW,GAAG,GAAG,KAAK,CAAC;AAC3E,SAAO,IAAI,IAAI,MAAM;AACvB,GAL+F;AAtJ/F,IA2JG,iBAAiB,wBAAC,WAAW,MAAM;AACpC,MAAI,CAAC,EAAG;AACR,MAAI,CAAC,MAAM,QAAQ,CAAC,GAAG;AACrB,QAAI,KAAK;AACT,WAAO,aAAa,CAAC,GAAG,aAAa,GAAG,WAAW,YAAY,GAAG,UAAU,aAAa,GAAG,QAAQ,UAAU;AAAA,EAChH;AACA,MAAI,MAAM,CAAC,GAAG,CAAC;AACf,WAAS,MAAM;AACb,iBAAa,CAAC,GAAG,aAAa,GAAG,WAAW,YAAY,GAAG,UAAU,aAAa,GAAG,QAAQ;AAC/F,SAAO;AACT,GAVoB;AA3JpB,IAqKG,iBAAiB,wBAAC,GAAG,GAAG,eAAe;AAAA,EACxC,OAAO;AAAA,IACL,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,KAAK;AAAA,EACpC;AAAA,EACA,SAAS;AAAA,IACP,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,OAAO;AAAA,EACtC;AAAA,EACA,OAAO;AAAA,IACL,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,KAAK;AAAA,EACpC;AAAA,EACA,WAAW;AAAA,IACT,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,SAAS;AAAA,EACxC;AAAA,EACA,cAAc;AAAA,IACZ;AAAA;AAAA,MAEE,cAAc,EAAE,SAAS,SAAS;AAAA,MAClC,EAAE;AAAA,IACJ;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,QACE,cAAc,GAAG,SAAS,SAAS;AAAA,QACnC,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA,EACA,aAAa;AAAA,IACX,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,WAAW;AAAA,EAC1C;AAAA,EACA,aAAa;AAAA,IACX,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,WAAW;AAAA,EAC1C;AAAA,EACA,eAAe;AAAA,IACb,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,aAAa;AAAA,EAC5C;AAAA;AAAA,EAEA,OAAO;AAAA,IACL,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,KAAK;AAAA,EACpC;AAAA,EACA,OAAO;AAAA,IACL,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,KAAK;AAAA,EACpC;AAAA,EACA,MAAM;AAAA,IACJ,EAAE;AAAA,IACF,eAAe,WAAW,GAAG,IAAI;AAAA,EACnC;AACF,IAxDoB;AArKpB,IA6NI,aAAa,wBAAC,IAAI,QAAQ,EAAE,gBAAgB,MAAG,MAAM;AACvD,MAAI,CAAC,GAAI,QAAO;AAChB,MAAI,CAAC,MAAM,QAAQ,EAAE;AACnB,WAAO,gBAAgB,GAAG,UAAU,SAAS,GAAG,QAAQ,QAAQ;AAClE,WAAS,KAAK;AACZ,oBAAgB,EAAE,UAAU,SAAS,EAAE,QAAQ;AACjD,SAAO;AACT,GAPiB;AA7NjB,IAoOG,eAAe,wBAAC,OAAO;AACxB,MAAI,CAAC,GAAI,QAAO;AAChB,MAAI,CAAC,MAAM,QAAQ,EAAE;AACnB,YAAQ,GAAG,OAAO;AAAA,MAChB,KAAK;AAAA,MACL,KAAK;AACH,eAAO,EAAE,GAAG,GAAG;AAAA,MACjB;AACE,eAAO,EAAE,GAAG;AAAA,IAChB;AACF,MAAIA,SAAQ,CAAC;AACb,WAAS,KAAK;AACZ,YAAQ,EAAE,OAAO;AAAA,MACf,KAAK;AAAA,MACL,KAAK;AACH,QAAAA,OAAM,KAAK;AAAA,UACT,GAAG;AAAA,QACL,CAAC;AACD;AAAA,IACJ;AACF,SAAOA;AACT,GArBkB;AApOlB,IAyPG,mBAAmB,wBAAC,UAAU;AAAA;AAAA,EAE/B,GAAG;AAAA,EACH,MAAM,MAAM;AAAA,EACZ,QAAQ,MAAM;AAAA,EACd,OAAO,aAAa,MAAM,KAAK;AAAA,EAC/B,WAAW,aAAa,MAAM,SAAS;AAAA,EACvC,cAAc,aAAa,MAAM,YAAY;AAAA,EAC7C,aAAa,aAAa,MAAM,WAAW;AAAA,EAC3C,aAAa,aAAa,MAAM,WAAW;AAAA,EAC3C,eAAe,aAAa,MAAM,aAAa;AAAA,EAC/C,OAAO,aAAa,MAAM,KAAK;AAAA,EAC/B,OAAO,aAAa,MAAM,KAAK;AACjC,IAbsB;AAzPtB,IAsQI,YAAY;AAAA,EACd,UAAU;AAAA,EACV,uBAAuB;AAAA,EACvB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,iCAAiC;AAAA,EACjC,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,OAAO;AAAA,EACP,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,sBAAsB;AAAA,EACtB,sBAAsB;AAAA,EACtB,eAAe;AAAA,EACf,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,WAAW;AAAA,EACX,aAAa;AAAA,EACb,sBAAsB;AAAA,EACtB,kBAAkB;AAAA,EAClB,iCAAiC;AAAA,EACjC,mBAAmB;AAAA,EACnB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,mBAAmB;AAAA,EACnB,uBAAuB;AAAA,EACvB,qBAAqB;AAAA,EACrB,gBAAgB;AAAA,EAChB,0BAA0B;AAAA,EAC1B,yBAAyB;AAAA,EACzB,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAChB,uBAAuB;AAAA,EACvB,yBAAyB;AAAA,EACzB,QAAQ;AAAA,EACR,qBAAqB;AAAA,EACrB,aAAa;AAAA,EACb,oBAAoB;AAAA,EACpB,yBAAyB;AAAA,EACzB,qBAAqB;AAAA,EACrB,mCAAmC;AAAA,EACnC,iCAAiC;AAAA,EACjC,yBAAyB;AAAA,EACzB,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,uBAAuB;AAAA,EACvB,mBAAmB;AAAA,EACnB,8BAA8B;AAAA,EAC9B,2BAA2B;AAAA,EAC3B,wBAAwB;AAAA,EACxB,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,mCAAmC;AACrC;AAnUA,IAmUG,oBAAoB,OAAO;AAAA,EAC5B,OAAO,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClD;AACA,SAAS,qBAAqB,QAAQ;AACpC,MAAI,gBAAgB;AACpB,SAAO,cAAc,SAAS,GAAG;AAC/B,oBAAgB,cAAc,MAAM,GAAG,EAAE;AAC3C,SAAO;AACT;AALS;AAMT,IAAI,UAAU,IAAI,YAAY;AAA9B,IAAiC,aAAa,8BAAO,KAAK,WAAW;AACnE,MAAI,OAAO,OAAO,WAAW,MAAM,KAAK,UAAU,GAAG,IAAI,OAAO,OAAO,aAAa,MAAM,MAAM,KAAK,WAAW,KAAM,OAAM,IAAI,UAAU,8BAA8B;AACxK,MAAI,YAAY,MAAM,OAAO,OAAO;AAAA,IAClC;AAAA,IACA,QAAQ,OAAO,MAAM;AAAA,IACrB,EAAE,MAAM,QAAQ,MAAM,UAAU;AAAA,IAChC;AAAA,IACA,CAAC,MAAM;AAAA,EACT,GAAG,aAAa,MAAM,OAAO,OAAO;AAAA,IAClC;AAAA,IACA;AAAA,IACA,QAAQ,OAAO,GAAG;AAAA,EACpB;AACA,SAAO,MAAM,MAAM,qBAAqB,OAAO,KAAK,UAAU,EAAE,SAAS,QAAQ,CAAC;AACpF,GAd8C;AAA9C,IAcG,eAAe,8BAAO,OAAO,WAAW;AACzC,MAAI,OAAO,SAAS;AAClB,UAAM,IAAI,UAAU,wCAAwC;AAC9D,MAAI,WAAW,KAAM,OAAM,IAAI,UAAU,8BAA8B;AACvE,MAAI,iBAAiB,MAAM,MAAM,GAAG,MAAM,YAAY,GAAG,CAAC;AAC1D,SAAO,MAAM,WAAW,gBAAgB,MAAM,MAAM,QAAQ,iBAAiB;AAC/E,GANkB;AAdlB,IAoBG,iBAAiB,wBAAC,WAAW,UAAU,WAAW;AACnD,MAAI,EAAE,CAAC,aAAa,OAAO,aAAa,YAAY,CAAC;AACnD,aAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACjD,UAAI,iBAAiB,GAAG,KAAK,EAAE,OAAO,WAAY;AAClD,UAAI,IAAI,UAAU,GAAG;AACrB,UAAI,OAAO,KAAK,YAAY;AAC1B,YAAI,OAAO,EAAE,KAAK;AAClB,YAAI,OAAO,QAAQ;AACjB,mBAAS,CAAC,GAAG,EAAE,KAAK,OAAO,QAAQ,IAAI;AACrC,mBAAO,CAAC,EAAE;AAAA,cACR,IAAI;AAAA,YACN,CAAC;AAAA,MACP;AACA,aAAO,SAAS,GAAG;AAAA,IACrB;AACJ,GAfoB;AApBpB,IAmCG,qBAAqB,wBAAC;AAAA,EACvB;AAAA,EACA;AACF,MAAM,CAAC,cAAc,CAAC,MAAM,OAAO;AACjC,MAAI,OAAO,QAAQ,eAAe,OAAO;AAAA,IACvC,IAAI;AAAA,EACN,IAAI,cAAc,cAAc,OAAO;AAAA,IACrC,GAAG;AAAA,IACH,SAAS;AAAA,EACX,IAAI,UAAU,SAAS,MAAM,UAAU,SAAS,IAAI,CAAC,IAAI,OAAO,UAAU,SAAS,KAAK,eAAe,UAAU,SAAS,IAAI,CAAC,UAAU,SAAS,CAAC,IAAI,MAAM,QAAQ,UAAU,SAAS,CAAC,MAAM,UAAU,SAAS,IAAI,CAAC,UAAU,SAAS,CAAC,IAAI,QAAQ,QAAQ,MAAM,QAAQ,IAAI,GAAG;AAClR,UAAM,QAAQ,IAAI,IAAI,UAAU,SAAS,IAAI,UAAU,SAAS,EAAE,OAAO,IAAI,IAAI,UAAU,SAAS,EAAE,KAAK,IAAI;AAC/G;AAAA,EACF;AACA,MAAI,EAAE,SAAS,SAAS,QAAQ,QAAQ,IAAI;AAC5C,SAAO,MAAM,eAAe,KAAK,EAAE,GAAG,IAAI,UAAU,WAAW,MAAM,QAAQ,EAAE,IAAI,WAAW,WAAW,WAAW,SAAS,IAAI,GAAG;AAAA,IAClI,WAAW,SAAS;AAAA,EACtB,IAAI,WAAW,SAAS,IAAI,WAAW,SAAS,EAAE,OAAO,EAAE,IAAI,WAAW,WAAW,WAAW,SAAS,EAAE,QAAQ,EAAE,IAAI,WAAW,SAAS,EAAE,KAAK,EAAE,IAAI,MAAM,QAAQ,EAAE,IAAI,WAAW,WAAW,UAAU,SAAS,IAAI,GAAG,OAAO,UAAU,SAAS,CAAC,IAAI,UAAU,SAAS,IAAI,UAAU,SAAS,EAAE,OAAO,EAAE,IAAI,WAAW,WAAW,UAAU,SAAS,EAAE,QAAQ,EAAE,IAAI,UAAU,SAAS,EAAE,KAAK,EAAE;AAC7Y,GAjBwB;AAnCxB,IAoDG,qBAAqB,wBAAC,YAAY;AACnC,MAAI,OAAO,WAAW,SAAU,QAAO;AACvC,MAAI,QAAQ,SAAS,IAAI;AACvB,QAAI,QAAQ,KAAK,EAAE,WAAW,EAAG,QAAO;AACxC,QAAI,SAAS,OAAO,OAAO;AAC3B,WAAO,OAAO,MAAM,MAAM,IAAI,OAAO;AAAA,EACvC;AACA,MAAI,QAAQ,WAAW,IAAI;AACzB,QAAI,QAAQ,KAAK,EAAE,WAAW,EAAG,QAAO;AACxC,QAAIC,UAAS,OAAO,OAAO;AAC3B,WAAO,OAAO,MAAMA,OAAM,KAAKA,QAAO,SAAS,MAAM,UAAU,OAAOA;AAAA,EACxE;AACA,SAAO;AACT,GAbwB;AApDxB,IAiEG,kBAAkB,wBAAC,YAAY,mBAAmB,OAAO,MAAM,MAA7C;AAjErB,IAiEwE,eAAe,MAAM;AAAA,EAt5B7F,OAs5B6F;AAAA;AAAA;AAAA,EAC3F,YAAY,UAAU,QAAQ,OAAO,YAAY,MAAM;AAAA,EACvD,GAAG;AACD,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,OAAO;AACZ,SAAK,WAAW,CAAC;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACT,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,SAAS;AACX,WAAO,KAAK,SAAS,KAAK,OAAO,GAAG,KAAK,SAAS,KAAK,MAAM,GAAG,KAAK,SAAS,WAAW,KAAK,KAAK,KAAK,KAAK,SAAS,GAAG;AAAA,EAC3H;AAAA,EACA,MAAM,QAAQ;AACZ,WAAO,KAAK,SAAS,SAAS,KAAK;AACjC,UAAI;AACF,cAAM,KAAK,SAAS,CAAC;AAAA,MACvB,SAASC,SAAQ;AACf,aAAK,QAAQA,OAAM;AAAA,MACrB;AACA,WAAK,SAAS,MAAM;AAAA,IACtB;AACA,SAAK,OAAO;AAAA,EACd;AAAA;AAAA,EAEA,KAAK,aAAa,YAAY;AAC5B,YAAQ,KAAK,QAAQ,QAAQ,QAAQ,GAAG,KAAK,aAAa,UAAU;AAAA,EACtE;AACF;AArGA,IAqGG,gBAAgB,wBAAC,IAAI,YAAY;AAClC,MAAI,CAAC,GAAI,QAAO;AAChB,MAAI,CAAC,MAAM,QAAQ,EAAE,GAAG;AACtB,QAAI,OAAO,MAAM,cAAc,OAAO,MAAM;AAC1C,aAAO,UAAU,EAAE,IAAI,QAAQ,IAAI,EAAE,GAAG;AAC1C,QAAI,QAAQ,GAAI,QAAO;AAAA,EACzB;AACA,MAAI,MAAM,CAAC;AACX,WAAS,KAAK;AACZ,WAAO,KAAK,cAAc,OAAO,KAAK,WAAW,IAAI,KAAK,UAAU,EAAE,IAAI,GAAG,QAAQ,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,QAAQ,KAAK,IAAI,KAAK,CAAC;AAC/H,SAAO;AACT,GAXmB;AArGnB,IAgHG,4BAA4B,wBAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,cAAc,EAAE,KAAK,IAAI,EAAE,YAAY,EAAE,UAAU,cAAc,EAAE,OAAO,IAAI,EAAE,UAAU,EAAE,QAAQ,cAAc,EAAE,KAAK,IAAI,EAAE,cAAc,EAAE,YAAY,cAAc,EAAE,SAAS,IAAI,EAAE,iBAAiB,EAAE,eAAe,cAAc,EAAE,YAAY,IAAI,EAAE,gBAAgB,EAAE,cAAc,cAAc,EAAE,WAAW,IAAI,EAAE,gBAAgB,EAAE,cAAc,cAAc,EAAE,WAAW,IAAI,EAAE,kBAAkB,EAAE,gBAAgB,cAAc,EAAE,aAAa,IAAI,EAAE,UAAU,EAAE,QAAQ,cAAc,EAAE,KAAK,IAAI,EAAE,UAAU,EAAE,QAAQ,cAAc,EAAE,KAAK,IAAI,EAAE,SAAS,EAAE,OAAO,cAAc,EAAE,IAAI,IAAI,IAA7mB;AAhH/B,IAgHgpB,gBAAgB,wBAAC,MAAM;AACrqB,MAAI,YAA4B,uBAAO,OAAO,IAAI;AAClD,SAAO,EAAE,OAAO,QAAQ,UAAU,QAAQ,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,QAAQ,UAAU,UAAU,EAAE,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,QAAQ,UAAU,QAAQ,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,QAAQ,UAAU,YAAY,EAAE,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,cAAc,QAAQ,UAAU,eAAe,EAAE,aAAa,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,aAAa,QAAQ,UAAU,cAAc,EAAE,YAAY,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,aAAa,QAAQ,UAAU,cAAc,EAAE,YAAY,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,eAAe,QAAQ,UAAU,gBAAgB,EAAE,cAAc,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,QAAQ,UAAU,QAAQ,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,QAAQ,UAAU,OAAO,EAAE,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,MAAM,UAAU,QAAQ,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,UAAU,QAAQ,CAAC,GAAG;AACvyB,GAHgqB;AAhHhqB,IAmHG,iBAAiB,wBAAC,eAAe;AAAA,EAClC,MAAM,UAAU;AAAA,EAChB,QAAQ,UAAU;AAAA,EAClB,SAAS,UAAU;AAAA,EACnB,OAAO,UAAU;AAAA,EACjB,KAAK,UAAU;AAAA,EACf,QAAQ,UAAU;AAAA,EAClB,MAAM,UAAU;AAAA,EAChB,OAAO,UAAU;AAAA,EACjB,KAAK,UAAU;AACjB,IAVoB;AAnHpB,IA6HI,WAAW,wBAAC,KAAK,UAAU,QAAQ,SAAS,SAAS,KAAK,OAAO,GAAtD;AA7Hf,IA6HwE,mBAAmB,OAAO,gBAAgB;AA7HlH,IA6HqH,oBAAoB,OAAO,iBAAiB;AA7HjK,IA6HoK,OAAO,wBAAC,UAAU;AACpL,MAAI,WAAW,IAAI,SAAS;AAC5B,MAAI,SAAS,gBAAgB,IAAI,CAAC,GAAG;AACnC,aAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC9C,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,iBAAS,gBAAgB,EAAE,GAAG,IAAI,CAAC;AACnC,iBAAS,KAAK;AACZ,2BAAiB,OAAO,SAAS,OAAO,KAAK,OAAO,MAAM,IAAI,IAAI,iBAAiB,aAAa,SAAS,OAAO,KAAK,MAAM,OAAO,MAAM,OAAO,IAAI,IAAI,SAAS,OAAO,KAAK,KAAK,GAAG,SAAS,gBAAgB,EAAE,GAAG,EAAE,KAAK,KAAK;AAChO;AAAA,MACF;AACA,uBAAiB,OAAO,SAAS,OAAO,KAAK,OAAO,MAAM,IAAI,IAAI,iBAAiB,aAAa,SAAS,OAAO,KAAK,MAAM,OAAO,MAAM,OAAO,IAAI,IAAI,SAAS,OAAO,KAAK,KAAK,GAAG,SAAS,gBAAgB,EAAE,GAAG,IAAI;AAAA,IACxN;AACF,SAAO;AACT,GAb2K;AA7H3K,IA0IG,WAAW,6BAAM;AAClB,MAAI,OAAO,OAAO,WAAW;AAC7B,SAAO,KAAK,MAAM,GAAG,CAAC,IAAI,KAAK,MAAM,IAAI,EAAE;AAC7C,GAHc;AA1Id,IA6IG,sBAAsB,wBAACF,WAAU;AAClC,MAAI,CAACA,OAAM,OAAQ,QAAO,CAAC;AAC3B,MAAI,SAAS,CAAC;AACd,WAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,KAAK;AACrC,QAAI,OAAOA,OAAM,CAAC;AAClB,SAAK,aAAa,OAAO,SAAS,KAAK,QAAQ,MAAMA,OAAM,OAAO,GAAG,CAAC,GAAG,MAAM,OAAO,KAAK,KAAK,QAAQ;AAAA,EAC1G;AACA,SAAOA;AACT,GARyB;AA7IzB,IAqJG,eAAe,wBAAC,QAAQ,KAAK,aAAa;AAC3C,MAAI,QAAQ;AACV,QAAI,OAAO,UAAU;AACnB,eAAS,SAAS;AAChB,mBAAW,SAAS,MAAM,UAAU,YAAY,MAAM,QAAQ;AAChE;AAAA,IACF;AACA,aAAS,SAAS,OAAQ,YAAW,UAAU,MAAM,QAAQ;AAAA,EAC/D;AACF,GATkB;AArJlB,IA8JG,eAAe,wBAAC,SAAS,KAAK,WAAW,KAAK,SAAS,CAAC,MAAM,KAAK,KAAK,MAAM,GAAG,KAAK,SAAS,CAAC,IAAI,OAAO,KAA5F;AA9JlB,IA8JmH,aAAa,wBAAC,QAAQ;AACvI,MAAI,CAAC,IAAK,QAAO;AACjB,WAAS,KAAK,IAAK,QAAO;AAC1B,SAAO;AACT,GAJgI;AA9JhI,IAkKG,aAAa,wBAAC,MAAM,EAAE,UAAU,MAAG,IAAI,CAAC,MAAM;AAC/C,MAAI,UAAU,mBAAmB,IAAI,EAAE,QAAQ,QAAQ,GAAG;AAC1D,SAAO,YAAY,UAAU,QAAQ,QAAQ,QAAQ,GAAG,EAAE,QAAQ,QAAQ,GAAG,IAAI;AACnF,GAHgB;AAlKhB,IAqKG,iCAAiC,MAAM;AACxC,MAAI,OAAO,MAAM,IAAK,QAAO;AAC7B,MAAI,SAAS,IAAI,QAAQ,MAAM,GAAG;AAClC,SAAO,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI;AAC5D,GAAG;AAkBH,IAAIG,OAAM,OAAO,MAAM,MAAM,IAAI,MAAM,OAAO,UAAU,MAAM,SAAS,MAAM;AAA7E,IAAqF,aAAa,OAAO,iBAAiB;AAA1H,IAA6H,gBAAgBA,MAAK,YAAYA,MAAK,SAAS;AAA5K,IAA0L,kBAAkB;AAAA,EAC1M,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP;AAPA,IAOG,6BAA6B,MAAM;AAAA,EAvhCtC,OAuhCsC;AAAA;AAAA;AAAA,EACpC,YAAY,MAAM,UAAU;AAC1B,QAAI,MAAM,aAAa,QAAQ;AAAA;AAAA,MAE7B,kBAAkB,IAAI;AAAA,QACpB;AACJ,SAAK,OAAO,UAAU,IAAI,KAAK,MAAM,QAAQ,kBAAkB,KAAK,WAAW,SAAS,KAAK,WAAW;AAAA,EAC1G;AACF;AAfA,IAeG,SAAS,wBAAC,MAAM,aAAa,IAAI,2BAA2B,MAAM,QAAQ,GAAjE;AAfZ,IAegFC,SAAQ;AAfxF,IAqBG,gBAAgB,cAAc,MAAM;AAAA,EAriCvC,OAqiCuC;AAAA;AAAA;AAAA,EACrC,YAAY,SAAS;AACnB,UAAM,WAAW,WAAW;AAC5B,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAChB;AACF;AA3BA,IA2BGC,cAAa,cAAc,MAAM;AAAA,EA3iCpC,OA2iCoC;AAAA;AAAA;AAAA,EAClC,YAAY,OAAO;AACjB,UAAM,eAAe;AAAA,MACnB;AAAA,IACF,CAAC;AACD,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAChB;AACF;AAnCA,IAmCG,yBAAyB,cAAc,MAAM;AAAA,EAnjChD,OAmjCgD;AAAA;AAAA;AAAA,EAC9C,YAAY,KAAK,SAAS;AACxB,UAAM,WAAW,IAAI,GAAG,gCAAgC;AACxD,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAChB;AACF;AA1CA,IA0CG,gBAAgB,wBAACC,YAAW;AAC7B,MAAI,CAACA;AACH,WAAO;AAAA,MACL,SAAS;AAAA,IACX;AACF,MAAI,EAAE,SAAS,MAAM,OAAO,KAAK,IAAIA,SAAQ,WAAW,KAAK,MAAM,CAAC,EAAE,WAAW,KAAK,GAAG,GAAG,SAAS,SAAS;AAC9G,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,QACL,GAAGA;AAAA,QACH,SAAS,SAAS,iCAAiC,aAAa,QAAQ;AAAA,MAC1E;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,GAAGA;AAAA,QACH,SAAS,SAAS,qBAAqB,aAAa,QAAQ;AAAA,MAC9D;AAAA,IACF,KAAK;AACH,UAAI,aAAa,QAAQ,QAAQ,GAAG,GAAG,SAAS,QAAQ;AAAA,QACtD,aAAa;AAAA,QACb,QAAQ,QAAQ,KAAK,aAAa,CAAC;AAAA,MACrC;AACA,aAAO;AAAA,QACL,GAAGA;AAAA,QACH,SAAS,SAAS,6BAA6B,aAAa,QAAQ,eAAe,MAAM;AAAA,MAC3F;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,GAAGA;AAAA,QACH,SAAS,GAAG,QAAQ,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,cAAc,QAAQ,WAAW,QAAQ,MAAM,CAAC,EAAE,KAAK,CAAC,eAAe,KAAK;AAAA,MACpH;AAAA,IACF,KAAK;AACH,UAAIC,SAAQD,QAAO,OAAO,MAAM,IAAI,CAAC,MAAM,IAAI,GAAG,UAAU,EAAE,IAAI,GAAG,EAAE,KAAK,IAAI;AAChF,aAAO;AAAA,QACL,GAAGA;AAAA,QACH,SAAS,SAAS,0BAA0BC,MAAK,KAAK,aAAa,QAAQ,uBAAuBA,MAAK;AAAA,MACzG;AAAA,IACF;AACE,aAAO,EAAE,SAAS,SAAS,GAAGD,QAAO;AAAA,EACzC;AACF,GAxCmB;AA1CnB,IAkFG,kBAAkB,MAAM,yBAAyB,MAAM;AAAA,EAlmC1D,OAkmC0D;AAAA;AAAA;AAAA,EACxD,YAAY,UAAU,UAAU,UAAU,IAAI,QAAQ,2BAA2B;AAC/E,UAAM,OAAO;AACb,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,WAAO,eAAe,MAAM,iBAAiB,SAAS;AAAA,EACxD;AAAA,EACA,WAAW,SAAS;AAClB,WAAO,eAAe,IAAI;AAAA,MACxB,KAAK,UAAU;AAAA,QACb,MAAM;AAAA,QACN,IAAI;AAAA,MACN,CAAC;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,GAAG;AAAA,UACH,gBAAgB;AAAA,QAClB;AAAA,MACF;AAAA,IACF,IAAI,IAAI;AAAA,MACN,KAAK,UAAU;AAAA,QACb,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,SAAS,KAAK;AAAA,QACd,UAAU,KAAK;AAAA,QACf,UAAU,KAAK;AAAA,MACjB,CAAC;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,GAAG;AAAA,UACH,gBAAgB;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AA3HA,IA2HG,kBAAkB,MAAM,yBAAyB,MAAM;AAAA,EA3oC1D,OA2oC0D;AAAA;AAAA;AAAA,EACxD,YAAY,MAAM,WAAW,OAAO,QAAQ;AAC1C,aAAS,OAAO,SAAS,YAAY,iBAAiB,+BAA+B,QAAQ,MAAM;AACnG,QAAIA,UAAS,QAAQ,MAAM,MAAM,YAAY,YAAY,UAAU,OAAO,KAAK,EAAE,MAAM,IAAIE,eAAM,OAAO,WAAW,KAAK,EAAE,MAAM,IAAI,WAAWF,SAAQ,QAAQ,QAAQ,SAAS,WAAW,UAAU,WAAW;AAChN,QAAI,CAAC;AACH,UAAI;AACF,mBAAWE,eAAM,OAAO,MAAM;AAAA,MAChC,SAASC,SAAQ;AACf,mBAAW;AAAA,UACT,MAAM;AAAA;AAAA,UAEN,SAASA,SAAQ;AAAA,UACjB,OAAOA;AAAA,QACT;AAAA,MACF;AACF,QAAI,cAAcH,SAAQ,QAAQ,WAAWA,SAAQ,QAAQ,UAAU,SAAS,OAAOA,QAAO,OAAO,SAAS,aAAaA,QAAO,OAAO;AAAA,MACvI,eAAe;AAAA,QACb,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,OAAO;AAAA,MACT,IAAI;AAAA,QACF,MAAM;AAAA,QACN,IAAI;AAAA,QACJ;AAAA,QACA,UAAU;AAAA,QACV,SAASA,SAAQ;AAAA,QACjB,SAAS,cAAcA,OAAM,EAAE;AAAA,QAC/B,OAAO;AAAA,QACP;AAAA,QACA,QAAQ,YAAY,YAAY;AAAA,UAC9B,GAAG,UAAU;AAAA,YACX;AAAA,UACF;AAAA,QACF,EAAE,IAAI,aAAa,IAAI;AAAA,UACrB,GAAGE,eAAM;AAAA,YACP;AAAA,YACA;AAAA,UACF;AAAA,QACF,EAAE,IAAI,aAAa;AAAA,MACrB;AAAA,MACA;AAAA,IACF,IAAIF,QAAO,OAAO,QAAQ,QAAQ,UAAU;AAC5C,oBAAgB,SAAS,UAAU,OAAO,eAAe,WAAW,KAAK,UAAU,WAAW,IAAI,cAAc,KAAK,eAAe,UAAU,KAAK,UAAU;AAAA,MAC3J,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,OAAO;AAAA,IACT,CAAC,IAAI,UAAU,KAAK;AAAA,MAClB;AAAA,QACE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,SAASA,SAAQ;AAAA,QACjB,SAAS,cAAcA,OAAM,EAAE;AAAA,QAC/B;AAAA,QACA,OAAO;AAAA,QACP,QAAQ,YAAY,YAAY,CAAC,GAAG,UAAU,OAAO,KAAK,CAAC,EAAE,IAAI,aAAa,IAAI,CAAC,GAAGE,eAAM,OAAO,WAAW,KAAK,CAAC,EAAE;AAAA,UACpH;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,aAAaF,SAAQ,KAAK,WAAW,UAAU,KAAK,cAAc,aAAa,OAAO,eAAe,MAAM,iBAAiB,SAAS;AAAA,EAC5I;AAAA,EACA,IAAI,MAAM;AACR,WAAO,YAAY,KAAK,YAAY,CAAC,GAAG,KAAK,UAAU,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,aAAa;AAAA;AAAA,MAE1F,CAAC,GAAGE,eAAM,OAAO,KAAK,WAAW,KAAK,KAAK,CAAC,EAAE,IAAI,aAAa;AAAA;AAAA,EAEnE;AAAA,EACA,OAAO,cAAc,WAAW;AAC9B,QAAI,QAAQ,YAAY,YAAY,UAAU,SAAS;AACvD,QAAI;AACF,aAAOA,eAAM,OAAO,KAAK;AAAA,IAC3B,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,iBAAiB,cAAc,KAAK,SAAS;AAAA,EACtD;AAAA,EACA,WAAW,SAAS;AAClB,WAAO,IAAI,SAAS,KAAK,SAAS;AAAA,MAChC,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,GAAG;AAAA,QACH,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,OAAO,SAAS;AACd,QAAI,CAAC,KAAK,YAAa,QAAO,KAAK;AACnC,QAAI,YAAY,KAAK,WAAW,QAAQ,KAAK,OAAO,WAAW,KAAK,UAAU,SAAS,KAAK;AAC5F,WAAO,eAAe;AAAA,MACpB,MAAM;AAAA,MACN,IAAI,KAAK;AAAA,MACT,OAAO;AAAA,MACP;AAAA,IACF,IAAI;AAAA,MACF,MAAM;AAAA,MACN,IAAI,KAAK;AAAA,MACT,UAAU,KAAK,YAAY,QAAQ;AAAA,MACnC;AAAA,MACA,SAAS,cAAc,KAAK,UAAU,EAAE;AAAA,MACxC,OAAO;AAAA,MACP;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAI,WAAW,wBAAC,GAAG,WAAW;AAC5B,MAAI;AACF,WAAO,KAAK,MAAM,CAAC;AAAA,EACrB,QAAQ;AACN,UAAM,IAAI,gBAAgB,YAAY,QAAQ,CAAC;AAAA,EACjD;AACF,GANe;AAOf,SAAS,WAAW,MAAM,MAAM;AAC9B,SAAOE,cAAa,IAAI,IAAI,KAAKA,cAAa,IAAI,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,OAAO,EAAE,GAAG,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;AACtH;AAFS;AAGT,IAAI,UAAU,wBAAC,WAAW;AACxB,MAAI;AACF,QAAI,WAAW,aAAa,QAAQ,MAAM;AAC1C,WAAO,SAAS,SAAS,MAAMF,eAAO,OAAO,MAAM,GAAG,SAAS,QAAQ,CAAC,MAAM,IAAI,gBAAgB,YAAY,QAAQ,GAAG,SAAS,OAAO,CAAC,CAAC,GAAG;AAAA,EAChJ,QAAQ;AACN,WAAO;AAAA,MACL,OAAO,wBAAC,MAAMA,eAAO,MAAM,QAAQ,CAAC,GAA7B;AAAA,MACP,YAAY,wBAAC,MAAM;AACjB,YAAI,CAACA,eAAO,MAAM,QAAQ,CAAC;AACzB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,YACAA,eAAO,OAAO,QAAQ,CAAC;AAAA,UACzB;AAAA,MACJ,GARY;AAAA,MASZ,QAAQ,wBAAC,MAAMA,eAAO,OAAO,QAAQ,CAAC,GAA9B;AAAA,MACR,QAAQ,6BAAMA,eAAO,OAAO,MAAM,GAA1B;AAAA,MACR,OAAO,wBAAC,MAAM,IAAI;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACAA,eAAO,OAAO,QAAQ,CAAC;AAAA,MACzB,GALO;AAAA,IAMT;AAAA,EACF;AACF,GA1Bc;AAAd,IA0BG,gBAAgB,wBAAC,SAAS;AAC3B,MAAI,OAAO,QAAQ;AACjB,YAAQ,KAAK,MAAM,EAAE,GAAG;AAAA,MACtB,KAAK;AACH,eAAO,CAAC,KAAK,MAAM,GAAG,KAAK,SAAS,CAAC,IAAI;AAAA,MAC3C,KAAK;AACH,eAAO,CAAC,KAAK,MAAM,GAAG,KAAK,SAAS,CAAC,IAAI;AAAA,MAC3C;AACE,eAAO,CAAC;AAAA,IACZ;AACF,SAAO;AACT,GAXmB;AA1BnB,IAqCG,qBAAqB,wBAAC,MAAM,cAAc,KAAK,WAAW,SAAS,IAAI,OAAK,UAAU,WAAW,UAAU,SAAS,CAAC,MAAM,MAAM,UAAU,WAAW,UAAU,SAAS,CAAC,MAAM,MAAM,KAAK,WAAW,UAAU,MAAM,GAAG,EAAE,CAAC,GAAvM;AArCxB,IAqCkO,wBAAwB;AArC1P,IAqC8P,+BAA+B,6BAAM;AACjS,4BAA0B,QAAQ;AAAA,IAChC;AAAA,EACF,GAAG,wBAAwB;AAC7B,GAJ6R;AArC7R,IAyCG,eAAe,mCAAY,2DAAoB,KAAK,CAAC,OAAO,oBAAoB,EAAE,kBAAkB,kBAAkB,EAAE,MAAM,4BAA4B,GAA3I;AAzClB,IAyCgK;AAzChK,IAyCmLG,oBAAmB,wBAAC,UAAU,oBAAoB,kBAAkB,KAAK,IAAI,aAAa,EAAE,KAAK,CAAC,QAAQ;AAC3R,MAAI,IAAK,QAAO,IAAI,KAAK;AAC3B,CAAC,GAFqM;AAzCtM,IA2CI,wBAAwB,8BAAO,OAAO,WAAW,OAAO,OAAO,QAAQ,OAAO;AAChF,MAAI,MAAM,QAAQ,KAAK;AACrB,WAAO,MAAM,QAAQ;AAAA,MACnB,MAAM,IAAI,CAAC,MAAM,sBAAsB,GAAG,WAAW,IAAI,CAAC;AAAA,IAC5D,GAAG;AACL,MAAI,CAAC,MAAO,QAAO;AACnB,MAAI,SAAS,MAAMA,kBAAiB,KAAK;AACzC,MAAI,CAAC,OAAQ,OAAM,IAAI,gBAAgB,MAAM,SAAS;AACtD,MAAI,OAAO,aAAa,YAAY,CAAC,mBAAmB,OAAO,MAAM,SAAS;AAC5E,UAAM,IAAI,gBAAgB,MAAM,SAAS;AAC3C,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ;AACpC,QAAI,mBAAmB,OAAO,MAAM,UAAU,CAAC,CAAC,EAAG,QAAO;AAC5D,QAAM,IAAI,gBAAgB,MAAM,SAAS;AAC3C,GAb4B;AA3C5B,IAwDG,eAAe,wBAAC,SAAS,UAAU;AACpC,MAAI,iBAAiB,WAAY,QAAO;AACxC,MAAI,EAAE,iBAAiB,SAAS,QAAQ,WAAW,MAAM,OAAO,cAAc,QAAQ,OAAO,KAAK,QAAQ,WAAW,MAAM,OAAO,cAAc,QAAQ,OAAO;AAC7J,WAAO;AACT,MAAI,QAAQ,WAAW;AACrB,QAAI,OAAO,QAAQ,aAAa;AAC9B,aAAO,mBAAmB,MAAM,MAAM,QAAQ,SAAS;AACzD,aAAS,IAAI,GAAG,IAAI,QAAQ,UAAU,QAAQ;AAC5C,UAAI,mBAAmB,MAAM,MAAM,QAAQ,UAAU,CAAC,CAAC;AACrD,eAAO;AACX,WAAO;AAAA,EACT;AACA,SAAO;AACT,GAbkB;AA2BlB,IAAI,IAAI,OAAO,OAAO,CAAC,GAAG,IAAI;AAC9B;AAAA,EACE;AAAA,EACA,CAAC,QAAQ,WAAW,OAAO,SAAS,YAAY,OAAO,SAAS,YAAY,UAAU,SAAS,OAAO,KAAK,SAAS,KAAK;AAC3H;AACA;AAAA,EACE;AAAA,EACA,CAAC,QAAQ,UAAU,iBAAiB;AACtC;AACA,IAAI,gBAAgB;AAAA,EAClB;AAAA,EACA,CAAC,SAAS,UAAU;AAClB,QAAI,QAAQ,YAAY,QAAQ,WAAW,KAAK,CAAC,MAAM,QAAQ,KAAK;AAClE,aAAO;AACT,QAAI,CAAC,MAAM,QAAQ,KAAK,EAAG,QAAO,aAAa,SAAS,KAAK;AAC7D,QAAI,QAAQ,YAAY,MAAM,SAAS,QAAQ,YAAY,QAAQ,YAAY,MAAM,SAAS,QAAQ,SAAU,QAAO;AACvH,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ;AAChC,UAAI,CAAC,aAAa,SAAS,MAAM,CAAC,CAAC,EAAG,QAAO;AAC/C,WAAO;AAAA,EACT;AACF;AAXA,IAWG,mBAAmB;AAAA,EACpB;AAAA,EACA,CAAC,EAAE,UAAU,GAAG,OAAO,GAAG,UAAU;AAClC,QAAI,EAAE,iBAAiB,UAAW,QAAO;AACzC,QAAI,UAAU;AACZ,UAAI,EAAE,oBAAoB;AACxB,cAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AACrD,UAAI,CAAC,SAAS,MAAM,MAAM,gBAAgB,CAAC;AACzC,cAAM,SAAS,MAAM,MAAM,gBAAgB,CAAC;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;AAvBA,IAuBG,aAAa;AAAA;AAAA,EAEd,QAAQ,wBAAC,aAAa,KAAK,OAAO,QAAQ,GAAlC;AAAA,EACR,SAAS,wBAAC,aAAa;AACrB,QAAI,SAAS,KAAK,OAAO,QAAQ,GAAG,WAAW,QAAQ,MAAM;AAC7D,WAAO,EAAE;AAAA,MACP,EAAE;AAAA,QACA;AAAA,UACE,EAAE,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,UACD,EAAE,OAAO,QAAQ;AAAA,QACnB;AAAA,QACA;AAAA,MACF;AAAA,IACF,EAAE,OAAO,CAAC,UAAU;AAClB,UAAIC,UAAS,CAAC;AACd,UAAI,MAAMA,OAAM,EAAG,QAAO;AAC1B,UAAI,YAAY,CAAC,SAAS,MAAMA,OAAM;AACpC,cAAM,SAAS,MAAMA,OAAM;AAC7B,aAAOA;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU,KAAK;AAAA,EAC5B,GApBS;AAAA,EAqBT,SAAS,wBAAC,aAAa;AACrB,QAAI,SAAS,KAAK,QAAQ,QAAQ,GAAG,WAAW,QAAQ,MAAM;AAC9D,WAAO,EAAE;AAAA,MACP,EAAE;AAAA,QACA;AAAA,UACE,EAAE,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,UACD,KAAK,QAAQ,QAAQ;AAAA,QACvB;AAAA,QACA;AAAA,MACF;AAAA,IACF,EAAE,OAAO,CAAC,UAAU;AAClB,UAAIA,UAAS,CAAC;AACd,UAAI,CAAC,SAAS,MAAMA,OAAM,EAAG,OAAM,SAAS,MAAMA,OAAM;AACxD,aAAOA;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU,KAAK;AAAA,EAC5B,GAlBS;AAAA,EAmBT,MAAM,wBAAC,aAAa;AAClB,QAAI,SAAS,KAAK,KAAK,QAAQ,GAAG,WAAW,QAAQ,MAAM,GAAG,WAAW,UAAU,UAAU,IAAI,KAAK,SAAS,OAAO,IAAI;AAC1H,WAAO,EAAE;AAAA,MACP,EAAE;AAAA,QACA;AAAA,UACE,KAAK,KAAK,QAAQ;AAAA,UAClB,EAAE,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,SAAS,UAAU,YAAY;AAAA,UACjC,CAAC;AAAA,UACD,EAAE,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,SAAS,UAAU,YAAY;AAAA,UACjC,CAAC;AAAA,UACD,EAAE,OAAO,EAAE,SAAS,UAAU,QAAQ,EAAE,CAAC;AAAA,QAC3C;AAAA,QACA;AAAA,MACF;AAAA,IACF,EAAE,OAAO,CAAC,UAAU;AAClB,UAAI,OAAO,SAAS,UAAU;AAC5B,YAAI,QAAQ,IAAI,KAAK,KAAK;AAC1B,YAAI,CAAC,SAAS,MAAM,KAAK,EAAG,OAAM,SAAS,MAAM,KAAK;AACtD,eAAO;AAAA,MACT;AACA,UAAI,iBAAiB,KAAM,QAAO;AAClC,UAAI,QAAQ,IAAI,KAAK,wBAAwB,KAAK,CAAC;AACnD,UAAI,CAAC,SAAS,MAAM,MAAM,QAAQ,CAAC;AACjC,cAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AACrD,UAAI,CAAC,SAAS,MAAM,KAAK,EAAG,OAAM,SAAS,MAAM,KAAK;AACtD,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU;AACnB,UAAI,iBAAiB,KAAM,QAAO,MAAM,YAAY;AACpD,UAAI,OAAO,SAAS,UAAU;AAC5B,YAAI;AAAA,UACF,IAAI,KAAK,wBAAwB,KAAK,CAAC,EAAE,QAAQ;AAAA,QACnD;AACE,gBAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AACrD,eAAO;AAAA,MACT;AACA,UAAI,CAAC,SAAS,MAAM,KAAK,EAAG,OAAM,SAAS,MAAM,KAAK;AACtD,aAAO;AAAA,IACT,CAAC;AAAA,EACH,GA1CM;AAAA,EA2CN,eAAe,wBAAC,aAAa;AAC3B,QAAI,SAAS,KAAK,QAAQ,QAAQ,GAAG,WAAW,QAAQ,MAAM;AAC9D,WAAO,EAAE;AAAA,MACP,EAAE;AAAA,QACA;AAAA,UACE,EAAE,QAAQ,QAAQ;AAAA,UAClB,EAAE,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,QACA;AAAA,MACF;AAAA,IACF,EAAE,OAAO,CAAC,UAAU;AAClB,UAAI,OAAO,SAAS,SAAU,QAAO,UAAU;AAC/C,UAAI,UAAU,UAAU,CAAC,SAAS,MAAM,KAAK;AAC3C,cAAM,SAAS,MAAM,KAAK;AAC5B,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU,KAAK;AAAA,EAC5B,GAnBe;AAAA,EAoBf,cAAc,wBAAC,YAAY,YAAY;AACrC,QAAI,SAAS,EAAE,OAAO,YAAY,OAAO,GAAG,WAAW,QAAQ,MAAM,GAAG,eAAe,KAAK,UAAU,SAAS,OAAO,CAAC;AACvH,WAAO,EAAE;AAAA,MACP,EAAE,MAAM;AAAA,QACN,EAAE,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS;AAAA,QACX,CAAC;AAAA,QACD;AAAA,MACF,CAAC;AAAA,IACH,EAAE,OAAO,CAAC,UAAU;AAClB,UAAI,OAAO,SAAS,UAAU;AAC5B,YAAI,MAAM,WAAW,CAAC,MAAM;AAC1B,gBAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AACrD,YAAI,CAAC,SAAS,MAAM,QAAQ,SAAS,OAAO,MAAM,CAAC;AACjD,gBAAM,SAAS,MAAM,KAAK;AAC5B,eAAO,SAAS,OAAO,KAAK;AAAA,MAC9B;AACA,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU;AACnB,UAAI;AACJ,UAAI,OAAO,SAAS,aAAa,QAAQ,SAAS,WAAW,OAAO,MAAM,IAAI,CAAC,SAAS,MAAM,KAAK,EAAG,OAAM,SAAS,MAAM,KAAK;AAChI,aAAO,YAAY,KAAK,UAAU,KAAK;AAAA,IACzC,CAAC;AAAA,EACH,GAxBc;AAAA,EAyBd,aAAa,wBAAC,WAAW,EAAE,OAAO,GAAG,YAAY;AAC/C,QAAI,SAAS,EAAE,MAAM,UAAU,OAAO,GAAG,WAAW,QAAQ,MAAM,GAAGC,WAAU,wBAAC,OAAO,aAAa,UAAO;AACzG,UAAI,MAAM,WAAW,CAAC,MAAM,IAAI;AAC9B,YAAI,CAAC,SAAS,MAAM,QAAQ,SAAS,OAAO,MAAM,CAAC;AACjD,gBAAM,SAAS,MAAM,KAAK;AAC5B,eAAO,SAAS,OAAO,KAAK;AAAA,MAC9B;AACA,UAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,YAAI,CAAC,SAAS,MAAM,KAAK,EAAG,OAAM,SAAS,MAAM,KAAK;AACtD,eAAO,SAAS,OAAO,KAAK;AAAA,MAC9B;AACA,UAAI,WAAY,QAAO;AACvB,YAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AAAA,IACrD,GAZ+E;AAa/E,WAAO,EAAE;AAAA,MACP,EAAE,MAAM;AAAA,QACN,EAAE,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS,SAAS;AAAA,QACpB,CAAC;AAAA,QACD;AAAA,MACF,CAAC;AAAA,IACH,EAAE,OAAO,CAAC,UAAU;AAClB,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAI,SAAS,CAAC;AACd,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAI,IAAI,MAAM,CAAC;AACf,cAAI,OAAO,KAAK,UAAU;AACxB,gBAAI,KAAKA,SAAQ,GAAG,IAAE;AACtB,kBAAM,QAAQ,EAAE,IAAI,SAAS,OAAO,OAAO,EAAE,IAAI,OAAO,KAAK,EAAE;AAC/D;AAAA,UACF;AACA,iBAAO,KAAK,CAAC;AAAA,QACf;AACA,eAAO;AAAA,MACT;AACA,aAAO,OAAO,SAAS,WAAWA,SAAQ,KAAK,IAAI;AAAA,IACrD,CAAC,EAAE,OAAO,CAAC,UAAU;AACnB,UAAI;AACJ,UAAI,OAAO,SAAS,aAAa,QAAQ,SAAS,WAAW,OAAO,MAAM,IAAI,CAAC,SAAS,MAAM,KAAK;AACjG,cAAM,IAAI,gBAAgB,YAAY,QAAQ,KAAK;AACrD,aAAO,YAAY,KAAK,UAAU,KAAK;AAAA,IACzC,CAAC;AAAA,EACH,GA3Ca;AAAA,EA4Cb,MAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAO,wBAAC,UAAU,CAAC,MAAM,EAAE,UAAU,cAAc,OAAO,CAAC,EAAE,OAAO,CAAC,UAAU,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,UAAU,KAAK,GAAvI;AAAA,EACP,UAAU,wBAAC,QAAQ,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG;AAAA,IACzD,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC,GAHS;AAAA;AAAA;AAAA;AAAA,EAOV,YAAY,wBAAC,QAAQ,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,KAAK,GAAG,EAAE,UAAU,CAAC,GAAG,OAAO,GAAvE;AAAA,EACZ,QAAQ,wBAAC,YAAY;AAAA,IACnB,QAAAC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,IAAI,CAAC,MAAM;AACT,QAAI,IAAI,EAAE,OAAO,YAAY,OAAO;AACpC,WAAO,EAAE,SAAS;AAAA,MAChB,QAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AAAA,EACL,GA1BQ;AAAA,EA2BR,WAAW,wBAAC,QAAQ,UAAU,CAAC,MAAM;AACnC,QAAI,OAAO,OAAO,MAAM,CAAC,UAAU,OAAO,SAAS,QAAQ,IAAI,EAAE,MAAM,SAAS,IAAI,OAAO,MAAM,CAAC,UAAU,OAAO,SAAS,QAAQ,IAAI,EAAE,MAAM,SAAS,IAAI,OAAO,MAAM,CAAC,UAAU,UAAU,IAAI,IAAI,EAAE,MAAM,OAAO,IAAI,CAAC;AAC3N,QAAI,OAAO,KAAK,CAAC,MAAM,OAAO,KAAK,YAAY,MAAM,IAAI;AACvD,YAAM,IAAI,MAAM,8CAA8C;AAChE,WAAO;AAAA;AAAA,MAEL,SAAS,OAAO,CAAC;AAAA,MACjB,GAAG;AAAA,MACH,CAAC,IAAK,GAAG;AAAA,MACT,GAAG;AAAA,MACH,MAAM;AAAA,IACR;AAAA,EACF,GAZW;AAAA,EAaX,YAAY,wBAAC,GAAG,UAAU,UAAQ,EAAE,aAAa,SAAS,IAA9C;AAAA,EACZ,MAAM,wBAAC,GAAG,UAAU,CAAC,MAAM;AACzB,QAAI,SAAS,EAAE,OAAO,GAAG;AAAA,MACvB,SAAS,KAAK,CAAC,CAAC;AAAA,MAChB,GAAG;AAAA,IACL,CAAC,GAAG,WAAW,QAAQ,MAAM;AAC7B,WAAO,EAAE,MAAM;AAAA,MACb;AAAA;AAAA,MAEA,iBAAiB;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAZM;AAAA,EAaN,YAAY,UAAU,CAAC,GAAG;AACxB,WAAO;AAAA;AAAA,MAEL,SAAS,CAAC,GAAG,GAAG,CAAC;AAAA,MACjB,GAAG;AAAA,MACH,CAAC,IAAK,GAAG;AAAA,IACX;AAAA,EACF;AAAA,EACA,YAAY,wBAAC,YAAY;AACvB,QAAI,SAAS,KAAK,WAAW,OAAO,GAAG,WAAW,QAAQ,MAAM;AAChE,WAAO,EAAE,UAAU,EAAE,MAAM,CAAC,EAAE,YAAY,GAAG,KAAK,WAAW,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,UAAU;AACzF,UAAI,iBAAiB,aAAa;AAChC,YAAI,CAAC,SAAS,MAAM,QAAQ,IAAI,WAAW,KAAK,CAAC;AAC/C,gBAAM,SAAS,MAAM,KAAK;AAC5B,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,CAAC,UAAU,KAAK;AAAA,EAC5B,GAVY;AAWd;AACA,EAAE,gBAAgB,WAAW;AAC7B,EAAE,eAAe,WAAW;AAC5B,EAAE,cAAc,WAAW;AAC3B,EAAE,UAAU,WAAW;AACvB,EAAE,UAAU,WAAW;AACvB,EAAE,OAAO,CAAC,SAAS,KAAK,QAAQ,aAAa,GAAG,WAAW,KAAK;AAAA,EAC9D,SAAS;AAAA,EACT,GAAG;AAAA,EACH,WAAW,KAAK;AAAA,EAChB,MAAM;AAAA,EACN,QAAQ;AACV,CAAC;AACD,EAAE,QAAQ,CAAC,SAAS,KAAK,QAAQ,aAAa,GAAG,WAAW,MAAM;AAAA,EAChE,GAAG;AAAA,EACH,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,WAAW,KAAK;AAAA,EAChB,MAAM;AAAA,EACN,OAAO;AAAA,IACL,GAAG;AAAA,IACH,SAAS;AAAA,IACT,MAAM;AAAA,IACN,QAAQ;AAAA,EACV;AACF,CAAC;AACD,EAAE,WAAW,WAAW;AACxB,EAAE,aAAa,WAAW;AAC1B,EAAE,SAAS,WAAW;AACtB,EAAE,OAAO,WAAW;AACpB,EAAE,YAAY,WAAW;AACzB,EAAE,aAAa,WAAW;AAC1B,EAAE,OAAO,WAAW;AACpB,EAAE,cAAc,WAAW;AAC3B,EAAE,aAAa,WAAW;AAG1B,IAAI,mBAAmB,wBAAC,SAAS;AAC/B,OAAK,WAAW,OAAO,MAAM,OAAO,KAAK,MAAM,CAAC,IAAI,OAAO,KAAK,UAAU;AAC1E,MAAI,QAAQ;AACZ,MAAI,KAAK,WAAW,CAAC,MAAM,OAAO,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ,GAAG,CAAC,GAAG,UAAU,KAAK;AAC9F,QAAI,kBAAkB;AACtB,WAAO,kBAAkB,KAAK,KAAK,WAAW,EAAE,eAAe,MAAM;AACnE;AACF,QAAI,OAAO,KAAK,MAAM,QAAQ,CAAC;AAC/B,WAAO,KAAK,WAAW,CAAC,MAAM,OAAO,OAAO,KAAK,UAAU,IAAI;AAAA,MAC7D,KAAK,MAAM,GAAG,eAAe;AAAA,MAC7B;AAAA,MACA;AAAA,QACE,eAAe,KAAK,WAAW,CAAC,MAAM;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AACA,MAAI,YAAY,KAAK,IAAI,MAAM,QAAQ,KAAK,QAAQ,IAAI,GAAG,UAAU,KAAK;AACxE,QAAI,OAAO,KAAK,MAAM,QAAQ,CAAC;AAC/B,WAAO,KAAK,WAAW,CAAC,MAAM,OAAO,OAAO,KAAK,UAAU,IAAI;AAAA,MAC7D,KAAK,MAAM,GAAG,KAAK;AAAA,MACnB;AAAA,MACA;AAAA,QACE,eAAe,KAAK,WAAW,CAAC,MAAM;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AACA,MAAI,KAAK,WAAW,UAAU,GAAG;AAC/B,YAAQ,KAAK,QAAQ,GAAG;AACxB,QAAI,MAAM,KAAK,QAAQ,GAAG;AAC1B,WAAO;AAAA,MACL,KAAK,MAAM,QAAQ,GAAG,GAAG;AAAA,MACzB,KAAK,MAAM,MAAM,CAAC;AAAA,MAClB;AAAA,QACE,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACA,MAAI,QAAQ,KAAK,QAAQ,GAAG;AAC5B,MAAI,UAAU,IAAI;AAChB,QAAI,MAAM,KAAK,QAAQ;AAAA,GACxB,CAAC,GAAG,YAAY,KAAK,MAAM,GAAG,GAAG,GAAG,MAAM,UAAU,YAAY,GAAG,IAAI,GAAG,OAAO,KAAK,MAAM,MAAM,CAAC;AAClG,WAAO;AAAA,MACL,UAAU,MAAM,OAAO,GAAG;AAAA,MAC1B,MAAM;AAAA,MACN;AAAA,QACE,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACA,MAAI,IAAI,KAAK,MAAM;AAAA,GAClB,CAAC;AACF,SAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,eAAe,MAAG,CAAC;AAC3C,GApDuB;AAAvB,IAoDG,mBAAmB,wBAAC,cAAc;AACnC,MAAI,QAAQ,UAAU,QAAQ,GAAG;AACjC,MAAI,UAAU,GAAI,QAAO,CAAC,IAAI,CAAC;AAC/B,MAAI,MAAM,QAAQ,GAAG,OAAO;AAC5B,SAAO,MAAM,UAAU,QAAQ,OAAO;AACpC,QAAI,OAAO,UAAU,WAAW,GAAG;AACnC,QAAI,SAAS,MAAM,SAAS,SAAS,OAAO,QAAQ,SAAS,EAAG;AAAA,EAClE;AACA,SAAO,SAAS,IAAI,CAAC,GAAG,UAAU,MAAM,IAAI,CAAC,OAAO,MAAM,CAAC;AAC7D,GATsB;AApDtB,IA6DG,0BAA0B,wBAAC,cAAc;AAC1C,MAAI,MAAM,UAAU,YAAY,GAAG;AACnC,MAAI,QAAQ,GAAI,QAAO,CAAC,IAAI,CAAC;AAC7B,MAAI,QAAQ,MAAM,GAAG,OAAO;AAC5B,SAAO,SAAS,GAAG,SAAS;AAC1B,QAAI,OAAO,UAAU,WAAW,KAAK;AACrC,QAAI,SAAS,MAAM,SAAS,SAAS,OAAO,QAAQ,SAAS,EAAG;AAAA,EAClE;AACA,SAAO,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,MAAM,CAAC;AAC/C,GAT6B;AA7D7B,IAsEG,mBAAmB,wBAAC,cAAc;AACnC,aAAW;AACT,QAAI,QAAQ,UAAU,QAAQ,GAAG;AACjC,QAAI,UAAU,GAAI;AAClB,QAAI,MAAM,UAAU,QAAQ,KAAK,KAAK;AACtC,YAAQ,OAAO,MAAM,UAAU,QAAQ,KAAK,KAAK,IAAI,IAAI,QAAQ,OAAO,MAAM,UAAU,SAAS,YAAY,UAAU,MAAM,GAAG,KAAK,IAAI,UAAU,MAAM,GAAG;AAAA,EAC9J;AACA,SAAO;AACT,GARsB;AAtEtB,IA8EG,wBAAwB,wBAAC,cAAc;AACxC,MAAI,iBAAiB;AACrB,YAAU,WAAW,CAAC,MAAM,OAAO,YAAY,UAAU,MAAM,GAAG,EAAE,IAAI,UAAU,WAAW,CAAC,MAAM,QAAQ,iBAAiB,MAAI,YAAY,UAAU,MAAM,GAAG,EAAE,IAAI,YAAY,UAAU,QAAQ,cAAc,EAAE,EAAE,KAAK;AAC3N,MAAI,aAAa,CAAC;AAClB,aAAW;AACT,QAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,SAAS;AAC7C,QAAI,UAAU,GAAI;AAClB,eAAW,KAAK,UAAU,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,UAAU,WAAW,GAAG,MAAM,MAAM,OAAO,YAAY,UAAU,MAAM,GAAG;AAAA,EAC5H;AACA,cAAY,iBAAiB,SAAS,GAAG,cAAc,aAAa,WAAW,OAAO,UAAU,MAAM,GAAG,CAAC;AAC1G,MAAI,eAA+B,uBAAO,OAAO,IAAI;AACrD,WAAS,KAAK,YAAY;AACxB,QAAI,EAAE,QAAQ,GAAG,MAAM,IAAI;AACzB,mBAAa,CAAC,IAAI;AAClB;AAAA,IACF;AACA,aAAS,KAAK,EAAE,MAAM,GAAG,EAAG,cAAa,EAAE,KAAK,CAAC,IAAI;AAAA,EACvD;AACA,SAAO;AAAA,IACL;AAAA,IACA,YAAY;AAAA,EACd;AACF,GAtB2B;AA9E3B,IAoGG,yBAAyB,wBAAC,WAAW,cAAc;AACpD,MAAI,EAAE,YAAY,eAAe,IAAI,sBAAsB,SAAS;AACpE,SAAO,WAAW,UAAU,UAAU,QAAQ,OAAK,WAAW,YAAY,UAAU,UAAU,OAAK,WAAW,SAAS,UAAU,OAAO,OAAK,WAAW,WAAW,UAAU,SAAS,OAAK,WAAW,QAAQ,UAAU,MAAM,OAAK,WAAW,WAAW,UAAU,SAAS,OAAK,WAAW,UAAU,UAAU,QAAQ,OAAK,WAAW,QAAQ,UAAU,MAAM,OAAK,WAAW,SAAS,UAAU,OAAO,OAAK,iBAAiB,KAAK,OAAO,KAAK,UAAU,EAAE,KAAK,IAAI,CAAC,OAAO,OAAO,KAAK,UAAU,EAAE,KAAK,IAAI;AACjf,GAH4B;AApG5B,IAuGG,eAAe,wBAAC,MAAM,SAAS,UAAU;AAC1C,MAAI,SAAS,IAAI;AAAA,IACf,GAAG,KAAK,QAAQ,uBAAuB,MAAM,CAAC;AAAA,EAChD;AACA,YAAU,WAAW,OAAO,YAAY;AACxC,MAAI,QAAQ,OAAO,KAAK,OAAO;AAC/B,SAAO,QAAQ,MAAM,QAAQ;AAC/B,GAPkB;AAQlB,IAAI,YAAY,wBAAC,MAAM,MAAM,QAAQ,MAAM;AACzC,MAAI,QAAQ,EAAG,QAAO,CAAC;AACvB,MAAI,UAAU,CAAC,GAAG,UAAU;AAC5B,aAAW;AACT,QAAI,QAAQ,aAAa,QAAQ,MAAM,OAAO;AAC9C,QAAI,UAAU,OAAO,QAAQ,aAAa,MAAM,MAAM,OAAO,IAAI,UAAU,IAAI;AAC7E,UAAI,YAAY,QAAQ,QAAQ,QAAQ,IAAI;AAC5C,UAAI,cAAc,OAAO,YAAY,QAAQ,QAAQ,MAAM,IAAI,IAAI,YAAY,IAAI,KAAK,WAAW,QAAQ,OAAQ;AACnH,cAAQ;AAAA,IACV;AACA,QAAI,OAAO,QAAQ,MAAM,GAAG,KAAK,GAAG,WAAW,KAAK,YAAY,GAAG,GAAG,WAAW,KAAK,MAAM,aAAa,KAAK,WAAW,IAAI,EAAE;AAC/H,QAAI,aAAa,KAAK;AACpB,UAAI,CAAC,OAAO,GAAG,IAAI,wBAAwB,IAAI;AAC/C,cAAQ,KAAK,iBAAiB,QAAQ,MAAM,OAAO,GAAG,CAAC,CAAC,GAAG,UAAU,QAAQ,MAAM,QAAQ,IAAI,KAAK,MAAM;AAC1G;AAAA,IACF;AACA,WAAO,SAAS,WAAW,CAAC,MAAM,KAAM,YAAW,SAAS,MAAM,CAAC;AACnE,WAAO,SAAS,WAAW,CAAC,MAAM,IAAK,YAAW,SAAS,MAAM,CAAC;AAClE,aAAS,SAAS,GAAG,KAAK,QAAQ,KAAK,QAAQ,GAAG,UAAU,QAAQ,MAAM,QAAQ,IAAI,KAAK,MAAM;AAAA,EACnG;AACA,WAAS,SAAS,SAAS;AACzB,QAAI,MAAM,WAAW,CAAC,MAAM,IAAK;AACjC,QAAI,YAAY,UAAU,OAAO,IAAI;AACrC,cAAU,SAAS,KAAK,QAAQ,KAAK,GAAG,SAAS;AAAA,EACnD;AACA,SAAO;AACT,GA1BgB;AAAhB,IA0BG,uBAAuB,wBAAC,cAAc;AACvC,MAAI,CAAC,UAAW;AAChB,MAAI,UAAU,WAAW,CAAC,MAAM,IAAK,QAAO;AAC5C,MAAI,YAAY,UAAU,MAAM,GAAG,EAAE,GAAG,CAAC,UAAU,SAAS,GAAG;AAC7D,WAAO,UAAU,QAAQ,KAAK,MAAM,KAAK,UAAU,MAAM,UAAU,QAAQ,KAAK,IAAI,CAAC,IAAI;AAC3F,MAAI,cAAc,UAAU,QAAQ,KAAK;AACzC,MAAI,gBAAgB;AAClB,WAAO,UAAU,MAAM,cAAc,CAAC,EAAE,QAAQ;AACpD,GAR0B;AA1B1B,IAkCG,qBAAqB,wBAAC,MAAM,SAAS,cAAc;AACpD,MAAIC,UAAS,wBAAC,MAAM,UAAU,IAAI;AAAA,IAChC,GAAG,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,IAAI,QAAQ,KAAK,OAAO,IAAI;AAAA,EAClE,EAAE,KAAK,IAAI,GAFE;AAGb,WAAS,SAAS;AAChB,QAAI,OAAO;AACT,UAAI,MAAM,WAAW,CAAC,MAAM,KAAK;AAC/B,YAAI,aAAa,sBAAsB,KAAK,EAAE;AAC9C,mBAAW,UAAU,UAAU,QAAQ,OAAK,WAAW,YAAY,UAAU,UAAU,OAAK,WAAW,SAAS,UAAU,OAAO,OAAK,WAAW,WAAW,UAAU,SAAS,OAAK,WAAW,QAAQ,UAAU,MAAM,OAAK,WAAW,WAAW,UAAU,SAAS,OAAK,WAAW,QAAQ,UAAU,MAAM,OAAK,WAAW,UAAU,UAAU,QAAQ,OAAK,WAAW,SAAS,UAAU,OAAO;AACnY;AAAA,MACF;AACA,UAAI,CAAC,UAAU,UAAUA,QAAO,SAAS,KAAK,KAAK,KAAK,SAAS,YAAY,KAAK,KAAK,KAAK,SAAS,YAAY,QAAQ,QAAQ,OAAO,UAAU,QAAQ,OAAK,CAAC,UAAU,WAAWA,QAAO,WAAW,KAAK,MAAM,UAAU,UAAU,OAAK,CAAC,UAAU,QAAQA,QAAO,QAAQ,KAAK,MAAM,UAAU,OAAO,OAAK,CAAC,UAAU,UAAUA,QAAO,UAAU,KAAK,MAAM,UAAU,SAAS,OAAK,CAAC,UAAU,OAAOA,QAAO,OAAO,KAAK,MAAM,UAAU,MAAM,OAAK,CAAC,UAAU,UAAUA,QAAO,UAAU,KAAK,MAAM,UAAU,SAAS,OAAK,CAAC,UAAU,SAASA,QAAO,SAAS,KAAK,MAAM,UAAU,QAAQ,OAAK,CAAC,UAAU,OAAOA,QAAO,OAAO,KAAK,MAAM,UAAU,MAAM,OAAK,CAAC,UAAU,QAAQA,QAAO,QAAQ,KAAK,MAAM,UAAU,OAAO,OAAK,UAAU,SAAS,UAAU,WAAW,UAAU,QAAQ,UAAU,UAAU,UAAU,OAAO,UAAU,UAAU,UAAU,SAAS,UAAU,OAAO,UAAU;AACx2B;AAAA,IACJ;AACF,SAAO;AACT,GAfwB;AAgBxB,IAAI,0BAA0B,wBAACC,UAAS,MAAM,cAAc;AAC1D,MAAI;AACF,QAAI,kBAAkB,IAAI,OAAO,eAAeA,QAAO,IAAI,IAAI;AAC/D,oBAAgB,KAAK,IAAI;AACzB,QAAI,WAAW,KAAK,WAAW,gBAAgB,SAAS;AACxD,WAAO,aAAa,MAAM,aAAa,MAAM,UAAU,QAAQ,MAAI,UAAU,UAAU,MAAI,UAAU,OAAO,MAAI,UAAU,SAAS,MAAI,UAAU,MAAM,MAAI,UAAU,SAAS,MAAI,UAAU,MAAM,MAAI,UAAU,QAAQ,MAAI,UAAU,OAAO,MAAI,QAAM;AAAA,EACzP,QAAQ;AACN,WAAO,QAAQ;AAAA,MACb;AAAA,IACF,GAAG,QAAQ,IAAI,cAAc,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,IAAI,iBAAiB,GAAG,QAAQ,IAAIA,QAAO,GAAG;AAAA,EAC3G;AACF,GAX8B;AAA9B,IAWG;AAXH,IAWc,SAAS,CAAC;AAXxB,IAW2B,oBAAoB,wBAAC,QAAQ,MAAM;AAC5D,eAAa,aAAa,SAAS,GAAG,YAAY,WAAW,MAAM;AACjE,aAAS,CAAC,GAAG,YAAY,QAAQ,SAAS,IAAI,GAAG,KAAE;AAAA,EACrD,GAAG,KAAK;AACV,GAJ+C;AAX/C,IAeG,iBAAiB,wBAAC,GAAG,OAAO;AAAA,EAC7B,MAAM,EAAE,QAAQ,EAAE;AAAA,EAClB,QAAQ,EAAE,UAAU,EAAE;AAAA,EACtB,SAAS,EAAE,WAAW,EAAE;AAAA,EACxB,OAAO,EAAE,SAAS,EAAE;AAAA,EACpB,KAAK,EAAE,OAAO,EAAE;AAAA,EAChB,QAAQ,EAAE,UAAU,EAAE;AAAA,EACtB,KAAK,EAAE,OAAO,EAAE;AAAA,EAChB,OAAO,EAAE,SAAS,EAAE;AAAA,EACpB,MAAM,EAAE,QAAQ,EAAE;AACpB,IAVoB;AAfpB,IAyBI,UAAU,wBAAC,WAAW,YAAY;AAAA,EACpC,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,OAAO;AAAA,EACP,MAAM;AACR,MAAM;AACJ,MAAI,SAAS,CAAC;AACd,YAAU,SAAS,UAAU,OAAO,KAAK,GAAG,UAAU,OAAO,GAAG,UAAU,cAAc,UAAU,OAAO,KAAK,GAAG,UAAU,YAAY,GAAG,UAAU,OAAO,UAAU,OAAO,KAAK,GAAG,UAAU,KAAK,GAAG,UAAU,OAAO,UAAU,OAAO,KAAK,GAAG,UAAU,KAAK,GAAG,UAAU,WAAW,UAAU,OAAO,KAAK,GAAG,UAAU,SAAS,GAAG,UAAU,aAAa,UAAU,OAAO,KAAK,GAAG,UAAU,WAAW,GAAG,UAAU,aAAa,UAAU,OAAO,KAAK,GAAG,UAAU,WAAW,GAAG,UAAU,eAAe,UAAU,OAAO,KAAK,GAAG,UAAU,aAAa,GAAG,UAAU,WAAW,OAAO,UAAU,WAAW,cAAc,OAAO,KAAK,UAAU,OAAO;AAC9nB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,IAAI,OAAO,CAAC;AAChB,QAAI,CAAC,EAAG;AACR,QAAI,QAAQ,OAAO,KAAK,WAAW,EAAE,KAAK;AAC1C,QAAI,OAAO,SAAS,WAAY;AAChC,QAAI,UAAU,MAAM,SAAS,GAAG,MAAM,SAAS,OAAO,GAAG,kBAAkB,OAAO,GAAG;AACrF,QAAI,iBAAiB;AACnB,kBAAY,eAAe,WAAW,eAAe;AACrD;AAAA,IACF;AACA,QAAI,cAAc;AAAA,MAChB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,IACR,GAAG,CAAC,WAAW,IAAI,IAAI,iBAAiB,OAAO,GAAG,iBAAiB,uBAAuB,WAAW,WAAW,GAAG,gBAAgB,qBAAqB,cAAc;AACtK,QAAI,eAAe;AACjB,UAAI,UAAU,UAAU,eAAe,KAAK,MAAM,GAAG,EAAE,CAAC;AACxD,cAAQ,OAAO,GAAG,IAAI,aAAa;AACnC,UAAI,OAAO;AACX,WAAK,WAAW,CAAC,MAAM,OAAO,KAAK,WAAW,KAAK,SAAS,CAAC,MAAM,QAAQ,OAAO,KAAK,MAAM,GAAG,EAAE,IAAI,wBAAwB,eAAe,MAAM,WAAW,KAAK,mBAAmB,MAAM,SAAS,WAAW,GAAG,CAAC,YAAY,SAAS,KAAK,SAAS,YAAY,gBAAgB,QAAQ,MAAM,YAAY,QAAQ;AAAA,IACvT;AACA,QAAI,OAAO,GAAG,MAAM,OAAO,GAAG,IAAI,cAAc,YAAY,eAAe,WAAW,WAAW,GAAG,UAAU,SAAS,UAAU,WAAW,UAAU,QAAQ,UAAU,UAAU,UAAU,OAAO,UAAU,UAAU,UAAU,OAAO,UAAU,SAAS,UAAU;AACnQ;AAAA,EACJ;AACA,SAAO;AACT,GA5Cc;AAiDd,IAAI,SAAS,MAAM;AAAA,EAv6DnB,OAu6DmB;AAAA;AAAA;AAAA,EACjB,YAAY,MAAM,KAAK,UAAU,CAAC,GAAG;AACnC,SAAK,OAAO;AACZ,SAAK,MAAM;AACX,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK;AAAA,EACrC;AAAA,EACA,IAAI,OAAO,KAAK;AACd,SAAK,QAAQ,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,UAAU,KAAK,IAAI,KAAK,IAAI,IAAI;AAAA,EACvF;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,UAAU,KAAK,IAAI,KAAK,IAAI;AAAA,EAC1F;AAAA,EACA,IAAI,UAAU,KAAK;AACjB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,UAAU,QAAQ;AAAA,EACzB;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,QAAQ,SAAS;AACnB,SAAK,UAAU,UAAU;AAAA,EAC3B;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,OAAO,QAAQ;AACjB,SAAK,UAAU,SAAS;AAAA,EAC1B;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,OAAOF,SAAQ;AACjB,SAAK,UAAU,SAASA;AAAA,EAC1B;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,KAAK,MAAM;AACb,SAAK,UAAU,OAAO;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,OAAO,QAAQ;AACjB,SAAK,UAAU,SAAS;AAAA,EAC1B;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,SAAS,UAAU;AACrB,SAAK,UAAU,WAAW;AAAA,EAC5B;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,SAAS,UAAU;AACrB,SAAK,UAAU,WAAW;AAAA,EAC5B;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,SAAS,UAAU;AACrB,SAAK,UAAU,WAAW;AAAA,EAC5B;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,YAAY,aAAa;AAC3B,SAAK,UAAU,cAAc;AAAA,EAC/B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,IAAI,QAAQ,SAAS;AACnB,SAAK,UAAU,UAAU;AAAA,EAC3B;AAAA,EACA,OAAOG,SAAQ;AACb,WAAO,KAAK,YAAY,OAAO;AAAA,MAC7B,KAAK;AAAA,MACL,OAAOA,WAAU,aAAaA,QAAO,KAAK,MAAM,IAAIA;AAAA,IACtD,GAAG;AAAA,EACL;AAAA,EACA,IAAIA,SAAQ;AACV,WAAO,KAAK,YAAY,OAAO;AAAA,MAC7B;AAAA,QACE,GAAG,KAAK;AAAA,QACR,OAAO,KAAK;AAAA,MACd;AAAA,MACA,OAAOA,WAAU,aAAaA,QAAO,KAAK,MAAM,IAAIA;AAAA,IACtD,GAAG;AAAA,EACL;AAAA,EACA,SAAS;AACP,QAAI,KAAK,UAAU;AACjB,aAAO,KAAK,IAAI;AAAA,QACd,SAAyB,oBAAI,KAAK,CAAC;AAAA,QACnC,QAAQ;AAAA,QACR,OAAO;AAAA,MACT,CAAC,GAAG;AAAA,EACR;AAAA,EACA,WAAW;AACT,WAAO,OAAO,KAAK,SAAS,WAAW,KAAK,UAAU,KAAK,KAAK,IAAI,KAAK,OAAO,SAAS,KAAK;AAAA,EAChG;AACF;AA9GA,IA8GG,kBAAkB,wBAAC,MAAM,OAAO,aAAa,KAAK,WAAW,KAAK,SAAS,CAAC,IAAI,IAAI,MAAM,OAAO;AAAA,EAClG,IAAI,GAAG,KAAK;AACV,WAAO,OAAO,QAAQ,IAAI;AAAA,MACxB;AAAA,MACA,KAAK;AAAA,MACL,OAAO,OAAO,CAAC,GAAG,WAAW,CAAC,GAAG,MAAM,GAAG,CAAC;AAAA,IAC7C,IAAI,IAAI;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL,OAAO,OAAO,CAAC,GAAG,OAAO;AAAA,IAC3B;AAAA,EACF;AACF,CAAC,IAZoB;AA9GrB,IA0HK,cAAc,8BAAO,MAAM,cAAc;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,GAAG;AACL,IAAI,CAAC,MAAM;AACT,MAAI,CAAC,aAAc,QAAO,gBAAgB,MAAM,CAAC,GAAG,OAAO;AAC3D,MAAI,cAAc,OAAO,WAAW;AACpC,UAAQ,SAAS,QAAM,CAAC,MAAM,QAAQ,IAAI,MAAM,OAAO,CAAC,IAAI;AAC5D,MAAI,MAAM,CAAC,GAAG,cAAU,qBAAM,YAAY;AAC1C,WAAS,CAAC,MAAM,CAAC,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC7C,QAAI,MAAM,OAAQ;AAClB,QAAI,YAAQ,kCAAAC,SAAO,CAAC;AACpB,QAAI,SAAS,QAAM,MAAM,SAAS,IAAI,GAAG;AACvC,UAAI,CAAC;AACH,cAAM,IAAI,MAAM,wCAAwC;AAC1D,UAAI,aAAa;AACf,YAAI,OAAO,MAAM,aAAa,OAAO,OAAO;AAC5C,YAAI,SAAS,MAAI,OAAM,IAAI,uBAAuB,IAAI;AACtD,gBAAQ;AAAA,MACV,OAAO;AACL,YAAI,UAAU;AACd,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,cAAI,OAAO,MAAM,aAAa,OAAO,QAAQ,CAAC,CAAC;AAC/C,cAAI,SAAS,OAAI;AACf,sBAAU,MAAI,QAAQ;AACtB;AAAA,UACF;AAAA,QACF;AACA,YAAI,CAAC,QAAS,OAAM,IAAI,uBAAuB,IAAI;AAAA,MACrD;AAAA,IACF;AACA,QAAI,IAAI,IAAI;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACA,SAAO,gBAAgB,MAAM,KAAK,OAAO;AAC3C,GApCmB;AA1HnB,IA8JG,kBAAkB,wBAAC,YAAY;AAChC,MAAI,CAAC,WAAW,CAAC,WAAW,OAAO,EAAG;AACtC,MAAI,OAAO,CAAC;AACZ,WAAS,CAAC,KAAK,QAAQ,KAAK,OAAO,QAAQ,OAAO,GAAG;AACnD,QAAI,CAAC,OAAO,CAAC,SAAU;AACvB,QAAI,QAAQ,SAAS;AACrB,aAAS,QAAQ,KAAK;AAAA,UACpB;AAAA,QACE;AAAA,QACA,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,QAAQ;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,MAAI,KAAK,WAAW;AAClB,WAAO,KAAK,WAAW,IAAI,KAAK,CAAC,IAAI;AACzC,GAhBqB;AAmBrB,IAAI,aAAa,wBAAC,UAAU,SAAS;AACnC,MAAI,CAAC,SAAS,oBAAoB;AAChC,WAAO,SAAS,KAAK,CAAC,QAAQ,WAAW,KAAK,IAAI,CAAC;AACrD,MAAI,OAAO,SAAS,MAAM,YAAY,SAAS,KAAK,WAAW,OAAO,KAAK,WAAW,OAAO,KAAK,WAAW,OAAO,KAAK,WAAW,MAAM,gBAAgB,YAAY;AAAA,IACpK,qBAAqB;AAAA,EACvB,IAAI;AAAA,IACF,iBAAiB;AAAA,IACjB,iBAAiB,OAAO,WAAW,OAAO,CAAC,IAAI,IAAI,KAAK;AAAA,IACxD,qBAAqB;AAAA,EACvB;AACA,MAAI,CAAC,QAAQ,CAAC,KAAM,QAAO,IAAI,SAAS,QAAQ;AAChD,MAAI,CAAC;AACH,WAAO,IAAI,SAAS,UAAU;AAAA,MAC5B,SAAS;AAAA,IACX,CAAC;AACH,MAAI,KAAK,mBAAmB,SAAS;AACnC,aAAS,OAAO,OAAO,KAAK,aAAa;AACvC,aAAO,KAAK,WAAW,KAAK,QAAQ,OAAO,KAAK,cAAc,GAAG,CAAC;AACpE,WAAO,cAAc,KAAK,QAAQ,OAAO,gBAAgB,GAAG,KAAK,QAAQ,OAAO,eAAe,IAAI,IAAI,SAAS,UAAU,IAAI;AAAA,EAChI;AACA,SAAO,WAAW,KAAK,OAAO,IAAI,IAAI,SAAS,UAAU;AAAA,IACvD,QAAQ,KAAK;AAAA,IACb,SAAS,OAAO,OAAO,eAAe,KAAK,OAAO;AAAA,EACpD,CAAC,IAAI,IAAI,SAAS,UAAU;AAAA,IAC1B,QAAQ,KAAK;AAAA,IACb,SAAS;AAAA,EACX,CAAC;AACH,GA3BiB;AAAjB,IA2BG,kBAAkB,wBAAC,SAAS,cAAc;AAC3C,MAAI,CAAC,QAAS,QAAO;AACrB,UAAQ,OAAO,YAAY;AAC3B,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,QAAQ,UAAU,CAAC,EAAE,QAAQ,GAAG;AACpC,YAAQ;AAAA,MACN;AAAA,MACA,GAAG,UAAU,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,IAAI,UAAU,CAAC,EAAE,MAAM,QAAQ,CAAC,KAAK,EAAE;AAAA,IACxE;AAAA,EACF;AACA,SAAO;AACT,GAXqB;AA3BrB,IAsCG,uBAAuB,wBAAC,UAAU,SAAS;AAC5C,MAAI,MAAM,SAAS;AACjB,QAAI;AACF,UAAI;AACF,eAAO,OAAO,KAAK,SAAS,SAAS,QAAQ,OAAO,CAAC;AAAA;AAErD,iBAAS,CAAC,KAAK,KAAK,KAAK,SAAS,QAAQ,QAAQ;AAChD,iBAAO,KAAK,YAAY,KAAK,QAAQ,GAAG,IAAI;AAClD,WAAO,KAAK,WAAW,QAAQ,KAAK,SAAS,SAAS,SAAS,KAAK,QAAQ,kBAAkB,KAAK,OAAO,KAAK,QAAQ,kBAAkB,GAAG;AAAA,EAC9I;AACA,MAAI,CAAC;AACH,WAAO;AAAA,MACL,SAAS,CAAC;AAAA,MACV,QAAQ,MAAM,UAAU;AAAA,IAC1B;AACF,MAAI;AACF,WAAO,OAAO;AAAA,MACZ,SAAS,SAAS,QAAQ,OAAO;AAAA,MACjC,QAAQ,MAAM,UAAU;AAAA,IAC1B,GAAG,KAAK,QAAQ,kBAAkB,KAAK,OAAO,KAAK,QAAQ,kBAAkB,GAAG;AAClF,SAAO;AAAA,IACL,SAAS,CAAC;AAAA,IACV,QAAQ,MAAM,UAAU;AAAA,EAC1B;AACA,WAAS,CAAC,KAAK,KAAK,KAAK,SAAS,QAAQ,QAAQ;AAChD,YAAQ,sBAAsB,OAAO,KAAK,YAAY,KAAK,QAAQ,GAAG,IAAI;AAC5E,SAAO;AACT,GA3B0B;AAtC1B,IAiEG,sBAAsB,wBAAC,EAAE,aAAa,cAAc,oBAAoB,oBAAoB,MAAM,OAAO,WAAW,MAAM,YAAY;AACvI,MAAI,OAAO,UAAU,OAAO;AAC5B,MAAI,gBAAgB,YAAY,OAAO,MAAM,OAAO,MAAM,iBAAiB;AACzE,gBAAY,KAAK;AAAA,WACV,SAAS,OAAO,MAAM,OAAO,OAAO,MAAM;AACjD,WAAO,OAAO,aAAa,KAAK,OAAO,MAAM,OAAO,IAAI,oBAAoB,KAAK,OAAO,OAAO;AACjG,MAAI;AAAA;AAAA,IAEF,MAAM,OAAO;AAAA,IACb,WAAW;AAAA,IACX,MAAM,QAAQ,cAAc,GAAG,WAAW,mBAAmB;AAAA,KAC5D,SAAS,QAAQ,CAAC,SAAS,SAAS,IAAI;AAAA;AAAA,IAEzC,CAAC,SAAS,MAAM,cAAc,QAAQ,sBAAsB,MAAM,SAAS,OAAO,MAAM,SAAS,WAAW,qBAAqB;AACnI,SAAO,MAAM,WAAW,KAAK,QAAQ,mBAAmB,MAAM,KAAK,QAAQ,mBAAmB,IAAI,YAAY,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,cAAc,KAAK,QAAQ,eAAe,MAAM,KAAK,QAAQ,eAAe,IAAI,eAAe,OAAO;AAAA,IAClR,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,MACjB,YAAY;AAAA,IACd;AAAA,EACF,GAAG,IAAI;AAAA,IACL,IAAI,eAAe;AAAA,MACjB,MAAM,MAAM,YAAY;AACtB,YAAI,MAAM;AACV,YAAI,SAAS,QAAQ,iBAAiB,SAAS,MAAM;AACnD,gBAAM;AACN,cAAI;AACF,uBAAW,MAAM;AAAA,UACnB,QAAQ;AAAA,UACR;AAAA,QACF,CAAC,GAAG,EAAE,CAAC,QAAQ,KAAK,iBAAiB,iBAAiB;AACpD,cAAI,KAAK,UAAU,UAAU,KAAK,UAAU;AAC1C,gBAAI,KAAK,MAAM;AACb,yBAAW,QAAQ,KAAK,MAAM,MAAM,CAAC;AAAA,qBAC9B,OAAO,KAAK,SAAS;AAC5B,kBAAI;AACF,2BAAW;AAAA,kBACT,OAAO,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,gBACnC;AAAA,cACF,QAAQ;AACN,2BAAW;AAAA,kBACT,OAAO,KAAK,MAAM,SAAS,CAAC;AAAA,gBAC9B;AAAA,cACF;AAAA,gBACG,YAAW,QAAQ,OAAO,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,QACzD;AACA,YAAI;AACF,yBAAe,SAAS,WAAW;AACjC,gBAAI,IAAK;AACT,gBAAI,SAAS;AACX,kBAAI,MAAM;AACR,2BAAW,QAAQ,MAAM,MAAM,CAAC;AAAA,mBAC7B;AACH,oBAAI,OAAO,SAAS;AAClB,sBAAI;AACF,+BAAW;AAAA,sBACT,OAAO,KAAK,UAAU,KAAK,CAAC;AAAA,oBAC9B;AAAA,kBACF,QAAQ;AACN,+BAAW;AAAA,sBACT,OAAO,MAAM,SAAS,CAAC;AAAA,oBACzB;AAAA,kBACF;AAAA;AAEA,6BAAW,QAAQ,OAAO,MAAM,SAAS,CAAC,CAAC;AAC7C,yBAAS,MAAM,IAAI;AAAA,kBACjB,CAAC,YAAY,WAAW,MAAM,QAAQ,GAAG,CAAC;AAAA,gBAC5C;AAAA,cACF;AAAA,UACJ;AAAA,QACF,SAASC,SAAQ;AACf,kBAAQ,KAAKA,OAAM;AAAA,QACrB;AACA,YAAI;AACF,qBAAW,MAAM;AAAA,QACnB,QAAQ;AAAA,QACR;AAAA,MACF;AAAA,IACF,CAAC;AAAA,IACD;AAAA,EACF;AACF,GAnFyB;AAoFzB,gBAAgB,eAAe,UAAU;AACvC,MAAI,OAAO,SAAS;AACpB,MAAI,CAAC,KAAM;AACX,MAAI,SAAS,KAAK,UAAU,GAAG,UAAU,IAAI,YAAY;AACzD,MAAI;AACF,eAAW;AACT,UAAI,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AACxC,UAAI,KAAM;AACV,aAAO,SAAS,WAAW,MAAM,QAAQ,MAAM,QAAQ,OAAO,KAAK;AAAA,IACrE;AAAA,EACF,UAAE;AACA,WAAO,YAAY;AAAA,EACrB;AACF;AAbgB;AAchB,IAAI,YAAY,wBAAC,SAAS;AACxB,MAAI,OAAO,KAAK,UAAU,aAAa,KAAK,SAAS,UAAU,KAAK,MAAM,IAAI,KAAK,UAAU,WAAW,KAAK,MAAM,GAAG;AACpH,QAAI,SAAS,gBAAgB,KAAK,MAAM;AACxC,eAAW,KAAK,QAAQ,YAAY,IAAI;AAAA,EAC1C;AACA,OAAK,QAAQ,YAAY,KAAK,MAAM,QAAQ,KAAK,QAAQ,YAAY,CAAC,MAAM,KAAK,UAAU;AAAA,IACzF,IAAI,QAAQ,KAAK,OAAO;AAAA,IACxB,KAAK,QAAQ,YAAY;AAAA,EAC3B;AACF,GATgB;AAAhB,IASG,wBAAwB,wBAAC,YAAY;AACtC,MAAI,gBAAgB,oBAAoB,OAAO;AAC/C,SAAO,CAAC,UAAU,MAAM,YAAY;AAClC,QAAI,cAAc;AAClB,QAAI,KAAK,mBAAmB;AAC1B,eAAS,OAAO,KAAK,QAAQ,KAAK;AAChC,YAAI,QAAQ,cAAc;AACxB,cAAI,YAAa;AACjB,wBAAc;AACd,mBAAS,UAAU,KAAK,QAAQ,aAAa;AAC3C,qBAAS,QAAQ,OAAO,cAAc,MAAM;AAAA,QAChD,MAAO,UAAS,QAAQ,OAAO,KAAK,KAAK,SAAS,IAAI,GAAG,KAAK,EAAE;AAAA;AAElE,eAAS,OAAO,KAAK;AACnB,iBAAS,QAAQ;AAAA,UACf;AAAA,UACA,KAAK,QAAQ,GAAG;AAAA,QAClB;AACJ,QAAI,UAAU,KAAK,UAAU;AAC7B,WAAO,SAAS,WAAW,WAAW,YAAY,QAAQ,SAAS,UAAU,OAAO,SAAS,SAAS,OAAO,SAAS,KAAK,EAAE,KAAK,CAAC,UAAU;AAC3I,UAAI,cAAc,IAAI,SAAS,OAAO;AAAA,QACpC,SAAS,SAAS;AAAA,QAClB,QAAQ,KAAK;AAAA,MACf,CAAC;AACD,aAAO,CAAC,YAAY,QAAQ,IAAI,gBAAgB,KAAK,YAAY,QAAQ;AAAA,QACvE;AAAA,MACF,MAAM,YAAY;AAAA,QAChB,eAAe,WAAW;AAAA,QAC1B,qBAAqB,aAAa,IAAI;AAAA,QACtC;AAAA,MACF,IAAI;AAAA,IACN,CAAC,IAAI,CAAC,SAAS,QAAQ,IAAI,gBAAgB,KAAK,SAAS,QAAQ,IAAI,mBAAmB,MAAM,YAAY;AAAA,MACxG,eAAe,QAAQ;AAAA,MACvB,qBAAqB,UAAU,IAAI;AAAA,MACnC;AAAA,IACF,IAAI;AAAA,EACN;AACF,GArC2B;AAwC3B,IAAI,mBAAmB,wBAAC,OAAO,OAAO;AAAA,EACpC,SAAS,CAAC;AACZ,MAAM;AACJ,MAAI,OAAO,MAAM,MAAM,cAAc,KAAK,KAAK,MAAM,KAAK,YAAY,GAAG,IAAI,CAAC,CAAC;AAC/E,SAAO,gBAAgB,KAAK,QAAQ,cAAc,IAAI,cAAc,MAAM,SAAS,KAAK,WAAW,OAAO,KAAK,WAAW,OAAO,KAAK,WAAW,OAAO,KAAK,WAAW,MAAM,MAAM,MAAM,KAAK,CAACC,WAAU;AACxM,QAAI,OAAOA,OAAM;AACjB,WAAO,SAAS,WAAW,KAAK,QAAQ,eAAe,IAAI,WAAW,OAAO,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,gBAAgB,IAAI,OAAO,WAAW,MAAM,OAAO,IAAI;AAAA,EAChK,CAAC,IAAI,WAAW,MAAM,OAAO,IAAI;AACnC,GARuB;AAAvB,IAQG,cAAc,wBAAC,UAAU,MAAM,YAAY;AAC5C,MAAI,WAAW,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,KAAK;AAC1D,YAAQ,UAAU,IAAI,GAAG,UAAU,aAAa,MAAM;AAAA,MACpD,KAAK;AACH,eAAO,KAAK,QAAQ,cAAc,IAAI,cAAc,IAAI,SAAS,UAAU,IAAI;AAAA,MACjF,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,MACvG,KAAK;AACH,eAAO,iBAAiB,UAAU,IAAI;AAAA,MACxC,KAAK;AACH,eAAO,WAAW,UAAU,IAAI;AAAA,MAClC,KAAK;AACH,eAAO,WAAW,UAAU,IAAI;AAAA,MAClC,KAAK;AACH,eAAO,KAAK,SAAS,SAAS,MAAM;AAAA,UAClC,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI;AAAA,MACxF,KAAK;AACH,eAAO,eAAe,UAAU,MAAM,OAAO;AAAA,MAC/C,KAAK;AACH,eAAO,gBAAgB,UAAU,IAAI;AAAA,MACvC,KAAK;AACH,eAAO,SAAS;AAAA,UACd,CAAC,MAAM,YAAY,GAAG,MAAM,OAAO;AAAA,QACrC;AAAA,MACF,KAAK;AACH,eAAO,YAAY,SAAS,GAAG,MAAM,OAAO;AAAA,MAC9C,KAAK;AAAA,MACL,KAAK;AACH,eAAO,IAAI;AAAA,UACT,SAAS,SAAS;AAAA,UAClB;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,MAClH,KAAK;AACH,eAAO,IAAI,SAAS,UAAU,IAAI;AAAA,MACpC;AACE,YAAI,oBAAoB;AACtB,iBAAO,eAAe,UAAU,MAAM,OAAO;AAC/C,YAAI,oBAAoB;AACtB,iBAAO,SAAS,KAAK,CAAC,MAAM,YAAY,GAAG,IAAI,CAAC;AAClD,YAAI,oBAAoB;AACtB,iBAAO,gBAAgB,UAAU,IAAI;AACvC,YAAI,oBAAoB;AACtB,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AACF;AAAA;AAAA,UAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,iBAAO,aAAa,UAAU,MAAM,OAAO;AAC7C,YAAI,OAAO,UAAU,QAAQ;AAC3B,iBAAO,SAAS,KAAK,CAAC,MAAM,YAAY,GAAG,IAAI,CAAC;AAClD,YAAI,OAAO,UAAU,cAAc;AACjC,iBAAO,YAAY,SAAS,WAAW,GAAG,IAAI;AAChD,YAAI,gBAAgB,UAAU;AAC5B,cAAI,OAAO,SAAS,WAAW,CAAC;AAChC,cAAI,SAAS,OAAO,SAAS;AAC3B,mBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,cAC9F,KAAK,UAAU,QAAQ;AAAA,cACvB;AAAA,YACF;AAAA,QACJ;AACA,eAAO,IAAI,SAAS,UAAU,IAAI;AAAA,IACtC;AACF;AAAA;AAAA,IAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB,iBAAiB,aAAa,UAAU,MAAM,OAAO,IAAI,mBAAmB,UAAU,OAAO;AAAA;AAE5J,GA9EiB;AARjB,IAsFG,mBAAmB,wBAAC,UAAU,MAAM,YAAY;AACjD,MAAI,YAAY;AACd,QAAI,WAAW,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,KAAK;AAC1D,cAAQ,UAAU,IAAI,GAAG,UAAU,aAAa,MAAM;AAAA,QACpD,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,cAAc,IAAI,SAAS,UAAU,IAAI;AAAA,QACjF,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,QACvG,KAAK;AACH,iBAAO,iBAAiB,UAAU,IAAI;AAAA,QACxC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI,IAAI;AAAA,QACnE,KAAK;AACH,iBAAO,eAAe,UAAU,MAAM,OAAO;AAAA,QAC/C,KAAK;AACH,iBAAO,SAAS;AAAA,YACd,CAAC,MAAM,iBAAiB,GAAG,IAAI;AAAA,UACjC;AAAA,QACF,KAAK;AACH,iBAAO,gBAAgB,UAAU,IAAI;AAAA,QACvC,KAAK;AACH,iBAAO,iBAAiB,SAAS,GAAG,IAAI;AAAA,QAC1C,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI;AAAA,YACT,SAAS,SAAS;AAAA,YAClB;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,IAAI,SAAS,QAAQ;AAAA,QAC9B,KAAK;AACH,iBAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,QAClH;AACE,cAAI,oBAAoB;AACtB,mBAAO,eAAe,UAAU,MAAM,OAAO;AAC/C,cAAI,oBAAoB;AACtB,mBAAO,SAAS,KAAK,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACvD,cAAI,oBAAoB;AACtB,mBAAO,gBAAgB,UAAU,IAAI;AACvC,cAAI,oBAAoB;AACtB,mBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,cAClC,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF;AACF;AAAA;AAAA,YAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,mBAAO,aAAa,UAAU,MAAM,OAAO;AAC7C,cAAI,OAAO,UAAU,QAAQ;AAC3B,mBAAO,SAAS,KAAK,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACvD,cAAI,OAAO,UAAU,cAAc;AACjC,mBAAO,iBAAiB,SAAS,WAAW,GAAG,IAAI;AACrD,cAAI,gBAAgB,UAAU;AAC5B,gBAAI,OAAO,SAAS,WAAW,CAAC;AAChC,gBAAI,SAAS,OAAO,SAAS;AAC3B,qBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,gBAC9F,KAAK,UAAU,QAAQ;AAAA,gBACvB;AAAA,cACF;AAAA,UACJ;AACA,iBAAO,IAAI,SAAS,UAAU,IAAI;AAAA,MACtC;AAAA;AAEA,cAAQ,UAAU,aAAa,MAAM;AAAA,QACnC,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,cAAc,IAAI,SAAS,QAAQ;AAAA,QAC3E,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,QACvG,KAAK;AACH,iBAAO,iBAAiB,UAAU,IAAI;AAAA,QACxC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,YACvD,SAAS;AAAA,cACP,gBAAgB;AAAA,YAClB;AAAA,UACF,CAAC,IAAI,IAAI,SAAS,EAAE;AAAA,QACtB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO,SAAS,KAAK,CAAC,MAAM;AAC1B,gBAAI,IAAI,iBAAiB,GAAG,IAAI;AAChC,gBAAI,MAAM,OAAQ,QAAO;AAAA,UAC3B,CAAC;AAAA,QACH,KAAK;AACH,iBAAO,gBAAgB,UAAU,IAAI;AAAA,QACvC,KAAK;AACH,iBAAO,mBAAmB,SAAS,GAAG,OAAO;AAAA,QAC/C,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,SAAS,SAAS,SAAS,CAAC;AAAA,QACzC,KAAK;AACH,iBAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,QAClH,KAAK;AACH,iBAAO,IAAI,SAAS,QAAQ;AAAA,QAC9B;AACE,cAAI,oBAAoB,SAAU,QAAO;AACzC,cAAI,oBAAoB;AACtB,mBAAO,SAAS,KAAK,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACvD,cAAI,oBAAoB;AACtB,mBAAO,gBAAgB,UAAU,IAAI;AACvC,cAAI,oBAAoB;AACtB,mBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,cAClC,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF;AACF;AAAA;AAAA,YAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,mBAAO,aAAa,UAAU,MAAM,OAAO;AAC7C,cAAI,OAAO,UAAU,QAAQ;AAC3B,mBAAO,SAAS,KAAK,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACvD,cAAI,OAAO,UAAU,cAAc;AACjC,mBAAO,iBAAiB,SAAS,WAAW,GAAG,IAAI;AACrD,cAAI,gBAAgB,UAAU;AAC5B,gBAAI,OAAO,SAAS,WAAW,CAAC;AAChC,gBAAI,SAAS,OAAO,SAAS;AAC3B,qBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,gBAC9F,KAAK,UAAU,QAAQ;AAAA,gBACvB;AAAA,cACF;AAAA,UACJ;AACA,iBAAO,IAAI,SAAS,QAAQ;AAAA,MAChC;AACN,GArJsB;AAtFtB,IA2OG,qBAAqB,wBAAC,UAAU,YAAY;AAC7C,UAAQ,UAAU,aAAa,MAAM;AAAA,IACnC,KAAK;AACH,aAAO,IAAI,SAAS,UAAU;AAAA,QAC5B,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,IACH,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,QAC5C,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,IACH,KAAK;AACH,aAAO,iBAAiB,QAAQ;AAAA,IAClC,KAAK;AACH,aAAO,WAAW,QAAQ;AAAA,IAC5B,KAAK;AACH,aAAO,WAAW,QAAQ;AAAA,IAC5B,KAAK;AACH,aAAO;AAAA,QACL,SAAS;AAAA,QACT;AAAA,UACE,QAAQ,SAAS;AAAA,UACjB,SAAS,CAAC;AAAA,QACZ;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,QACvD,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,IAAI,IAAI,SAAS,EAAE;AAAA,IACtB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO,gBAAgB,QAAQ;AAAA,IACjC,KAAK;AACH,aAAO,SAAS;AAAA,QACd,CAAC,MAAM,mBAAmB,GAAG,OAAO;AAAA,MACtC;AAAA;AAAA,IAEF,KAAK;AACH,aAAO,mBAAmB,SAAS,GAAG,OAAO;AAAA,IAC/C,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAI,SAAS,SAAS,SAAS,CAAC;AAAA,IACzC,KAAK;AACH,aAAO,IAAI,SAAS,QAAQ;AAAA,IAC9B;AACE,UAAI,oBAAoB,SAAU,QAAO;AACzC,UAAI,oBAAoB;AACtB,eAAO,SAAS;AAAA,UACd,CAAC,MAAM,mBAAmB,GAAG,OAAO;AAAA,QACtC;AACF,UAAI,oBAAoB;AACtB,eAAO,gBAAgB,QAAQ;AACjC,UAAI,oBAAoB;AACtB,eAAO;AAAA,UACL,SAAS;AAAA,UACT;AAAA,YACE,QAAQ,SAAS;AAAA,YACjB,SAAS,CAAC;AAAA,UACZ;AAAA,QACF;AACF;AAAA;AAAA,QAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,eAAO,aAAa,UAAU,QAAQ,OAAO;AAC/C,UAAI,OAAO,UAAU,QAAQ;AAC3B,eAAO,SAAS,KAAK,CAAC,MAAM,YAAY,GAAG,GAAG,CAAC;AACjD,UAAI,OAAO,UAAU,cAAc;AACjC,eAAO,mBAAmB,SAAS,WAAW,CAAC;AACjD,UAAI,gBAAgB,UAAU;AAC5B,YAAI,OAAO,SAAS,WAAW,CAAC;AAChC,YAAI,SAAS,OAAO,SAAS;AAC3B,iBAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,YAC5C,SAAS;AAAA,cACP,gBAAgB;AAAA,YAClB;AAAA,UACF,CAAC;AAAA,MACL;AACA,aAAO,IAAI,SAAS,QAAQ;AAAA,EAChC;AACF,GAvFwB;AA3OxB,IAkUG,kBAAkB,wBAACD,SAAQ,SAAS,IAAI;AAAA,EACzC,KAAK,UAAU;AAAA,IACb,MAAMA,SAAQ;AAAA,IACd,SAASA,SAAQ;AAAA,IACjB,OAAOA,SAAQ;AAAA,EACjB,CAAC;AAAA,EACD;AAAA,IACE,QAAQ,MAAM,WAAW,MAAM,MAAM,UAAU,MAAM;AAAA,IACrD,SAAS,MAAM;AAAA,EACjB;AACF,GAVqB;AAlUrB,IA4UG,sBAAsB,wBAAC,QAAQ,OAAO,aAAa,CAAC,MAAM;AAC3D,MAAI,OAAO,UAAU,WAAY;AACjC,MAAI,WAAW,YAAY,QAAQ;AAAA,IACjC,SAAS;AAAA,EACX,CAAC;AACD,MAAI,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,WAAW,UAAU,CAAC,MAAM,cAAc,UAAU,CAAC,MAAM,aAAa;AACzG,WAAO,MAAM,SAAS,MAAM;AAChC,GAPyB;AA5UzB,IAmVG,iBAAiB,sBAAsB;AAAA,EACxC;AAAA,EACA;AACF,CAAC;AAtVD,IAsVI,eAAe,oBAAoB;AAAA,EACrC;AAAA,EACA;AACF,CAAC;AAGD,IAAI,qBAAqB;AAAA,EACvB,MAAM;AAAA,EACN,eAAe;AAAA,EACf,SAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,oBAAoB;AAAA,IACpB,0BAA0B;AAAA;AAAA,IAE1B,SAAS;AAAA;AAAA;AAAA,IAGT,QAAQ;AAAA,MACN,KAAK,aAAa;AAChB,eAAO,cAAc;AAAA,IACzB;AAAA;AAAA,MAEE;AAAA,MACA,OAAO;AACL,eAAO;AAAA;AAAA,MAET;AAAA,MACA,aAAa;AACX,eAAO;AAAA;AAAA,MAET;AAAA,MACA,cAAc;AACZ,eAAO;AAAA;AAAA,MAET;AAAA,MACA,SAAS,aAAa;AACpB,YAAI,YAAY;AAAA;AAAA;AAGhB,eAAO,cAAc,aAAa,yDAAyD,aAAa;AAAA,GAC7G,YAAY;AAAA;AAAA;AAAA;AAAA,MAIT;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAM,KAAKE,MAAK,wBAAwB;AACtC,QAAI,CAACA,KAAI;AACP,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AACF,QAAIA,KAAI,WAAWA,KAAI,OAAO,KAAK,sBAAsB,GAAGA,KAAI,SAAS,MAAMA,KAAI,MAAM,MAAM;AAC7F,eAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,KAAK,QAAQ;AACzC,QAAAA,KAAI,MAAM,KAAK,CAAC,EAAE,GAAGA,IAAG;AAAA,EAC9B;AAAA,EACA,uBAAuB;AAAA,IACrB,YAAY;AAAA,IACZ,cAAcA,MAAK;AACjB,UAAI,oBAAoB,IAAI,YAAY,IAAI,iBAAiBA,KAAI;AACjE,eAAS,OAAO,OAAO,KAAKA,KAAI,SAAS;AACvC,6BAAqB,KAAK,GAAG,gBAAgB,GAAG;AAClD,UAAI,mBAAmBA,KAAI,OAAO,SAAS,oBAAoB,MAAI,WAAW,CAAC,CAACA,KAAI,MAAM,OAAO;AACjG,aAAO,aAAa,iCAAiC,mBAAmB,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA,GAIjF,aAAa,aAAa;AAAA,IACzB,aAAa,uFAAuF,aAAa,OAAO,KAAK,kBAAkB,CAAC,CAAC,EAAE,SAAS,qCAAqC,uBAAuB,aAAa,gBAAgBA,KAAI,UAAU,WAAW,aAAa,0CAA0C,aAAa,aAAa,4BAA4B,aAAa,mBAAmB,aAAa;AAAA,GACza;AAAA,IACC;AAAA,IACA,SAAS,cAAc,cAAc,cAAc,IAAI;AACrD,UAAI,mBAAmB,sBAAsB,cAAc;AAAA;AAE3D,aAAO,eAAe,oBAAoB,oCAAoC,KAAK,UAAU,MAAM,oBAAoB,eAAe,qGAAqG,oBAAoB,oBAAoB,KAAK;AAAA,QACtR,SAAS,eAAe,KAAK;AAAA;AAAA;AAAA,QAG7B,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AAAA,IACZ,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,cAAc;AAAA,EAChB;AAAA,EACA,SAAS;AACP,WAAO,MAAM;AACX,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAI,eAAe,wBAAC,UAAU,MAAM,YAAY;AAC9C,MAAI,WAAW,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,KAAK;AAC1D,YAAQ,UAAU,IAAI,GAAG,UAAU,aAAa,MAAM;AAAA,MACpD,KAAK;AACH,eAAO,IAAI,SAAS,UAAU,IAAI;AAAA,MACpC,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,MACvG,KAAK;AACH,eAAO,WAAW,SAAS,KAAK;AAAA,MAClC,KAAK;AACH,eAAO,WAAW,UAAU,IAAI;AAAA,MAClC,KAAK;AACH,eAAO,WAAW,UAAU,IAAI;AAAA,MAClC,KAAK;AACH,eAAO,KAAK,SAAS,SAAS,MAAM;AAAA,UAClC,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI;AAAA,MACxF,KAAK;AACH,eAAO,gBAAgB,UAAU,MAAM,OAAO;AAAA,MAChD,KAAK;AACH,eAAO,iBAAiB,UAAU,IAAI;AAAA,MACxC,KAAK;AACH,eAAO,SAAS;AAAA,UACd,CAAC,MAAM,aAAa,GAAG,MAAM,OAAO;AAAA,QACtC;AAAA,MACF,KAAK;AACH,eAAO,aAAa,SAAS,GAAG,MAAM,OAAO;AAAA,MAC/C,KAAK;AAAA,MACL,KAAK;AACH,eAAO,IAAI;AAAA,UACT,SAAS,SAAS;AAAA,UAClB;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,MAClH,KAAK;AACH,eAAO,IAAI,SAAS,UAAU,IAAI;AAAA,MACpC;AACE,YAAI,oBAAoB;AACtB,iBAAO,gBAAgB,UAAU,MAAM,OAAO;AAChD,YAAI,oBAAoB;AACtB,iBAAO,SAAS,KAAK,CAAC,MAAM,aAAa,GAAG,IAAI,CAAC;AACnD,YAAI,oBAAoB;AACtB,iBAAO,iBAAiB,UAAU,IAAI;AACxC,YAAI,oBAAoB;AACtB,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AACF;AAAA;AAAA,UAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,iBAAO,cAAc,UAAU,MAAM,OAAO;AAC9C,YAAI,OAAO,UAAU,QAAQ;AAC3B,iBAAO,SAAS,KAAK,CAAC,MAAM,aAAa,GAAG,IAAI,CAAC;AACnD,YAAI,OAAO,UAAU,cAAc;AACjC,iBAAO,aAAa,SAAS,WAAW,GAAG,IAAI;AACjD,YAAI,gBAAgB,UAAU;AAC5B,cAAI,OAAO,SAAS,WAAW,CAAC;AAChC,cAAI,SAAS,OAAO,SAAS;AAC3B,mBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,cAC9F,KAAK,UAAU,QAAQ;AAAA,cACvB;AAAA,YACF;AAAA,QACJ;AACA,eAAO,IAAI,SAAS,UAAU,IAAI;AAAA,IACtC;AACF;AAAA;AAAA,IAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB,iBAAiB,cAAc,UAAU,MAAM,OAAO,IAAI,oBAAoB,UAAU,OAAO;AAAA;AAE9J,GA9EmB;AAAnB,IA8EG,oBAAoB,wBAAC,UAAU,MAAM,YAAY;AAClD,MAAI,YAAY;AACd,QAAI,WAAW,KAAK,OAAO,KAAK,KAAK,WAAW,OAAO,KAAK;AAC1D,cAAQ,UAAU,IAAI,GAAG,UAAU,aAAa,MAAM;AAAA,QACpD,KAAK;AACH,iBAAO,IAAI,SAAS,UAAU,IAAI;AAAA,QACpC,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,QACvG,KAAK;AACH,iBAAO,WAAW,SAAS,KAAK;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI,IAAI;AAAA,QACnE,KAAK;AACH,iBAAO,gBAAgB,UAAU,MAAM,OAAO;AAAA,QAChD,KAAK;AACH,iBAAO,SAAS;AAAA,YACd,CAAC,MAAM,kBAAkB,GAAG,IAAI;AAAA,UAClC;AAAA,QACF,KAAK;AACH,iBAAO,iBAAiB,UAAU,IAAI;AAAA,QACxC,KAAK;AACH,iBAAO,kBAAkB,SAAS,GAAG,IAAI;AAAA,QAC3C,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI;AAAA,YACT,SAAS,SAAS;AAAA,YAClB;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,IAAI,SAAS,QAAQ;AAAA,QAC9B,KAAK;AACH,iBAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,QAClH;AACE,cAAI,oBAAoB;AACtB,mBAAO,gBAAgB,UAAU,MAAM,OAAO;AAChD,cAAI,oBAAoB;AACtB,mBAAO,SAAS,KAAK,CAAC,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACxD,cAAI,oBAAoB;AACtB,mBAAO,iBAAiB,UAAU,IAAI;AACxC,cAAI,oBAAoB;AACtB,mBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,cAClC,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF;AACF;AAAA;AAAA,YAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,mBAAO,cAAc,UAAU,MAAM,OAAO;AAC9C,cAAI,OAAO,UAAU,QAAQ;AAC3B,mBAAO,SAAS,KAAK,CAAC,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACxD,cAAI,OAAO,UAAU,cAAc;AACjC,mBAAO,kBAAkB,SAAS,WAAW,GAAG,IAAI;AACtD,cAAI,gBAAgB,UAAU;AAC5B,gBAAI,OAAO,SAAS,WAAW,CAAC;AAChC,gBAAI,SAAS,OAAO,SAAS;AAC3B,qBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,gBAC9F,KAAK,UAAU,QAAQ;AAAA,gBACvB;AAAA,cACF;AAAA,UACJ;AACA,iBAAO,IAAI,SAAS,UAAU,IAAI;AAAA,MACtC;AAAA;AAEA,cAAQ,UAAU,aAAa,MAAM;AAAA,QACnC,KAAK;AACH,iBAAO,IAAI,SAAS,QAAQ;AAAA,QAC9B,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,KAAK,QAAQ,cAAc,IAAI,oBAAoB,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI;AAAA,QACvG,KAAK;AACH,iBAAO,WAAW,SAAS,KAAK;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,WAAW,UAAU,IAAI;AAAA,QAClC,KAAK;AACH,iBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,YAClC,SAAS;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF,KAAK;AACH,iBAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,YACvD,SAAS;AAAA,cACP,gBAAgB;AAAA,YAClB;AAAA,UACF,CAAC,IAAI,IAAI,SAAS,EAAE;AAAA,QACtB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO,SAAS,KAAK,CAAC,MAAM;AAC1B,gBAAI,IAAI,kBAAkB,GAAG,IAAI;AACjC,gBAAI,MAAM,OAAQ,QAAO;AAAA,UAC3B,CAAC;AAAA,QACH,KAAK;AACH,iBAAO,iBAAiB,UAAU,IAAI;AAAA,QACxC,KAAK;AACH,iBAAO,oBAAoB,SAAS,GAAG,OAAO;AAAA,QAChD,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,IAAI,SAAS,SAAS,SAAS,CAAC;AAAA,QACzC,KAAK;AACH,iBAAO,oBAAoB,SAAS,IAAI,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,SAAS,UAAU,SAAS,GAAG,IAAI;AAAA,QAClH,KAAK;AACH,iBAAO,IAAI,SAAS,QAAQ;AAAA,QAC9B;AACE,cAAI,oBAAoB,SAAU,QAAO;AACzC,cAAI,oBAAoB;AACtB,mBAAO,SAAS,KAAK,CAAC,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACxD,cAAI,oBAAoB;AACtB,mBAAO,iBAAiB,UAAU,IAAI;AACxC,cAAI,oBAAoB;AACtB,mBAAO,KAAK,SAAS,SAAS,MAAM;AAAA,cAClC,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF;AACF;AAAA;AAAA,YAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,mBAAO,cAAc,UAAU,MAAM,OAAO;AAC9C,cAAI,OAAO,UAAU,QAAQ;AAC3B,mBAAO,SAAS,KAAK,CAAC,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACxD,cAAI,OAAO,UAAU,cAAc;AACjC,mBAAO,kBAAkB,SAAS,WAAW,GAAG,IAAI;AACtD,cAAI,gBAAgB,UAAU;AAC5B,gBAAI,OAAO,SAAS,WAAW,CAAC;AAChC,gBAAI,SAAS,OAAO,SAAS;AAC3B,qBAAO,KAAK,QAAQ,cAAc,MAAM,KAAK,QAAQ,cAAc,IAAI,qBAAqB,IAAI;AAAA,gBAC9F,KAAK,UAAU,QAAQ;AAAA,gBACvB;AAAA,cACF;AAAA,UACJ;AACA,iBAAO,IAAI,SAAS,QAAQ;AAAA,MAChC;AACN,GArJuB;AA9EvB,IAmOG,sBAAsB,wBAAC,UAAU,YAAY;AAC9C,UAAQ,UAAU,aAAa,MAAM;AAAA,IACnC,KAAK;AACH,aAAO,IAAI,SAAS,QAAQ;AAAA,IAC9B,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,QAC5C,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,IACH,KAAK;AACH,aAAO,WAAW,SAAS,KAAK;AAAA,IAClC,KAAK;AACH,aAAO,WAAW,QAAQ;AAAA,IAC5B,KAAK;AACH,aAAO,WAAW,QAAQ;AAAA,IAC5B,KAAK;AACH,aAAO;AAAA,QACL,SAAS;AAAA,QACT;AAAA,UACE,QAAQ,SAAS;AAAA,UACjB,SAAS,CAAC;AAAA,QACZ;AAAA,MACF;AAAA,IACF,KAAK;AACH,aAAO,WAAW,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,QACvD,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,IAAI,IAAI,SAAS,EAAE;AAAA,IACtB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO,iBAAiB,QAAQ;AAAA,IAClC,KAAK;AACH,aAAO,SAAS;AAAA,QACd,CAAC,MAAM,oBAAoB,GAAG,OAAO;AAAA,MACvC;AAAA;AAAA,IAEF,KAAK;AACH,aAAO,oBAAoB,SAAS,GAAG,OAAO;AAAA,IAChD,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAI,SAAS,SAAS,SAAS,CAAC;AAAA,IACzC,KAAK;AACH,aAAO,IAAI,SAAS,QAAQ;AAAA,IAC9B;AACE,UAAI,oBAAoB,SAAU,QAAO;AACzC,UAAI,oBAAoB;AACtB,eAAO,SAAS;AAAA,UACd,CAAC,MAAM,oBAAoB,GAAG,OAAO;AAAA,QACvC;AACF,UAAI,oBAAoB;AACtB,eAAO,iBAAiB,QAAQ;AAClC,UAAI,oBAAoB;AACtB,eAAO;AAAA,UACL,SAAS;AAAA,UACT;AAAA,YACE,QAAQ,SAAS;AAAA,YACjB,SAAS,CAAC;AAAA,UACZ;AAAA,QACF;AACF;AAAA;AAAA,QAEE,OAAO,UAAU,QAAQ,cAAc,oBAAoB;AAAA;AAE3D,eAAO,cAAc,UAAU,QAAQ,OAAO;AAChD,UAAI,OAAO,UAAU,QAAQ;AAC3B,eAAO,SAAS,KAAK,CAAC,MAAM,aAAa,GAAG,GAAG,CAAC;AAClD,UAAI,OAAO,UAAU,cAAc;AACjC,eAAO,oBAAoB,SAAS,WAAW,CAAC;AAClD,UAAI,gBAAgB,UAAU;AAC5B,YAAI,OAAO,SAAS,WAAW,CAAC;AAChC,YAAI,SAAS,OAAO,SAAS;AAC3B,iBAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,YAC5C,SAAS;AAAA,cACP,gBAAgB;AAAA,YAClB;AAAA,UACF,CAAC;AAAA,MACL;AACA,aAAO,IAAI,SAAS,QAAQ;AAAA,EAChC;AACF,GAnFyB;AAnOzB,IAsTG,mBAAmB,wBAACF,SAAQ,SAAS,IAAI;AAAA,EAC1C,KAAK,UAAU;AAAA,IACb,MAAMA,SAAQ;AAAA,IACd,SAASA,SAAQ;AAAA,IACjB,OAAOA,SAAQ;AAAA,EACjB,CAAC;AAAA,EACD;AAAA,IACE,QAAQ,MAAM,WAAW,MAAM,MAAM,UAAU,MAAM;AAAA,IACrD,SAAS,MAAM;AAAA,EACjB;AACF,GAVsB;AAtTtB,IAgUG,uBAAuB,wBAAC,QAAQ,OAAO,aAAa,CAAC,MAAM;AAC5D,MAAI,OAAO,UAAU,WAAY;AACjC,MAAI,WAAW,aAAa,QAAQ;AAAA,IAClC,SAAS;AAAA,EACX,CAAC;AACD,MAAI,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,WAAW,UAAU,CAAC,MAAM,cAAc,UAAU,CAAC,MAAM,aAAa;AACzG,WAAO,MAAM,SAAS,MAAM;AAChC,GAP0B;AAhU1B,IAuUG,kBAAkB,sBAAsB;AAAA,EACzC,aAAa;AAAA,EACb,oBAAoB;AACtB,CAAC;AA1UD,IA0UI,gBAAgB,oBAAoB;AAAA,EACtC,aAAa;AAAA,EACb,oBAAoB;AACtB,CAAC;AAaD,SAAS,kBAAkB,OAAO,aAAa,GAAG;AAChD,MAAI,SAAyB,uBAAO,OAAO,IAAI,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,QAAQ,GAAG,gBAAgB,aAAa,GAAG,gBAAgB,eAAe,cAAc,MAAM;AACpO,WAAS,IAAI,YAAY,IAAI,aAAa;AACxC,YAAQ,MAAM,WAAW,CAAC,GAAG;AAAA;AAAA,MAE3B,KAAK;AACH,4BAAoB,CAAC,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,QAAQ;AACtE;AAAA;AAAA,MAEF,KAAK;AACH,yBAAiB,gBAAgB,gBAAgB,IAAI,SAAS;AAC9D;AAAA;AAAA,MAEF,KAAK;AACH,wBAAgB,gBAAgB,SAAS,kBAAkB,SAAS;AACpE;AAAA;AAAA,MAEF,KAAK;AACH,wBAAgB,gBAAgB,SAAS,oBAAoB,SAAS;AACtE;AAAA,IACJ;AACF,SAAO,oBAAoB,WAAW,GAAG;AACzC,WAAS,oBAAoB,UAAU;AACrC,QAAI,sBAAsB,gBAAgB,eAAe,cAAc,sBAAsB,gBAAgB;AAC7G,QAAI,eAAe,gBAAgB,EAAG;AACtC,QAAI,WAAW,MAAM,MAAM,gBAAgB,GAAG,WAAW;AACzD,QAAI,QAAQ,kBAAkB,WAAW,SAAS,QAAQ,OAAO,GAAG,IAAI,QAAQ,oBAAoB,eAAW,kCAAAG,SAAQ,QAAQ,KAAK,WAAW,OAAO,QAAQ,MAAM,OAAQ;AAC5K,QAAI,aAAa;AACjB,4BAAwB,aAAa,MAAM,MAAM,gBAAgB,GAAG,QAAQ,GAAG,QAAQ,oBAAoB,aAAa,WAAW,QAAQ,OAAO,GAAG,IAAI,QAAQ,sBAAsB,iBAAa,kCAAAA,SAAQ,UAAU,KAAK,cAAc,OAAO,QAAQ,IAAI;AAAA,EAC9P;AAPS;AAQX;AA9BS;AA+BT,SAAS,WAAW,OAAO;AACzB,MAAI,SAAyB,uBAAO,OAAO,IAAI,GAAG,QAAQ,GAAG,eAAe,GAAG,mBAAmB,GAAG,iBAAiB,GAAG,qBAAqB,GAAG,cAAc,MAAM,QAAQ,gBAAgB,IAAI,gBAAgB;AACjN,WAAS,IAAI,GAAG,IAAI,aAAa;AAC/B,YAAQ,MAAM,WAAW,CAAC,GAAG;AAAA;AAAA,MAE3B,KAAK;AACH,4BAAoB,OAAO,CAAC,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,QAAQ;AAC7E;AAAA;AAAA,MAEF,KAAK;AACH,yBAAiB,gBAAgB,gBAAgB,IAAI,SAAS;AAC9D;AAAA;AAAA,MAEF,KAAK;AACH,wBAAgB,gBAAgB,SAAS,iBAAiB,SAAS;AACnE;AAAA;AAAA,MAEF,KAAK;AACH,wBAAgB,gBAAgB,SAAS,qBAAqB,SAAS;AACvE;AAAA,IACJ;AACF,SAAO,gBAAgB,eAAe,oBAAoB,OAAO,WAAW,GAAG;AAC/E,WAAS,oBAAoB,QAAQ,UAAU;AAC7C,QAAI,sBAAsB,gBAAgB,eAAe,yBAAyB,sBAAsB,gBAAgB,UAAU,WAAW,OAAO,MAAM,gBAAgB,GAAG,sBAAsB;AACnM,QAAI,CAAC,uBAAuB,SAAS,WAAW,EAAG;AACnD,QAAI,WAAW;AACf,YAAQ,iBAAiB,WAAW,SAAS,QAAQ,OAAO,GAAG,IAAI,QAAQ,qBAAqB,eAAW,kCAAAA,SAAQ,QAAQ,KAAK;AAChI,QAAI,aAAa;AACjB,QAAI,qBAAqB;AACvB,UAAI,aAAa,OAAO,MAAM,gBAAgB,GAAG,QAAQ;AACzD,cAAQ,mBAAmB,aAAa,WAAW,QAAQ,OAAO,GAAG,IAAI,QAAQ,uBAAuB,iBAAa,kCAAAA,SAAQ,UAAU,KAAK,aAAa,aAAa;AAAA,IACxK;AACA,QAAI,eAAe,OAAO,QAAQ;AAClC,qBAAiB,SAAS,OAAO,QAAQ,IAAI,aAAa,MAAM,QAAQ,YAAY,IAAI,aAAa,KAAK,UAAU,IAAI,OAAO,QAAQ,IAAI,CAAC,cAAc,UAAU;AAAA,EACtK;AAZS;AAaX;AAnCS;AAsCT,IAAI,eAAe,OAAO,aAAa;AAAvC,IAA0C,gBAAgB,6BAAM;AAC9D,MAAI,EAAE,SAAS,QAAQ,IAAI,QAAQ,cAAc,GAAG,EAAE,SAAS,KAAK,SAAS,WAAW,IAAI,QAAQ,cAAc,GAAG,EAAE,SAASH,SAAQ,SAAS,aAAa,IAAI,QAAQ,cAAc,GAAG,YAAY,CAAC,GAAG,eAAe,CAAC;AAC3N,SAAO;AAAA,IACL,CAAC,cAAc,YAAY,UAAU,KAAK,QAAQ,GAAG;AAAA,IACrD,CAAC,aAAa;AACZ,UAAI,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,aAAa;AACjD,eAAS,IAAI,GAAG,KAAK,SAAS,SAAS,IAAI,KAAK;AAC9C,YAAI,EAAE,SAAS,UAAU,SAAS,SAAS,IAAI,QAAQ,cAAc,GAAG,EAAE,SAAS,MAAM,SAAS,YAAY,IAAI,QAAQ,cAAc,GAAG,EAAE,SAASI,SAAQ,SAAS,cAAc,IAAI,QAAQ,cAAc,GAAG,aAAa,CAAC,GAAG,gBAAgB,CAAC;AACpP,kBAAU,KAAK,CAAC,cAAc,YAAY,WAAW,KAAK,QAAQ,GAAG,SAAS,GAAG,UAAU,KAAK,CAAC,aAAa;AAC5G,cAAI,UAAU;AAAA,YACZ,GAAG;AAAA,YACH,KAAK;AAAA,YACL,OAAOA;AAAA,YACP,OAAO;AAAA,YACP,OAAO,UAAU;AACf,qBAAO,YAAY,cAAc,KAAK,QAAQ,GAAG;AAAA,YACnD;AAAA,UACF;AACA,mBAAS,OAAO;AAChB,mBAAS,KAAK,GAAG,KAAK,WAAW,QAAQ;AACvC,uBAAW,EAAE,EAAE,OAAO;AACxB,iBAAO,CAAC,SAAS,SAAS;AACxB,gBAAI,OAAO,YAAY,IAAI;AAC3B,uBAAW,aAAa;AACxB,gBAAI,SAAS;AAAA,cACX,KAAK;AAAA,cACL,OAAO;AAAA,cACP,IAAI,UAAU;AACZ,uBAAO,OAAO,SAAS;AAAA,cACzB;AAAA,YACF;AACA,qBAAS,KAAK,GAAG,KAAK,cAAc,QAAQ;AAC1C,4BAAc,EAAE,EAAE,MAAM;AAC1B,wBAAY,IAAI,GAAG,cAAc,MAAM;AAAA,UACzC;AAAA,QACF,CAAC;AAAA,MACH;AACA,UAAI,SAAS;AAAA,QACX,GAAG;AAAA,QACH;AAAA,QACA,OAAOJ;AAAA,QACP,QAAQ,UAAU;AAChB,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ;AACpC,sBAAU,CAAC,EAAE,QAAQ;AAAA,QACzB;AAAA,QACA,OAAO,UAAU;AACf,iBAAO,YAAY,aAAa,KAAK,QAAQ,GAAG;AAAA,QAClD;AAAA,MACF;AACA,cAAQ,MAAM;AACd,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAK,WAAU,CAAC,EAAE,MAAM;AAC9D,aAAO;AAAA,QACL,cAAc;AAAA,QACd,QAAQI,UAAS,MAAM;AACrB,cAAI,OAAO,YAAY,IAAI;AAC3B,WAACA,WAAU,eAAeA,UAAS;AACnC,cAAI,SAAS;AAAA,YACX,KAAK;AAAA,YACL,OAAOA;AAAA,YACP,IAAI,UAAU;AACZ,qBAAO,OAAO,SAAS;AAAA,YACzB;AAAA,UACF;AACA,mBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ;AACvC,yBAAa,CAAC,EAAE,MAAM;AACxB,qBAAW,IAAI,GAAG,aAAaA,OAAM;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GAtE0D;AAA1D,IAsEG,eAAe,wBAAC,kBAAkB,CAACP,aAAY;AAChD,MAAI,CAAC,WAAW,cAAc,IAAI,cAAc,GAAG,CAAC,SAAS,YAAY,IAAI,cAAc,GAAG,CAAC,aAAa,gBAAgB,IAAI,cAAc,GAAG,CAAC,gBAAgB,mBAAmB,IAAI,cAAc,GAAG,CAAC,UAAU,aAAa,IAAI,cAAc,GAAG,CAAC,eAAe,kBAAkB,IAAI,cAAc,GAAG,CAAC,SAAS,YAAY,IAAI,cAAc,GAAG,CAAC,eAAe,kBAAkB,IAAI,cAAc,GAAG,CAAC,iBAAiB,oBAAoB,IAAI,cAAc;AACxc,SAAO,cAAc;AAAA;AAAA,IAEnB,IAAIA,SAAQ,iBAAiB;AAAA,IAC7B,SAAAA;AAAA,IACA,KAAKA,SAAQ;AAAA;AAAA,IAEb;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IACA,MAAM,KAAK,IAAI;AAAA,IACf,OAAOA,SAAQ;AAAA,EACjB,CAAC,GAAG;AAAA,IACF,SAAS;AAAA,IACT,OAAO;AAAA,IACP,WAAW;AAAA,IACX,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,aAAa;AAAA,IACb,eAAe;AAAA,EACjB;AACF,GAtCkB;AAmDlB,IAAI,aAAa,wBAAC,WAAW,SAAS,SAAS,IAAK,MAAM,YAAY,OAAO,aAAa,OAAO,WAAW,EAAE,KAAK,UAAU,KAAK,OAAO,WAAW,SAAS,OAAO,SAAS,CAAC,CAAC,UAAU,gBAAgB,UAAU,OAAlM;AAAjB,IAAuN,0BAA0B,wBAAC,YAAY;AAC5P,MAAI,CAAC,QAAS,QAAO;AACrB,MAAI,SAAS,SAAS,UAAU;AAChC,MAAI,OAAO,IAAK,MAAM,YAAY,QAAQ;AACxC,WAAO,QAAQ,WAAW,EAAE,KAAK,uBAAuB;AAC1D,MAAI,OAAO,MAAO,QAAO,OAAO,MAAM,KAAK,uBAAuB;AAClE,MAAI,OAAO,OAAQ,QAAO,OAAO,OAAO,KAAK,uBAAuB;AACpE,MAAI,OAAO,MAAO,QAAO,OAAO,MAAM,KAAK,uBAAuB;AAClE,MAAI,OAAO,IAAK,QAAO,OAAO,IAAI,KAAK,uBAAuB;AAC9D,MAAI,OAAO,SAAS,UAAU;AAC5B,QAAI,aAAa,OAAO;AACxB,QAAI,0BAA0B,OAAQ,QAAO,OAAO;AACpD,QAAI,uBAAuB,OAAQ,QAAO;AAC1C,aAAS,OAAO,OAAO,KAAK,UAAU,GAAG;AACvC,UAAI,WAAW,WAAW,GAAG;AAC7B,UAAI,SAAS,SAAS,UAAU;AAC9B,YAAI,wBAAwB,QAAQ,EAAG,QAAO;AAAA,MAChD,WAAW,SAAS,OAAO;AACzB,iBAAS,IAAI,GAAG,IAAI,SAAS,MAAM,QAAQ;AACzC,cAAI,wBAAwB,SAAS,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,MAC3D;AACA,aAAO,SAAS;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AACA,SAAO,OAAO,SAAS,WAAW,OAAO,SAAS,CAAC,MAAM,QAAQ,OAAO,KAAK,IAAI,wBAAwB,OAAO,KAAK,IAAI;AAC3H,GA1BiP;AAAjP,IA0BG,UAAU,wBAAC,MAAM,WAAW;AAC7B,MAAI,CAAC,OAAQ,QAAO;AACpB,MAAI,QAAS,UAAU,OAAO,IAAK,MAAM,KAAM,QAAO;AACtD,MAAI,OAAO,SAAS,UAAU;AAC5B,QAAI,aAAa,OAAO;AACxB,QAAI,CAAC,WAAY,QAAO;AACxB,aAAS,OAAO,OAAO,KAAK,UAAU,GAAG;AACvC,UAAI,WAAW,WAAW,GAAG;AAC7B,UAAI,SAAS,SAAS,UAAU;AAC9B,YAAI,QAAQ,MAAM,QAAQ,EAAG,QAAO;AAAA,MACtC,WAAW,SAAS,OAAO;AACzB,iBAAS,IAAI,GAAG,IAAI,SAAS,MAAM,QAAQ;AACzC,cAAI,QAAQ,MAAM,SAAS,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,MACjD;AACA,UAAI,QAAS,YAAY,SAAS,IAAK,MAAM,KAAM,QAAO;AAAA,IAC5D;AACA,WAAO;AAAA,EACT;AACA,SAAO,CAAC,CAAC,OAAO,cAAc,QAAS,OAAO,cAAc,OAAO,WAAW,IAAK,MAAM;AAC3F,GAnBa;AA1Bb,IA6CG,cAAc,wBAAC,kBAAkB,YAAY;AAC9C,MAAI,CAAC,QAAS;AACd,MAAI,SAAS,QAAQ,UAAU;AAC/B,MAAI,OAAO,IAAK,MAAM,YAAY,QAAQ;AACxC,WAAO,QAAQ,WAAW,EAAE,KAAK,CAAC,YAAY,YAAY,kBAAkB,OAAO,CAAC;AACtF,MAAI,OAAO,SAAS,UAAU;AAC5B,QAAI,aAAa,OAAO;AACxB,QAAI,CAAC,WAAY,QAAO;AACxB,aAAS,OAAO,OAAO,KAAK,UAAU,GAAG;AACvC,UAAI,WAAW,WAAW,GAAG;AAC7B,UAAI,oBAAoB,SAAU,QAAO;AACzC,UAAI,SAAS,SAAS,UAAU;AAC9B,YAAI,YAAY,kBAAkB,QAAQ,EAAG,QAAO;AAAA,MACtD,WAAW,SAAS,OAAO;AACzB,iBAAS,IAAI,GAAG,IAAI,SAAS,MAAM,QAAQ;AACzC,cAAI,YAAY,kBAAkB,SAAS,MAAM,CAAC,CAAC;AACjD,mBAAO;AAAA,MACb;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,SAAO,oBAAoB;AAC7B,GAtBiB;AA7CjB,IAmEG,SAAS,wBAAC,WAAW;AACtB,MAAI,CAAC,OAAQ,QAAO;AACpB,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,OAAO,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EACxC;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,OAAO,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EACxC;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,OAAO,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EACxC;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,OAAO,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EACxC;AACA,MAAI,OAAO,OAAO,OAAO,OAAO,GAAG,EAAG,QAAO;AAC7C,MAAI,OAAO,SAAS,YAAY,OAAO,YAAY;AACjD,QAAI,aAAa,OAAO;AACxB,aAAS,OAAO,OAAO,KAAK,UAAU,GAAG;AACvC,UAAI,WAAW,WAAW,GAAG;AAC7B,UAAI,OAAO,QAAQ,KAAK,SAAS,SAAS,WAAW,SAAS,SAAS,OAAO,SAAS,KAAK;AAC1F,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,OAAO,SAAS,WAAW,OAAO,SAAS,OAAO,OAAO,KAAK,IAAI,OAAK,OAAO,IAAK,MAAM,SAAS,UAAU;AACrH,GA5BY;AAnEZ,IA+FG,eAAe,wBAAC,WAAW;AAC5B,MAAI,CAAC,OAAQ,QAAO;AACpB,MAAI,OAAO,QAAQ,OAAO,SAAS,OAAO,QAAQ,OAAO,SAAS,aAAa,OAAO,MAAM,OAAO,IAAI,CAAC;AACtG,WAAO;AACT,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,aAAa,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EAC9C;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,aAAa,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EAC9C;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,UAAI,aAAa,OAAO,MAAM,CAAC,CAAC,EAAG,QAAO;AAAA,EAC9C;AACA,MAAI,OAAO,OAAO,aAAa,OAAO,GAAG,EAAG,QAAO;AACnD,MAAI,OAAO,SAAS,YAAY,OAAO,YAAY;AACjD,QAAI,aAAa,OAAO;AACxB,aAAS,OAAO,OAAO,KAAK,UAAU,GAAG;AACvC,UAAI,WAAW,WAAW,GAAG;AAC7B,UAAI,aAAa,QAAQ,KAAK,SAAS,SAAS,WAAW,SAAS,SAAS,aAAa,SAAS,KAAK;AACtG,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,OAAO,SAAS,WAAW,OAAO,SAAS,aAAa,OAAO,KAAK,IAAI,OAAK,iBAAiB;AACvG,GA1BkB;AA/FlB,IAyHG,oBAAoB,wBAAC,QAAQ,SAAS,UAAU,CAAC,MAAM;AACxD,MAAIC,UAAS;AACb,MAAIA,QAAO,OAAO,MAAI,CAAC,MAAM,QAAQ,OAAO;AAC1C,WAAO,QAAQ,WAAW,QAAQ,mBAAmB,QAAQ,SAASA,OAAM;AAC9E,WAAS,UAAU;AACjB,WAAO,WAAW,QAAQ,SAAS,mBAAmB,QAAQ,QAAQA,OAAM;AAC9E,SAAO;AACT,GAPuB;AAzHvB,IAgIG,qBAAqB,wBAAC,QAAQ,SAASA,YAAW;AACnD,MAAI,CAAC,OAAQ,QAAO;AACpB,MAAI,OAAOA,QAAO;AAClB,MAAI,QAAQ,aAAa,OAAO,SAAS,QAAQ;AAC/C,WAAO,QAAQ,GAAG,MAAM,KAAK;AAC/B,MAAI,QAAQ,oBAAoB,CAAC,QAAQ,OAAO,SAAS;AACvD,WAAO;AACT,MAAI,aAAa,QAAQ,KAAK,IAAK;AACnC,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,aAAO,MAAM,CAAC,IAAI;AAAA,QAChB,OAAO,MAAM,CAAC;AAAA,QACd;AAAA,QACAA;AAAA,MACF;AACF,WAAO;AAAA,EACT;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,aAAO,MAAM,CAAC,IAAI;AAAA,QAChB,OAAO,MAAM,CAAC;AAAA,QACd;AAAA,QACAA;AAAA,MACF;AACF,WAAO;AAAA,EACT;AACA,MAAI,OAAO,OAAO;AAChB,aAAS,IAAI,GAAG,IAAI,OAAO,MAAM,QAAQ;AACvC,aAAO,MAAM,CAAC,IAAI;AAAA,QAChB,OAAO,MAAM,CAAC;AAAA,QACd;AAAA,QACAA;AAAA,MACF;AACF,WAAO;AAAA,EACT;AACA,MAAI,OAAO,IAAK,QAAO,mBAAmB,OAAO,KAAK,SAASA,OAAM;AACrE,MAAI,SAAS,QAAQ,CAAC,CAAC,QAAQ;AAC/B,MAAI,OAAO,IAAK,MAAM,YAAY;AAChC,QAAI,EAAE,OAAO,OAAO,OAAO,KAAAO,MAAK,YAAY,aAAa,OAAO,GAAG,KAAK,IAAI,QAAQ,KAAK,QAAQ,GAAG,IAAI;AACxG,QAAI,CAAC,GAAI,QAAO;AAChB,QAAI,WAAW,oBAAoB,wBAAC,YAAY;AAC9C,UAAI,IAAI,mBAAmB,OAAO;AAClC,aAAO,EAAE,OAAO,OAAO,EAAE,KAAK;AAAA,IAChC,GAHmC,sBAGhC,qBAAqB,wBAAC,MAAM;AAC7B,UAAI,eAAe,EAAE,SAAS,UAAU;AACtC,YAAI,gBAAgB,CAAC;AACrB,iBAAS,CAAC,KAAK,MAAM,KAAK,OAAO,QAAQ,WAAW;AAClD,wBAAc,GAAG,IAAI;AAAA,YACnB;AAAA,YACA;AAAA,YACA;AAAA,cACE,GAAGP;AAAA,cACH,MAAM;AAAA,YACR;AAAA,UACF;AACF,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,YAAY;AAAA,QACd;AAAA,MACF;AACA,UAAI,SAAS,EAAE,SAAS;AACtB,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO,mBAAmB,OAAO,SAAS;AAAA,YACxC,GAAGA;AAAA,YACH,MAAM;AAAA,UACR,CAAC;AAAA,QACH;AACF,UAAI,QAAQ;AAAA,QACV,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AACA,aAAO,OAAO,MAAM,UAAU,eAAe,EAAE,SAAS,YAAY,EAAE,WAAW,kBAAkB,EAAE,YAAY,SAAS,YAAY,EAAE,aAAa,aAAa,IAAI,GAAG,MAAM,UAAU,KAAK;AAAA,QAC5LQ,eAAO,OAAO,EAAE,OAAO,WAAW,CAAC;AAAA,MACrC,GAAG,MAAM,aAAa,cAAc,SAAS,EAAE,SAAS,YAAY,EAAE,WAAW,iBAAiB,EAAE,YAAY,SAAS,YAAY,EAAE,YAAY,OAAO,IAAI,GAAG,MAAM,UAAU,KAAK,UAAUA,eAAO,OAAO,EAAE,MAAM,KAAK,CAAC,CAAC,GAAG,MAAM,QAAQ,QAAQ;AAAA,IACxP,GAlCwB;AAmCxB,QAAI,QAAQ;AACV,UAAI,aAAa;AACf,YAAI,gBAAgB,CAAC;AACrB,iBAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,WAAW;AACjD,wBAAc,GAAG,IAAI;AAAA,YACnB;AAAA,YACA;AAAA,YACA;AAAA,cACE,GAAGR;AAAA,cACH,MAAM;AAAA,YACR;AAAA,UACF;AACF,eAAO;AAAA,UACL,GAAG;AAAA,UACH,YAAY;AAAA,QACd;AAAA,MACF,WAAW,OAAO;AAChB,eAAO;AAAA,UACL,GAAG;AAAA,UACH,OAAO,MAAM;AAAA,YACX,CAAC,MAAM,mBAAmB,GAAG,SAAS;AAAA,cACpC,GAAGA;AAAA,cACH,MAAM;AAAA,YACR,CAAC;AAAA,UACH;AAAA,QACF;AACF,aAAO;AAAA,IACT;AACA,QAAI,GAAG;AACL,eAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,WAAG,MAAM,CAAC,IAAI,kBAAkB,GAAG,MAAM,CAAC,CAAC;AAAA,aACtC,GAAG;AACV,eAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,WAAG,MAAM,CAAC,IAAI,kBAAkB,GAAG,MAAM,CAAC,CAAC;AAAA,aACtC,GAAG;AACV,eAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,WAAG,MAAM,CAAC,IAAI,kBAAkB,GAAG,MAAM,CAAC,CAAC;AAAA,QAC1C,IAAG,QAAQ,GAAG,MAAM,kBAAkB,GAAG,GAAG;AACjD,QAAI,cAAc,GAAG,aAAa,IAAI,UAAU,aAAa,IAAI,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,IAAK,QAAO;AACpH,QAAI,aAAa;AACf,UAAI,gBAAgB,CAAC;AACrB,eAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,WAAW;AACjD,sBAAc,GAAG,IAAI;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,YACE,GAAGA;AAAA,YACH,MAAM;AAAA,UACR;AAAA,QACF;AACF,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,YAAY;AAAA,MACd;AAAA,IACF,WAAW,OAAO;AAChB,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,MAAM;AAAA,UACX,CAAC,MAAM,mBAAmB,GAAG,SAAS;AAAA,YACpC,GAAGA;AAAA,YACH,MAAM;AAAA,UACR,CAAC;AAAA,QACH;AAAA,MACF;AACF,WAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AACA,MAAI,aAAa,QAAQ;AACzB,MAAI,cAAc,QAAQ,QAAQ,aAAa;AAC7C,aAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU;AAChD,cAAQ,MAAM,IAAK,GAAG;AAAA,QACpB,KAAK;AACH,cAAI,EAAE,OAAO,OAAO,OAAO,KAAAO,MAAK,MAAM,GAAG,KAAK,IAAI,OAAO,KAAK,QAAQ,GAAG,IAAI;AAC7E,cAAI,CAAC,GAAI,QAAO;AAChB,cAAI,GAAG;AACL,qBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,iBAAG,MAAM,CAAC,IAAI,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,mBACnC,GAAG;AACV,qBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,iBAAG,MAAM,CAAC,IAAI,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,mBACnC,GAAG;AACV,qBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,QAAQ;AACnC,iBAAG,MAAM,CAAC,IAAI,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,cACvC,IAAG,QAAQ,GAAG,MAAM,EAAE,GAAG,MAAM,GAAG,GAAG,IAAI;AAC9C,qBAAW,GAAG,IAAI;AAAA,YAChB,GAAG;AAAA,YACH,GAAG,mBAAmB,MAAM,SAAS;AAAA,cACnC,GAAGP;AAAA,cACH,MAAM;AAAA,YACR,CAAC;AAAA,UACH;AACA;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,qBAAW,GAAG,IAAI,mBAAmB,OAAO,SAAS;AAAA,YACnD,GAAGA;AAAA,YACH,MAAM;AAAA,UACR,CAAC;AACD;AAAA,QACF;AACE,cAAI,MAAM,QAAQ,MAAM,KAAK;AAC3B,qBAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ;AACtC,oBAAM,MAAM,CAAC,IAAI;AAAA,gBACf,MAAM,MAAM,CAAC;AAAA,gBACb;AAAA,gBACA;AAAA,kBACE,GAAGA;AAAA,kBACH,MAAM;AAAA,gBACR;AAAA,cACF;AAAA,cACC,OAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,MAAM,WAAW,GAAG,IAAI,mBAAmB,OAAO,SAAS;AAAA,YACjH,GAAGA;AAAA,YACH,MAAM;AAAA,UACR,CAAC,IAAI,MAAM,SAAS,YAAY,MAAM,QAAQ,mBAAmB,MAAM,OAAO,SAAS;AAAA,YACrF,GAAGA;AAAA,YACH,MAAM;AAAA,UACR,CAAC;AACD;AAAA,MACJ;AACJ,SAAO,OAAO,SAAS,WAAW,OAAO,UAAU,MAAM,QAAQ,OAAO,KAAK,IAAI,OAAO,QAAQ,OAAO,MAAM;AAAA,IAC3G,CAAC,SAAS,mBAAmB,MAAM,SAAS;AAAA,MAC1C,GAAGA;AAAA,MACH,MAAM;AAAA,IACR,CAAC;AAAA,EACH,IAAI,OAAO,QAAQ,mBAAmB,OAAO,OAAO,SAAS;AAAA,IAC3D,GAAGA;AAAA,IACH,MAAM;AAAA,EACR,CAAC,IAAI;AACP,GAlNwB;AAhIxB,IAkVG,gBAAgB,wBAAC,WAAW,CAAC,UAAU;AACxC,MAAI,OAAO,SAAS;AAClB,QAAI;AACF,aAAOQ,eAAO,MAAM,QAAQ,KAAK;AAAA,IACnC,QAAQ;AAAA,IACR;AACF,SAAO;AACT,GAPmB;AAlVnB,IAyVG,qBAAqB,wBAAC,GAAG;AAAA,EAC1B,SAAS,CAAC;AAAA,EACV,UAAU;AAAA,EACV;AAAA,EACA,YAAY;AAAA,EACZ,uBAAuB;AAAA,EACvB,SAAS;AAAA,EACT,mBAAmB,CAAC;AAAA,EACpB;AAAA,EACA,UAAAC;AACF,IAAI,CAAC,MAAM;AACT,MAAI,aAAa,YAAY,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AACjD,QAAI,CAAC,YAAY,OAAQ;AACzB,QAAI,WAAW,CAAC,GAAG,aAAa,WAAW,MAAM,CAAC;AAAA,EACpD;AACA,MAAI,aAAa,gBAAgB,wBAAC,YAAY,SAAS,kBAAkB,SAAS;AAAA,IAChF;AAAA,MACE,MAAM,EAAE,OAAO;AAAA,MACf,IAAI,wBAAC,YAAY,EAAE,QAAQ,OAAO,GAA9B;AAAA,MACJ,kBAAkB;AAAA,IACpB;AAAA,IACA;AAAA,MACE,MAAM,EAAE,QAAQ;AAAA,MAChB,IAAI,wBAAC,YAAY,EAAE,cAAc,OAAO,GAApC;AAAA,MACJ,kBAAkB;AAAA,IACpB;AAAA,IACA,GAAG,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,EAC3E,CAAC,IAAI,kBAAkB,SAAS,gBAAgB,GAZf,kBAYkB,YAAY,wBAAC,OAAO;AACrE,QAAI;AACJ,QAAI,CAAC,GAAI;AACT,QAAI,OAAO,MAAM,SAAU,WAAU;AAAA,SAChC;AACH,UAAI,UAAU,GAAG,SAAS,IAAI,GAAG,MAAM,UAAU,GAAG,UAAU,GAAG,GAAG,SAAS,CAAC,IAAI;AAClF,gBAAU,SAAS;AAAA,QACjB;AAAA,MACF,KAAK,OAAO,GAAG,GAAG,YAAY,UAAU,EAAE,MAAM,OAAO;AAAA,IACzD;AACA,QAAI,CAAC,QAAS;AACd,QAAI;AACJ,QAAI,QAAQ,IAAK,MAAM,aAAa,eAAe,OAAO,OAAO,IAAI;AACnE,UAAI,KAAK,SAAS;AAClB,sBAAgB,WAAW,cAAc,eAAe,UAAU,EAAE,OAAO;AAAA;AAAA,QAEzE,GAAG,SAAS;AAAA,QACZ,CAAC,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,OAAO,EAAE;AAAA,IACd;AACA,QAAI,QAAQ,IAAK,MAAM,UAAU;AAC/B,UAAI,UAAU,CAAC;AACf,eAAS,CAAC,MAAM,KAAK,KAAK,OAAO,QAAQ,QAAQ,KAAK;AACpD,gBAAQ,IAAI,IAAI,cAAc,KAAK;AACrC,UAAI,MAAM,QAAQ;AAClB,gBAAU,EAAE,OAAO,OAAO,EAAE,OAAO,GAAG;AAAA,IACxC,MAAO,EAAC,UAAU,sBAAsB,UAAU,cAAc,OAAO;AACvE,WAAO;AAAA,EACT,GA5B+D,cA4B5D,SAAS,UAAU,CAAC;AACvB,MAAI,YAAY,QAAQ;AACtB,QAAI,gBAAgB,OAAI,EAAE,QAAQ,oBAAoB,WAAW,IAAI,mBAAmB;AAAA,MACtF;AAAA,MACA,GAAG,WAAW,IAAI,SAAS;AAAA,IAC7B,CAAC;AACD,mBAAe,SAAS,EAAE,UAAU;AAAA,MAClC,GAAG,qBAAqB,CAAC,kBAAkB,IAAI,CAAC;AAAA,MAChD,GAAG,WAAW,IAAI,CAAC,MAAM;AACvB,YAAI,UAAU,UAAU,CAAC;AACzB,eAAO,QAAQ,SAAS,YAAY,0BAA0B,YAAY,CAAC,iBAAiB,QAAQ,yBAAyB,UAAO,gBAAgB,OAAK,OAAO,QAAQ,uBAAuB;AAAA,MACjM,CAAC;AAAA,IACH,CAAC,GAAG,OAAO,SAAS,YAAY,kBAAkB,OAAO,uBAAuB;AAAA,EAClF;AACE,WAAO,SAAS,YAAY,EAAE,0BAA0B,UAAU,OAAO,uBAAuB,uBAAuB,SAAS,kBAAkB,QAAQ;AAAA,MACxJ,WAAW;AAAA,MACX,MAAM,EAAE,OAAO,CAAC,CAAC;AAAA;AAAA,MAEjB,GAAG,EAAE,YAAY,GAAG,QAAQ,GAAG;AAC7B,YAAI,cAAc,EAAE,0BAA0B;AAC5C,iBAAO,EAAE,OAAO,YAAY;AAAA,YAC1B,GAAG;AAAA,YACH,sBAAsB;AAAA,UACxB,CAAC;AAAA,MACL;AAAA,IACF,CAAC;AACH,MAAI,SAAS;AACX,QAAI,YAAY;AAAA,MACd;AAAA,MACA,YAAY;AAAA,MACZ,WAAW,6BAAM;AAAA,MACjB,GADW;AAAA,MAEX,MAAM;AAAA;AAAA,MAEN,OAAO,wBAAC,UAAUD,eAAO,MAAM,QAAQ,KAAK,GAArC;AAAA,MACP,QAAQ,wBAAC,UAAUA,eAAO,OAAO,QAAQ,KAAK,GAAtC;AAAA,MACR,MAAM,6BAAM,IAAN;AAAA,MACN,OAAO,cAAc,MAAM;AAAA,MAC3B,QAAQ,wBAAC,UAAUA,eAAO,OAAO,QAAQ,KAAK,GAAtC;AAAA,MACR,QAAQ,wBAAC,UAAUA,eAAO,OAAO,QAAQ,KAAK,GAAtC;AAAA,MACR,IAAI,0BAA0B;AAC5B,eAAO,8BAA8B,OAAO,KAAK,0BAA0B,IAAI,KAAK,0BAA0B,IAAI,wBAAwB,MAAM;AAAA,MAClJ;AAAA,MACA,IAAI,aAAa;AACf,eAAO,iBAAiB,OAAO,KAAK,aAAa,IAAI,KAAK,aAAa,IAAI,YAAY,WAAW,MAAM;AAAA,MAC1G;AAAA,MACA,IAAI,aAAa;AACf,eAAO,iBAAiB,OAAO,KAAK,aAAa,IAAI,KAAK,aAAa,IAAI,WAAW,MAAM;AAAA,MAC9F;AAAA,MACA,IAAI,eAAe;AACjB,eAAO,mBAAmB,OAAO,KAAK,eAAe,IAAI,KAAK,eAAe,IAAI,aAAa,MAAM;AAAA,MACtG;AAAA,MACA,WAAW;AAAA,MACX,IAAI,SAAS;AACX,eAAO,aAAa,OAAO,KAAK,SAAS,IAAI,KAAK,SAAS,IAAI,aAAa,MAAM;AAAA,MACpF;AAAA,IACF;AACA,QAAI,OAAO,WAAW,UAAU,SAAS,OAAO,QAAQ,WAAW,QAAQ,UAAU,OAAO,UAAU,OAAO,SAAS,aAAa,OAAO,yBAAyB;AACjK,UAAI,cAAc,QAAM,cAAc;AACpC,YAAI;AACF,oBAAU,QAAQ,aAAa,QAAQ;AAAA,YACrC;AAAA,YACA,UAAUC,YAAW;AAAA,YACrB;AAAA,UACF,CAAC;AAAA,QACH,QAAQ;AACN,kBAAQ;AAAA,YACN;AAAA,UACF,GAAG,QAAQ,KAAK,MAAM,GAAG,UAAU,QAAQ,cAAc,MAAM;AAAA,QACjE;AAAA,UACG,WAAU,QAAQ,cAAc,MAAM;AAC7C,WAAO,UAAU,QAAQ,CAAC,MAAM;AAC9B,UAAI;AACF,eAAO,UAAU,OAAO,UAAU,QAAQ,CAAC,KAAK,CAAC;AAAA,MACnD,QAAQ;AACN,cAAM,CAAC,GAAG,UAAU,OAAO,CAAC,CAAC,EAAE,IAAI,aAAa;AAAA,MAClD;AAAA,IACF,GAAG,UAAU,YAAY,CAAC,MAAM;AAC9B,UAAI;AACF,eAAO;AAAA,UACL,SAAS;AAAA,UACT,MAAM,UAAU,OAAO,UAAU,QAAQ,CAAC,KAAK,CAAC;AAAA,UAChD,OAAO;AAAA,QACT;AAAA,MACF,QAAQ;AACN,YAAI,SAAS,CAAC,GAAG,SAAS,OAAO,CAAC,CAAC,EAAE,IAAI,aAAa;AACtD,eAAO;AAAA,UACL,SAAS;AAAA,UACT,MAAM;AAAA,UACN,OAAO,OAAO,CAAC,GAAG;AAAA,UAClB;AAAA,QACF;AAAA,MACF;AAAA,IACF,GAAG;AAAA,EACL;AACA,MAAI,WAAW,aAAc;AAAA,IAC3B;AAAA,IACA,OAAO,OAAO,MAAM;AAAA,EACtB;AACA,MAAI,OAAO,WAAW,SAAS,SAAS,OAAO,QAAQ,UAAU,QAAQ,UAAU,OAAO,SAAS,OAAO,SAAS,cAAc,QAAM,cAAc;AACnJ,QAAI;AACF,eAAS,QAAQ,aAAa,QAAQ;AAAA,QACpC;AAAA,QACA,UAAUA,YAAW;AAAA,QACrB;AAAA,MACF,CAAC;AAAA,IACH,QAAQ;AACN,cAAQ;AAAA,QACN;AAAA,MACF,GAAG,QAAQ,IAAI,QAAQ;AAAA,QACrB,OAAO;AAAA,MACT,CAAC,GAAG,SAAS,QAAQ,cAAc,MAAM;AAAA,IAC3C;AAAA,MACG,eAAc,cAAc,SAAS,QAAQ,cAAc,MAAM;AACtE,SAAO,SAAS,QAAQ,CAAC,MAAM;AAC7B,QAAI;AACF,aAAO,SAAS,OAAO,SAAS,QAAQ,CAAC,KAAK,CAAC;AAAA,IACjD,QAAQ;AACN,YAAM,CAAC,GAAG,SAAS,OAAO,CAAC,CAAC,EAAE,IAAI,aAAa;AAAA,IACjD;AAAA,EACF,GAAG,SAAS,YAAY,CAAC,MAAM;AAC7B,QAAI;AACF,aAAO;AAAA,QACL,SAAS;AAAA,QACT,MAAM,SAAS,OAAO,SAAS,QAAQ,CAAC,KAAK,CAAC;AAAA,QAC9C,OAAO;AAAA,MACT;AAAA,IACF,QAAQ;AACN,UAAI,SAAS,CAAC,GAAG,SAAS,OAAO,CAAC,CAAC,EAAE,IAAI,aAAa;AACtD,aAAO;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,QACN,OAAO,OAAO,CAAC,GAAG;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,OAAO,OAAO,UAAU;AAAA,IACzB,IAAI,0BAA0B;AAC5B,aAAO,8BAA8B,OAAO,KAAK,0BAA0B,IAAI,KAAK,0BAA0B,IAAI,wBAAwB,QAAQ;AAAA,IACpJ;AAAA,IACA,IAAI,aAAa;AACf,aAAO,iBAAiB,OAAO,KAAK,aAAa,IAAI,KAAK,aAAa,IAAI,YAAY,WAAW,QAAQ;AAAA,IAC5G;AAAA,IACA,IAAI,aAAa;AACf,aAAO,iBAAiB,OAAO,KAAK,aAAa,IAAI,KAAK,aAAa,IAAI,WAAW,QAAQ;AAAA,IAChG;AAAA,IACA,IAAI,eAAe;AACjB,aAAO,mBAAmB,OAAO,KAAK,eAAe,IAAI,KAAK,eAAe,IAAI,aAAa,MAAM;AAAA,IACtG;AAAA,IACA,IAAI,SAAS;AACX,aAAO,aAAa,OAAO,KAAK,SAAS,IAAI,KAAK,SAAS,IAAI,OAAO,MAAM;AAAA,IAC9E;AAAA,IACA,WAAW;AAAA,EACb,CAAC,GAAG;AACN,GAjNwB;AAzVxB,IA0iBG,UAAU,wBAAC,WAAW,OAAO,IAAK,MAAM,WAAW,CAAC,OAAO,UAAU,CAAC,CAAC,OAAO,OAApE;AA1iBb,IA0iBwF,qBAAqB,wBAAC,YAAY;AACxH,MAAI,QAAQ,WAAW;AACrB,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AACF,MAAI,QAAQ,WAAW;AACrB,WAAO,QAAQ,CAAC,EAAE,SAAS,WAAW;AAAA,MACpC,QAAQ,QAAQ,CAAC;AAAA,MACjB,YAAY,CAAC;AAAA,IACf,IAAI;AAAA,MACF,QAAQ;AAAA,MACR,YAAY;AAAA,IACd;AACF,MAAI,WAAW,aAAa,CAAC,GAAG,6BAA6B,OAAI,8BAA8B;AAC/F,WAAS,UAAU,SAAS;AAC1B,QAAI,OAAO,SAAS,UAAU;AAC5B,iBAAW,KAAK,MAAM;AACtB;AAAA,IACF;AACA,QAAI,0BAA0B,WAAW,OAAO,yBAAyB,OAAK,6BAA6B,OAAK,OAAO,yBAAyB,UAAO,8BAA8B,QAAM,CAAC,WAAW;AACrM,kBAAY;AACZ;AAAA,IACF;AACA,gBAAY;AAAA,MACV,GAAG;AAAA,MACH,GAAG;AAAA,MACH,YAAY;AAAA,QACV,GAAG,UAAU;AAAA,QACb,GAAG,OAAO;AAAA,MACZ;AAAA,MACA,UAAU,CAAC,GAAG,WAAW,YAAY,CAAC,GAAG,GAAG,OAAO,QAAQ;AAAA,IAC7D;AAAA,EACF;AACA,SAAO,cAAc,UAAU,aAAa,UAAU,WAAW,CAAC,GAAG,IAAI,IAAI,UAAU,QAAQ,CAAC,IAAI,8BAA8B,UAAU,uBAAuB,QAAK,+BAA+B,UAAU,uBAAuB,QAAM;AAAA,IAC5O,QAAQ;AAAA,IACR;AAAA,EACF;AACF,GAtC6G;AA1iB7G,IAglBG,6BAA6B,wBAAC,GAAG;AAAA,EAClC,SAAS,CAAC;AAAA,EACV;AAAA,EACA,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,uBAAuB;AAAA,EACvB,aAAa,CAAC;AAAA,EACd,UAAAA;AACF,MAAM;AACJ,MAAI,aAAa,WAAW,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AAChD,QAAI,CAAC,YAAY,OAAQ;AACzB,QAAI,WAAW,CAAC,GAAG,aAAa,WAAW,MAAM,CAAC;AAAA,EACpD;AACA,MAAI;AACJ,MAAI,OAAO,KAAK,SAAU,uBAAsB;AAAA,OAC3C;AACH,QAAI,UAAU,EAAE,SAAS,IAAI,GAAG,MAAM,UAAU,EAAE,UAAU,GAAG,EAAE,SAAS,CAAC,IAAI;AAC/E,0BAAsB,QAAQ,OAAO,GAAG,KAAK,OAAO,GAAG,GAAG,YAAY,sBAAsB,EAAE,MAAM,mBAAmB;AAAA,EACzH;AACA,MAAI,CAAC,oBAAqB;AAC1B,MAAI,QAAS;AACX,WAAO;AAAA,MACL,KAAK,mBAAmB,qBAAqB;AAAA,QAC3C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,kBAAkB,CAAC;AAAA,QACnB,YAAY,WAAW,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;AAAA,QACxC,UAAAA;AAAA,MACF,CAAC;AAAA,IACH;AACF,MAAI,SAAS,CAAC;AACd,SAAO,OAAO,KAAK,mBAAmB,EAAE,QAAQ,CAAC,YAAY;AAC3D,QAAI,MAAM,CAAC,OAAO,EAAG;AACrB,QAAI,oBAAoB,oBAAoB,CAAC,OAAO;AACpD,QAAI,OAAO,qBAAqB,UAAU;AACxC,UAAI,qBAAqB,QAAQ;AAC/B,YAAI,SAAS,OAAO,iBAAiB;AACrC,eAAO,CAAC,OAAO,IAAI,QAAS,SAAS,mBAAmB,QAAQ;AAAA,UAC9D;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,kBAAkB,CAAC;AAAA,UACnB,YAAY,WAAW,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;AAAA,UAC7C,UAAAA;AAAA,QACF,CAAC,IAAI;AAAA,MACP;AACA;AAAA,IACF;AACA,WAAO,CAAC,OAAO,IAAI,QAAS,oBAAoB,mBAAmB,mBAAmB;AAAA,MACpF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,kBAAkB,CAAC;AAAA,MACnB,YAAY,WAAW,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;AAAA,MAC7C,UAAAA;AAAA,IACF,CAAC,IAAI;AAAA,EACP,CAAC,GAAG;AACN,GAnEgC;AAhlBhC,IAmpBG;AAnpBH,IAmpBgC,6BAA6B,8BAAO,gCAAgC,8BAA8B;AAAA,EAChI;AAAA,IACE,MAAM,EAAE,OAAO,CAAC,CAAC;AAAA,IACjB,IAAI,6BAAM,EAAE,aAAa,CAAC,CAAC,GAAvB;AAAA,IACJ,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC;AAAA,IACrB,IAAI,6BAAM,EAAE,YAAY,EAAE,IAAI,CAAC,GAA3B;AAAA,EACN;AACF,IAAI,8BAVyD;AAnpB7D,IA6pBkC;AA7pBlC,IA6pBwD,sBAAsB,8BAAO,yBAAyB,uBAAuB;AAAA,EACnI;AAAA,IACE,MAAM,EAAE,OAAO;AAAA,IACf,IAAI,wBAAC,YAAY,EAAE,QAAQ,OAAO,GAA9B;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,MAAM,EAAE,QAAQ;AAAA,IAChB,IAAI,wBAAC,YAAY,EAAE,cAAc,OAAO,GAApC;AAAA,IACJ,UAAU;AAAA,EACZ;AACF,IAAI,uBAX0E;AA7pB9E,IAwqB2B,qBAAqB,wBAAC;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,gBAAgB,CAAC;AAAA,EACjB,QAAAT;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,UAAAS;AACF,MAAM;AACJ,MAAI,kBAAkB,mBAAmB,WAAW;AAAA,IAClD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,sBAAsB;AAAA,IACtB,QAAQ;AAAA,IACR,kBAAkB,2BAA2B;AAAA,IAC7C;AAAA,IACA,UAAAA;AAAA,EACF,CAAC;AACD,SAAO,kBAAkB,gBAAgB,SAAS,YAAY,gBAAgB,QAAQT,OAAM,KAAK,kBAAkB,mBAAmB,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG;AAAA,IACvJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,sBAAsB;AAAA,IACtB;AAAA,IACA,UAAAS;AAAA,EACF,CAAC,GAAG,gBAAgB,SAAS,gBAAgB;AAC/C,GA9BgD;AAxqBhD,IAssBG,qBAAqB,wBAAC,WAAW,OAAO,IAAK,MAAM,YAAY,OAAO,MAAM,OAAO,IAAI,EAAE,IAAK,MAAM,WAAW,OAAO,MAAM,OAAO,IAAI,IAAI,QAAtH;AAGxB,IAAI,aAAa,wBAAC,OAAO,cAAc,YAAY,QAAQ,IAA1C;AAAjB,IAA+D,iBAAiB;AAAA,EAC9E;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AACF;AAfA,IAeG,eAAe,wBAAC;AAAA,EACjB,SAAAV,WAAU;AAAA,EACV,OAAAW,SAAQ,CAAC;AAAA,EACT;AACF,MAAM;AACJ,MAAI,CAACA,OAAM;AACT,WAAO,OAAO;AAAA,MACZ,eAAe;AACb,eAAO,MAAM;AAAA,QACb;AAAA,MACF;AAAA,MACA,UAAU;AAAA,MACV;AAAA,IACF;AACF,WAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ;AAChC;AAAA,MACE,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAIX,QAAO,oBAAoB,CAAC,YAAY,CAAC,KAAKA,QAAO;AAAA;AAAA,IAExI;AACF,SAAO,CAAC,OAAO;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,EACV,IAAI,CAAC,MAAM;AACT,aAAS,OAAO;AAChB,QAAI,WAAW,UAAU,UAAU,cAAc;AACjD,aAAS,IAAI,GAAG,IAAIW,OAAM,QAAQ;AAChC;AAAA,QACE,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,eAAe,KAAK,WAAW,IAAI,mCAAmC,KAAK;AAAA;AAAA,MAEjH;AACF,WAAO;AAAA,MACL,UAAU;AACR,iBAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ;AAChC,gBAAM,GAAG,QAAQ,GAAG,CAAC;AAAA,CAC9B;AAAA,MACK;AAAA,MACA,aAAa,OAAO;AAClB,iBAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ;AAChC;AAAA,YACE,GAAG,QAAQ,QAAQ,CAAC,IAAI,QAAQ,GAAG,CAAC,uCAAuC,KAAK,WAAW,KAAK;AAAA;AAAA,UAElG;AACF,eAAO,CAACC,aAAY;AAClB,mBAAS,IAAI,GAAG,IAAID,OAAM,QAAQ;AAChC;AAAA,cACEC,WAAU,MAAMA,QAAO,sBAAsB,QAAQ,QAAQ,CAAC,MAAMA,QAAO,WAAW,QAAQ,QAAQ,CAAC,UAAU,GAAG,QAAQ,QAAQ,CAAC;AAAA;AAAA,YAEvI;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GApDkB;AAflB,IAmEG,iBAAiB,wBAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA,iBAAiB;AACnB,MAAM,CAAC,aAAa,CAAC,OAAO,QAAQ,KAAK,cAAc,QAAM,cAAc,gBAAgB,iBAAiB,GAAG,IAAI,cAAc,SAAS,UAAU,IAAI;AAAA,IACpJ,OAAO,IAAI,cAAc,SAAS,UAAU,IAAI;AAAA,YACxC,cAAc,YAAY,GAAG,IAAI,cAAc,SAAS,UAAU,IAAI;AAAA,IAC9E,IAVgB;AAnEpB,IA6EQ,2BAA2B,wBAAC;AAAA,EAClC,iBAAiB;AAAA,EACjB,YAAY;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,EACf,mBAAmB;AAAA,EACnB,cAAc;AAChB,OAAO;AAAA,EACL,UAAU,wBAAC,MAAM,QAAQ,KAAK,IAAI,OAAO,+CAA+C,IAAI,eAAe,IAAI,IAAI,KAAK,KAA9G;AAAA,EACV,UAAU,wBAAC,OAAO,QAAQ;AACxB,QAAI,iBAAkB,QAAO;AAC7B,QAAI,OAAO,iBAAiB;AAAA;AAE5B,YAAQ,MAAM,IAAI,wDAAwD,IAAI;AAAA,EAChF,IAAI,IAAI,IAAI;AACV,aAAS,CAAC,SAAS,KAAK,KAAK,OAAO,QAAQ,UAAU,QAAQ,GAAG;AAC/D,cAAQ;AAAA,OACP,OAAO,OAAO,IAAI;AAAA;AAEnB,UAAI,aAAa,MAAM,QAAQ,eAAe,MAAI,iBAAiB,cAAc,aAAa,QAAQ,wBAAC,EAAE,iBAAiB,MAAG,IAAI,CAAC,MAAM,eAAe;AAAA,QACrJ;AAAA,QACA,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,WAAW,YAAY,OAAO;AAAA,QAC9B;AAAA,QACA;AAAA,MACF,CAAC,GAPqG;AAQtG,yBAAmB,QAAQ,MAAM;AACjC,UAAI,oBAAoB,CAAC,kBAAkB,aAAa,CAAC;AACzD,sBAAgB,MAAM,gBAAgB,QAAQ,OAAO,IAAI,uBAAuB,OAAO,YAAY,IAAI;AAAA,GAC1G,mBAAmB,QAAQ,MAAM,EAAE,gBAAgB,KAAG,CAAC,IAAI,QAAQ,gBAAgB,OAAO,aAAa,oBAAoB;AAAA,IAC1H,MAAM,EAAE,gBAAgB,KAAG,CAAC,IAAI,GAAG,IAAI,uBAAuB,OAAO,YAAY,IAAI;AAAA,iEACxB,OAAO,KAAK,IAAI,OAAO,2DAA2D,OAAO,KAAK,IAAI,OAAO,QAAQ,mBAAmB,QAAQ,MAAM,IAAI,eAAe,QAAQ,yBAAyB,OAAO,WAAW,IAAI,qEAAqE,OAAO,KAAK,IAAI;AAAA,eACnW,OAAO;AAAA,KACjB,QAAQ;AAAA;AAAA,IAET;AACA,WAAO,OAAO;AAAA,EAChB,GA7BU;AA8BZ,IAvCmC;AA7EnC,IAoHI,cAAc,wBAAC,OAAO,GAAG,MAAM,GAAG,YAAY,SAAS,iBAAzC;AApHlB,IAoH4E,qBAAqB;AApHjG,IAoH2H,gBAAgB;AApH3I,IAoHmL,UAAU,wBAAC,MAAM;AAClM,MAAI,YAAY,OAAO,KAAK;AAC5B,MAAI,aAAa,EAAE,YAAY,OAAQ,QAAO,EAAE;AAChD,MAAI,KAAK,YAAY,EAAE,KAAK;AAC5B,MAAI,GAAG,YAAY,SAAS,gBAAiB,QAAO;AACpD,MAAI,UAAU,GAAG,SAAS;AAC1B,MAAI,mBAAmB,KAAK,OAAO;AACjC,WAAO,cAAc,EAAE,UAAU,QAAK;AACxC,MAAI,SAAS,cAAc,KAAK,OAAO;AACvC,SAAO,cAAc,EAAE,UAAU,SAAS;AAC5C,GAV6L;AApH7L,IA8HG,YAAY,wBAAC,MAAM;AACpB,MAAI,YAAY,OAAO,KAAK;AAC5B,MAAI,aAAa,EAAE,cAAc,OAAQ,QAAO,EAAE;AAClD,MAAI,YAAY,YAAY,EAAE,GAAG,SAAS,IAAI,OAAO,KAAK,WAAW,EAAE,SAAS,IAAI,GAAG,iBAAiB,UAAU,QAAQ,GAAG;AAC7H,MAAI,UAAU,WAAW,iBAAiB,CAAC,MAAM,MAAM,UAAU,WAAW,iBAAiB,CAAC,MAAM;AAClG,WAAO,cAAc,EAAE,YAAY,OAAK;AAC1C,MAAI,SAAS,UAAU,SAAS,QAAQ;AACxC,SAAO,cAAc,EAAE,YAAY,SAAS;AAC9C,GARe;AA9Hf,IAsIG,cAAc,wBAAC,MAAM;AACtB,MAAI,KAAK,GAAG,MAAM;AAClB,SAAO,GAAG,YAAY,SAAS,4BAA4B,GAAG,YAAY,SAAS;AACrF,GAHiB;AAtIjB,IAyIG,6BAA6B,wBAAC,WAAW,MAAM,QAAQ,KAAK,IAAI,OAAO,OAAO,SAAS;AAAA,4CAC9C,IAAI,eAAe,IAAI,IAAI,KAAK,OAD5C;AAzIhC,IA0ImF,iBAAiB,wBAAC;AAAA,EACnG,KAAAP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AACF,MAAM;AACJ,MAAI,UAAUA,KAAI,UAAU,EAAE,gBAAgB,iBAAiBA,KAAI,UAAU,EAAE,SAAS,aAAa,OAAO,WAAW;AACvH,MAAI,CAAC,YAAY;AACf,cAAU,eAAe,YAAY,SAAS;AAAA;AAAA,MAE5C,SAASA,KAAI,cAAc,CAAC;AAAA,IAC9B,CAAC;AACD,QAAI,aAAa,mBAAmB;AAAA,IACpC,SAAS,aAAa,SAAS,cAAc,OAAO,SAAS,SAAS;AACtE,QAAI,MAAM,OAAO,UAAU,MAAM,WAAW,UAAU,MAAM,cAAc,UAAU,MAAM,aAAa;AACrG,aAAO,aAAa;AAAA,QAClB;AAAA,QACA;AAAA;AAAA,MAEF,EAAE,OAAO,IAAI;AAAA,QACX;AAAA,QACA;AAAA;AAAA,MAEF,EAAE,OAAO;AACX,QAAI,YAAY;AACd,UAAI,WAAW;AACf,gBAAU,6BAAM,SAAS,MAAM,GAArB;AAAA,IACZ;AAAA,EACF;AACA,MAAI,SAAS,aAAa,eAAe,WAAW,WAAW,CAAC,CAAC,MAAM,OAAO,QAAQ,YAAY;AAClG,MAAI,YAAY,QAAQ,OAAO,SAAS,GAAG,YAAY;AAAA,IACrD;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF,GAAG,QAAQ,SAAS;AAClB,QAAI,UAAU,QAAQ,QAAQ,SAAS;AACvC,gBAAY,aAAa;AAAA,EAC3B;AACA,YAAU,WAAW,aAAa;AAAA,IAChC,UAAU,aAAa,GAAG,UAAU,cAAc,GAAG,UAAU,gBAAgB,GAAG,UAAU,eAAe,GAAG,UAAU,eAAe,GAAG,UAAU,iBAAiB;AACvK,MAAI,gBAAgB,CAAC,CAAC,UAAU,QAAQ,CAAC,CAAC,UAAU,WAAW,CAAC,CAAC,UAAU,UAAU,CAAC,CAAC,UAAU,SAAS,CAAC,CAAC,UAAU,UAAU,CAAC,CAAC,UAAU,UAAU,WAAW,UAAU,SAAS,CAAC,CAAC,UAAU,OAAO,gBAAgB,MAAM,OAAO,WAAW;AAAA,EAC/O,MAAM,MAAM,CAAC,EAAE,OAAO,QAAQ,UAAU,WAAW,MAAM,WAAW,SAAS,WAAW,WAAW,UAAU,QAAQ,CAAC,CAAC,UAAU,QAAQ,CAAC,CAAC,MAAM,OAAO,WAAW,CAAC,eAAe,iBAAiBA,KAAI,YAAY,oBAAoB,kBAAkB,CAAC,CAAC,OAAO,KAAK,cAAc,EAAE,QAAQ,aAAa,UAAU,WAAW,CAAC,CAAC,UAAU,WAAW,QAAQ,6BAA6B,QAAM,UAAU,MAAM,YAAY,UAAU,UAAU,CAAC,CAAC,UAAU,QAAQ,aAAa,UAAU,QAAQ,SAAS,YAAY,WAAW,QAAQ,QAAQA,KAAI,OAAO,MAAM,IAAIA,KAAI,OAAO,QAAQ,gBAAgB,IAAI,eAAe,6BAAM;AACtmB,QAAI,cAAe,QAAO;AAC1B,QAAI,YAAY,MAAM;AACpB,UAAI,CAAC,WAAW;AACd,cAAM,IAAI;AAAA,UACR,iDAAiD,MAAM,KAAK,IAAI;AAAA,QAClE;AACF,UAAI,SAAS,WAAW,UAAU,OAAO,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,QAAQ,CAAC,IAAI;AACvH,UAAI,iBAAiB;AAAA,kBACT,WAAW,SAAS;AAC9B,yBAAiB,iHAAiH,MAAM;AAAA;AAExI,iBAAS,QAAQ,WAAW;AAC1B,2BAAiB,kBAAkB,IAAI,2BAA2B,IAAI,yCAAyC,IAAI,aAAa,MAAM;AAAA;AAE1I,uBAAiB;AAAA;AAAA,IAEnB;AACA,WAAO;AAAA,EACT,GAnBkmB,iBAmB/lB,YAAYA,KAAI,OAAO,WAAW,eAAeA,KAAI,OAAO,cAAc,aAAa,yBAAyB;AAAA,IACjH;AAAA,IACA;AAAA,IACA;AAAA,IACA,kBAAkB,mBAAmB;AAAA,IACrC,aAAa,CAAC,CAACA,KAAI,OAAO;AAAA,EAC5B,CAAC;AACD,iBAAe,aAAa,QAAQ,UAAU,aAAa,aAAa;AAAA;AAExE,MAAIQ,UAAS,aAAa;AAAA,IACxB,OAAO,MAAM;AAAA,IACb,OAAO,wBAAC,SAAS;AACf,mBAAa;AAAA,IACf,GAFO;AAAA,EAGT,CAAC;AACD,MAAI,aAAa,QAAQ,WAAW;AAClC,QAAI,MAAM,wBAAC,MAAM,iBAAiB;AAChC,UAAI,QAAQ,aAAa,IAAI,KAAK;AAClC,aAAO,QAAQ,OAAO,SAAS,WAAW,GAAG,IAAI,KAAK,KAAK,OAAO,iBAAiB,OAAO,GAAG,IAAI,cAAc,MAAM,QAAQ,CAAC,OAAO,GAAG,IAAI,IAAI,KAAK,MAAM,OAAO,gBAAgB,WAAW,GAAG,IAAI,KAAK,YAAY,OAAO,GAAG,IAAI,IAAI,YAAY;AAAA,IACrP,GAHU,QAGP,UAAU,aAAa,YAAY,WAAW,YAAY,SAAS,OAAO,WAAW,WAAW,WAAW,IAAI,WAAW,OAAO,MAAM,MAAM,WAAW,QAAQ;AAAA,MACjK,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC;AAAA,MACnB;AAAA,IACF,IAAI,MAAM,WAAW,SAAS,WAAW,SAAS,OAAK,OAAK,WAAW,SAAS,SAAS,MAAM,WAAW,KAAK;AAAA,MAC7G,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC;AAAA,MACnB;AAAA,IACF,IAAI,MAAM,WAAW,MAAM,IAAI,QAAQ,IAAI,IAAI,SAAS,IAAI,IAAI,UAAU,IAAI,IAAI,QAAQ,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,UAAU,IAAI,IAAI,UAAU,IAAI,IAAI,QAAQ,IAAI,MAAM;AAC3K,iBAAa,aAAa;AAAA,oDACsB,OAAO;AAAA,IACvD,aAAa;AAAA,mEACkD,OAAO;AAAA;AAAA,EAExE;AACA,MAAI,UAAU;AACZ,QAAI,eAAe,CAAC,GAAG,SAAS,UAAU,OAAO;AACjD,QAAI,WAAW,OAAO,SAAS,YAAY,OAAO,IAAK,MAAM,YAAY,OAAO,MAAM,OAAO,IAAI,IAAI;AACnG,UAAI,aAAa,OAAO,cAAc,OAAO,MAAM,OAAO,IAAI,EAAE;AAChE,UAAI,CAAC,UAAU,MAAM;AACnB,iBAAS,CAAC,KAAK,MAAM,KAAK,OAAO,QAAQ,UAAU,GAAG;AACpD,cAAI,QAAQ,QAAQ,UAAU,MAAM,SAAS,WAAW,CAAC,CAAC,MAAM,OAAO;AAAA,YACrE,CAAC,MAAM,EAAE,SAAS,YAAY,EAAE,WAAW;AAAA,UAC7C;AACA,mBAAS,gBAAiB,SAAS,MAAM,SAAS,WAAW,MAAM,UAAU,QAAQ,MAAM;AAC3F,cAAI,EAAE,MAAM,MAAM,IAAI;AACtB,uBAAa,KAAK;AAAA,YAChB;AAAA,YACA;AAAA,YACA,qBAAqB,WAAW,MAAM,OAAO,SAAS,YAAY,CAAC,CAAC,MAAM,OAAO,OAAO;AAAA,cACtF,CAAC,MAAM,EAAE,SAAS,YAAY,EAAE,SAAS;AAAA,YAC3C;AAAA,YACA,UAAU,SAAS,YAAY,OAAO;AAAA,cACpC,CAAC,MAAM,EAAE,SAAS,YAAY,EAAE,WAAW;AAAA,YAC7C;AAAA,YACA,OAAO,CAAC,CAAC;AAAA,UACX,CAAC;AAAA,QACH;AAAA,IACJ;AACA,QAAI,CAAC,aAAa;AAChB,mBAAa;AAAA,SACV;AACH,mBAAa;AAAA;AAEb,UAAI,QAAQ;AACZ,eAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV;AAAA,QACA;AAAA,MACF,KAAK,cAAc;AACjB,YAAI,UAAU,mBAAmB,GAAG,GAAG,SAAS,UAAU,IAAI,SAAS,MAAM,wBAAwB,OAAO;AAAA,OAC7G,KAAK;AAAA;AAEJ,mBAAW,aAAa,OAAO,sBAAsB,aAAa,yCAAyC,QAAQ,SAAS,CAAC;AAAA;AAAA,MAE/H,KAAK;AAAA,GACR,KAAK;AAAA;AAAA,GAEL,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOL,KAAK;AAAA;AAAA,uBAEe,OAAO;AAAA,+BACC,KAAK,wBAAwB,KAAK,kBAAkB,KAAK;AAAA;AAAA,GAErF,KAAK,oBAAoB,KAAK;AAAA,IAC7B,aAAa,yCAAyC,QAAQ,SAAS,CAAC;AAAA;AAAA,MAEtE,KAAK,iBAAiB,KAAK;AAAA;AAAA,0BAEP,KAAK,KAAK,KAAK,kCAAkC,KAAK;AAAA;AAAA,0BAEtD,KAAK,KAAK,KAAK,kCAAkC,KAAK;AAAA,wBACxD,OAAO;AAAA;AAAA,MAEzB,YAAY,aAAa,QAAQ,sCAAsC,QAAQ,SAAS,CAAC;AAAA;AAAA,kBAE7E,KAAK,kEAAkE,KAAK,uEAAuE,KAAK,qBAAqB,KAAK,gBAAgB,KAAK,gBAAgB,aAAa,QAAQ,sCAAsC,QAAQ,SAAS,CAAC;AAAA;AAAA,kBAEpS,KAAK;AAAA,QACf,KAAK,oEAAoE,UAAU,aAAa;AAAA,+BACzE,OAAO;AAAA,uBACf,KAAK,MAAM,KAAK;AAAA;AAAA,qCAEF,QAAQ,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWhD,KAAK,mCAAmC,KAAK,4CAA4C,aAAa,OAAO,SAAS,aAAa;AAAA;AAAA,MAEpI;AACA,mBAAa,cAAc,aAAa,IAAI,CAAC,EAAE,IAAI,GAAG,WAAW,IAAI,GAAG,MAAM,MAAM,EAAE,EAAE,KAAK,GAAG,IAAI,KAAK,aAAa;AAAA;AAAA,IAExH;AAAA,EACF;AACA,MAAI,iBAAiB,OAAO,WAAW,cAAc,QAAQ,OAAO,GAAG,eAAe,YAAY,MAAM,eAAe,SAAS,iBAAiB,IAAI,aAAa,aAAa,WAAW,kBAAkB,CAAC,CAAC,MAAM,OAAO,UAAU,CAAC,CAAC,MAAM,aAAa,KAAK,OAAO,KAAK,CAAC,CAAC,MAAM,cAAc,KAAK,OAAO,KAAK,CAAC,CAAC,MAAM,WAAW,KAAK,OAAO,KAAK,CAAC,CAAC,MAAM,aAAa,KAAK,OAAO,GAAG,eAAe,OAAO,WAAW,aAAa,YAAY,OAAO,IAAI,UAAO,CAAC,CAAC,MAAM,cAAc,KAAK,WAAW,KAAK,CAAC,CAAC,MAAM,aAAa,KAAK,WAAW,KAAK,CAAC,CAAC,MAAM,WAAW,KAAK,WAAW,GAAG,eAAe,OAAO,KAAK,UAAU,YAAY,CAAC,CAAC,GAAG,uBAAuB,aAAa,SAAS,GAAG,eAAe,aAAa,WAAW,KAAK,aAAa,WAAW,KAAK,aAAa,CAAC,MAAM,OAAO,SAAS,UAAU,UAAU,UAAU,OAAO,cAAc,YAAY,wBAAwB,CAAC,gBAAgB,cAAc,qBAAqB,aAAa,gBAAgB,6BAAM;AACh8B,QAAI,CAAC,MAAM,eAAe,UAAU,CAAC,SAAU,QAAO;AACtD,QAAI,iBAAiB,IAAI,SAAS,MAAM,eAAe,KAAK,OAAO,IAAI,WAAW;AAClF,sBAAkB;AAAA,eACP,MAAM;AACjB,QAAI,WAAW,aAAa;AAAA,MAC1B,OAAO,MAAM;AAAA,MACb,OAAO,wBAAC,SAAS;AACf,0BAAkB;AAAA,MACpB,GAFO;AAAA,IAGT,CAAC,EAAE,iBAAiB;AAAA,MAClB,OAAO,MAAM,eAAe;AAAA,IAC9B,CAAC;AACD,QAAI,MAAM,eAAe,UAAU,MAAM;AACvC,eAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAAK;AACnD,YAAI,UAAU,SAAS;AAAA,UACrB,MAAM,cAAc,CAAC,EAAE,GAAG;AAAA,QAC5B,GAAG,UAAU,QAAQ,MAAM,cAAc,CAAC,CAAC,IAAI,WAAW;AAC1D,0BAAkB;AAAA,EACxB,OAAO,mBAAmB,CAAC;AAAA,GAC1B,QAAQ;AAAA,MACL;AACF,WAAO,SAAS,QAAQ,GAAG,kBAAkB;AAAA,GAC9C;AAAA,EACD,GAxB47B,kBAwBz7B,eAAe,wBAAC,IAAI,QAAQ;AAC7B,QAAI,QAAQ,cAAc,GAAG,WAAW,GAAG,SAAS,gBAAgB,oBAAoB,IAAI,YAAY,GAAG,CAAC,GAAG,SAAS,WAAW,EAAE,GAAG,kBAAkB;AAAA;AAE1J,WAAO,QAAQ,cAAc,QAAQ,KAAK,QAAQ,gBAAgB,UAAU,QAAQ;AAAA,EACtF,GAJkB,iBAIf,qBAAqB,eAAe,QAAQ,qBAAqB,IAAI,QAAQ,kBAAkB,KAAK;AACvG,GAAC,YAAY,UAAU,WAAW,aAAa,aAAa,IAAI;AAAA;AAEhE,MAAI,gBAAgBA,QAAO,SAAS;AAAA,IAClC,OAAO,MAAM,OAAO;AAAA,EACtB,CAAC;AACD,MAAI,SAAS;AACX,QAAI,mBAAmB,CAAC,CAAC,MAAM,OAAO,UAAU,UAAU,QAAQ,UAAU;AAC5E,YAAQ,OAAO,YAAY,aAAa,QAAQ,OAAO,UAAU,aAAa;AAAA;AAE9E,QAAI,SAAS,OAAO,MAAM,SAAS,WAAW,MAAM,QAAQ,MAAM,QAAQ,MAAM,KAAK,KAAK,MAAM,MAAM,WAAW,IAAI,OAAO,MAAM,MAAM,CAAC,KAAK,WAAW,MAAM,MAAM,CAAC,IAAI,OAAO,MAAM,MAAM,CAAC,EAAE,MAAM,WAAW,MAAM,MAAM,CAAC,EAAE,KAAK,SAAS;AAC9O,QAAI,CAAC,UAAU,UAAU,QAAQ,CAAC,MAAM,OAAO,QAAQ;AACrD,UAAI,SAAS,UAAU,KAAK;AAC5B,gBAAU,OAAO,SAAS,OAAO,IAAK,MAAM,WAAW,OAAO,OAAO,WAAW,KAAK,OAAO,OAAO,KAAK,CAAC,MAAM,EAAE,IAAK,MAAM,YAAY,MAAM,SAAS;AAAA,IACzJ;AACA,QAAI,UAAU,eAAe,SAAS,MAAM,GAAG;AAC7C,UAAI,WAAWA,QAAO,SAAS;AAAA,QAC7B,OAAO,MAAM,OAAO;AAAA,MACtB,CAAC,GAAG,iBAAiB,CAAC,CAAC,UAAU,MAAM;AACvC,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AACH,uBAAa,QAAQ,OAAO,KAAK,cAAc;AAC/C;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,uBAAa,QAAQ,OAAO,KAAK,cAAc;AAC/C;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,uBAAa,QAAQ,OAAO,WAAW,cAAc;AACrD;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,uBAAa,QAAQ,OAAO,YAAY,cAAc;AACtD;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,uBAAa,QAAQ,OAAO,SAAS,cAAc;AACnD;AAAA,QACF;AACE,iBAAO,CAAC,KAAKR,KAAI,SAAS,MAAM,aAAa,aAAa,gDAAgD,2DAA2D,aAAa;AAAA;AAAA;AAAA;AAAA,qBAIvK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAMjB;AAAA,MACJ;AACA,eAAS,QAAQ;AAAA,IACnB,WAAW,kBAAkB;AAC3B,mBAAa;AAAA,GAChB,aAAa;AAAA,qBACK,aAAa,aAAa;AAAA,IAC3C;AAAA;AAEE,UAAI,mBAAmB;AACvB,UAAI,MAAM,OAAO;AACf,qBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMV;AACH,2BAAmB;AACnB,YAAI,iBAAiB,CAAC,CAAC,UAAU,MAAM;AACvC,qBAAa;AAAA,aACR,QAAQ,OAAO,KAAK,cAAc,IAAI;AAAA,aACtC,QAAQ,OAAO,WAAW,cAAc,IAAI;AAAA,aAC5C,QAAQ,OAAO,YAAY,cAAc,IAAI;AAAA,aAC7C,QAAQ,OAAO,SAAS,cAAc,IAAI;AAAA,gDACP,QAAQ,OAAO,KAAK,cAAc,IAAI;AAAA;AAAA,MAEhF;AACA,UAAI,WAAWQ,QAAO,SAAS;AAAA,QAC7B,OAAO,MAAM,OAAO;AAAA,MACtB,CAAC;AACD,UAAI,MAAM;AACR,iBAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,cAAI,OAAO,KAAK,CAAC;AACjB,cAAI,MAAM,MAAM,aAAa;AAAA,cACzB,OAAO,MAAM,MAAM,CAAC,EAAE,MAAM,UAAU;AACxC,gBAAI,UAAU,SAAS;AAAA,cACrB,MAAM,MAAM,CAAC,EAAE;AAAA,YACjB,GAAG,iBAAiB,CAAC,CAAC,UAAU,MAAM;AACtC,oBAAQ,MAAM,MAAM,CAAC,EAAE,IAAI;AAAA,cACzB,KAAK;AAAA,cACL,KAAK;AACH,mCAAmB,MAAI,aAAa,QAAQ,OAAO,KAAK,cAAc;AACtE;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AACH,mCAAmB,MAAI,aAAa,QAAQ,OAAO,KAAK,cAAc;AACtE;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AACH,mCAAmB,MAAI,aAAa,QAAQ,OAAO,WAAW,cAAc;AAC5E;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AACH,mCAAmB,MAAI,aAAa,QAAQ,OAAO,YAAY,cAAc;AAC7E;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AACH,mCAAmB,MAAI,aAAa,QAAQ,OAAO,SAAS,cAAc;AAC1E;AAAA,cACF;AACE,6BAAa,OAAO,IAAI,YAAY,MAAM,MAAM,CAAC,EAAE,EAAE;AAAA,KAChE,IAAI,uBAAuB,IAAI,UAAU,IAAI;AAAA,KAC7C,IAAI,wBAAwB,IAAI;AAAA;AAAA,YAEzB;AACA,oBAAQ;AAAA,UACV,OAAO;AACL,gBAAI,UAAU,SAAS;AAAA,cACrB,MAAM,MAAM,CAAC,EAAE,GAAG;AAAA,YACpB;AACA,yBAAa,OAAO,IAAI,YAAY,CAAC;AAAA,EAC/C,IAAI,IAAI,IAAI;AAAA,KACT,IAAI,uBAAuB,IAAI,UAAU,IAAI;AAAA,KAC7C,IAAI,wBAAwB,IAAI,eAAe,QAAQ;AAAA,UAClD;AACA,cAAI,MAAM,MAAM,aAAa,MAAM,iBAAkB;AAAA,QACvD;AACF,UAAI,SAAS,QAAQ,GAAG,CAAC,kBAAkB;AACzC,YAAI,iBAAiB,CAAC,CAAC,UAAU,MAAM;AACvC,cAAM,OAAO,WAAW,aAAa;AAAA;AAAA,IAEzC,aAAa;AAAA,IACb,QAAQ,OAAO,KAAK,cAAc,IAAI;AAAA,sBACpB,QAAQ,OAAO,KAAK,cAAc,IAAI;AAAA,6CACf,QAAQ,OAAO,WAAW,cAAc,IAAI;AAAA,oCACrD,QAAQ,OAAO,YAAY,cAAc,IAAI;AAAA,+BAClD,QAAQ,OAAO,SAAS,cAAc,IAAI;AAAA;AAEjE,iBAAS,OAAO,OAAO,KAAKR,KAAI,SAAS,CAAC;AACxC,uBAAa,SAAS,GAAG,WAAW,GAAG,YAAY,GAAG;AAAA,OACzD,GAAG,yBAAyB,GAAG,YAAY,GAAG;AAAA,OAC9C,GAAG,6CAA6C,aAAa,KAAK,GAAG,EAAE,IAAI,SAAS,GAAG,yBAAyB,GAAG;AAAA;AAAA;AAGlH,cAAM,OAAO,WAAW,aAAa,MAAM,aAAa;AAAA,MAC1D;AACA,YAAM,OAAO,WAAW,aAAa;AAAA;AAAA,IAEvC;AACA,iBAAa;AAAA,EACf;AACA,MAAI,cAAc,QAAQ,GAAG,OAAO,aAAa,UAAU;AACzD,QAAI,WAAWQ,QAAO,aAAa;AAAA,MACjC,OAAO,MAAM,WAAW;AAAA,IAC1B,CAAC;AACD,QAAI,MAAM,WAAW,QAAQ;AAC3B,mBAAa;AAAA;AAEb,eAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,YAAI,YAAY,MAAM,UAAU,CAAC,GAAG,UAAU,SAAS,aAAa,UAAU,GAAG,IAAI;AACrF,qBAAa,QAAQ,SAAS,IAAI,iCAAiC,CAAC;AAAA,IACxE,2BAA2B,CAAC;AAAA,GAC7B,UAAU,YAAY,cAAc,aAAa,2DAA2D,aAAa,aAAa,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQ3H,aAAa,2DAA2D,aAAa,aAAa,IAAI;AAAA,GACrH,QAAQ;AAAA,MACL;AAAA,IACF;AACA,aAAS,QAAQ;AAAA,EACnB;AACA,MAAI,aAAa,CAAC;AAClB,MAAI,WAAW;AACb,QAAI,UAAU,SAAS;AACrB,UAAI,UAAU,QAAQ;AACpB,iBAAS,CAAC,KAAK,KAAK,KAAK,OAAO;AAAA,UAC9BJ,eAAO;AAAA;AAAA,YAEL,UAAU,QAAQ;AAAA,YAClB,CAAC;AAAA,UACH;AAAA,QACF,GAAG;AACD,cAAI,SAAS,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,OAAO,SAAS,WAAW,IAAI,KAAK,MAAM;AAC1G,qBAAW,WAAW,aAAa,cAAc,GAAG,QAAQ,MAAM;AAAA;AAAA,QAEpE;AACF,mBAAa,eAAe;AAAA,QAC1B,MAAM;AAAA,QACN,QAAQ,UAAU;AAAA,QAClB,MAAM;AAAA,QACN;AAAA,MACF,CAAC,GAAG,UAAU,QAAQ,eAAe,aAAa,+BAA+B,UAAU,MAAM,QAAQ,eAAe,SAAO,aAAa,sDAAsD,WAAW,SAAS,SAAS,IAAI,MAAM,UAAU,QAAQ,iBAAiB,aAAa;AAAA,QACvR;AAAA;AAAA,QAEA;AAAA,MACF,IAAI,UAAU,QAAQ,eAAe,aAAa;AAAA,IACpD;AACA,QAAI,UAAU,QAAQ;AACpB,UAAI,UAAU,OAAO;AACnB,iBAAS,CAAC,KAAK,KAAK,KAAK,OAAO;AAAA,UAC9BA,eAAO;AAAA;AAAA,YAEL,UAAU,OAAO;AAAA,YACjB,CAAC;AAAA,UACH;AAAA,QACF,GAAG;AACD,cAAI,SAAS,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,OAAO,SAAS,WAAW,IAAI,KAAK,MAAM;AAC1G,qBAAW,WAAW,aAAa,aAAa,GAAG,QAAQ,MAAM;AAAA;AAAA,QAEnE;AACF,gBAAU,QAAQ,QAAQ,eAAe,SAAO,aAAa,kDAAkD,WAAW,SAAS,QAAQ,IAAI,MAAM,UAAU,OAAO,iBAAiB,aAAa;AAAA,QAClM;AAAA;AAAA,QAEA;AAAA,MACF;AAAA,IACF;AACA,QAAI,UAAU,OAAO;AACnB,UAAI,UAAU,MAAM;AAClB,iBAAS,CAAC,KAAK,KAAK,KAAK,OAAO;AAAA,UAC9BA,eAAO;AAAA;AAAA,YAEL,UAAU,MAAM;AAAA,YAChB,CAAC;AAAA,UACH;AAAA,QACF,GAAG;AACD,cAAI,SAAS,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,OAAO,SAAS,WAAW,IAAI,KAAK,MAAM;AAC1G,qBAAW,WAAW,aAAa,eAAe,GAAG,2BAA2B,GAAG,MAAM,MAAM;AAAA,IACrG,aAAa,eAAe;AAAA,YACpB,MAAM;AAAA,YACN,QAAQ,UAAU;AAAA,YAClB,MAAM;AAAA,YACN;AAAA,UACF,CAAC;AAAA,QACH;AACF,gBAAU,MAAM,eAAe,aAAa,6BAA6B,UAAU,OAAO,QAAQ,eAAe,SAAO,aAAa,gDAAgD,WAAW,SAAS,OAAO,IAAI,MAAM,UAAU,MAAM,iBAAiB,aAAa;AAAA,QACtQ;AAAA;AAAA,QAEA;AAAA,MACF,IAAI,UAAU,MAAM,eAAe,aAAa;AAAA,IAClD;AACA,QAAI,WAAW,UAAU,MAAM;AAC7B,OAAC,UAAU,KAAK,gBAAgB,UAAU,KAAK,gBAAgB,aAAa;AAAA;AAE5E,UAAI,WAAW,QAAQ,UAAU,KAAK,MAAM,GAAG,6BAA6B;AAC5E,UAAI,UAAU,KAAK,YAAY;AAC7B,YAAI,QAAQA,eAAO;AAAA,UACjB,UAAU,KAAK;AAAA,UACf,UAAU,KAAK,OAAO,SAAS,YAAY,UAAU,KAAK,OAAO,IAAK,MAAM,YAAY,UAAU,KAAK,OAAO,MAAM,UAAU,KAAK,OAAO,IAAI,EAAE,IAAK,MAAM,WAAW,CAAC,IAAI;AAAA,QAC7K,GAAG,SAAS,mBAAmB,UAAU,KAAK,MAAM;AACpD,YAAI,CAAC,YAAY,SAAS,OAAO,SAAS,aAAa,QAAQ,QAAQ,MAAM,KAAK,QAAQ,SAAS,MAAM,IAAI;AAC3G,uCAA6B;AAC7B,mBAAS,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,KAAK;AACrC,aAAC,MAAM,UAAU,MAAM,YAAY,OAAO,MAAM,CAAC;AACnD,qBAAW,KAAK,MAAM,QAAQ;AAAA,QAChC;AACA,YAAI,SAAS,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,OAAO,SAAS,WAAW,IAAI,KAAK,MAAM;AAC1G,iBAAS,SAAS,MAAM,QAAQ,KAAK,IAAI,aAAa,qBAAqB,MAAM;AAAA,IACrF,OAAO,SAAS,WAAW,aAAa,wBAAwB,MAAM;AAAA,IACtE,aAAa,UAAU,MAAM;AAAA,IAC7B,aAAa,eAAe;AAAA,UACtB,MAAM;AAAA,UACN,QAAQ,UAAU;AAAA,UAClB,MAAM;AAAA,UACN;AAAA,QACF,CAAC,GAAG,UAAU,MAAM,QAAQ,eAAe,SAAO,UAAU,KAAK,aAAa,aAAa,gEAAgE,WAAW,SAAS,MAAM,IAAI,MAAM,aAAa,8CAA8C,WAAW,SAAS,MAAM,IAAI;AAAA,MAC1R;AACE,qBAAa,eAAe;AAAA,UAC1B,MAAM;AAAA,UACN,QAAQ,UAAU;AAAA,UAClB,MAAM;AAAA,UACN;AAAA,QACF,CAAC,GAAG,UAAU,MAAM,QAAQ,eAAe,SAAO,UAAU,KAAK,aAAa,aAAa,gEAAgE,WAAW,SAAS,MAAM,IAAI,MAAM,aAAa,8CAA8C,WAAW,SAAS,MAAM,IAAI;AAC1R,UAAI,UAAU,KAAK,iBAAiB,aAAa;AAAA,QAC/C;AAAA;AAAA,QAEA;AAAA,MACF,IAAI,YAAY,UAAU,KAAK,OAAO,OAAO,QAAQ;AACnD,YAAI,WAAW,OAAO;AAAA,UACpB,UAAU,KAAK,OAAO;AAAA,QACxB;AACA,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAI,OAAO,SAAS,CAAC;AACrB,cAAI,QAAQ,QAAQ,IAAI,KAAK,QAAQ,SAAS,IAAI,GAAG;AACnD,gBAAI,YAAY,mBAAmB,MAAM;AAAA;AAAA,cAEvC,SAASJ,KAAI,YAAY;AAAA,cACzB,SAAS,CAACA,KAAI,OAAO;AAAA;AAAA,cAErB,QAAQA,KAAI,YAAY;AAAA,cACxB,WAAWA,KAAI,OAAO;AAAA,cACtB,kBAAkB,oBAAoB;AAAA,cACtC,UAAU,6BAAMA,KAAI,OAAO,UAAjB;AAAA,YACZ,CAAC;AACD,gBAAI,WAAW;AACb,kBAAI,UAAU,WAAW,WAAW,GAAG,YAAY,OAAO;AAAA,gBACxD,KAAK;AAAA,cACP,GAAG,aAAa,UAAU;AAAA,IACpC;AACU,4BAAc,iBAAiB,WAAW,MAAM;AAChD,kBAAI,gBAAgB,IAAI,kBAAkB;AAC1C,uBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,oBAAI,CAAC,GAAG,CAAC,IAAI,UAAU,EAAE;AACzB,iBAAC,EAAE,aAAa,EAAE,IAAK,MAAM,UAAU,EAAE,IAAK,MAAM,YAAY,oBAAoB,iBAAiB,MAAM,iBAAiB,gCAAgC,CAAC,IAAI,KAAK,UAAU,EAAE,SAAS,CAAC,UAAU,CAAC,MAAM;AAAA,cAC/M;AACA,gCAAkB,oBAAoB,IAAI,cAAc,SAAS,aAAa;AAAA,IACxF,kBAAkB,MAAM,cAAc,sBAAsB,aAAa;AAAA,IACzE,cAAc,KAAK,aAAa,YAAY,WAAW,KAAK,SAAS;AAAA,YAC7D;AAAA,UACF;AAAA,QACF;AAAA,MACF,WAAW,8BAA8B,CAAC,aAAa;AAAA,QACrD;AAAA,QACA,mBAAmB,UAAU,KAAK,MAAM;AAAA,MAC1C,KAAK;AAAA,QACH;AAAA,QACA,mBAAmB,UAAU,KAAK,MAAM;AAAA,MAC1C,IAAI;AACF,YAAI,gBAAgB,IAAI,IAAI;AAC5B,iBAAS,CAAC,GAAG,CAAC,KAAK,OAAO;AAAA,UACxB,mBAAmB,UAAU,KAAK,MAAM,EAAE;AAAA,QAC5C;AACE,WAAC,EAAE,aAAa,EAAE,IAAK,MAAM,UAAU,EAAE,IAAK,MAAM,YAAY,MAAM,iBAAiB,MAAM,iBAAiB,gCAAgC,CAAC,IAAI,KAAK,UAAU,EAAE,SAAS,CAAC,UAAU,CAAC,MAAM;AACjM,cAAM,aAAa;AAAA,IACvB,MAAM,IAAI,aAAa,SAAS,aAAa;AAAA,IAC7C,IAAI,MAAM,aAAa,sBAAsB,aAAa;AAAA;AAAA,MAExD;AAAA,IACF;AACA,QAAI,UAAU,QAAQ;AACpB,UAAI,kBAAkB,mBAAmB;AAAA;AAAA,QAEvC,SAASA,KAAI,YAAY;AAAA,QACzB,WAAW,UAAU;AAAA,QACrB,eAAeA,KAAI,OAAO;AAAA,QAC1B,SAAS,CAAC,CAACA,KAAI,OAAO;AAAA,QACtB,QAAQ,UAAU,QAAQ,UAAU,CAAC;AAAA,QACrC,WAAWA,KAAI,OAAO;AAAA;AAAA,QAEtB,QAAQA,KAAI,YAAY;AAAA,MAC1B,CAAC;AACD,UAAI,aAAa;AAAA;AAAA,GAEpB,gBAAgB;AACX,iBAAS,CAAC,KAAK,KAAK,KAAK,OAAO;AAAA,UAC9BI,eAAO,QAAQ,gBAAgB,QAAQ,CAAC,CAAC;AAAA,QAC3C;AACE,uBAAa,gBAAgB,GAAG,QAAQ,OAAO,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,KAAK;AAAA;AAEpG,sBAAgB,eAAe,aAAa,8BAA8B,UAAU,MAAM,QAAQ,eAAe,SAAO,aAAa,qDAAqD,WAAW,SAAS,UAAU,aAAa,IAAI,MAAM,gBAAgB,iBAAiB,aAAa;AAAA,QAC3R;AAAA;AAAA,QAEA;AAAA,MACF,IAAI,gBAAgB,eAAe,aAAa;AAAA,IAClD;AAAA,EACF;AACA,MAAI,OAAO,gBAAgB,UAAU;AACnC,QAAI,WAAWI,QAAO,gBAAgB;AAAA,MACpC,OAAO,MAAM,cAAc;AAAA,IAC7B,CAAC,GAAG,aAAa;AACjB,QAAI,MAAM,cAAc;AACtB,eAAS,IAAI,GAAG,IAAI,MAAM,aAAa,QAAQ,KAAK;AAClD,YAAI,eAAe,MAAM,aAAa,CAAC,GAAG,UAAU,SAAS,aAAa,aAAa,GAAG,IAAI,GAAG,YAAY,UAAU,YAAY;AACnI,YAAI,aAAa,YAAY,aAAa,aAAa,YAAY;AACjE,yBAAe,aAAa,MAAI,aAAa;AAAA;AAAA,IAEnD,aAAa,QAAQ,YAAY,IAAI,iCAAiC,CAAC;AAAA,IACvE,2BAA2B,CAAC;AAAA,GAC7B,aAAa,YAAY,eAAe,aAAa,wDAAwD,aAAa,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAQ5H,aAAa,wDAAwD,aAAa,UAAU,IAAI;AAAA,GAC5G,QAAQ;AAAA,iBACM,CAAC;AACR,uBAAa,QAAQ,YAAY,IAAI,wBAAwB,CAAC;AAAA,IACpE,kBAAkB,CAAC;AAAA,GACpB,QAAQ;AAAA,aACE;AACH,cAAI,aAAa,QAAQ,YAAY,IAAI,2BAA2B,CAAC;AAAA,IAC3E,qBAAqB,CAAC;AAAA,GACvB,QAAQ,IAAI,GAAG,aAAa,uBAAuB,SAAS,QAAQ,GAAG,MAAM,aAAa,UAAU,UAAU;AACrG,YAAAA,QAAO,UAAU;AAAA,cACf,MAAM,aAAa,QAAQ,OAAO;AAAA,YACpC,CAAC,EAAE,QAAQ;AACX,gBAAI,YAAYA,QAAO,eAAe;AAAA,cACpC,OAAO,MAAM,aAAa;AAAA,YAC5B,CAAC;AACD,gBAAI,MAAM,aAAa;AACrB,uBAAS,KAAK,GAAG,KAAK,MAAM,YAAY,QAAQ,MAAM;AACpD,oBAAI,OAAO,MAAM,YAAY,EAAE,GAAG,aAAa,UAAU,IAAI,GAAG,WAAW,UAAU,aAAa,KAAK,GAAG,IAAI;AAC9G,6BAAa;AAAA,GAC1B,cAAc,aAAa,QAAQ,KAAK,EAAE,IAAI,0BAA0B,EAAE;AAAA,IACzE,oBAAoB,EAAE;AAAA,GACvB,aAAa;AAAA,KACX,aAAa,QAAQ,KAAK,EAAE,IAAI,uBAAuB,EAAE;AAAA,IAC1D,iBAAiB,EAAE;AAAA,GACpB,SAAS,IAAI;AAAA,cACF;AACF,sBAAU,QAAQ;AAAA,UACpB;AACA,oBAAU,aAAa,aAAa,WAAW,SAAS,IAAI;AAC5D,cAAI,sBAAsBA,QAAO,eAAe;AAAA,YAC9C,OAAO,MAAM,aAAa;AAAA,UAC5B,CAAC;AACD,cAAI,MAAM,aAAa,QAAQ;AAC7B,yBAAa;AAAA;AAEb,qBAAS,KAAK,GAAG,KAAK,MAAM,YAAY,QAAQ,MAAM;AACpD,kBAAI,eAAe,MAAM,YAAY,EAAE,GAAG,WAAW,oBAAoB;AAAA,gBACvE,aAAa,GAAG;AAAA,cAClB;AACA,2BAAa,yBAAyB,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,EAAE;AAAA,sCAC1E,SAAS;AAAA,YACnC;AAAA,UACF;AACA,8BAAoB,QAAQ,GAAG,aAAa,aAAa,GAAG,aAAa,2BAA2B,YAAY,WAAW,kBAAkB;AAAA;AAAA,QAE/I;AAAA,MACF;AACF,aAAS,QAAQ;AAAA,EACnB;AACA,MAAI,MAAM,aAAa,UAAU,UAAU;AACzC,QAAI,iBAAiBA,QAAO,UAAU;AAAA,MACpC,MAAM,aAAa,QAAQ,OAAO;AAAA,IACpC,CAAC;AACD,UAAM,aAAa,SAAS,aAAa,iBAAiB,0BAA0B,MAAM;AAAA,IAC1F,oBAAoB,MAAM;AAAA,IAC1B,aAAa,iBAAiB,eAAe,MAAM;AAAA,IACnD,SAAS,MAAM;AAAA,GAChB,eAAe,QAAQ;AACtB,QAAI,WAAWA,QAAO,eAAe;AAAA,MACnC,OAAO,MAAM,aAAa;AAAA,IAC5B,CAAC;AACD,QAAI,MAAM,aAAa;AACrB,eAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,YAAI,OAAO,MAAM,YAAY,CAAC,GAAG,YAAY,UAAU,IAAI,GAAG,UAAU,SAAS,aAAa,KAAK,GAAG,IAAI;AAC1G,qBAAa,aAAa,QAAQ,KAAK,EAAE,IAAI,0BAA0B,CAAC;AAAA,IAC5E,oBAAoB,CAAC;AAAA,GACtB,QAAQ,IAAI,GAAG,UAAU,YAAY,aAAa,uBAAuB,SAAS,QAAQ,GAAG,aAAa,WAAW,SAAS,IAAI,GAAG,aAAa,qBAAqB,aAAa,uBAAuB,SAAS,QAAQ,GAAG,aAAa,sBAAsB,aAAa,QAAQ,KAAK,EAAE,IAAI,uBAAuB,CAAC;AAAA,IACzT,iBAAiB,CAAC;AAAA,GACnB,QAAQ;AAAA,MACL;AACF,aAAS,QAAQ,GAAG,MAAM,aAAa,WAAW,aAAa;AAAA,IAC/D,UAAU,aAAa,aAAa,WAAW,SAAS,IAAI,aAAa,aAAa;AACtF,QAAI,sBAAsBA,QAAO,eAAe;AAAA,MAC9C,OAAO,MAAM,aAAa;AAAA,IAC5B,CAAC;AACD,QAAI,MAAM,aAAa;AACrB,eAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,YAAI,eAAe,MAAM,YAAY,CAAC,GAAG,UAAU,oBAAoB;AAAA,UACrE,aAAa,GAAG;AAAA,QAClB;AACA,qBAAa,MAAM,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA;AAAA,GAEnF,QAAQ;AAAA,MACL;AACF,wBAAoB,QAAQ,GAAG,aAAa,aAAa;AAAA,EAC3D,OAAO;AACL,QAAI,iBAAiBA,QAAO,UAAU;AAAA,MACpC,MAAM,aAAa,QAAQ,OAAO;AAAA,IACpC,CAAC;AACD,QAAI,UAAU,YAAY,MAAM,aAAa,UAAU,UAAU;AAC/D,mBAAa,iBAAiB,eAAe,MAAM;AAAA,IACrD,SAAS,MAAM;AAAA,GAChB,eAAe,QAAQ,GAAG,UAAU,aAAa,aAAa,WAAW,SAAS;AAC/E,UAAI,sBAAsBA,QAAO,eAAe;AAAA,QAC9C,OAAO,MAAM,aAAa;AAAA,MAC5B,CAAC;AACD,UAAI,MAAM,aAAa,QAAQ;AAC7B,qBAAa;AAAA;AAAA;AAGb,iBAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,cAAI,eAAe,MAAM,YAAY,CAAC,GAAG,UAAU,oBAAoB;AAAA,YACrE,aAAa,GAAG;AAAA,UAClB;AACA,uBAAa;AAAA,wBACC,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA;AAAA,GAEhF,QAAQ;AAAA,QACH;AAAA,MACF;AACA,0BAAoB,QAAQ,GAAG,aAAa,aAAa,GAAG,mBAAmB,YAAY,aAAa,cAAc,GAAG,aAAa,UAAU,MAAM,qGAAqG,YAAY,GAAG,MAAM,iBAAiB,kBAAkB;AAAA,cAC3S,MAAM,aAAa,UAAU,MAAM,YAAY,aAAa;AAAA,KACrE,aAAa,aAAa;AAAA,IAC3B,WAAW,aAAa,UAAU;AAChC,mBAAa,iBAAiB,eAAe,MAAM;AAAA,IACrD,SAAS,MAAM;AAAA,GAChB,eAAe,QAAQ;AACpB,UAAI,sBAAsBA,QAAO,eAAe;AAAA,QAC9C,OAAO,MAAM,aAAa;AAAA,MAC5B,CAAC;AACD,UAAI,MAAM,aAAa,QAAQ;AAC7B,qBAAa;AAAA;AAEb,iBAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,cAAI,eAAe,MAAM,YAAY,CAAC,GAAG,UAAU,oBAAoB;AAAA,YACrE,aAAa,GAAG;AAAA,UAClB;AACA,uBAAa,yBAAyB,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA,qCACtE,QAAQ;AAAA,QACrC;AAAA,MACF;AACA,0BAAoB,QAAQ,GAAG,aAAa,aAAa,IAAI,aAAa;AAAA,IAC5E,OAAO;AACL,qBAAe,QAAQ;AACvB,UAAI,UAAU,iBAAiB,SAAS,MAAM,KAAK;AACnD,yBAAmB,YAAY,aAAa,cAAc,GAAG,aAAa,UAAU,MAAM,qGAAqG,YAAY,GAAG,MAAM,iBAAiB,kBAAkB;AAAA,cAC/O,MAAM;AAAA,IAChB,UAAU,MAAM;AAAA,KACf,aAAa,aAAa,OAAO;AAAA,IAClC;AAAA,EACF;AACA,MAAI,aAAa;AAAA,iBACF,CAAC,cAAc,MAAM,OAAO,WAAW,aAAa,sBAAsB,aAAa;AAAA;AAAA,GAErG,cAAc,aAAa,aAAa,IAAI,YAAY,MAAM;AAC7D,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ;AACtC,mBAAa,SAAS,CAAC,+BAA+B,CAAC;AAAA;AAE3D,MAAI,gBAAgBA,QAAO,SAAS;AAAA,IAClC,OAAO,MAAM,OAAO;AAAA,EACtB,CAAC;AACD,MAAI,MAAM,OAAO,QAAQ;AACvB,iBAAa;AAAA,GACd,gBAAgB,aAAa;AAAA,0EAC0C,aAAa;AAAA,GACpF,aAAa;AAAA,GACb,MAAM,aAAa,WAAW,aAAa;AAAA;AAE1C,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,UAAI,UAAU,cAAc,aAAa,MAAM,MAAM,CAAC,EAAE,GAAG,IAAI;AAC/D,UAAI,QAAQ,MAAM,MAAM,CAAC,CAAC,IAAI,aAAa,oBAAoB,CAAC;AAAA,IAClE,aAAa,cAAc,CAAC;AAAA;AAAA,GAE7B,QAAQ,GAAG,MAAM,aAAa,QAAQ;AACjC,YAAI,sBAAsBA,QAAO,eAAe;AAAA,UAC9C,OAAO,MAAM,aAAa;AAAA,QAC5B,CAAC;AACD,iBAAS,KAAK,GAAG,KAAK,MAAM,YAAY,QAAQ,MAAM;AACpD,cAAI,eAAe,MAAM,YAAY,EAAE,GAAG,WAAW,oBAAoB;AAAA,YACvE,aAAa,GAAG;AAAA,UAClB;AACA,uBAAa;AAAA,oBACH,EAAE;AAAA;AAAA;AAAA,GAGnB,SAAS;AAAA,QACJ;AACA,4BAAoB,QAAQ;AAAA,MAC9B;AACA,UAAI,aAAa,6BAA6B,kBAAkB;AAAA,GACnE,aAAa,WAAW,YAAY,MAAM,OAAO;AAC5C,iBAAS,KAAK,GAAG,KAAK,MAAM,MAAM,QAAQ;AACxC,uBAAa,SAAS,EAAE;AAAA;AAE1B,sBAAc,QAAQ;AAAA,MACxB;AACA,mBAAa;AAAA,IACf;AAAA,EACF;AACA,gBAAc,QAAQ,GAAG,aAAa,oCAAoC,CAAC,cAAc,MAAM,OAAO,WAAW,aAAa,SAAS,aAAa;AACpJ,MAAI,mBAAmB,QAAQ,SAAS,OAAO,KAAK,QAAQ,MAAM,EAAE,KAAK,GAAG,IAAI,MAAM,IAAI,OAAO,yCAAyC,WAAW,cAAc,aAAa,IAAI,uEAAuE,WAAW,eAAe,OAAO,IAAI,WAAW,sBAAsB,QAAQ,IAAI,cAAc,WAAW,oBAAoB,aAAa,IAAI,WAAW,cAAc,OAAO,IAAI,2DAA2D,WAAW,gBAAgB,SAAS,IAAI,WAAW,eAAe,SAAS,IAAI,WAAW,uBAAuB,QAAQ,IAAI,gCAAgC,WAAW,iBAAiB,QAAQ,IAAI,WAAW,sBAAsB,QAAQ,IAAI,WAAW,WAAW,MAAM,OAAO,MAAM,IAAI,WAAW,cAAc,UAAU,MAAM,IAAI,WAAW,eAAe,WAAW,MAAM,IAAI,mBAAmB,WAAW,gBAAgB,aAAa,IAAI;AAAA;AAAA,SAE75B,aAAa,WAAW,EAAE;AACjC,QAAM,cAAc,WAAW,QAAQ;AAAA,IACrC,MAAM,aAAa,WAAW,QAAQ;AAAA,IACtC,MAAM,aAAa,WAAW,QAAQ;AAAA,IACtC,cAAc,QAAQ;AAAA;AAAA,IAEtB,YAAY,OAAO,YAAY,KAAK,OAAO;AAC7C,MAAI;AACF,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,IACA,EAAE;AAAA,MACA;AAAA,MACA,OAAO,cAAc,KAAK;AAAA,MAC1B,WAAW,gBAAgB,YAAY;AAAA;AAAA,MAEvC,aAAaR,KAAI;AAAA,MACjB,aAAa,eAAe;AAAA,MAC5B,oBAAoB,eAAe;AAAA,MACnC,kBAAkB,eAAe;AAAA,MACjC;AAAA,MACA,OAAO;AAAA,QACL,YAAY,UAAU,aAAa;AAAA,QACnC,mBAAmB,WAAW,oBAAoB;AAAA,MACpD;AAAA,MACA,OAAO;AAAA,QACL,iBAAiB,gBAAgB,kBAAkB;AAAA,QACnD,YAAY,UAAUS,cAAa;AAAA,MACrC;AAAA,MACA;AAAA,MACA,QAAQT,KAAI,OAAO;AAAA;AAAA,MAEnB,aAAaA,KAAI,YAAY;AAAA,MAC7B;AAAA,MACA,aAAa,YAAY,cAAc;AAAA,MACvC,YAAY,YAAY,aAAa;AAAA,MACrC,oBAAoB,WAAW,kCAAAU,UAAU;AAAA,MACzC;AAAA,MACA,cAAc,WAAW,eAAe;AAAA,MACxC,mBAAmB,WAAW,oBAAoB;AAAA;AAAA,MAElD,WAAW,UAAU,SAAS,MAAMV,KAAI,UAAU,IAAI;AAAA,MACtD,YAAY,WAAW,SAAS,aAAa;AAAA,MAC7C,cAAc,gBAAgB,eAAe;AAAA,MAC7C,QAAQA,KAAI,SAAS;AAAA,MACrB,GAAG,QAAQ;AAAA,IACb,CAAC;AAAA,EACH,SAASF,SAAQ;AACf,QAAI,aAAa,cAAc,KAAK;AACpC,YAAQ,IAAI,iDAAiD,GAAG,QAAQ,IAAI,KAAK,GAAG,QAAQ,IAAI;AAAA,MAC9F,SAAS,OAAO,WAAW,aAAa,QAAQ,SAAS,IAAI;AAAA,MAC7D,aAAa;AAAA,MACb,OAAO;AAAA,QACL,GAAG;AAAA;AAAA,QAEH,WAAW,YAAY,WAAW,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAAA;AAAA,QAE3D,SAAS,YAAY,SAAS,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAAA;AAAA,QAEvD,cAAc,YAAY,cAAc;AAAA,UACtC,CAAC,MAAM,EAAE,SAAS;AAAA,QACpB;AAAA;AAAA,QAEA,aAAa,YAAY,aAAa;AAAA,UACpC,CAAC,MAAM,EAAE,SAAS;AAAA,QACpB;AAAA;AAAA,QAEA,aAAa,YAAY,aAAa;AAAA,UACpC,CAAC,MAAM,EAAE,SAAS;AAAA,QACpB;AAAA;AAAA,QAEA,OAAO,YAAY,OAAO,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAAA;AAAA,QAEnD,OAAO,YAAY,OAAO,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAAA;AAAA,QAEnD,eAAe,YAAY,eAAe;AAAA,UACxC,CAAC,MAAM,EAAE,SAAS;AAAA,QACpB;AAAA;AAAA,QAEA,MAAM,YAAY,MAAM,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAAA,MACnD;AAAA,MACA;AAAA;AAAA,MAEA,aAAaE,KAAI,YAAY;AAAA,MAC7B,OAAOF;AAAA,IACT,CAAC,GAAG,QAAQ,IAAI,KAAK,GAAG,QAAQ,KAAK,CAAC;AAAA,EACxC;AACF,GAl3BoG;AA1IpG,IA4/BG,yBAAyB,wBAACE,MAAK,UAAU;AAC1C,MAAI,YAAY,IAAI,WAAW,aAAa;AAAA,IAC1C,OAAOA,KAAI,MAAM;AAAA,IACjB,OAAO,UAAU,CAAC,SAAS;AACzB,mBAAa;AAAA,IACf;AAAA,EACF,CAAC,EAAE,WAAW;AAAA,IACZ,OAAOA,KAAI,MAAM,SAAS;AAAA,EAC5B,CAAC;AACD,MAAIA,KAAI,MAAM,SAAS,QAAQ;AAC7B,iBAAa;AACb,aAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,QAAQ,QAAQ,KAAK;AACjD,UAAI,OAAOA,KAAI,MAAM,QAAQ,CAAC,GAAG,aAAa,UAAU,IAAI,GAAG,aAAa,QAAQ,IAAI,GAAG,UAAU,SAAS,aAAaA,KAAI,MAAM,QAAQ,CAAC,EAAE,GAAG,IAAI;AACvJ,oBAAc,aAAa,uBAAuB,aAAa,WAAW,EAAE,aAAa,CAAC;AAAA,GAC7F,QAAQ,IAAI,GAAG,aAAa;AAAA,MACzB,aAAa,GAAG,aAAa,WAAW,EAAE,aAAa,CAAC;AAAA,GAC3D,QAAQ;AAAA,IACP;AACA,iBAAa;AAAA,EACf;AACA,SAAO,SAAS,QAAQ,GAAG;AAC7B,GArB4B;AA5/B5B,IAihCG,YAAY,wBAACA,MAAK,SAAS,UAAU;AACtC,MAAI,MAAMA,KAAI,SAAS;AACvB,MAAI,CAAC,IAAI,OAAQ,QAAO,YAAY;AACpC,MAAI,UAAUA,KAAI,UAAU,EAAE,uBAAuB,UAAU;AAC/D,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAC9B,cAAU,OAAO,CAAC,KAAK,OAAO,IAAI,QAAQ,UAAU;AACtD,SAAO,0BAA0B,QAAQ,UAAU,YAAY,OAAO,IAAI,QAAQ,UAAU;AAC9F,GAPe;AAjhCf,IAwhCG,wBAAwB,wBAACA,SAAQ;AAClC,MAAI,UAAUA,KAAI,UAAU,EAAE;AAC9B,EAAAA,KAAI,OAAO,KAAK,MAAM;AACtB,MAAI,WAAWA,KAAI,MAAM,OAAO,QAAQ,YAAY,IAAI,SAASA,KAAI,QAAQ,mBAAmB,OAAO,KAAK,KAAK,KAAK,0GAA0G;AAChO,sBAAoB,OAAO,KAAK,KAAK,MAAM;AAAA,IACzC;AAAA;AAEF,MAAI,gBAAgB;AAAA;AAEpB,MAAIA,KAAI,MAAM,eAAe,UAAU,CAACA,KAAI,MAAM,OAAO;AACvD,QAAI,SAASA,KAAI,MAAM,cAAc,KAAK,OAAO,IAAI,UAAU;AAC/D,qBAAiB;AAAA,eACN,MAAM;AACjB,aAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,cAAc,QAAQ,KAAK;AACvD,UAAI,MAAMA,KAAI,MAAM,cAAc,CAAC,EAAE;AACrC,uBAAiB;AAAA,EACrB,YAAY,GAAG,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA;AAAA,IAEhD;AACA,qBAAiB;AAAA;AAAA,EAEnB;AACA,EAAAA,KAAI,UAAU,UAAU,iBAAiB;AACzC,MAAI,WAAW,QAAQ;AAAA,IACrB,CAAC,CAACA,KAAI,MAAM,SAAS;AAAA,IACrB,CAAC,CAACA,KAAI,MAAM,OAAO;AAAA,IACnB;AAAA,EACF;AACA,sBAAoB,SAAS,MAAM,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAKvD,MAAI,YAAY;AAChB,WAAS,CAAC,MAAM,OAAO,KAAK,OAAO,QAAQ,OAAO,MAAM,GAAG;AACzD,iBAAa,QAAQ,IAAI,MAAMA,KAAI,OAAO,eAAe,SAAO,aAAa,QAAQ,aAAa,IAAI,CAAC;AACvG,QAAI,UAAU,WAAW,IAAI;AAC7B,aAAS,YAAY,aAAa,QAAQ,OAAO,OAAO,aAAa,sBAAsB,SAAS,WAAW,QAAQ,aAAa,aAAa,eAAe,QAAQ,YAAY,aAAa,uDAAuD,QAAQ,EAAE;AAAA,IAClQ,SAAS,YAAY,aAAa,aAAa,QAAQ,GAAG;AAAA;AAE1D,aAAS,CAAC,QAAQ,KAAK,KAAK,OAAO,QAAQ,OAAO;AAChD,iBAAW,SAAS,WAAW,SAAS,WAAW,SAAS,aAAa,SAAS,MAAM,eAAe,KAAK;AAAA;AAE9G,aAAS,UAAU,aAAa,qBAAqB,QAAQ,GAAG;AAAA,IAChE,aAAa;AAAA,GACd,aAAa;AAAA,EACd;AACA,MAAI,aAAa,CAAC,CAACA,KAAI,MAAM,SAAS,KAAK,OAAO,GAAG,mBAAmB,QAAQ,SAAS,OAAO,KAAK,QAAQ,MAAM,EAAE,KAAK,GAAG,IAAI,MAAM;AACvI,eAAa;AAAA;AAAA,EAEb,WAAW,sBAAsBA,KAAI,UAAU,KAAK,IAAI,WAAW,iBAAiB,QAAQ,IAAI,WAAW,sBAAsB,QAAQ,IAAI,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAS/JA,KAAI,MAAM,SAAS,WAAW,aAAa;AAAA,IAC1CA,KAAI,MAAM,eAAe,WAAW,aAAa;AAAA,IACjD,aAAa,SAAS,SAASA,KAAI,MAAM,OAAO,WAAW,aAAa,WAAWA,KAAI,MAAM,MAAM,IAAI,CAAC,GAAG,MAAM,KAAK,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI;AAAA,IAChK,aAAa,GAAG,aAAa,WAAW,EAAE,gBAAgB,QAAQ,UAAU,MAAMA,KAAI,MAAM,SAAS,WAAW,aAAa;AAAA,IAC7H,aAAa,QAAQ,cAAcA,IAAG,GAAGA,KAAI,MAAM,OAAO,WAAW,aAAa,sBAAsBA,KAAI,MAAM,MAAM,IAAI,CAAC,GAAG,MAAM,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;AAAA,IAC/J,aAAa,uBAAuBA,IAAG,GAAG,cAAc,aAAa;AAAA;AAAA,IAErE,YAAY,MAAM,aAAa,mBAAmB;AAAA,IAClD,UAAUA,IAAG;AACf,MAAI,cAAc,oBAAoBA,IAAG;AACzC,EAAAA,KAAI,cAAc;AAClB,MAAI,KAAK;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,EACF,EAAE;AAAA,IACA,KAAAA;AAAA,IACA,kBAAkBA,KAAI,UAAU,EAAE,QAAQ;AAAA,IAC1C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,mBAAmBA,KAAI,UAAU,QAAQ,oBAAoB;AAAA,IAC7D,cAAc,WAAW,eAAe;AAAA,IACxC,mBAAmB,WAAW,oBAAoB;AAAA,IAClD,GAAG,QAAQ;AAAA,EACb,CAAC;AACD,SAAO,SAAS,IAAI,GAAG,KAAE,GAAG;AAC9B,GAzF2B;AAxhC3B,IAinCG,sBAAsB,wBAACA,SAAQ;AAChC,MAAI,QAAQA,KAAI,OAAO,YAAY,IAAI,UAAUA,KAAI,UAAU,EAAE,cAAc,mBAAmB,QAAQ,SAAS,OAAO,KAAK,QAAQ,MAAM,EAAE,KAAK,GAAG,IAAI,MAAM,IAAI,WAAW,CAAC,CAACA,KAAI,MAAM,OAAO;AACnM,eAAa,8DAA8D,WAAW,YAAYA,KAAI,MAAM,KAAK,IAAI,WAAW,kBAAkBA,KAAI,MAAM,aAAa,IAAI,WAAW,UAAUA,KAAI,MAAM,KAAK,IAAI,WAAW,kBAAkBA,KAAI,MAAM,WAAW,IAAI,WAAW,iBAAiB,QAAQ,IAAI,WAAW,sBAAsB,QAAQ,IAAI,mBAAmB;AAAA,GAClX,aAAa,UAAUA,KAAI,MAAM,OAAO,KAAK,OAAO,KAAKA,KAAI,MAAM,aAAa,KAAK,OAAO,IAAI,WAAW,EAAE,uCAAuC,aAAa,IAAI,aAAa,aAAa;AAAA;AAEhM,MAAIQ,UAAS,aAAa;AAAA,IACxB,SAAS;AAAA,IACT,OAAO,MAAM;AAAA,IACb,OAAO,wBAAC,SAAS;AACf,mBAAa;AAAA,IACf,GAFO;AAAA,EAGT,CAAC,GAAG,gBAAgB,6BAAM;AACxB,QAAI,CAAC,MAAM,eAAe,UAAU,CAAC,SAAU,QAAO;AACtD,QAAI,iBAAiB,IAAI,SAAS,MAAM,eAAe,KAAK,OAAO,IAAI,UAAU;AACjF,sBAAkB;AAAA,eACP,MAAM;AACjB,QAAI,WAAW,aAAa;AAAA,MAC1B,SAAS;AAAA,MACT,OAAO,MAAM;AAAA,MACb,OAAO,wBAAC,SAAS;AACf,0BAAkB;AAAA,MACpB,GAFO;AAAA,IAGT,CAAC,EAAE,iBAAiB;AAAA,MAClB,OAAO,MAAM,eAAe;AAAA,MAC5B,MAAM;AAAA,IACR,CAAC;AACD,QAAI,MAAM,eAAe,UAAU,MAAM;AACvC,eAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAAK;AACnD,YAAI,KAAK,MAAM,cAAc,CAAC,EAAE,IAAI,UAAU,SAAS,aAAa,GAAG,IAAI;AAC3E,0BAAkB;AAAA,EACxB,YAAY,EAAE,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA,GAChD,QAAQ;AAAA,MACL;AACF,WAAO,SAAS,QAAQ,GAAG,kBAAkB;AAAA,GAC9C;AAAA,EACD,GAxBoB;AAyBpB,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKiB,QAAQ,YAAY,aAAa,QAAQ;AACvE,MAAI,eAAe,YAAY,MAAM,eAAe,SAAS,wBAAwB;AACrF,MAAIR,KAAI,MAAM;AACZ,aAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,MAAM,QAAQ,KAAK;AAC/C,UAAI,UAAUA,KAAI,MAAM,MAAM,CAAC,GAAG,WAAW,GAAG,QAAQ,OAAO,IAAI,WAAW,EAAE,WAAW,CAAC;AAAA;AAE5F,UAAI,aAAa,0BAA0B,UAAU,OAAO,GAAG;AAC7D,qBAAa,MAAM,QAAQ;AAAA,kDACe,cAAc,IAAI,4BAA4B,QAAQ,kBAAkB;AAAA;AAAA;AAGlH,YAAI,uBAAuBQ,QAAO,eAAe;AAAA,UAC/C,OAAO,MAAM,aAAa;AAAA,UAC1B,MAAM;AAAA,QACR,CAAC;AACD,YAAI,MAAM,aAAa;AACrB,mBAAS,KAAK,GAAG,KAAK,MAAM,YAAY,QAAQ,MAAM;AACpD,gBAAI,eAAe,MAAM,YAAY,EAAE,GAAG,UAAU,qBAAqB;AAAA,cACvE,aAAa,GAAG;AAAA,YAClB;AACA,yBAAa,yBAAyB,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,EAAE;AAAA,GAC3G,QAAQ;AAAA,UACD;AACF,6BAAqB,QAAQ,GAAG,aAAa,cAAc,IAAI,sBAAsB,YAAY,SAAS,QAAQ,kBAAkB;AAAA,MACtI,MAAO,cAAa;AACpB,mBAAa;AAAA,IACf;AACF,eAAa;AAAA;AAAA;AAAA,IAGX,cAAc,IAAI,QAAQ,kBAAkB;AAAA;AAAA,GAE7C,aAAa,gCAAgC,cAAc,IAAI;AAAA;AAAA,IAE9D,QAAQ,eAAe;AAAA;AAEzB,MAAI,sBAAsBA,QAAO,eAAe;AAAA,IAC9C,OAAO,MAAM,aAAa;AAAA,IAC1B,MAAM;AAAA,EACR,CAAC;AACD,MAAI,aAAa;AAAA;AAAA,GAEhB,MAAM,aAAa,QAAQ;AAC1B,iBAAa;AAAA;AAEb,aAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,UAAI,eAAe,MAAM,YAAY,CAAC,GAAG,UAAU,oBAAoB;AAAA,QACrE,aAAa,GAAG;AAAA,MAClB;AACA,mBAAa,yBAAyB,YAAY,YAAY,IAAI,WAAW,EAAE,iBAAiB,CAAC;AAAA,+CACxD,QAAQ;AAAA,IACnD;AAAA,EACF;AACA,sBAAoB,QAAQ,GAAG,aAAa,cAAc,IAAI;AAAA,qBAC3C,YAAY,YAAY,QAAQ,kBAAkB;AACrE,MAAI,QAAQ,wBAAC,MAAM,OAAO,KAAK,aAAa,IAAI,EAAE,IAAtC;AACZ,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF,EAAE;AAAA,IACA,aAAaR,KAAI,UAAU,EAAE,QAAQ;AAAA,IACrC;AAAA,IACA;AAAA,IACA,SAASA,KAAI,MAAM,OAAO,IAAI,KAAK;AAAA,IACnC,eAAeA,KAAI,MAAM,eAAe,IAAI,KAAK;AAAA,IACjD,OAAOA,KAAI,MAAM,OAAO,IAAI,KAAK;AAAA,IACjC,eAAeA,KAAI,MAAM,aAAa,IAAI,KAAK;AAAA,IAC/C,cAAc,WAAW,eAAe;AAAA,IACxC,mBAAmB,WAAW,oBAAoB;AAAA,IAClD,GAAG,QAAQ;AAAA,EACb,CAAC;AACH,GAjHyB;AAoHzB,IAAI,cAAc,wBAAC,OAAO,cAAc,YAAY,QAAQ,IAA1C;AAAlB,IAAgE,gBAAgB,wBAACA,MAAK,OAAO,WAAW,WAAW,UAAO;AACxH,MAAI,YAAY,IAAI,iBAAiBA,KAAI,YAAY,WAAW,CAAC,CAACA,KAAI,MAAM,OAAO;AACnF,eAAa,aAAa;AAAA;AAE1B,MAAI,YAAY,OAAO,KAAK,MAAM,IAAI,GAAG,QAAQ,uCAAuCA,KAAI,OAAO,SAAS,oBAAoB,OAAK,KAAK,CAAC;AAAA,GAC1I,aAAa,UAAU,SAAS,CAAC,CAAC,MAAM,MAAM,SAAS,CAAC,CAAC,MAAM,sBAAsB,KAAK,CAAC,MAAM,EAAE,KAAK,KAAKA,KAAI,MAAM,SAAS;AACjI,iBAAe,aAAa;AAC5B,MAAI,UAAU,UAAU,OAAO,YAAY,iBAAiB,aAAa,KAAK,SAAS;AAAA;AAAA,MAEnF,SAAS,MAAM,IAAI,OAAO;AAC9B,eAAa,YAAY,YAAY,CAAC,QAAQ,IAAI,oBAAoB,YAAY,OAAO,UAAU,IAAI,YAAY,0BAA0B,SAAS,IAAI,UAAU;AAAA,IAClK;AAAA,IACA,YAAY,UAAU,OAAO;AAAA,EAC/B,IAAI,gDAAgD,WAAW,cAAc,IAAI,qCAAqC,yBAAyB,gBAAgB,UAAU,WAAW,aAAa,0CAA0C,aAAa,aAAa;AACrQ;AACE,QAAI,oBAAoB;AACxB,aAAS,OAAO,OAAO,KAAKA,KAAI,UAAU,SAAS;AACjD,2BAAqB,KAAK,GAAG,gBAAgB,GAAG;AAClD,iBAAa;AAAA,EACf;AACA,SAAO,aAAa;AAAA,GACnB;AACH,GAtBgF;AAAhF,IAsBG,wBAAwB,wBAACA,MAAK,UAAU;AACzC,MAAI,WAAW,CAAC,CAACA,KAAI,MAAM,OAAO,QAAQ,SAAS,CAAC,CAACA,KAAI,SAAS,qBAAqB,QAAQ,YAAY;AAAA,IACzG,MAAM;AAAA;AAAA,IAENA,KAAI;AAAA,EACN;AACA,cAAY;AAAA,IACV;AAAA,MACE,SAAS,MAAM;AAAA,IACjB;AAAA,IACA;AAAA,EACF;AACA,MAAI,YAAY,sKAAsK,YAAY,2BAA2B,QAAQ,IAAI,YAAY,6CAA6C,QAAQ,IAAI,YAAY,mCAAmC,QAAQ,IAAI,YAAY,qBAAqB,QAAQ,IAAI,YAAY,iBAAiB,MAAM,IAAI;AAAA;AAE7b,EAAAA,KAAI,MAAM,SAAS,WAAW,aAAa;AAAA,IACzC,aAAa,GAAGA,KAAI,MAAM,SAAS,KAAK,OAAO,IAAI,UAAU,EAAE;AACjE,MAAI,aAAa,UAAU,SAAS,CAAC,CAAC,MAAM,MAAM,SAAS,CAAC,CAAC,MAAM,sBAAsB,KAAK,CAAC,MAAM,EAAE,KAAK;AAC5G,SAAO,YAAY,cAAcA,KAAI,MAAM,SAAS,UAAU,aAAa,cAAcA,MAAK,OAAO,SAAS,GAAG,aAAa,uBAAuBA,IAAG,GAAG,aAAa,wBAAwB,aAAa,kBAAkB,cAAcA,MAAK,OAAO,WAAW,IAAE,CAAC,MAAM,aAAa,UAAUA,IAAG,GAAG;AAAA,IACxS;AAAA,IACA;AAAA,EACF,EAAE;AAAA,IACA,KAAAA;AAAA,IACA,SAAS,MAAM,UAAU,KAAK,MAAM;AAAA,IACpC;AAAA,IACA;AAAA;AAAA,IAEA,KAAKA,KAAI,SAAS,qBAAqB,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,IACtD,OAAOA,KAAI;AAAA,IACX,WAAWA,KAAI;AAAA,IACf,OAAO,MAAM;AAAA,IACb,UAAU,WAAW,WAAW;AAAA,IAChC,cAAc,WAAW,eAAe;AAAA,IACxC,mBAAmB,WAAW,oBAAoB;AAAA,IAClD,OAAO,WAAWA,KAAI,MAAM,OAAO,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI;AAAA,IAC5D,kBAAkB;AAAA,EACpB,CAAC;AACH,GApC2B;AAuC3B,IAAI,4BAA4B,wBAAC,QAAQ,OAAO,SAAS;AACvD,MAAI,OAAO,UAAU,cAAc,kBAAkB,KAAM;AAC3D,MAAI,aAAa,MAAM,EAAG,QAAO,MAAM;AACvC,MAAI,WAAW;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACN,SAAS,CAAC;AAAA,IACZ;AAAA,EACF;AACA,MAAI,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,WAAW,UAAU,CAAC,MAAM,cAAc,UAAU,CAAC,MAAM,aAAa;AACzG,WAAO,oBAAoB,UAAU,SAAS,KAAK,CAAC,cAAc;AAChE,UAAI;AACF,eAAO,UAAU,QAAQ,IAAI,cAAc,KAAK,UAAU,QAAQ,OAAO,gBAAgB,YAAY,GAAG,UAAU,MAAM;AAAA,IAC5H,CAAC,KAAK,SAAS,QAAQ,IAAI,cAAc,KAAK,SAAS,QAAQ,OAAO,gBAAgB,YAAY,GAAG,MAAM,SAAS,MAAM;AAC9H,GAdgC;AAiBhC,IAAI,YAAY;AAAA,EACd,KAAK,IAAI;AACP,OAAG,KAAK,OAAO,EAAE;AAAA,EACnB;AAAA,EACA,QAAQ,IAAI,SAAS;AACnB,OAAG,KAAK,UAAU,IAAI,OAAO;AAAA,EAC/B;AAAA,EACA,MAAM,IAAI;AACR,OAAG,KAAK,QAAQ,EAAE;AAAA,EACpB;AAAA,EACA,MAAM,IAAI,MAAM,QAAQ;AACtB,OAAG,KAAK,QAAQ,IAAI,MAAM,MAAM;AAAA,EAClC;AACF;AAbA,IAaG,WAAW,MAAM;AAAA,EAzwKpB,OAywKoB;AAAA;AAAA;AAAA,EAClB,YAAY,KAAK,MAAM,OAAO,QAAQ;AACpC,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,YAAY,IAAI,MAAM,WAAW,KAAK,WAAW,IAAI,SAAS,KAAK,GAAG,GAAG,KAAK,aAAa,IAAI,WAAW,KAAK,GAAG,GAAG,KAAK,QAAQ,IAAI,MAAM,KAAK,GAAG,GAAG,KAAK,YAAY,IAAI,UAAU,KAAK,GAAG,GAAG,KAAK,cAAc,IAAI,YAAY,KAAK,GAAG,GAAG,KAAK,gBAAgB,IAAI,cAAc,KAAK,GAAG,GAAG,KAAK,YAAY,IAAI,UAAU,KAAK,GAAG,GAAG,KAAK,cAAc,IAAI,YAAY,KAAK,GAAG,GAAG,KAAK,eAAe,IAAI,aAAa,KAAK,GAAG,GAAG,KAAK,OAAO,IAAI,KAAK,KAAK,GAAG,GAAG,KAAK,gBAAgB,IAAI,eAAe,KAAK,aAAa,IAAI,YAAY,KAAK,OAAO,IAAI,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AAAA,EAC3rB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK,MAAM,UAAU;AACnB,WAAO,OAAO,SAAS,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,QAAQ,IAAI,KAAK,WAAW,MAAM,IAAI,MAAM,QAAK,KAAK,IAAI;AAAA,MAC3G,IAAI,gBAAgB,WAAW,KAAK,WAAW,IAAI,EAAE;AAAA,IACvD,KAAK,OAAO,QAAQ,aAAa,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,QAAQ;AAAA,EAC7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,KAAK,MAAM;AACT,WAAO,OAAO,SAAS,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,WAAW,MAAM,IAAI,MAAM,QAAK,KAAK,IAAI;AAAA,MACjG,IAAI,gBAAgB,WAAW,KAAK,WAAW,IAAI,EAAE;AAAA,IACvD,KAAK,OAAO,QAAQ,aAAa,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAAA,EACnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,KAAK,MAAM;AACT,WAAO,OAAO,SAAS,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,WAAW,MAAM,IAAI,MAAM,QAAK,KAAK,IAAI;AAAA,MACjG,IAAI,gBAAgB,WAAW,KAAK,WAAW,IAAI,EAAE;AAAA,IACvD,KAAK,OAAO,QAAQ,aAAa,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAAA,EACnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,QAAQ,OAAO,MAAM,UAAU;AAC7B,WAAO,OAAO,SAAS,IAAI,IAAI,KAAK,IAAI;AAAA,MACtC;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,WAAW,MAAM,IAAI,MAAM,QAAK,KAAK,IAAI;AAAA,MAChD,IAAI,gBAAgB,WAAW,KAAK,WAAW,IAAI,EAAE;AAAA,IACvD,KAAK,OAAO,QAAQ,aAAa,OAAO,KAAK,UAAU,IAAI,IAAI,KAAK,IAAI,QAAQ,OAAO,MAAM,QAAQ;AAAA,EACvG;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,KAAK;AACP,WAAO,KAAK,KAAK;AAAA,EACnB;AACF;AAjFA,IAiFG,wBAAwB,wBAAC,WAAW;AACrC,MAAI,UAAU,OAAO,UAAU,aAAa,CAAC,MAAM,IAAI;AACvD,SAAO,eAAe,IAAI,SAAS;AACjC,QAAI,OAAO,WAAW,UAAU;AAC9B,UAAI,QAAQ,SAAS,WAAW,CAAC;AACjC,UAAI,UAAU,MAAM,UAAU,MAAM,UAAU,MAAM,UAAU;AAC5D,YAAI;AACF,oBAAU,KAAK,MAAM,OAAO;AAAA,QAC9B,QAAQ;AAAA,QACR;AAAA,UACG,iBAAgB,OAAO,IAAI,UAAU,CAAC,UAAU,YAAY,SAAS,UAAU,OAAK,YAAY,UAAU,UAAU,QAAK,YAAY,WAAW,UAAU;AAAA,IACjK;AACA,QAAI;AACF,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,OAAO,QAAQ,CAAC,EAAE,IAAI,OAAO;AACjC,YAAI,gBAAgB,YAAY,OAAO,MAAM,OAAO,SAAS,OAAQ,QAAO;AAAA,MAC9E;AACF,WAAO;AAAA,EACT;AACF,GAnB2B;AAjF3B,IAoGG,yBAAyB,wBAAC,qBAAqB;AAChD,MAAI,mBAAmB,wBAAC,IAAI,SAAS;AACnC,QAAI,gBAAgB;AAClB,aAAO,KAAK,KAAK,CAAC,UAAU,iBAAiB,IAAI,KAAK,CAAC;AACzD,QAAI,OAAO,SAAS,IAAI,EAAG,QAAO,GAAG,KAAK,KAAK,SAAS,CAAC;AACzD,QAAI,SAAS,OAAQ;AACrB,QAAIW,QAAO,wBAAC,UAAU;AACpB,UAAI,kBAAkB,MAAM,KAAK,MAAM;AACrC,eAAO,GAAG;AAAA,UACR,IAAI,gBAAgB,WAAW,kBAAkB,KAAK,EAAE;AAAA,QAC1D;AACF,UAAI,OAAO,SAAS,SAAU,QAAO,GAAG,KAAK,KAAK,UAAU,KAAK,CAAC;AAClE,SAAG,KAAK,KAAK;AAAA,IACf,GAPW;AAQX,QAAI,OAAO,MAAM,QAAQ;AACvB,aAAO,KAAKA,MAAK,IAAI;AACvB,QAAI,OAAO,KAAK,KAAK;AACrB,QAAI,gBAAgB;AAClB,cAAQ,YAAY;AAClB,YAAI,QAAQ,MAAM;AAClB,YAAI,kBAAkB,MAAM,KAAK,MAAM;AACrC,iBAAO,GAAG;AAAA,YACR,IAAI,gBAAgB,WAAW,kBAAkB,KAAK,EAAE;AAAA,UAC1D;AACF,YAAIA,MAAK,MAAM,KAAK,GAAG,CAAC,MAAM;AAC5B,yBAAe,SAAS,KAAM,CAAAA,MAAK,KAAK;AAAA,MAC5C,GAAG;AACL,QAAIA,MAAK,KAAK,KAAK,GAAG,CAAC,KAAK,KAAM,UAAS,SAAS,KAAM,CAAAA,MAAK,KAAK;AAAA,EACtE,GA3BuB;AA4BvB,SAAO;AACT,GA9B4B;AAiC5B,IAAI,gBAAgB;AAApB,IAAsC,oBAAoB,wBAAC,SAAS;AAClE,MAAI,QAAQ,cAAc,KAAK,IAAI;AACnC,MAAI,CAAC,MAAO,QAAO,CAAC,IAAI;AACxB,MAAI,SAAS,CAAC,GAAG,OAAO,KAAK,MAAM,GAAG,MAAM,KAAK,GAAG,QAAQ,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,GAAG,OAAO,KAAK,MAAM,MAAM,QAAQ,MAAM,CAAC,EAAE,MAAM;AAClI,SAAO,KAAK,KAAK,MAAM,GAAG,EAAE,CAAC,GAAG,OAAO,KAAK,OAAO,KAAK;AACxD,WAAS,YAAY,kBAAkB,IAAI;AACzC,iBAAa,SAAS,WAAW,IAAI,KAAK,OAAO,KAAK,KAAK,MAAM,GAAG,EAAE,IAAI,QAAQ,GAAG,OAAO,KAAK,OAAO,QAAQ,QAAQ;AAC1H,SAAO;AACT,GAR0D;AAA1D,IAQG,eAAe,wBAAC,WAAW,OAAO,UAAU,YAAY,WAAW,SAAS,OAAO,SAAS,MAAM,yBAAyB,OAAO,OAAO,SAAS,WAAnI;AARlB,IAQgK,mBAAmB;AAAA,EACjL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AACP;AAhBA,IAgBG,YAAY,wBAACX,SAAQ;AACtB,MAAI,CAACA,KAAI,OAAO,OAAO,CAACA,KAAI,OAAO,aAAc;AACjD,MAAI,SAAS,CAAC,GAAG,MAAM,wBAAC,OAAO,YAAY;AACzC,WAAO,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,EAAE,MAAM,MAAM,MAAM,OAAO,MAAM,IAAI,EAAE,MAAM,MAAM,IAAI,WAAW,OAAO,MAAM,IAAI,IAAI;AAAA,MAC3H,CAAC,MAAM,MAAM,GAAG;AAAA,IAClB;AAAA,EACF,GAJuB,QAIpB,OAAOA,KAAI;AACd,WAAS,SAASA,KAAI,OAAO,SAAS;AACpC,QAAI,OAAO,MAAM,WAAW,WAAY;AACxC,QAAI,SAAS,MAAM;AACnB,QAAI,WAAW,SAAS,MAAM,MAAM,IAAI,MAAM,QAAQ,WAAW,QAAQ,MAAM,KAAK,WAAW,MAAM,KAAK,SAAS,CAAC,MAAM,MAAM,EAAE,UAAU;AAC1I;AACF,QAAI,WAAW,OAAO;AACpB,YAAM,MAAM,IAAI,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,MAAM,OAAO,QAAQ,QAAQ,MAAM,MAAM,SAASA,KAAI,MAAM;AAAA,MAChHA,KAAI,SAAS,uBAAuB,sBAAsBA,MAAK,KAAK,IAAI,MAAM,MAAM,SAAS,MAAM,UAAU,MAAM;AACnH;AAAA,IACF;AACA,QAAI,UAAU,UAAUA,KAAI,OAAO,aAAa,sBAAsBA,MAAK,KAAK,IAAI,CAAC,YAAY,WAAW,SAAS,OAAO,KAAK,WAAW,sBAAsBA,MAAK,KAAK;AAAA,MAC1K;AAAA,IACF;AACA,aAAS,QAAQ,kBAAkB,MAAM,IAAI;AAC3C;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAAA,EACJ;AACA,SAAO;AACT,GA9Be;AAhBf,IA8CG,cAAc,wBAAC,IAAI,OAAO;AAC3B,MAAI,CAAC,GAAI,QAAO;AAChB,WAAS,OAAO,OAAO,KAAK,EAAE;AAC5B,QAAI,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG;AACvB,UAAI,CAAC,GAAG,GAAG,GAAG;AACZ,WAAG,GAAG,IAAI,GAAG,GAAG;AAChB;AAAA,MACF;AACA,UAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG;AACtB,YAAI,OAAO,GAAG,GAAG,KAAK,cAAc,GAAG,GAAG,aAAa,UAAU;AAC/D,aAAG,GAAG,IAAI,GAAG,GAAG;AAChB;AAAA,QACF;AACA,WAAG,GAAG,IAAI;AAAA,UACR,GAAG,GAAG,GAAG;AAAA,UACT,GAAG,GAAG,GAAG;AAAA,QACX;AAAA,MACF;AAAA,IACF;AACF,SAAO;AACT,GApBiB;AA9CjB,IAkEG,aAAa;AAAA,EACd,GAAG;AAAA,EACH,MAAM;AAAA,EACN,SAAS;AAAA,IACP,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,IACrB;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,GAAG,mBAAmB;AAAA,IACtB,SAAS,qBAAqB;AAAA,IAC9B;AAAA;AAAA;AAAA,EAGF;AAAA,EACA,OAAOA,MAAK;AACV,WAAO,CAAC,SAAS,aAAa;AAC5B,UAAI,OAAO,MAAM;AACf,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AACF,UAAIA,KAAI,QAAQ,GAAG,OAAO,WAAW,UAAU;AAC7C,YAAI,CAAC,gBAAgB,OAAO;AAC1B,gBAAM,IAAI,MAAM,8BAA8B;AAChD,kBAAU,SAAS,OAAO;AAAA,MAC5B;AACA,UAAI,oBAAoB,wBAAC,UAAU,EAAE,YAAY,MAAG,IAAI,CAAC,MAAM;AAC7D,YAAI,eAAe,CAAC,GAAG,MAAM,CAAC;AAC9B,iBAAS,CAAC,MAAM,KAAK,KAAK,OAAO,QAAQ,QAAQ;AAC/C,cAAI,+BAA+B;AACjC,gBAAI,CAAC,MAAO;AACZ,qBAAS,CAAC,QAAQ,KAAK,KAAK,OAAO,QAAQ,KAAK;AAC9C,kBAAI,EAAE,CAAC,SAAS,EAAE,UAAU,oBAAoB;AAC9C,oBAAI,iBAAiB,SAAS;AAC5B,gCAAc,aAAa,IAAI,MAAM,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI;AAAA,oBACjE,MAAM,KAAK,CAAC,YAAY;AACtB,yCAAmB,aAAa,aAAa,IAAI,EAAE,MAAM,IAAI,UAAU,aAAa,OAAO,MAAM,aAAa,IAAI,EAAE,MAAM,IAAI;AAAA,oBAChI,CAAC;AAAA,kBACH;AACA;AAAA,gBACF;AACA,kBAAE,iBAAiB,aAAa,CAAC,aAAa,KAAK,MAAM,aAAa,IAAI,MAAM,aAAa,IAAI,IAAI,CAAC,IAAI,aAAa,IAAI,EAAE,MAAM,IAAI;AAAA,cACzI;AAAA,UACJ,OAAO;AACL,gBAAI,CAAC,MAAO;AACZ,gBAAI,iBAAiB,SAAS;AAC5B,4BAAc,aAAa,IAAI,MAAM,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI;AAAA,gBACjE,MAAM,KAAK,CAAC,YAAY;AACtB,qCAAmB,aAAa,aAAa,IAAI,IAAI;AAAA,gBACvD,CAAC;AAAA,cACH;AACA;AAAA,YACF;AACA,gBAAI,EAAE,iBAAiB,UAAW;AAClC,yBAAa,IAAI,IAAI;AAAA,UACvB;AACF,eAAO,YAAY,QAAQ,IAAI,GAAG,EAAE,KAAK,MAAM,YAAY,IAAI;AAAA,MACjE,GA/BwB,sBA+BrB,QAAQ,OAAO,WAAW,WAAW;AAAA,QACtC,aAAa,CAAC;AAAA,QACd,WAAW;AAAA,QACX,aAAa;AAAA,QACb,GAAGA,KAAI,OAAO,SAAS,CAAC;AAAA,QACxB,GAAG,WAAW,CAAC;AAAA;AAAA,QAEf,QAAQ;AAAA,UACN;AAAA,YACE,kBAAkBA,KAAI,OAAO,QAAQ;AAAA,YACrC,UAAUA,IAAG;AAAA,UACf;AAAA;AAAA,UAEAA,KAAI,OAAO,OAAO;AAAA,QACpB;AAAA,QACA,WAAW;AAAA,UACT,GAAGA,KAAI,OAAO,aAAa,CAAC;AAAA,UAC5B,GAAG,aAAa,CAAC;AAAA;AAAA,UAEjB,GAAG,QAAQ,aAAa,CAAC;AAAA,QAC3B;AAAA,QACA,OAAOA,KAAI;AAAA,MACb,IAAI;AAAA,QACF,aAAa,CAAC;AAAA,QACd,WAAW;AAAA,QACX,aAAa;AAAA,QACb,GAAGA,KAAI,OAAO,SAAS,CAAC;AAAA;AAAA,QAExB,QAAQ;AAAA,UACN;AAAA,YACE,kBAAkBA,KAAI,OAAO,QAAQ;AAAA,YACrC,UAAUA,IAAG;AAAA,UACf;AAAA;AAAA,UAEAA,KAAI,OAAO,OAAO;AAAA,QACpB;AAAA,QACA,WAAW;AAAA,UACT,GAAGA,KAAI,OAAO,aAAa,CAAC;AAAA,UAC5B,GAAG,aAAa,CAAC;AAAA,QACnB;AAAA,QACA,MAAM;AAAA,QACN,OAAOA,KAAI;AAAA,MACb;AACA,UAAIA,KAAI,SAAS,IAAI,MAAM,KAAK,GAAGA,KAAI,MAAM;AAC3C,iBAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,MAAM,QAAQ;AAC1C,UAAAA,KAAI,MAAM,MAAM,CAAC,EAAE,GAAGA,IAAG;AAC7B,kBAAY,SAASA,KAAI,MAAM,GAAG,QAAQ,GAAG,cAAc,MAAM;AAC/D,YAAIA,KAAI,WAAWA,KAAI,OAAO,OAAO,GAAGA,KAAI,SAAS,MAAMA,KAAI,MAAM;AACnE,mBAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,KAAK,QAAQ;AACzC,YAAAA,KAAI,MAAM,KAAK,CAAC,EAAE,GAAGA,IAAG;AAAA,MAC9B,CAAC,GAAGA,KAAI,gBAAgB,KAAK,YAAY;AACvC,QAAAA,KAAI,QAAQ,OAAO;AAAA,UACjB,GAAG;AAAA,UACH,OAAOA,KAAI;AAAA;AAAA,UAEX,QAAQ;AAAA,YACN;AAAA,cACE,MAAM,kBAAkBA,KAAI,OAAO,UAAU;AAAA,gBAC3C,WAAW;AAAA,cACb,CAAC;AAAA,cACD,UAAUA,IAAG;AAAA,YACf;AAAA;AAAA,YAEAA,KAAI,OAAO,OAAO;AAAA,UACpB;AAAA,QACF,CAAC,GAAG,KAAK,GAAG,KAAE;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,MAAM,KAAKA,MAAK,wBAAwB;AACtC,QAAIA,KAAI,QAAQ;AACd,UAAIA,KAAI,OAAO,KAAK,sBAAsB,GAAGA,KAAI,SAAS,MAAMA,KAAI,MAAM,MAAM;AAC9E,iBAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,KAAK,QAAQ;AACzC,UAAAA,KAAI,MAAM,KAAK,CAAC,EAAE,GAAGA,IAAG;AAAA,IAC9B;AACE,cAAQ;AAAA,QACN;AAAA,QACA,IAAI,MAAM,EAAE;AAAA,MACd;AAAA,EACJ;AAAA,EACA,GAAGA,MAAK,MAAM,SAAS;AACrB,QAAI,EAAE,OAAO,QAAQ,MAAM,UAAU,GAAG,KAAK,IAAI,SAAS,kBAAkB,mBAAmB,MAAM;AAAA;AAAA,MAEnG,SAASA,KAAI,YAAY;AAAA;AAAA,MAEzB,QAAQA,KAAI,YAAY;AAAA,MACxB,WAAWA,KAAI,OAAO;AAAA,IACxB,CAAC,GAAG,mBAAmB,mBAAmB,UAAU;AAAA;AAAA,MAElD,SAASA,KAAI,YAAY;AAAA;AAAA,MAEzB,QAAQA,KAAI,YAAY;AAAA,MACxB,WAAWA,KAAI,OAAO;AAAA,IACxB,CAAC;AACD,IAAAA,KAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA,OAAOL,aAAY;AACjB,YAAI,SAASA,SAAQ,UAAUK,KAAI,QAAQ,EAAE,KAAK,MAAM,MAAM,OAAO,IAAI,SAAS,OAAO,OAAO,IAAIL;AACpG,YAAIA,SAAQ,YAAY,kBAAkB,QAAQ;AAChD,cAAI,OAAO,QAAQ,WAAW,YAAY;AACxC,gBAAI,OAAO,QAAQ,QAAQA,QAAO;AAClC,4BAAgB,WAAW,MAAM;AAAA,UACnC,MAAO,SAAQ,WAAW,OAAO;AAAA,YAC/B,KAAK;AAAA,YACL,QAAQ;AAAA,UACV;AACF,YAAI,KAAK,UAAU,WAAW,KAAK,MAAM,GAAG;AAC1C,cAAI,SAAS,gBAAgB,KAAK,MAAM;AACxC,qBAAW,KAAK,QAAQ,YAAY,IAAI;AAAA,QAC1C;AACA,aAAK,QAAQ,YAAY,KAAK,MAAM,QAAQ,KAAK,QAAQ,YAAY,CAAC,MAAM,KAAK,UAAU;AAAA,UACzF,IAAI,QAAQ,KAAK,OAAO;AAAA,UACxB,KAAK,QAAQ,YAAY;AAAA,QAC3B;AACA,YAAI,kBAAkB,uBAAuB,gBAAgB,GAAG,eAAe,sBAAsB,MAAM,GAAG;AAC9G,YAAI,OAAO,QAAQ,gBAAgB,YAAY;AAC7C,cAAI,SAAS,QAAQ,aAAaA,QAAO;AACzC,4BAAkB,WAAW,MAAM;AAAA,QACrC;AACA,YAAI,gBAAgB;AAAA,UAClB,GAAG,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC;AAAA,UACrF,IAAIK,KAAI,MAAM,SAAS,CAAC,GAAG;AAAA,YACzB,CAAC,MAAM,OAAO,KAAK,aAAa,IAAI,EAAE;AAAA,UACxC;AAAA,QACF,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,yBAAyB,cAAc,SAAS,GAAG,eAAe,yBAAyB,OAAO,IAAIF,YAAW;AACnI,mBAAS,eAAe,eAAe;AACrC,gBAAI,YAAY;AAAA,cACd,OAAO,OAAOH,UAAS,EAAE,OAAOG,QAAO,CAAC;AAAA,YAC1C;AACA,gBAAI,qBAAqB,YAAY,YAAY,MAAM,YAAY,MAAM,gBAAgB,IAAI,SAAS,GAAG,UAAW;AAAA,UACtH;AAAA,QACF,IAAI,MAAM;AAAA,QACV;AACA,YAAI,CAAC,QAAQ,QAAQH,SAAQ,SAAS;AAAA,UACpC,SAAS,WAAW,KAAK,OAAO,IAAI,KAAK,UAAU;AAAA,UACnD,MAAM;AAAA,YACJ,GAAGA;AAAA,YACH,IAAI,KAAK;AACP,qBAAO,QAAQ,MAAM,SAAS;AAAA,YAChC;AAAA,YACA,WAAW;AAAA,YACX,KAAK,MAAM;AACT,sBAAQ,OAAO,IAAI;AAAA,YACrB;AAAA,YACA,KAAK,MAAM;AACT,sBAAQ,OAAO,IAAI;AAAA,YACrB;AAAA,YACA,MAAM,8BAAO,OAAO;AAClB,kBAAI;AACF,sBAAM;AAAA,kBACJ;AAAA,kBACA,QAAQ;AAAA,oBACN,IAAI,SAAS,IAAIA,QAAO;AAAA,kBAC1B;AAAA,gBACF;AAAA,cACF,SAASG,SAAQ;AACf,6BAAa,IAAIA,OAAM;AAAA,cACzB;AAAA,YACF,GAXM;AAAA,YAYN,SAAS,8BAAO,IAAI,aAAa;AAC/B,kBAAI,UAAU,MAAM,aAAa,IAAI,QAAQ;AAC7C,kBAAI,iBAAiB,MAAM,OAAO,MAAM,OAAI;AAC1C,oBAAI,kBAAkB,IAAI;AAAA,kBACxB;AAAA,kBACA;AAAA,kBACA;AAAA,gBACF;AACA,uBAAO,yBAAyB,aAAa,IAAI,eAAe,IAAI,KAAK,GAAG,KAAK,gBAAgB,OAAO;AAAA,cAC1G;AACA,kBAAI;AACF,sBAAM;AAAA,kBACJ;AAAA,kBACA,QAAQ;AAAA,oBACN,IAAI;AAAA,sBACF;AAAA,sBACAH;AAAA,sBACA;AAAA,oBACF;AAAA,oBACA;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,SAASG,SAAQ;AACf,6BAAa,IAAIA,OAAM;AAAA,cACzB;AAAA,YACF,GAzBS;AAAA,YA0BT,OAAO,8BAAO,OAAO;AACnB,kBAAI;AACF,sBAAM;AAAA,kBACJ;AAAA,kBACA,QAAQ;AAAA,oBACN,IAAI,SAAS,IAAIH,QAAO;AAAA,kBAC1B;AAAA,gBACF;AAAA,cACF,SAASG,SAAQ;AACf,6BAAa,IAAIA,OAAM;AAAA,cACzB;AAAA,YACF,GAXO;AAAA,YAYP,OAAO,8BAAO,IAAI,MAAM,WAAW;AACjC,kBAAI;AACF,sBAAM;AAAA,kBACJ;AAAA,kBACA,QAAQ;AAAA,oBACN,IAAI,SAAS,IAAIH,QAAO;AAAA,oBACxB;AAAA,oBACA;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,SAASG,SAAQ;AACf,6BAAa,IAAIA,OAAM;AAAA,cACzB;AAAA,YACF,GAbO;AAAA,UAcT;AAAA,QACF,CAAC;AACC,iBAAO,KAAK,SAAS,KAAK;AAAA,MAC9B;AAAA,MACA;AAAA,QACE,GAAG;AAAA,QACH,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAIc,QAAO,QAAQ,IAAI,MAAM,OAAO,UAAU,OAAO,SAAS,MAAM,QAAQ,MAAM,CAAC;AAInF,IAAI,sBAAsB,wBAAC,aAAa,QAAQ;AAC9C,MAAI,SAAS,YAAY;AACzB,MAAI,WAAW,OAAO,QAAQ,OAAO,IAAI,MAAM,SAAS,OAAO,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC,QAAQ;AAC5F,aAAS,CAAC,KAAK,SAAS,KAAK,OAAO,QAAQ,OAAO,UAAU;AAC3D,UAAI,GAAG,MAAM,UAAU;AAC7B,GAL0B;AAA1B,IAKG,uBAAuB,wBAACZ,SAAQ;AACjC,MAAI,EAAE,aAAa,cAAc,kBAAkB,kBAAkB,IAAIA,KAAI,UAAU,EAAE,SAAS,gBAAgBA,KAAI;AACtH,SAAO,OAAO,YAAY;AACxB,QAAI,MAAM,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,EAAE,GAAG,KAAK,IAAI,QAAQ,KAAK,IAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,UAAU,CAAC,IAAI,IAAI,UAAU,GAAG,EAAE,GAAG,OAAO;AAAA,MAChJ,QAAQ,CAAC;AAAA,MACT,QAAQ;AAAA,MACR,SAAS,gBAAgB,EAAE,GAAG,cAAc,IAAI,CAAC;AAAA,IACnD,GAAGL,WAAU,OAAO;AAAA,MAClB,CAAC;AAAA;AAAA,MAEDK,KAAI,UAAU;AAAA,MACd;AAAA,QACE,KAAK;AAAA;AAAA,QAEL,OAAOA,KAAI,UAAU;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,QAAI;AACF,UAAIA,KAAI,MAAM;AACZ,iBAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,QAAQ,QAAQ,KAAK;AACjD,cAAI,YAAYA,KAAI,MAAM,QAAQ,CAAC,EAAE,IAAI,YAAY,UAAUL,QAAO;AACtE,cAAI,qBAAqB,YAAY,YAAY,MAAM,YAAY,YAAY,kBAAkB,WAAW,IAAI,GAAG,UAAW,QAAOA,SAAQ,WAAW;AAAA,QAC1J;AACF,UAAI,YAAY,QAAQ,WAAW,SAAS,QAAQ,QAAQ,IAAI,SAAS,GAAG,YAAY,MAAM,cAAc,OAAO,QAAQ,QAAQ,UAAUK,KAAI,OAAO,QAAQ,KAAK,QAAQ,QAAQ,IAAI,KAAKA,KAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,KAAKA,KAAI,OAAO,QAAQ,KAAK,OAAO,IAAI;AAC7Q,UAAI,CAAC;AACH,cAAML,SAAQ,QAAQ,OAAO,KAAK,CAAC,IAAI,WAAW,IAAI,UAAU,KAAK,CAAC,CAAC,GAAG,IAAI,cAAc;AAC9F,UAAI,EAAE,QAAQ,OAAO,WAAW,SAAS,MAAM,IAAI,QAAQ,OAAO;AAClE,UAAI,QAAQ,WAAW,SAAS,QAAQ,WAAW;AACjD,YAAI;AACF,kBAAQ,SAAS;AAAA,YACf,KAAK;AACH,qBAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,YACF,KAAK;AACH,qBAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,YACF,KAAK;AACH,qBAAO,WAAW,MAAM,QAAQ,KAAK,CAAC;AACtC;AAAA,YACF,KAAK;AACH,qBAAO,MAAM,QAAQ,YAAY;AACjC;AAAA,YACF,KAAK;AACH,qBAAO,CAAC;AACR,kBAAI,QAAQ,MAAM,QAAQ,SAAS;AACnC,uBAAS,OAAO,MAAM,KAAK,GAAG;AAC5B,oBAAI,KAAK,GAAG,EAAG;AACf,oBAAI,QAAQ,MAAM,OAAO,GAAG;AAC5B,sBAAM,WAAW,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,IAAI;AAAA,cAC1D;AACA;AAAA,UACJ;AAAA,aACG;AACH,cAAI;AACJ,cAAI,QAAQ,SAAS,cAAc,QAAQ,QAAQ,IAAI,cAAc,IAAI,aAAa;AACpF,gBAAI,QAAQ,YAAY,QAAQ,GAAG;AACnC,gBAAI,UAAU,OAAO,cAAc,YAAY,MAAM,GAAG,KAAK,IAAIA,SAAQ,cAAc,aAAa,MAAM;AACxG,uBAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,oBAAI,OAAO,MAAM,MAAM,CAAC,EAAE;AAC1B,oBAAI,OAAO,QAAQ;AACjB,0BAAQ,MAAM;AAAA,oBACZ,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO;AAAA,wBACL,MAAM,QAAQ,KAAK;AAAA,sBACrB;AACA;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,MAAM,QAAQ,YAAY;AACjC;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,CAAC;AACR,0BAAI,QAAQ,MAAM,QAAQ,SAAS;AACnC,+BAAS,OAAO,MAAM,KAAK,GAAG;AAC5B,4BAAI,KAAK,GAAG,EAAG;AACf,4BAAI,QAAQ,MAAM,OAAO,GAAG;AAC5B,8BAAM,WAAW,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,IAAI;AAAA,sBAC1D;AACA;AAAA,oBACF;AACE,0BAAI,SAASK,KAAI,SAAS,EAAE,IAAI;AAChC,0BAAI,QAAQ;AACV,4BAAI,OAAO;AAAA,0BACTL;AAAA,0BACA;AAAA,wBACF;AACA,4BAAI,gBAAgB,YAAY,OAAO,MAAM,OAAO,MAAM;AACxD,iCAAO;AACP;AAAA,wBACF;AAAA,sBACF;AACA;AAAA,kBACJ;AAAA,qBACG;AACH,sBAAI,OAAO,KAAKA,UAAS,WAAW;AACpC,sBAAI,gBAAgB,YAAY,OAAO,MAAM,OAAO,MAAM;AACxD,2BAAO;AACP;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AACF,gBAAI,OAAOA,SAAQ,aAAa,SAAS;AACvC,sBAAQ,aAAa;AAAA,gBACnB,KAAK;AACH,yBAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,gBACF,KAAK;AACH,yBAAO,MAAM,QAAQ,KAAK;AAC1B;AAAA,gBACF,KAAK;AACH,yBAAO,WAAW,MAAM,QAAQ,KAAK,CAAC;AACtC;AAAA,gBACF,KAAK;AACH,yBAAO,MAAM,QAAQ,YAAY;AACjC;AAAA,gBACF,KAAK;AACH,yBAAO,CAAC;AACR,sBAAI,QAAQ,MAAM,QAAQ,SAAS;AACnC,2BAAS,OAAO,MAAM,KAAK,GAAG;AAC5B,wBAAI,KAAK,GAAG,EAAG;AACf,wBAAI,QAAQ,MAAM,OAAO,GAAG;AAC5B,0BAAM,WAAW,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,IAAI;AAAA,kBAC1D;AACA;AAAA,cACJ;AAAA,UACJ;AAAA,QACF;AACF,MAAAA,SAAQ,QAAQ,OAAOA,SAAQ,OAAO,MAAMA,SAAQ,SAAS,SAAS,UAAU,QAAQA,SAAQ,QAAQ,OAAO,KAAK,CAAC,IAAI,WAAW,IAAI,UAAU,KAAK,CAAC,CAAC,GAAGA,SAAQ,UAAU,CAAC;AAC/K,eAAS,CAAC,KAAK,KAAK,KAAK,QAAQ,QAAQ,QAAQ;AAC/C,QAAAA,SAAQ,QAAQ,GAAG,IAAI;AACzB,UAAI,aAAa;AAAA,QACf,QAAQK,KAAI,OAAO,QAAQ;AAAA,QAC3B,WAAW,QAAQ,OAAO;AAAA,QAC1B,SAASA,KAAI,OAAO,QAAQ;AAAA,QAC5B,WAAW,QAAQ,OAAO;AAAA,QAC1B,UAAUA,KAAI,OAAO,QAAQ;AAAA,QAC7B,WAAW,QAAQ,OAAO;AAAA,QAC1B,QAAQA,KAAI,OAAO,QAAQ;AAAA,QAC3B,WAAW,QAAQ,OAAO;AAAA;AAAA,QAE1B,MAAMA,KAAI,OAAO,QAAQ,QAAQ,WAAW,QAAQ,OAAO;AAAA,QAC3D,UAAUA,KAAI,OAAO,QAAQ;AAAA,QAC7B,WAAW,QAAQ,OAAO;AAAA,QAC1B,aAAaA,KAAI,OAAO,QAAQ;AAAA,QAChC,WAAW,QAAQ,OAAO;AAAA,QAC1B,UAAUA,KAAI,OAAO,QAAQ;AAAA,QAC7B,WAAW,QAAQ,OAAO;AAAA,QAC1B,QAAQA,KAAI,OAAO,QAAQ;AAAA,QAC3B,WAAW,QAAQ,OAAO;AAAA,QAC1B,SAASA,KAAI,OAAO,QAAQ;AAAA,QAC5B,WAAW,QAAQ,OAAO;AAAA;AAAA,QAE1B,MAAMA,KAAI,OAAO,QAAQ,QAAQ,WAAW,QAAQ,OAAO;AAAA,MAC7D,GAAG,oBAAoB,QAAQ,QAAQ,IAAI,QAAQ;AACnD,MAAAL,SAAQ,SAAS,MAAM;AAAA,QACrBA,SAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACF;AACA,UAAI,kBAAkB,WAAW,gBAAgB;AACjD,yBAAmB,oBAAoB,iBAAiBA,SAAQ,OAAO;AACvE,UAAI,kBAAkB,WAAW,eAAe;AAChD,yBAAmB,oBAAoB,iBAAiBA,SAAQ,MAAM;AACtE,UAAI,iBAAiB,WAAW,cAAc;AAC9C,UAAI,kBAAkB,oBAAoB,gBAAgBA,SAAQ,KAAK,GAAG,MAAM;AAC9E,iBAAS,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,KAAK;AAC/C,cAAI,OAAO,MAAM,UAAU,CAAC,GAAG,YAAY,KAAK,GAAGA,QAAO;AAC1D,cAAI,qBAAqB,YAAY,YAAY,MAAM,YAAY,qBAAqB,4BAA4B;AAClH,gBAAI,SAAS,kBAAkB,WAAWA,SAAQ,GAAG;AACrD,gBAAI;AACF,qBAAOA,SAAQ,WAAW;AAAA,UAC9B;AACA,eAAK,YAAY,YAAY,OAAO,OAAOA,UAAS,SAAS;AAAA,QAC/D;AACF,UAAI,WAAW;AACb,YAAI,iBAAiB;AACnB,cAAI,UAAU,gBAAgBA,SAAQ,OAAO;AAC7C,mBAAS,CAAC,KAAK,KAAK,KAAK,QAAQ;AAC/B,oBAAQ,GAAG,IAAI;AACjB,cAAI,UAAU,QAAQ,MAAM,OAAO,MAAM;AACvC,kBAAM,IAAI;AAAA,cACR;AAAA,cACA,UAAU;AAAA,cACV;AAAA,YACF;AAAA,QACJ,MAAO,WAAU,SAAS,WAAWA,SAAQ,UAAU,UAAU,QAAQ,OAAOA,SAAQ,OAAO;AAC/F,YAAI,iBAAiB,MAAMA,SAAQ,MAAM,MAAM;AAC7C,gBAAM,IAAI;AAAA,YACR;AAAA,YACA,UAAU;AAAA,YACVA,SAAQ;AAAA,UACV;AACF,YAAI,UAAU,QAAQ,WAAWA,SAAQ,SAAS,UAAU,OAAO,OAAOA,SAAQ,MAAM,IAAI,UAAU,OAAO,QAAQ;AACnH,cAAI,SAAS,UAAU,MAAM;AAC7B,iBAAO,QAAQ,OAAO,IAAI,MAAM,SAAS,OAAO,MAAM,OAAO,IAAI;AACjE,cAAI,aAAa,OAAO;AACxB,mBAAS,YAAY,OAAO,KAAK,UAAU,GAAG;AAC5C,gBAAI,QAAQ,WAAW,QAAQ;AAC/B,aAAC,MAAM,SAAS,WAAW,MAAM,OAAO,SAAS,aAAa,OAAOA,SAAQ,MAAM,QAAQ,KAAK,YAAYA,SAAQ,MAAM,QAAQ,MAAMA,SAAQ,MAAM,QAAQ,IAAIA,SAAQ,MAAM,QAAQ,EAAE,MAAM,GAAG;AAAA,UACrM;AAAA,QACF;AACA,YAAI,gBAAgB,MAAMA,SAAQ,KAAK,MAAM;AAC3C,gBAAM,IAAI;AAAA,YACR;AAAA,YACA,UAAU;AAAA,YACVA,SAAQ;AAAA,UACV;AACF,YAAI,UAAU,OAAO,WAAWA,SAAQ,QAAQ,UAAU,MAAM,OAAOA,SAAQ,KAAK,IAAI,UAAU,eAAe,GAAG;AAClH,cAAI,cAAc,CAAC;AACnB,mBAAS,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQA,SAAQ,MAAM;AACpD,wBAAY,GAAG,IAAI,MAAM;AAC3B,cAAI,UAAU,OAAO,MAAM,WAAW,MAAM;AAC1C,kBAAM,IAAI;AAAA,cACR;AAAA,cACA,UAAU;AAAA,cACV;AAAA,YACF;AACF,oBAAU,QAAQ,WAAW,cAAc,UAAU,OAAO;AAAA,YAC1D;AAAA,UACF;AAAA,QACF;AACA,YAAI,UAAU,aAAa,GAAG,MAAM,IAAI,MAAM;AAC5C,gBAAM,IAAI,gBAAgB,QAAQ,UAAU,MAAM,IAAI;AACxD,kBAAU,MAAM,WAAWA,SAAQ,OAAO,UAAU,KAAK,OAAO,IAAI;AAAA,MACtE;AACA,UAAI,MAAM;AACR,iBAAS,IAAI,GAAG,IAAI,MAAM,aAAa,QAAQ,KAAK;AAClD,cAAI,OAAO,MAAM,aAAa,CAAC,GAAG,YAAY,KAAK,GAAGA,QAAO;AAC7D,cAAI,qBAAqB,YAAY,YAAY,MAAM,YAAY,qBAAqB,4BAA4B;AAClH,gBAAI,SAAS,kBAAkB,WAAWA,SAAQ,GAAG;AACrD,gBAAI;AACF,qBAAOA,SAAQ,WAAW;AAAA,UAC9B;AACA,cAAI,KAAK,YAAY,WAAW;AAC9B,mBAAO,OAAOA,UAAS,SAAS;AAChC;AAAA,UACF;AACA,cAAI,cAAc,QAAQ;AACxB,gBAAIA,SAAQ,WAAW,WAAW,MAAM;AACtC,uBAAS,KAAK,GAAG,KAAK,MAAM,YAAY,QAAQ,MAAM;AACpD,oBAAI,cAAc,MAAM,YAAY,EAAE,EAAE;AAAA,kBACtCA;AAAA,gBACF;AACA,uCAAuB,YAAY,cAAc,MAAM,cAAc,gBAAgB,YAAY;AAAA,cACnG;AACF,gBAAI,SAAS,kBAAkB,WAAWA,SAAQ,GAAG;AACrD,gBAAI,OAAQ,QAAOA,SAAQ,WAAW;AAAA,UACxC;AAAA,QACF;AACF,UAAI,WAAW,OAAO,UAAU,aAAa,OAAOA,QAAO,IAAI;AAC/D,UAAI,oBAAoB,YAAY,WAAW,MAAM,WAAW,MAAM,aAAa,QAAQ;AACzF,QAAAA,SAAQ,WAAW;AACnB,iBAAS,IAAI,GAAG,IAAI,MAAM,YAAY,QAAQ,KAAK;AACjD,cAAI,YAAY,MAAM,YAAY,CAAC,EAAE;AAAA,YACnCA;AAAA,UACF;AACA,+BAAqB,YAAY,YAAY,MAAM;AACnD,cAAI,wBAAwB,qBAAqB,4BAA4B,UAAU,wBAAwB,UAAU,OAAO,KAAK,SAAS,OAAO,KAAK,UAAU,WAAW,UAAU,KAAK,MAAM,IAAI,KAAK,SAAS;AACtN,oCAA0B,KAAK,SAAS,SAAS,YAAY,UAAU;AACvE,cAAI,oBAAoB,WAAW,iBAAiB,IAAI,OAAO;AAC/D,cAAI,mBAAmB,MAAM,SAAS,MAAM;AAC1C,gBAAI,mBAAmB,OAAO;AAC5B,kBAAI,OAAO,kBAAkB,MAAM,SAAS;AAC5C,kBAAI,mBAAmB,MAAM,IAAI,MAAM;AACrC,sBAAM,IAAI;AAAA,kBACR;AAAA,kBACA;AAAA,kBACA;AAAA,gBACF;AACF,0BAAY;AAAA,YACd;AACE,oBAAM,IAAI;AAAA,gBACR;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AACJ,6BAAmB,WAAWA,SAAQ,WAAW,YAAY,kBAAkB,OAAO,SAAS,IAAI,mBAAmB,UAAUA,SAAQ,WAAW,YAAY,kBAAkB,MAAM,SAAS;AAChM,cAAI,SAAS,kBAAkB,WAAWA,SAAQ,GAAG;AACrD,cAAI,WAAW,OAAQ,QAAOA,SAAQ,WAAW;AAAA,QACnD;AAAA,MACF,OAAO;AACL,YAAI,wBAAwB,oBAAoB,4BAA4B,UAAU,wBAAwB,SAAS,OAAO,KAAK,SAAS,OAAO,KAAK,UAAU,WAAW,UAAU,KAAK,MAAM,IAAI,KAAK,SAAS;AACpN,kCAA0B,KAAK,SAAS,SAAS,WAAW,SAAS;AACrE,YAAI,oBAAoB,WAAW,iBAAiB,IAAI,OAAO;AAC/D,YAAI,mBAAmB,MAAM,QAAQ,MAAM;AACzC,cAAI,mBAAmB,OAAO;AAC5B,gBAAI,OAAO,kBAAkB,MAAM,QAAQ;AAC3C,gBAAI,mBAAmB,MAAM,IAAI,MAAM;AACrC,oBAAM,IAAI;AAAA,gBACR;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AACF,uBAAW;AAAA,UACb;AACE,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA;AAAA,YACF;AACJ,2BAAmB,WAAW,WAAW,kBAAkB,OAAO,QAAQ,IAAI,mBAAmB,UAAU,WAAW,kBAAkB,MAAM,QAAQ;AAAA,MACxJ;AACA,UAAIA,SAAQ,IAAI,UAAU,YAAY,MAAM;AAC1C,YAAI,SAAS,WAAW,UAAU,OAAO,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,QAAQ,CAAC,IAAI;AACvH,YAAI,WAAW,SAAS,MAAI;AAC1B,cAAI;AACF,qBAAS,CAAC,KAAK,MAAM,KAAK,OAAO;AAAA,cAC/BA,SAAQ,IAAI;AAAA,YACd;AACE,cAAAA,SAAQ,IAAI,OAAO,GAAG,EAAE,QAAQ,MAAM;AAAA,gBACpC,OAAO;AAAA,gBACP;AAAA,cACF;AAAA,QACN,OAAO;AACL,cAAI,aAAa,WAAW,QAAQ,QAAQ;AAC5C,cAAI;AACF,qBAAS,QAAQ,WAAW;AAC1B,sBAAQ,cAAcA,SAAQ,IAAI,OAAO,IAAI,GAAG,UAAUA,SAAQ,IAAI,OAAO,IAAI,EAAE,QAAQ,MAAM;AAAA,gBAC/FA,SAAQ,IAAI,OAAO,IAAI,EAAE;AAAA,gBACzB;AAAA,cACF;AAAA,QACN;AAAA,MACF;AACA,aAAO,aAAaA,SAAQ,WAAW,UAAUA,SAAQ,GAAG;AAAA,IAC9D,SAASG,SAAQ;AACf,UAAI,gBAAgBA,mBAAkB,wBAAwBA,QAAO,QAAQA,QAAO,QAAQA;AAC5F,aAAOE,KAAI,YAAYL,UAAS,aAAa;AAAA,IAC/C,UAAE;AACA,MAAAK,KAAI,MAAM,iBAAiB,aAAa,YAAY;AAClD,iBAAS,iBAAiBA,KAAI,MAAM;AAClC,gBAAM,cAAc,GAAGL,QAAO;AAAA,MAClC,CAAC;AAAA,IACH;AAAA,EACF;AACF,GA9V0B;AAL1B,IAmWG,4BAA4B,wBAACK,SAAQ;AACtC,MAAI,EAAE,aAAa,aAAa,IAAIA,KAAI,UAAU,EAAE;AACpD,SAAO,OAAOL,UAASG,YAAW;AAChC,QAAI,eAAe,OAAO,OAAOH,UAAS,EAAE,OAAOG,SAAQ,MAAMA,QAAO,KAAK,CAAC;AAC9E,QAAI,aAAa,MAAMH,SAAQ,KAAKK,KAAI,MAAM;AAC5C,eAAS,IAAI,GAAG,IAAIA,KAAI,MAAM,MAAM,QAAQ,KAAK;AAC/C,YAAI,WAAWA,KAAI,MAAM,MAAM,CAAC,EAAE,GAAG,YAAY;AACjD,YAAI,oBAAoB,YAAY,WAAW,MAAM,WAAW,YAAY;AAC1E,iBAAOL,SAAQ,WAAW;AAAA,YACxB;AAAA,YACAA,SAAQ;AAAA,UACV;AAAA,MACJ;AACF,WAAO,IAAI;AAAA,MACT,OAAOG,QAAO,SAAS,WAAWA,QAAO,QAAQA,QAAO;AAAA,MACxD;AAAA,QACE,SAASH,SAAQ,IAAI;AAAA,QACrB,QAAQG,QAAO,UAAU;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AACF,GArB+B;AAyB/B,IAAIe;AACJA,MAAK,OAAO;AACZ,IAAI,UAAU,MAAMC,SAAQ;AAAA,EAjmM5B,OAimM4B;AAAA;AAAA;AAAA,EAC1B,YAAYlB,UAAS,CAAC,GAAG;AACvB,SAAK,SAAS;AACd,SAAK,eAAe,CAAC;AACrB,SAAK,SAAS,IAAI;AAClB,SAAK,YAAY,IAAI;AACrB,SAAK,cAAc,IAAI;AACvB,SAAK,WAAW,IAAI;AACpB,SAAK,YAAY,IAAI;AACrB,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI;AAClB,SAAK,YAAY;AAAA,MACf,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC;AAAA,IACZ;AACA,SAAK,cAAc;AAAA,MACjB,SAAS,EAAE,OAAO,CAAC,CAAC;AAAA,MACpB,MAAM,CAAC;AAAA,MACP,OAAO,CAAC;AAAA,IACV;AACA,SAAK,WAAW;AAAA,MACd,QAAQ,CAAC;AAAA,MACT,sBAAsB,CAAC;AAAA,IACzB;AACA,SAAK,YAAY;AAAA,MACf,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,eAAe;AACb,eAAO,CAAC,KAAK,UAAU,CAAC,KAAK,UAAU,CAAC,KAAK,QAAQ;AAAA,UACnD,MAAM;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,UAAU;AAAA,QACZ,IAAI;AAAA,UACF,qBAAqB,KAAK,QAAQ,KAAK,MAAM;AAAA,UAC7C,KAAK;AAAA,QACP;AAAA,MACF;AAAA,IACF;AACA,SAAK,sBAAsB;AAAA,MACzB,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,SAAK,QAAQ,CAAC;AACd,SAAK,SAAS;AAAA,MACZ,SAAS;AAAA,MACT,IAAI,OAAO;AACT,eAAO,KAAK,OAAO,MAAM,KAAK,OAAO,IAAI,IAAI,UAAU;AAAA,UACrD,MAAM;AAAA,UACN,SAAS,iCAAAmB;AAAA,QACX,CAAC,IAAI,KAAK,OAAO;AAAA,MACnB;AAAA,MACA,YAAY;AAAA;AAAA,MAEZ,IAAI,UAAU;AACZ,eAAO,KAAK,UAAU,MAAM,KAAK,UAAU,IAAI,IAAI,UAAU;AAAA,UAC3D,SAAS,iCAAAA;AAAA,QACX,CAAC,IAAI,KAAK,UAAU;AAAA,MACtB;AAAA;AAAA,MAEA,QAAQ,CAAC;AAAA;AAAA,MAET,UAAU,CAAC;AAAA,MACX,SAAS,CAAC;AAAA,IACZ;AACA,SAAK,YAAY,CAAC;AAClB,SAAK,YAAY;AAAA,MACf,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP;AACA,SAAK,SAAS,IAAI,CAAC;AACnB,SAAK,SAAS,OAAO,YAAY,KAAK,MAAM,OAAO;AAMnD,SAAK,QAAQ,CAAC,aAAa,KAAK,QAAQ,KAAK,OAAO,MAAM,sBAAsB,IAAI,IAAI,qBAAqB,IAAI,GAAG,OAAO;AAC3H,SAAK,cAAc,OAAOpB,UAASG,aAAY,KAAK,cAAc,KAAK,OAAO,MAAM,oBAAoB,IAAI,IAAI,0BAA0B,IAAI,GAAGH,UAASG,OAAM;AAahK,SAAK,SAAS,CAAC,SAAS,cAAc,KAAK,UAAU,EAAE,OAAO,IAAI,EAAE,SAAS,QAAQ,GAAG,KAAK,gBAAgB,QAAQ,kBAAkB,GAAG,GAAG,KAAK,gBAAgB,KAAK,MAAM;AAC3K,wBAAkB,GAAG;AAAA,IACvB,CAAC,GAAG;AAyBJ,SAAK,OAAO,OAAO,4BAA4B,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,sBAAsB,GAAG;AAC5G,SAAKe,GAAE,IAAI,MAAM;AACf,WAAK,UAAU,KAAK,KAAK;AAAA,IAC3B;AACA,IAAAjB,QAAO,SAASA,QAAO,SAASA,QAAO,OAAO,OAAOA,QAAO,OAAOA,QAAO,SAAS;AAAA,MACjF,MAAMA,QAAO;AAAA,IACf,IAAI,KAAK,SAAS;AAAA,MAChB,KAAKgB,MAAK,eAAe;AAAA,MACzB,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,WAAW;AAAA,MACX,GAAGhB;AAAA,MACH,QAAQA,QAAO,SAASA,QAAO,OAAO,WAAW,CAAC,MAAM,KAAKA,QAAO,SAAS,IAAIA,QAAO,MAAM,KAAK;AAAA,MACnG,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,GAAGA,SAAQ;AAAA,MACb;AAAA,MACA,cAAcA,SAAQ,gBAAgB,CAAC;AAAA,MACvC,MAAMA,SAAQ,SAAS,SAAS,KAAKA,SAAQ;AAAA,IAC/C,GAAG,KAAK,UAAU,IAAIA,QAAO,YAAY,OAAO,MAAM,MAAM,aAAa,qBAAqBA,SAAQ,aAAaA,SAAQ,QAAQA,SAAQ,SAAS,YAAY,KAAK,YAAY;AAAA,MAC/K,OAAO,IAAI,MAAM,EAAE;AAAA,IACrB;AAAA,EACF;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,kBAAkB;AAChB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,uBAAuB;AACrB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,YAAY;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,YAAY;AACV,WAAO;AAAA,EACT;AAAA,EACA,IAAI,kBAAkB;AACpB,WAAO,KAAK,qBAAqB,KAAK,mBAAmB,IAAI,aAAa,QAAQ,OAAO,MAAM;AAAA,IAC/F,CAAC,IAAI,KAAK;AAAA,EACZ;AAAA,EACA,IAAI,OAAO,OAAOgB,OAAM;AACtB,QAAI,mBAAmB,OAAO;AAAA,MAC5B,SAAS,KAAK,YAAY;AAAA,MAC1B,SAAS;AAAA,MACT,sBAAsB;AAAA,MACtB,QAAQ;AAAA,MACR,UAAU,6BAAM,KAAK,OAAO,UAAlB;AAAA,IACZ,CAAC,EAAE,MAAM,IAAI,MAAM,OAAI;AACrB,UAAId,UAAS,IAAI,gBAAgB,OAAO,OAAO,IAAI;AACnD,YAAM,IAAI,MAAMA,QAAO,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK;AAAA,CAC3D,CAAC;AAAA,IACE;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,KAAK,IAAI;AACP,WAAO,KAAK,SAAS,qBAAqB,KAAK;AAAA,MAC7C,UAAU;AAAA,QACR,KAAK,UAAU;AAAA,UACb,MAAM,KAAK,OAAO;AAAA,UAClB,MAAM,KAAK,OAAO;AAAA,UAClB,SAAS,GAAG,SAAS;AAAA,QACvB,CAAC;AAAA,MACH;AAAA,MACA;AAAA,IACF,CAAC,GAAG;AAAA,EACN;AAAA,EACA,WAAW,WAAW;AACpB,QAAI,KAAK,SAAS,OAAO,QAAQ;AAC/B,UAAI,SAAS,mBAAmB;AAAA,QAC9B,YAAY,KAAK;AAAA,QACjB;AAAA,MACF,CAAC,GAAG,UAAU;AAAA,QACZ,QAAQ;AAAA,UACN,QAAQ,KAAK;AAAA,UACb,OAAO;AAAA,QACT;AAAA,QACA,IAAI,UAAU;AACZ,iBAAO,OAAO,OAAO;AAAA,QACvB;AAAA,QACA,IAAI,cAAc;AAChB,iBAAO,OAAO,WAAW;AAAA,QAC3B;AAAA,QACA,IAAI,iBAAiB;AACnB,iBAAO,OAAO,cAAc;AAAA,QAC9B;AAAA,QACA,IAAI,gBAAgB;AAClB,iBAAO,OAAO,aAAa;AAAA,QAC7B;AAAA,QACA,IAAI,cAAc;AAChB,iBAAO,OAAO,aAAa;AAAA,QAC7B;AAAA,QACA,IAAI,kBAAkB;AACpB,iBAAO,OAAO,eAAe;AAAA,QAC/B;AAAA,QACA,IAAI,UAAU;AACZ,iBAAO,OAAO,OAAO;AAAA,QACvB;AAAA,MACF;AACA,eAAS,SAAS,KAAK,SAAS;AAC9B,uBAAe,MAAM,GAAG,OAAO,GAAG,WAAW,MAAM;AAAA,IACvD;AAAA,EACF;AAAA,EACA,IAAI,SAAS;AACX,QAAI,SAAS,CAAC;AACd,aAAS,QAAQ,OAAO,KAAK,KAAK,YAAY,IAAI;AAChD,aAAO,IAAI,IAAI;AAAA,QACb,KAAK,YAAY,QAAQ,OAAO,IAAI;AAAA,MACtC;AACF,WAAO,OAAO,UAAU,KAAK,YAAY,SAAS;AAAA,EACpD;AAAA,EACA,IAAI,QAAQ,MAAM,QAAQ,WAAW,SAAS,sBAAsB;AAClE,QAAI,aAAa,SAAS,cAAc,OAAI,YAAY,SAAS,aAAa;AAC9E,QAAI,cAAc,CAAC,GAAG,yBAAyB,WAAW,uBAAuB,CAAC,GAAG,KAAK,oBAAoB,UAAU,uBAAuB,qBAAqB;AAAA,MAClK,KAAK,oBAAoB;AAAA,IAC3B,IAAI,KAAK,oBAAoB,WAAW,uBAAuB,qBAAqB;AAAA,MAClF,KAAK,oBAAoB;AAAA,IAC3B,IAAI,KAAK,oBAAoB,WAAW,uBAAuB,qBAAqB;AAAA,MAClF,KAAK,oBAAoB;AAAA,IAC3B,KAAK,SAAS,MAAM,KAAK,WAAW,CAAC,MAAM,OAAO,OAAO,MAAM,OAAO,KAAK,OAAO,UAAU,CAAC,eAAe,OAAO,KAAK,OAAO,SAAS,OAAO,WAAW;AACxJ,cAAQ,UAAU,MAAM;AAAA,QACtB,KAAK;AACH,oBAAU,OAAO;AACjB;AAAA,QACF,KAAK;AACH,oBAAU,OAAO;AACjB;AAAA,QACF,KAAK;AACH,oBAAU,OAAO;AACjB;AAAA,QACF,KAAK;AACH,oBAAU,OAAO;AACjB;AAAA,QACF,KAAK;AACH,oBAAU,OAAO;AACjB;AAAA,QACF;AACE;AAAA,MACJ;AACF,QAAI,oBAAoB,KAAK,UAAU,aAAa,GAAG,SAAS;AAAA,MAC9D,MAAM,WAAW,QAAQ,mBAAmB;AAAA,MAC5C,SAAS,WAAW,WAAW,mBAAmB;AAAA,MAClD,QAAQ,WAAW,UAAU,mBAAmB;AAAA,MAChD,OAAO,WAAW,SAAS,mBAAmB;AAAA,MAC9C,QAAQ,WAAW,UAAU,mBAAmB;AAAA,MAChD,UAAU,WAAW,YAAY,mBAAmB;AAAA,IACtD,GAAG,mBAAmB,KAAK,OAAO,eAAe,QAAM,OAAO,KAAK,OAAO,cAAc,YAAY,KAAK,OAAO,WAAW,YAAY,MAAI,kBAAkB,6BAAM;AACjK,UAAI,SAAS,KAAK,YAAY,MAAM,UAAU,CAAC,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,WAAW,UAAU,KAAK,YAAY,SAASO,YAAW,6BAAM,KAAK,OAAO,UAAlB,aAA4B,kBAAkB,6BAAM;AACpM,YAAI,OAAO,UAAU,qBAAqB,KAAK,CAAC,MAAM,EAAE,MAAM;AAC5D,iBAAO,mBAAmB;AAAA,YACxB;AAAA,YACA,WAAW,OAAO;AAAA,YAClB,eAAe,KAAK,OAAO;AAAA,YAC3B;AAAA,YACA,QAAQ,OAAO,QAAQ,UAAU,CAAC;AAAA,YAClC;AAAA,YACA;AAAA,YACA,YAAY,qBAAqB,IAAI,CAAC,MAAM,EAAE,MAAM;AAAA,YACpD,UAAAA;AAAA,UACF,CAAC;AAAA,MACL,GAbgM;AAchM,aAAO,mBAAmB;AAAA,QACxB,MAAM,mBAAmB,OAAO,MAAM;AAAA,UACpC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,kBAAkB,oBAAoB;AAAA,UACtC,YAAY,qBAAqB,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,UAClD,UAAAA;AAAA,QACF,CAAC;AAAA,QACD,SAAS,mBAAmB,OAAO,SAAS;AAAA,UAC1C;AAAA,UACA;AAAA,UACA;AAAA,UACA,sBAAsB;AAAA,UACtB,QAAQ;AAAA,UACR,kBAAkB,2BAA2B;AAAA,UAC7C,YAAY,qBAAqB;AAAA,YAC/B,CAAC,MAAM,EAAE;AAAA,UACX;AAAA,UACA,UAAAA;AAAA,QACF,CAAC;AAAA,QACD,QAAQ,mBAAmB,OAAO,QAAQ;AAAA,UACxC;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,kBAAkB,2BAA2B;AAAA,UAC7C,YAAY,qBAAqB;AAAA,YAC/B,CAAC,MAAM,EAAE;AAAA,UACX;AAAA,UACA,UAAAA;AAAA,QACF,CAAC;AAAA,QACD,OAAO,mBAAmB,OAAO,OAAO;AAAA,UACtC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,kBAAkB,2BAA2B;AAAA,UAC7C,YAAY,qBAAqB;AAAA,YAC/B,CAAC,MAAM,EAAE;AAAA,UACX;AAAA,UACA,UAAAA;AAAA,QACF,CAAC;AAAA,QACD,QAAQ,gBAAgB;AAAA,QACxB,UAAU,2BAA2B,OAAO,UAAU;AAAA,UACpD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,qBAAqB;AAAA,YAC/B,CAAC,MAAM,EAAE;AAAA,UACX;AAAA,UACA,UAAAA;AAAA,QACF,CAAC;AAAA,MACH,IAAI;AAAA,QACF,aAAa;AACX,iBAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO;AAAA,YACzC,OAAO;AAAA,YACP;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,kBAAkB,oBAAoB;AAAA,cACtC,YAAY,qBAAqB;AAAA,gBAC/B,CAAC,MAAM,EAAE;AAAA,cACX;AAAA,cACA,UAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,gBAAgB;AACd,iBAAO,KAAK,UAAU,KAAK,UAAU,KAAK,UAAU;AAAA,YAClD,OAAO;AAAA,YACP;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,sBAAsB,CAAC;AAAA,cACvB,QAAQ;AAAA,cACR,kBAAkB,2BAA2B;AAAA,cAC7C,YAAY,qBAAqB;AAAA,gBAC/B,CAAC,MAAM,EAAE;AAAA,cACX;AAAA,cACA,UAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,eAAe;AACb,iBAAO,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS;AAAA,YAC/C,OAAO;AAAA,YACP;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,QAAQ;AAAA,cACR,kBAAkB,2BAA2B;AAAA,cAC7C,YAAY,qBAAqB;AAAA,gBAC/B,CAAC,MAAM,EAAE;AAAA,cACX;AAAA,cACA,UAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,cAAc;AACZ,iBAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ;AAAA,YAC5C,OAAO;AAAA,YACP;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,QAAQ;AAAA,cACR,kBAAkB,2BAA2B;AAAA,cAC7C,YAAY,qBAAqB;AAAA,gBAC/B,CAAC,MAAM,EAAE;AAAA,cACX;AAAA,cACA,UAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,eAAe;AACb,iBAAO,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,gBAAgB;AAAA,QACnE;AAAA,QACA,iBAAiB;AACf,iBAAO,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW;AAAA,YACrD,OAAO;AAAA,YACP;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAY,qBAAqB;AAAA,gBAC/B,CAAC,MAAM,EAAE;AAAA,cACX;AAAA,cACA,UAAAA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,GA/J6J;AAgK7J,KAAC,kBAAkB,QAAQ,kBAAkB,UAAU,kBAAkB,WAAW,kBAAkB,UAAU,kBAAkB,SAAS,kBAAkB,cAAc,YAAY,UAAU,WAAW,iBAAiB,IAAI,UAAU,SAAS,UAAU,SAAS,UAAU,OAAO,OAAO,UAAU,OAAO,UAAU,SAAS;AAAA,MACjU,MAAM,UAAU;AAAA,IAClB,IAAI,WAAW,KAAK,OAAO,MAAM,MAAM,UAAU,SAAS;AAAA,MACxD,OAAO,OAAO,CAAC,GAAG,KAAK,OAAO,MAAM;AAAA,MACpC,UAAU;AAAA,IACZ,IAAI,KAAK,WAAW,SAAS;AAC7B,QAAI,QAAQ,WAAW,KAAK,KAAK,IAAI,UAAU,KAAK,OAAO,0BAA0B,SAAS,CAAC,IAAI,iBAAiB,0BAA0B,SAAS,CAAC;AACxJ,QAAI,KAAK,OAAO,QAAQ,OAAI;AAC1B,UAAI,YAAY,gBAAgB;AAChC,WAAK,OAAO,QAAQ,IAAI,QAAQ,MAAM;AAAA,QACpC;AAAA,QACA;AAAA,QACA,SAAS,WAAW;AAAA,QACpB;AAAA,QACA,OAAO;AAAA,MACT,CAAC;AACD,UAAI,UAAU,WAAW,MAAM,EAAE,SAAS,KAAG,CAAC;AAC9C,UAAI,SAAS,WAAW,KAAK,OAAO,QAAQ,IAAI,QAAQ,SAAS;AAAA,QAC/D;AAAA,QACA;AAAA,QACA,SAAS,WAAW;AAAA,QACpB;AAAA,QACA,OAAO;AAAA,MACT,CAAC,GAAG,KAAK,OAAO,eAAe,OAAI;AACjC,YAAI,YAAY,aAAa,IAAI;AACjC,aAAK,OAAO,QAAQ,IAAI,QAAQ,WAAW;AAAA,UACzC;AAAA,UACA;AAAA,UACA,SAAS,WAAW;AAAA,UACpB;AAAA,UACA,OAAO;AAAA,QACT,CAAC;AACD,YAAI,WAAW,WAAW,SAAS;AACnC,sBAAc,YAAY,KAAK,OAAO,QAAQ,IAAI,QAAQ,WAAW;AAAA,UACnE;AAAA,UACA;AAAA,UACA,SAAS,WAAW;AAAA,UACpB;AAAA,UACA,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AACA,WAAK,OAAO,QAAQ,KAAK;AAAA,QACvB;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,QACT;AAAA,QACA;AAAA,MACF,CAAC;AACD;AAAA,IACF;AACA,QAAI,UAAU,KAAK,UAAU,EAAE,SAAS,sBAAsB,OAAO,UAAU,aAAa,MAAM;AAChG,UAAIV,WAAU;AAAA,QACZ;AAAA,QACA,SAAS,KAAK,UAAU,EAAE,gBAAgB,IAAI,QAAQ,cAAc,IAAI,IAAI;AAAA,UAC1E;AAAA,QACF,CAAC,IAAI;AAAA,QACL,QAAQ;AAAA,QACR,KAAK;AAAA,UACH,SAAS,OAAO,OAAO,CAAC,GAAG,KAAK,UAAU;AAAA,QAC5C;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP,OAAO,KAAK;AAAA,MACd;AACA,UAAI;AACF,aAAK,MAAM,SAAS,IAAI,CAAC,MAAM;AAC7B,cAAI,OAAO,EAAE,MAAM;AACjB,mBAAO,EAAE,GAAGA,QAAO;AACrB,cAAI,OAAO,KAAK,WAAY,QAAO,EAAEA,QAAO;AAAA,QAC9C,CAAC;AAAA,MACH,SAASG,SAAQ;AACf,YAAI;AACJ,QAAAH,SAAQ,QAAQG,SAAQ,KAAK,MAAM,OAAO,KAAK,CAAC,MAAM;AACpD,cAAI,OAAO,EAAE,MAAM;AACjB,mBAAO,MAAM,EAAE,GAAGH,QAAO;AAC3B,cAAI,OAAO,KAAK;AACd,mBAAO,MAAM,EAAEA,QAAO;AAAA,QAC1B,CAAC,GAAG,QAAQ,WAAW,SAAS;AAAA,MAClC;AACA,UAAI,KAAK,QAAQ;AAAA,QACf;AAAA,QACA;AAAA,QACAA,SAAQ;AAAA,MACV;AACA,aAAO,cAAc,UAAU,GAAG,KAAK,CAAC,QAAQ;AAC9C,YAAI,IAAK,QAAO;AAAA,MAClB,CAAC,IAAI,KAAK;AAAA,IACZ,IAAI,QAAQ,0BAA0B,KAAK,OAAO,yBAAyB,MAAI,kBAAkB,wBAAC,UAAU;AAC1G,OAAC,2BAA2B,CAAC,wBAAwB,gCAAgC,KAAK,OAAO,SAAS,KAAK,IAAI,KAAK,OAAO,SAAS,KAAK,EAAE,MAAM,IAAI,oBAAoB,IAAI,KAAK,OAAO,SAAS,KAAK,IAAI;AAAA,QAC7M,CAAC,MAAM,GAAG,oBAAoB;AAAA,MAChC,IAAI,KAAK,OAAO,SAAS,KAAK,IAAI,oBAAoB;AAAA,IACxD,GAJiG;AAKjG,oBAAgB,IAAI;AACpB,QAAI,WAAW,WAAW,6BAAM,cAAc,YAAY,eAAe;AAAA,MACvE,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW,gBAAgB;AAAA,MAC3B,SAAS,OAAO,UAAU,cAAc,OAAO,QAAQ,uBAAuB,aAAa,MAAM,SAAS;AAAA,MAC1G;AAAA,MACA,WAAW,KAAK;AAAA,IAClB,CAAC,IATyB,aASrB;AACL,QAAI,GAAG,MAAM,IAAI,IAAI,MAAM,KAAK;AAC9B,eAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,QAAQ,KAAK;AACnD,YAAI,QAAQ,KAAK,OAAO,QAAQ,CAAC;AACjC,YAAI,MAAM,SAAS,QAAQ,MAAM,WAAW,QAAQ;AAClD,qBAAW;AACX;AAAA,QACF;AAAA,MACF;AAAA,QACG,MAAK,UAAU,GAAG,MAAM,IAAI,IAAI,EAAE,IAAI,KAAK,OAAO,QAAQ;AAC/D,QAAI,QAAQ,YAAY,KAAK,OAAO,QAAQ,QAAQ,cAAc,mBAAmB,SAAS,IAAI,CAAC,SAAS,KAAK,OAAO,QAAQ,KAAK,EAAE,WAAW,SAAS,GAAG,GAAG;AACjK,iBAAa,SAAS,KAAK,OAAO,QAAQ,QAAQ,IAAI,OAAO;AAAA,MAC3D;AAAA,QACE;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,QACT;AAAA,MACF;AAAA,MACA,qBAAqB,SAAS;AAAA,QAC5B;AAAA,MACF,IAAI;AAAA,MACJ,UAAU,YAAY,EAAE,WAAW,UAAU,UAAU,IAAI;AAAA,IAC7D,IAAI,KAAK,OAAO,QAAQ;AAAA,MACtB,OAAO;AAAA,QACL;AAAA,UACE;AAAA,UACA;AAAA,UACA,UAAU;AAAA,UACV,SAAS;AAAA,UACT,SAAS;AAAA,UACT;AAAA,QACF;AAAA,QACA,qBAAqB,SAAS;AAAA,UAC5B;AAAA,QACF,IAAI;AAAA,QACJ,UAAU,YAAY,EAAE,WAAW,UAAU,UAAU,IAAI;AAAA,MAC7D;AAAA,IACF;AACA,QAAI,UAAU;AAAA,MACZ,SAAS,mBAAmB,cAAc;AAAA,MAC1C,UAAU;AACR,eAAO,KAAK,UAAU,SAAS;AAAA,MACjC;AAAA,IACF,GAAG,eAAe,KAAK,OAAO,QAAQ,eAAe,KAAK,QAAQ,GAAG,MAAM,MAAM,KAAK,QAAQ,GAAG,MAAM;AACvG,QAAI,WAAW,MAAM;AACnB,UAAI,cAAc;AAChB,gBAAQ,eAAe,aAAa,IAAI,EAAE,MAAM,IAAI,QAAQ,aAAa,IAAI,IAAI;AAAA,UAC/E,CAAC,MAAM,GAAG;AAAA,QACZ;AACA;AAAA,MACF;AACA,WAAK,OAAO,KAAK,IAAI,MAAM,MAAM,OAAO,GAAG,KAAK,OAAO,cAAc,KAAK,OAAO,KAAK,IAAI,MAAM,aAAa,IAAI,GAAG,OAAO;AAC3H,UAAI,UAAU,WAAW,MAAM,EAAE,SAAS,KAAG,CAAC;AAC9C,eAAS,WAAW,KAAK,OAAO,KAAK,IAAI,MAAM,SAAS,OAAO;AAC/D;AAAA,IACF;AACA,QAAI;AACF,cAAQ,eAAe,aAAa,IAAI,EAAE,MAAM,IAAI,QAAQ,aAAa,IAAI,IAAI;AAAA,QAC/E,CAAC,MAAM,GAAG;AAAA,MACZ,GAAG,KAAK,OAAO,cAAc,gBAAgB,aAAa,IAAI,CAAC;AAAA,SAC5D;AACH,UAAI,KAAK,OAAO,KAAK,IAAI,QAAQ,MAAM,OAAO,GAAG,CAAC,KAAK,OAAO,YAAY;AACxE,YAAI,YAAY,aAAa,IAAI;AACjC,wBAAgB,SAAS,GAAG,KAAK,OAAO,KAAK,IAAI,QAAQ,WAAW,OAAO;AAAA,MAC7E;AACA,UAAI,UAAU,WAAW,MAAM,EAAE,SAAS,KAAG,CAAC;AAC9C,eAAS,YAAY,KAAK,OAAO,KAAK,IAAI,QAAQ,SAAS,OAAO,GAAG,gBAAgB,OAAO;AAAA,IAC9F;AAAA,EACF;AAAA,EACA,QAAQ,QAAQ;AACd,WAAO,UAAU,KAAK,eAAe,KAAK,aAAa,CAAC,IAAI,KAAK,aAAa,UAAU,KAAK,YAAY,MAAM,GAAG,QAAQ;AAAA,EAC5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,QAAQ,SAAS;AACf,WAAO,KAAK,GAAG,SAAS,OAAO,GAAG;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,UAAU,SAAS;AACjB,WAAO,KAAK,GAAG,WAAW,OAAO,GAAG;AAAA,EACtC;AAAA,EACA,QAAQ,SAAS,SAAS;AACxB,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,OAAO,WAAW,WAAW,KAAK,GAAG,SAAS,KAAK,SAAS,EAAE,OAAO,CAAC,IAAI,KAAK,GAAG,SAAS,OAAO;AAAA,EACxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBA,OAAO,MAAM,QAAQ;AACnB,WAAO,KAAK,SAAS,EAAE,IAAI,IAAI,QAAQ;AAAA,EACzC;AAAA,EACA,YAAY,SAAS,SAAS;AAC5B,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,aAAa,OAAO;AAAA,EAClC;AAAA,EACA,QAAQ,kBAAkB,SAAS;AACjC,gBAAY,UAAU,kBAAkB,mBAAmB,EAAE,IAAI,QAAQ;AACzE,QAAI,OAAO;AAAA,MACT,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AACA,WAAO,KAAK,eAAe,kBAAkB,IAAI;AAAA,EACnD;AAAA,EACA,WAAW,kBAAkB,QAAQ;AACnC,eAAW,SAAS,kBAAkB,mBAAmB,EAAE,IAAI,QAAQ;AACvE,QAAI,OAAO;AAAA,MACT,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AACA,WAAO,KAAK,eAAe,kBAAkB,IAAI;AAAA,EACnD;AAAA,EACA,eAAe,SAAS,SAAS;AAC/B,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,gBAAgB,OAAO;AAAA,EACrC;AAAA,EACA,cAAc,SAAS,SAAS;AAC9B,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,eAAe,OAAO;AAAA,EACpC;AAAA,EACA,YAAY,SAAS,SAAS;AAC5B,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,eAAe,OAAO;AAAA,EACpC;AAAA,EACA,gBAAgB,SAAS,SAAS;AAChC,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,iBAAiB,OAAO;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,MAAM,SAAS,SAAS;AACtB,gBAAY,UAAU,SAAS,UAAU,EAAE,IAAI,QAAQ,IAAI,MAAM,QAAQ,OAAO,MAAM,UAAU,CAAC,OAAO;AACxG,aAAS,MAAM;AACb,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA,aAAa,EAAE;AAAA,MACjB;AACF,WAAO;AAAA,EACT;AAAA,EACA,MAAM,MAAMG,SAAQ;AAClB,YAAQ,OAAO,MAAM;AAAA,MACnB,KAAK;AACH,eAAOA,QAAO,UAAU,UAAU,IAAI,MAAM,KAAK,YAAY,MAAM,IAAI,IAAIA,SAAQ;AAAA,MACrF,KAAK;AACH,eAAO,KAAK,YAAY,QAAQ,KAAK,KAAK,YAAY,KAAK,GAAG;AAAA,IAClE;AACA,aAAS,CAAC,MAAMI,OAAM,KAAK,OAAO,QAAQ,IAAI;AAC5C,MAAAA,QAAO,UAAU,UAAU,IAAI,MAAM,KAAK,YAAY,MAAM,IAAI,IAAIA;AACtE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,QAAQ,SAAS,SAAS;AACxB,WAAO,UAAU,KAAK;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,GAAG,SAAS,OAAO;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,OAAO,SAAS;AACd,WAAO,KAAK,GAAG,QAAQ,OAAO,GAAG;AAAA,EACnC;AAAA,EACA,GAAG,eAAe,gBAAgB,UAAU;AAC1C,QAAI;AACJ,YAAQ,OAAO,eAAe;AAAA,MAC5B,KAAK;AACH,eAAO,eAAe,WAAW;AACjC;AAAA,MACF,KAAK;AACH,eAAO,gBAAgB,CAAC,MAAM,QAAQ,cAAc,KAAK,OAAO,kBAAkB,aAAa,WAAW;AAC1G;AAAA,IACJ;AACA,UAAM,QAAQ,QAAQ,IAAI,WAAW,cAAc,QAAQ,IAAI,OAAO,YAAY,aAAa,WAAW;AAAA,MACxG;AAAA,QACE,IAAI;AAAA,MACN;AAAA,IACF,IAAI,WAAW,CAAC,QAAQ;AACxB,QAAI,UAAU;AACd,aAAS,UAAU;AACjB,aAAO,QAAQ,OAAO,iBAAiB,WAAW,UAAU,eAAe,MAAM,UAAU,SAAS,aAAa,SAAS,cAAc,OAAO,UAAU;AAC3J,aAAS,YAAY,KAAK,YAAY;AAAA,MACpC;AAAA,QACE,CAAC,IAAI,GAAG,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,MACjC;AAAA,MACA,KAAK;AAAA,IACP;AACA,aAAS,UAAU,SAAS;AAC1B,UAAI,KAAK,WAAW,QAAQ,UAAU,EAAE,eAAe,KAAG,CAAC;AAC3D,cAAQ,MAAM;AAAA,QACZ,KAAK;AACH,eAAK,MAAM,UAAU,CAAC,GAAG,KAAK,MAAM,MAAM,KAAK,EAAE;AACjD;AAAA,QACF,KAAK;AACH,eAAK,MAAM,YAAY,CAAC,GAAG,KAAK,MAAM,QAAQ,KAAK,EAAE;AACrD;AAAA,QACF,KAAK;AACH,eAAK,MAAM,UAAU,CAAC,GAAG,KAAK,MAAM,MAAM,KAAK,EAAE;AACjD;AAAA,QACF,KAAK;AACH,eAAK,MAAM,cAAc,CAAC,GAAG,KAAK,MAAM,UAAU,KAAK,EAAE;AACzD;AAAA;AAAA,QAEF,KAAK;AACH,eAAK,MAAM,cAAc,CAAC,GAAG,KAAK,MAAM,UAAU;AAAA,YAChD,cAAc,IAAI,QAAQ;AAAA,UAC5B;AACA;AAAA,QACF,KAAK;AACH,eAAK,MAAM,iBAAiB,CAAC,GAAG,KAAK,MAAM,aAAa,KAAK,EAAE;AAC/D;AAAA;AAAA;AAAA,QAGF,KAAK;AACH,eAAK,MAAM,iBAAiB,CAAC,GAAG,KAAK,MAAM,aAAa;AAAA,YACtD,cAAc,IAAI,SAAS;AAAA,UAC7B;AACA;AAAA,QACF,KAAK;AACH,eAAK,MAAM,gBAAgB,CAAC,GAAG,KAAK,MAAM,YAAY,KAAK,EAAE;AAC7D;AAAA,QACF,KAAK;AACH,eAAK,MAAM,gBAAgB,CAAC,GAAG,KAAK,MAAM,YAAY,KAAK,EAAE;AAC7D;AAAA,QACF,KAAK;AACH,eAAK,MAAM,kBAAkB,CAAC,GAAG,KAAK,MAAM,cAAc,KAAK,EAAE;AACjE;AAAA,QACF,KAAK;AACH,eAAK,MAAM,UAAU,CAAC,GAAG,KAAK,MAAM,MAAM,KAAK,EAAE;AACjD;AAAA,QACF,KAAK;AACH,eAAK,MAAM,UAAU,CAAC,GAAG,KAAK,MAAM,MAAM,KAAK,EAAE;AACjD;AAAA,QACF,KAAK;AACH,eAAK,MAAM,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK,KAAK,EAAE;AAC/C;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,GAAG,MAAM;AACP,WAAO,aAAa,KAAK,MAAM,OAAO,IAAI,GAAG,aAAa,KAAK,MAAM,WAAW,IAAI,GAAG,aAAa,KAAK,MAAM,cAAc,IAAI,GAAG,aAAa,KAAK,MAAM,aAAa,IAAI,GAAG,aAAa,KAAK,MAAM,aAAa,IAAI,GAAG,aAAa,KAAK,MAAM,eAAe,IAAI,GAAG,aAAa,KAAK,MAAM,OAAO,IAAI,GAAG,aAAa,KAAK,MAAM,OAAO,IAAI,GAAG,SAAS,YAAY,KAAK,UAAU,SAAS;AAAA,MACjY,KAAK,UAAU;AAAA,MACf,KAAK,UAAU;AAAA,IACjB,GAAG,KAAK,UAAU,QAAQ,MAAM,KAAK,oBAAoB,UAAU,SAAS,KAAK,oBAAoB,WAAW,CAAC,GAAG,KAAK,oBAAoB,OAAO;AAAA,MAClJ,GAAG,KAAK,oBAAoB;AAAA,IAC9B,GAAG,KAAK,oBAAoB,QAAQ,SAAS,SAAS,aAAa,KAAK,UAAU,SAAS;AAAA,MACzF,KAAK,UAAU;AAAA,MACf;AAAA,QACE,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AAAA,MACjB;AAAA,IACF,GAAG,KAAK,UAAU,SAAS,MAAM,KAAK,UAAU,QAAQ,MAAM,KAAK,oBAAoB,UAAU,SAAS,KAAK,oBAAoB,WAAW,CAAC,GAAG,KAAK,oBAAoB,OAAO;AAAA,MAChL,GAAG,KAAK,oBAAoB;AAAA,IAC9B,GAAG,KAAK,oBAAoB,QAAQ,OAAO,KAAK,oBAAoB,WAAW,SAAS,KAAK,oBAAoB,WAAW,CAAC,GAAG,KAAK,oBAAoB,OAAO;AAAA,MAC9J,GAAG,KAAK,oBAAoB;AAAA,IAC9B,GAAG,KAAK,oBAAoB,SAAS,QAAQ;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,MAAM,QAAQ,aAAa,KAAK;AAC9B,QAAI,WAAW,IAAIY,SAAQ;AAAA,MACzB,GAAG,KAAK;AAAA,MACR,QAAQ;AAAA,IACV,CAAC;AACD,aAAS,YAAY,EAAE,GAAG,KAAK,UAAU,GAAG,SAAS,cAAc,EAAE,GAAG,KAAK,YAAY,GAAG,SAAS,YAAY,MAAM,KAAK,UAAU,GAAG,SAAS,YAAY,eAAe,KAAK,SAAS,GAAG,SAAS,WAAW,EAAE,GAAG,KAAK,SAAS,GAAG,SAAS,SAAS,IAAI,KAAK,SAAS,GAAG,SAAS,sBAAsB;AAAA,MAC5S,OAAO,CAAC,GAAG,KAAK,oBAAoB,SAAS,CAAC,CAAC;AAAA,MAC/C,QAAQ,CAAC,GAAG,KAAK,oBAAoB,UAAU,CAAC,CAAC;AAAA,MACjD,QAAQ,CAAC,GAAG,KAAK,oBAAoB,UAAU,CAAC,CAAC;AAAA,IACnD;AACA,QAAI,WAAW,OAAO,eAAe,UAAU,WAAW,WAAW,MAAM,aAAa,QAAQ;AAChG,WAAO,KAAK,YAAY,UAAU,KAAK,WAAW,SAAS,SAAS,GAAG,KAAK,cAAc,UAAU,KAAK,aAAa,SAAS,WAAW,GAAG,QAAQ,MAAM,SAAS,WAAW,KAAK,MAAM,UAAU;AAAA,MAClM,GAAG,KAAK,MAAM,WAAW,CAAC;AAAA,MAC1B,GAAG,QAAQ,MAAM,WAAW,CAAC;AAAA,IAC/B,IAAI,QAAQ,MAAM,aAAa,WAAW,KAAK,MAAM,cAAc;AAAA,MACjE,GAAG,KAAK,MAAM,eAAe,CAAC;AAAA,MAC9B,GAAG,QAAQ,MAAM,eAAe,CAAC;AAAA,IACnC,IAAI,KAAK,MAAM,QAAQ,YAAY,IAAI,GAAG,OAAO,OAAO,SAAS,OAAO,OAAO,EAAE;AAAA,MAC/E,CAAC,EAAE,QAAQ,MAAM,SAAS,OAAO,qBAAqB,MAAM;AAC1D,YAAI,QAAQ,WAAW,KAAK,KAAK,OAAO,UAAU,MAAM,SAAS,MAAM,UAAU;AAC/E,cAAI,OAAO,aAAa,YAAY;AACpC,eAAK;AAAA,YACH;AAAA,YACA;AAAA,YACA;AAAA,YACA,UAAU,MAAM;AAAA,cACd,GAAG,aAAa,CAAC;AAAA,cACjB,OAAO,UAAU,QAAQ,MAAM,QAAQ,UAAU,KAAK,IAAI;AAAA,gBACxD,GAAG,UAAU,SAAS,CAAC;AAAA,gBACvB,GAAG,QAAQ,MAAM,SAAS,CAAC;AAAA,cAC7B,IAAI;AAAA,gBACF,UAAU;AAAA,gBACV,GAAG,QAAQ,MAAM,SAAS,CAAC;AAAA,cAC7B,IAAI,QAAQ,MAAM;AAAA,YACpB,CAAC;AAAA,YACD;AAAA,YACA;AAAA,UACF;AAAA,QACF;AACE,eAAK;AAAA,YACH;AAAA,YACA;AAAA,YACA;AAAA,YACA,UAAU,OAAO;AAAA,cACf,OAAO,QAAQ,MAAM;AAAA,YACvB,CAAC;AAAA,YACD;AAAA,cACE,YAAY;AAAA,YACd;AAAA,YACA;AAAA,UACF;AAAA,MACJ;AAAA,IACF,GAAG;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA,MAAM,MAAM,KAAK;AACf,QAAI,CAAC,KAAK;AACR,UAAI,OAAO,QAAQ,UAAU;AAC3B,aAAK,WAAW,IAAI,GAAG,KAAK,WAAW,KAAK,OAAO,SAAS,KAAK,OAAO,SAAS;AAAA,UAC/E,OAAO,OAAO,CAAC,GAAG,KAAK,OAAO,MAAM;AAAA,UACpC,KAAK;AAAA,QACP,IAAI,KAAK,OAAO,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,OAAO,SAAS,KAAK,OAAO,OAAO,OAAO,KAAK,OAAO,KAAK,OAAO,SAAS;AAAA,UACnI,MAAM,KAAK;AAAA,QACb;AACA,YAAI,OAAO,KAAK,MAAM;AACtB,YAAI,KAAK,WAAW,cAAc;AAChC,eAAK,oBAAoB,IAAI,MAAM,KAAK,oBAAoB,IAAI,IAAI,CAAC;AACrE,cAAI,WAAW,MAAM,YAAY,OAAO,MAAM,YAAY,YAAY,MAAM,YAAY,QAAS,KAAK,WAAW;AAAA,YAC/G,KAAK,KAAK;AAAA,UACZ,IAAI,MAAM;AACV,eAAK,oBAAoB,IAAI,EAAE,KAAK;AAAA,YAClC,MAAM,KAAK;AAAA,YACX,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA,YACZ;AAAA,YACA,QAAQ,KAAK;AAAA,UACf,CAAC;AAAA,QACH;AACE,eAAK,UAAU,IAAI,IAAI;AAAA,YACrB,MAAM,KAAK,QAAQ,KAAK,UAAU,IAAI,GAAG;AAAA,YACzC,SAAS,KAAK,WAAW,KAAK,UAAU,IAAI,GAAG;AAAA,YAC/C,QAAQ,KAAK,UAAU,KAAK,UAAU,IAAI,GAAG;AAAA,YAC7C,OAAO,KAAK,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,YAC3C,UAAU,KAAK,YAAY,KAAK,UAAU,IAAI,GAAG;AAAA,YACjD,QAAQ,KAAK,UAAU,KAAK,UAAU,IAAI,GAAG;AAAA,UAC/C;AACF,eAAO,KAAK,SAAS,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,SAAS,KAAK,KAAK,GAAG,KAAK,aAAa,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,aAAa,KAAK,SAAS,GAAG,KAAK,UAAU,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,UAAU,KAAK,MAAM,GAAG,KAAK,gBAAgB,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,gBAAgB,KAAK,YAAY,GAAG,KAAK,WAAW,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,WAAW,KAAK,OAAO,GAAG,KAAK,eAAe,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,eAAe,KAAK,WAAW,GAAG,KAAK,eAAe,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,eAAe,KAAK,WAAW,GAAG,KAAK,iBAAiB,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,iBAAiB,KAAK,aAAa,GAAG,KAAK,SAAS,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,SAAS,KAAK,KAAK,GAAG;AAAA,MACznB;AACA,aAAO,KAAK,MAAM,CAAC,GAAG,IAAI;AAAA,IAC5B;AACA,QAAI,WAAW,IAAIA,SAAQ;AAAA,MACzB,GAAG,KAAK;AAAA,MACR,QAAQ;AAAA,IACV,CAAC;AACD,aAAS,YAAY,EAAE,GAAG,KAAK,UAAU,GAAG,SAAS,cAAc,EAAE,GAAG,KAAK,YAAY,GAAG,SAAS,YAAY,eAAe,KAAK,SAAS,GAAG,SAAS,WAAW,EAAE,GAAG,KAAK,SAAS,GAAG,SAAS,YAAY,MAAM,KAAK,UAAU;AACrO,QAAI,UAAU,IAAI,QAAQ;AAC1B,WAAO,KAAK,YAAY,UAAU,KAAK,WAAW,SAAS,SAAS,GAAG,KAAK,cAAc,UAAU,KAAK,aAAa,SAAS,WAAW,GAAG,QAAQ,YAAY,MAAM,KAAK,QAAQ,QAAQ,MAAM,SAAS,WAAW,KAAK,MAAM,UAAU;AAAA,MACzO,GAAG,KAAK,MAAM,WAAW,CAAC;AAAA,MAC1B,GAAG,QAAQ,MAAM,WAAW,CAAC;AAAA,IAC/B,IAAI,QAAQ,MAAM,aAAa,WAAW,KAAK,MAAM,cAAc;AAAA,MACjE,GAAG,KAAK,MAAM,eAAe,CAAC;AAAA,MAC9B,GAAG,QAAQ,MAAM,eAAe,CAAC;AAAA,IACnC,IAAI,KAAK,MAAM,QAAQ,YAAY,IAAI,GAAG,OAAO,OAAO,SAAS,OAAO,OAAO,EAAE;AAAA,MAC/E,CAAC,EAAE,QAAQ,MAAM,SAAS,OAAO,UAAU,MAAM;AAC/C,aAAK;AAAA,UACH;AAAA,UACA;AAAA,UACA;AAAA,UACA,UAAU,MAAM;AAAA,YACd,GAAG,aAAa,CAAC;AAAA,YACjB,OAAO,UAAU,QAAQ,MAAM,QAAQ,UAAU,KAAK,IAAI;AAAA,cACxD,GAAG,UAAU,SAAS,CAAC;AAAA,cACvB,GAAG,QAAQ,MAAM,SAAS,CAAC;AAAA,YAC7B,IAAI;AAAA,cACF,UAAU;AAAA,cACV,GAAG,QAAQ,MAAM,SAAS,CAAC;AAAA,YAC7B,IAAI,QAAQ,MAAM;AAAA,UACpB,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,GAAG;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,IAAI,QAAQ;AACV,QAAI,CAAC,OAAQ,QAAO;AACpB,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,UAAId,OAAM;AACV,eAAS,KAAK,OAAQ,CAAAA,OAAMA,KAAI,IAAI,CAAC;AACrC,aAAOA;AAAA,IACT;AACA,WAAO,kBAAkB,WAAW,KAAK,gBAAgB;AAAA,MACvD,OAAO,KAAK,CAAC,YAAY;AACvB,YAAI,OAAO,WAAW,WAAY,QAAO,QAAQ,IAAI;AACrD,YAAI,mBAAmBc;AACrB,iBAAO,KAAK,KAAK,OAAO,EAAE,QAAQ;AACpC,YAAI,QAAQ,aAAa,SAAS;AAChC,iBAAO,KAAK;AAAA,YACV;AAAA,UACF,EAAE,QAAQ;AACZ,YAAI,OAAO,QAAQ,WAAW;AAC5B,iBAAO,QAAQ,QAAQ,IAAI;AAC7B,YAAI,QAAQ,mBAAmBA;AAC7B,iBAAO,KAAK,KAAK,QAAQ,OAAO;AAClC,YAAI,QAAQ,aAAa,SAAS;AAChC,iBAAO,KAAK,KAAK,QAAQ,OAAO;AAClC,YAAI,QAAQ,aAAa,SAAS;AAChC,iBAAO,KAAK,KAAK,QAAQ,OAAO;AAClC,YAAI;AACF,iBAAO,KAAK,KAAK,QAAQ,OAAO;AAAA,QAClC,SAAShB,SAAQ;AACf,gBAAM,QAAQ;AAAA,YACZ;AAAA,UACF,GAAGA;AAAA,QACL;AAAA,MACF,CAAC,EAAE,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE,WAAW,cAAc,EAAE,QAAQ,GAAG,EAAE;AAAA,IACxE,GAAG,QAAQ,KAAK,KAAK,MAAM;AAAA,EAC7B;AAAA,EACA,wBAAwB,QAAQ;AAC9B,QAAI,OAAO,gBAAgB,QAAQ,EAAG,QAAO;AAC7C,aAAS,WAAW,OAAO,gBAAgB;AACzC,WAAK,gBAAgB;AAAA,QACnB,QAAQ,KAAK,CAAC,MAAM;AAClB,cAAI,CAAC,EAAG;AACR,cAAI,KAAK,KAAK,KAAK,CAAC;AACpB,iBAAO,cAAc,UAAU,GAAG,KAAK,CAAC,OAAO;AAC7C,iBAAK,GAAG,QAAQ,IAAI,EAAE,QAAQ;AAAA,UAChC,CAAC,IAAI,EAAE,QAAQ;AAAA,QACjB,CAAC;AAAA,MACH;AACF,WAAO;AAAA,EACT;AAAA,EACA,KAAK,QAAQ;AACX,QAAI,OAAO,UAAU,YAAY;AAC/B,UAAI,WAAW,OAAO,IAAI;AAC1B,aAAO,oBAAoB,WAAW,KAAK,gBAAgB;AAAA,QACzD,SAAS,KAAK,CAAC,YAAY;AACzB,cAAI,mBAAmBgB,UAAS;AAC9B,oBAAQ,YAAY,MAAM,KAAK,UAAU,GAAG,QAAQ,kBAAkB,MAAM,KAAK,gBAAgB,GAAG,QAAQ,uBAAuB,MAAM,KAAK,qBAAqB,GAAG,QAAQ,MAAM,KAAK,YAAY,IAAI,GAAG,QAAQ,MAAM,KAAK,YAAY,KAAK;AAChP,qBAAS;AAAA,cACP;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF,KAAK,OAAO,OAAO,QAAQ,OAAO,OAAO;AACvC,mBAAK;AAAA,gBACH;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AACF,mBAAO,YAAY,OAAO,UAAU,KAAK,wBAAwB,OAAO,GAAG;AAAA,UAC7E;AACA,iBAAO,OAAO,WAAW,aAAa;AAAA,YACpC;AAAA,UACF,IAAI,OAAO,QAAQ,WAAW,aAAa,QAAQ;AAAA,YACjD;AAAA,UACF,IAAI,KAAK,KAAK,OAAO;AAAA,QACvB,CAAC,EAAE,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE,WAAW,cAAc,EAAE,QAAQ,GAAG,EAAE;AAAA,MACxE,GAAG,QAAQ;AAAA,IACb;AACA,SAAK,wBAAwB,MAAM;AACnC,QAAI,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO;AACpD,QAAI,OAAO,YAAY,MAAM,MAAM,OAAO,YAAY,MAAM,KAAK,UAAU,GAAG,OAAO,kBAAkB,MAAM,KAAK,gBAAgB,GAAG,OAAO,uBAAuB,MAAM,KAAK,qBAAqB,GAAG,OAAO,qBAAqB,WAAW,KAAK,oBAAoB,QAAQ,KAAK,oBAAoB,QAAQ,KAAK,oBAAoB,MAAM;AAAA,MAC5U,OAAO,oBAAoB;AAAA,IAC7B,IAAI,KAAK,oBAAoB,QAAQ,OAAO,oBAAoB,SAAS,OAAO,qBAAqB,WAAW,KAAK,oBAAoB,SAAS,KAAK,oBAAoB,SAAS,KAAK,oBAAoB,OAAO;AAAA,MAClN,OAAO,oBAAoB;AAAA,IAC7B,IAAI,KAAK,oBAAoB,SAAS,OAAO,oBAAoB,SAAS,WAAW,OAAO,SAAS,CAAC,MAAM,KAAK,SAAS,IAAI;AAAA,MAC5H,GAAG,OAAO,SAAS;AAAA,MACnB,GAAG,KAAK,SAAS;AAAA,IACnB,IAAI,OAAO,cAAc,KAAK,QAAQ,OAAO,UAAU,GAAG,MAAM;AAC9D,cAAQ,KAAK,iBAAiB,KAAK,aAAa,IAAI,IAAI,CAAC;AACzD,UAAI,UAAU,SAAS,SAAS,SAAS,OAAO,KAAK,UAAU,IAAI,CAAC,IAAI;AACxE,WAAK,aAAa,IAAI,EAAE;AAAA,QACtB,CAAC,EAAE,UAAU,UAAU,MAAM,YAAY;AAAA,MAC3C,MAAM,KAAK,SAAS,SAAS,KAAK,SAAS,OAAO;AAAA,QAChD,OAAO,SAAS;AAAA,MAClB,GAAG,KAAK,SAAS,uBAAuB,KAAK,SAAS,qBAAqB;AAAA,QACzE,OAAO,SAAS;AAAA,MAClB;AAAA,IACF;AACE,aAAO,SAAS,OAAO,WAAW,KAAK,SAAS,SAAS,KAAK,SAAS,OAAO;AAAA,QAC5E,OAAO,SAAS;AAAA,MAClB,IAAI,OAAO,SAAS,qBAAqB,WAAW,KAAK,SAAS,uBAAuB,KAAK,SAAS,qBAAqB;AAAA,QAC1H,OAAO,SAAS;AAAA,MAClB;AACF,QAAI,oBAAoB,KAAK,SAAS,MAAM,GAAG,OAAO,SAAS,qBAAqB,QAAQ;AAC1F,0BAAoB,KAAK,SAAS,oBAAoB;AACtD,UAAI,YAAY,CAAC;AACjB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,qBAAqB,QAAQ,KAAK;AAClE,YAAI,MAAM,KAAK,SAAS,qBAAqB,CAAC;AAC9C,YAAI,aAAa,UAAU,SAAS,IAAI,QAAQ,MAAM,KAAK,SAAS,qBAAqB,OAAO,GAAG,CAAC,GAAG,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,MAC1I;AACA,gBAAU,SAAS;AAAA,IACrB;AACA,SAAK,YAAY,eAAe,KAAK,WAAW,OAAO,SAAS,GAAG,WAAW,OAAO,UAAU,SAAS,KAAK,KAAK,SAAS,OAAO,UAAU,SAAS,GAAG,WAAW,OAAO,UAAU,KAAK,KAAK,KAAK,MAAM,OAAO,UAAU,KAAK,GAAG,WAAW,OAAO,YAAY,IAAI,KAAK,KAAK,MAAM,OAAO,YAAY,IAAI,GAAG,WAAW,OAAO,YAAY,KAAK,KAAK,KAAK,MAAM,OAAO,YAAY,KAAK,GAAG,WAAW,OAAO,YAAY,KAAK,MAAM,OAAO,SAAS,SAAS,KAAK,SAAS,OAAO;AAAA,MACjd,OAAO,SAAS;AAAA,IAClB;AACA,aAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO;AACtC,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACF,QAAI,MAAM;AACR,cAAQ,KAAK,iBAAiB,KAAK,aAAa,IAAI,IAAI,CAAC;AACzD,UAAI,UAAU,SAAS,SAAS,SAAS,OAAO,KAAK,UAAU,IAAI,CAAC,IAAI;AACxE,UAAI,KAAK,aAAa,IAAI,EAAE;AAAA,QAC1B,CAAC,EAAE,UAAU,UAAU,MAAM,YAAY;AAAA,MAC3C;AACE,eAAO;AACT,WAAK,aAAa,IAAI,EAAE;AAAA,QACtB,KAAK,QAAQ,WAAW;AAAA,UACtB,MAAM,OAAO,OAAO;AAAA,UACpB,MAAM,OAAO,OAAO;AAAA,UACpB,UAAU;AAAA,UACV,cAAc,OAAO;AAAA,UACrB,OAAO,OAAO,WAAW;AAAA,UACzB,QAAQ,OAAO,OAAO;AAAA,UACtB,YAAY,OAAO;AAAA,UACnB,OAAO,OAAO,UAAU;AAAA,UACxB,OAAO,OAAO,YAAY;AAAA,UAC1B,QAAQ,OAAO,MAAM,WAAW,OAAO,CAAC,MAAM,GAAG,YAAY,QAAQ,EAAE,IAAI,CAAC,OAAO;AAAA,YACjF,IAAI,EAAE,SAAS;AAAA,YACf,OAAO,IAAI,MAAM,EAAE,SAAS;AAAA,UAC9B,EAAE;AAAA,UACF,SAAS,OAAO,MAAM,WAAW,OAAO,CAAC,MAAM,GAAG,YAAY,SAAS,EAAE,IAAI,CAAC,OAAO;AAAA,YACnF,IAAI,EAAE,SAAS;AAAA,YACf,OAAO,IAAI,MAAM,EAAE,SAAS;AAAA,UAC9B,EAAE;AAAA,QACJ,IAAI;AAAA,UACF,MAAM,OAAO,OAAO;AAAA,UACpB,MAAM,OAAO,OAAO;AAAA,UACpB,UAAU;AAAA,UACV,cAAc,OAAO;AAAA,QACvB;AAAA,MACF,GAAG,WAAW,OAAO,KAAK,MAAM,KAAK,QAAQ;AAAA,QAC3C,KAAK;AAAA,QACL,iBAAiB,OAAO,KAAK;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AACE,iBAAW,OAAO,KAAK,MAAM,KAAK,QAAQ;AAAA,QACxC,KAAK;AAAA,QACL,iBAAiB,OAAO,KAAK;AAAA,MAC/B;AACF,WAAO,OAAO,UAAU,WAAW,KAAK,UAAU,SAAS,UAAU,KAAK,UAAU,QAAQ;AAAA,MAC1F,GAAG,OAAO,UAAU;AAAA,IACtB,CAAC,IAAI,OAAO,UAAU,WAAW,KAAK,UAAU,QAAQ,UAAU,KAAK,UAAU,OAAO;AAAA,MACtF,GAAG,OAAO,UAAU;AAAA,IACtB,CAAC,IAAI;AAAA,EACP;AAAA,EACA,MAAM,OAAO;AACX,QAAI,OAAO,SAAS,YAAY;AAC9B,UAAI,OAAO;AAAA,QACT,UAAU;AAAA,UACR,KAAK,UAAU;AAAA,YACb,MAAM,KAAK,OAAO;AAAA,YAClB,MAAM,KAAK,OAAO;AAAA,YAClB,SAAS,MAAM,SAAS;AAAA,UAC1B,CAAC;AAAA,QACH;AAAA,QACA,IAAI;AAAA,MACN;AACA,WAAK,SAAS,OAAO,KAAK,IAAI;AAAA,IAChC,WAAW,OAAO,SAAS,UAAU;AACnC,eAAS,QAAQ,OAAO,KAAK,KAAK;AAChC,YAAI,OAAO,MAAM,IAAI,KAAK,UAAU;AAClC,cAAI,cAAc,EAAE,GAAG,MAAM,IAAI,EAAE;AACnC,gBAAM,IAAI,IAAI,CAAC,MAAM;AACnB,gBAAI,MAAM,KAAI,QAAO;AAAA,UACvB;AAAA,QACF;AACF,UAAI,OAAO;AAAA,QACT,UAAU;AAAA,UACR,KAAK,UAAU;AAAA,YACb,MAAM,KAAK,OAAO;AAAA,YAClB,MAAM,KAAK,OAAO;AAAA,YAClB,SAAS,OAAO,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG;AAAA,UACtE,CAAC;AAAA,QACH;AAAA,QACA,IAAI,6BAAM,OAAN;AAAA,MACN;AACA,WAAK,SAAS,OAAO,KAAK,IAAI;AAAA,IAChC;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,MAAM,gBAAgBlB,SAAQ;AAClC,QAAI,gBAAgBkB,YAAW,OAAO,QAAQ,cAAc,KAAK,WAAW,KAAK,SAAS,KAAK;AAC7F,UAAI,MAAM,OAAO,QAAQ,aAAa,OAAO,gBAAgBA,WAAU,KAAK,QAAQ,EAAE,QAAQ,0BAA0BA,WAAU,eAAe,QAAQ,EAAE,QAAQ,OAAO,kBAAkB,aAAa,kBAAkB,MAAM;AAC/N,cAAM,IAAI,MAAM,iBAAiB;AAAA,MACnC,GAAG,GAAG,WAAW,wBAAC,EAAE,SAAS,MAAM,MAAM,MAAM;AAAA,QAC7C,IAAI,QAAQ,eAAe,QAAQ,KAAK,KAAK,GAAG;AAAA,UAC9C,QAAQ,QAAQ;AAAA,UAChB,SAAS,QAAQ;AAAA,UACjB,QAAQ,QAAQ;AAAA,UAChB,aAAa,QAAQ;AAAA,UACrB,gBAAgB,QAAQ;AAAA,UACxB,QAAQ,QAAQ;AAAA,UAChB,UAAU,QAAQ;AAAA,UAClB,MAAM,QAAQ;AAAA,UACd,WAAW,QAAQ;AAAA,UACnB,WAAW,QAAQ;AAAA,UACnB,MAAM,QAAQ;AAAA,QAChB,CAAC;AAAA,MACH,GAdiB;AAejB,aAAO,KAAK,MAAM,OAAO,MAAM,UAAU;AAAA,QACvC,OAAO;AAAA,QACP,GAAGlB;AAAA,QACH,QAAQ;AAAA,UACN,GAAGA,SAAQ;AAAA,UACX,MAAM;AAAA,QACR;AAAA,QACA,QAAQ;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF,CAAC,GAAG;AAAA,IACN;AACA,QAAI,SAAS,0BAA0BkB,WAAU,eAAe,QAAQ,EAAE,QAAQ,OAAO,kBAAkB,aAAa,kBAAkB,MAAM;AAC9I,YAAM,IAAI,MAAM,iBAAiB;AAAA,IACnC,GAAG,GAAG,SAAS,KAAK,UAAU,KAAK,SAAS,GAAG,IAAI,IAAI,IAAI,UAAU,wBAAC,EAAE,SAAS,MAAM,MAAM,MAAM;AAAA,MACjG,IAAI;AAAA,QACF,eAAe,QAAQ,KAAK,MAAM,MAAM,MAAM,KAAK,GAAG;AAAA,QACtD;AAAA,UACE,QAAQ,QAAQ;AAAA,UAChB,SAAS,QAAQ;AAAA,UACjB,QAAQ,QAAQ;AAAA,UAChB,aAAa,QAAQ;AAAA,UACrB,gBAAgB,QAAQ;AAAA,UACxB,QAAQ,QAAQ;AAAA,UAChB,UAAU,QAAQ;AAAA,UAClB,MAAM,QAAQ;AAAA,UACd,WAAW,QAAQ;AAAA,UACnB,WAAW,QAAQ;AAAA,UACnB,MAAM,QAAQ;AAAA,QAChB;AAAA,MACF;AAAA,IACF,GAjBqE;AAkBrE,WAAO,KAAK,MAAM,OAAO,MAAM,SAAS;AAAA,MACtC,OAAO;AAAA,MACP,GAAGlB;AAAA,MACH,QAAQ;AAAA,QACN,GAAGA,SAAQ;AAAA,QACX,MAAM;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF,CAAC,GAAG,KAAK;AAAA,MACP;AAAA,MACA,QAAQ,KAAK,SAAS,GAAG,IAAI,MAAM;AAAA,MACnC;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,GAAGA;AAAA,QACH,QAAQ;AAAA,UACN,GAAGA,SAAQ;AAAA,UACX,MAAM;AAAA,QACR;AAAA,QACA,QAAQ;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF,GAAG;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,IAAI,MAAM,SAAS,MAAM;AACvB,WAAO,KAAK,IAAI,OAAO,MAAM,SAAS,IAAI,GAAG;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,KAAK,MAAM,SAAS,MAAM;AACxB,WAAO,KAAK,IAAI,QAAQ,MAAM,SAAS,IAAI,GAAG;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,IAAI,MAAM,SAAS,MAAM;AACvB,WAAO,KAAK,IAAI,OAAO,MAAM,SAAS,IAAI,GAAG;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,MAAM,MAAM,SAAS,MAAM;AACzB,WAAO,KAAK,IAAI,SAAS,MAAM,SAAS,IAAI,GAAG;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,OAAO,MAAM,SAAS,MAAM;AAC1B,WAAO,KAAK,IAAI,UAAU,MAAM,SAAS,IAAI,GAAG;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,QAAQ,MAAM,SAAS,MAAM;AAC3B,WAAO,KAAK,IAAI,WAAW,MAAM,SAAS,IAAI,GAAG;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,IAAI,MAAM,SAAS,MAAM;AACvB,WAAO,KAAK,IAAI,OAAO,MAAM,SAAS,IAAI,GAAG;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,KAAK,MAAM,SAAS,MAAM;AACxB,WAAO,KAAK,IAAI,QAAQ,MAAM,SAAS,IAAI,GAAG;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,QAAQ,MAAM,SAAS,MAAM;AAC3B,WAAO,KAAK,IAAI,WAAW,MAAM,SAAS,IAAI,GAAG;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,MAAM,QAAQ,MAAM,SAAS,MAAM;AACjC,WAAO,KAAK,IAAI,OAAO,YAAY,GAAG,MAAM,SAAS,MAAM,MAAM,MAAM,GAAG;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,GAAG,MAAM,SAAS;AAChB,WAAO,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,GAAG,MAAM,MAAM,OAAO,IAAI,QAAQ,KAAK,2CAA2C,GAAG;AAAA,EACrI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAM,SAAS,MAAM,OAAO;AAC1B,aAAS,UAAU,QAAQ,SAAS,UAAU,EAAE,IAAI,SAAS,GAAG,OAAO,MAAM,UAAU,WAAW,OAAO,WAAW,YAAY,QAAQ,MAAM,OAAO,SAAS,UAAU,EAAE,IAAI,SAAS,KAAK,OAAO,WAAW,aAAa,QAAQ,MAAM,OAAO;AAChP,QAAI,EAAE,GAAG,IAAI;AACb,QAAI,OAAO,QAAQ,SAAU,QAAO;AACpC,YAAQ,OAAO,OAAO;AAAA,MACpB,KAAK;AACH,eAAO,CAAC,SAAS,CAAC,WAAW,KAAK,IAAI,OAAO,QAAQ,QAAQ,KAAK,UAAU,QAAQ,KAAK,UAAU,MAAM,IAAI,IAAI;AAAA,UAC/G,KAAK,UAAU,MAAM,IAAI;AAAA,UACzB;AAAA,UACA;AAAA,YACE,UAAU,OAAO;AAAA,UACnB;AAAA,QACF,IAAI,KAAK,UAAU,MAAM,IAAI,IAAI,OAAO,QAAQ,UAAU,OAAO,QAAQ,KAAK,UAAU,QAAQ,UAAU,KAAK,UAAU,OAAO,OAAO;AAAA,UACrI,UAAU,OAAO;AAAA,QACnB,CAAC,GAAG;AAAA,MACN,KAAK;AACH,eAAO,QAAQ,OAAO,cAAc,EAAE,QAAQ,KAAK,UAAU,YAAY,KAAK,UAAU,MAAM,IAAI,IAAI,SAAS,KAAK,UAAU,QAAQ,MAAM,KAAK,UAAU,KAAK,GAAG;AAAA,MACrK;AACE,gBAAQ,OAAO,cAAc,EAAE,QAAQ,KAAK,UAAU,YAAY,KAAK,UAAU,MAAM,IAAI,IAAI,QAAQ;AAAA,IAC3G;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,SAAS,SAAS,MAAM,OAAO;AAC7B,aAAS,UAAU,QAAQ,SAAS,UAAU,EAAE,IAAI,SAAS,GAAG,OAAO,MAAM,UAAU,WAAW,OAAO,WAAW,YAAY,QAAQ,MAAM,OAAO,SAAS,UAAU,EAAE,IAAI,SAAS,KAAK,OAAO,WAAW,aAAa,QAAQ,MAAM,OAAO;AAChP,QAAI,EAAE,GAAG,IAAI;AACb,QAAI,OAAO,QAAQ,SAAU,QAAO;AACpC,YAAQ,OAAO,OAAO;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,QAAQ,KAAK,UAAU,YAAY,KAAK,UAAU,UAAU,IAAI,IAAI;AAAA,UACjF,KAAK,UAAU,UAAU,IAAI;AAAA,UAC7B;AAAA,UACA;AAAA,YACE,UAAU,OAAO;AAAA,UACnB;AAAA,QACF,IAAI,KAAK,UAAU,UAAU,IAAI,IAAI,OAAO,QAAQ,UAAU,OAAO,QAAQ,KAAK,UAAU,YAAY;AAAA,UACtG,KAAK,UAAU;AAAA,UACf;AAAA,UACA;AAAA,YACE,UAAU,OAAO;AAAA,UACnB;AAAA,QACF,GAAG;AAAA,MACL,KAAK;AACH,eAAO,QAAQ,OAAO,cAAc,EAAE,QAAQ,KAAK,UAAU,gBAAgB,KAAK,UAAU,UAAU,IAAI,IAAI,SAAS,KAAK,UAAU,YAAY,MAAM,KAAK,UAAU,SAAS,GAAG;AAAA,MACrL;AACE,gBAAQ,OAAO,cAAc,EAAE,QAAQ,KAAK,UAAU,gBAAgB,KAAK,UAAU,UAAU,IAAI,IAAI,QAAQ;AAAA,IACnH;AAAA,EACF;AAAA,EACA,OAAO,oBAAoB,WAAW;AACpC,kBAAc,YAAY,oBAAoB,qBAAqB,EAAE,IAAI,QAAQ;AACjF,QAAI,OAAO;AAAA,MACT,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AACA,WAAO,KAAK,YAAY,oBAAoB,IAAI;AAAA,EAClD;AAAA,EACA,MAAM,MAAM,OAAO;AACjB,YAAQ,OAAO,MAAM;AAAA,MACnB,KAAK;AACH,YAAI,gBAAgB,CAAC,GAAG,MAAM,OAAO,QAAQ,IAAI;AACjD,YAAI,CAAC,IAAI,OAAQ,QAAO;AACxB,iBAAS,CAAC,KAAK,KAAK,KAAK;AACvB,iBAAO,KAAK,YAAY,SAAS,cAAc,GAAG,IAAI,KAAK,YAAY,KAAK,GAAG,IAAI,OAAO,cAAc,GAAG,EAAE,QAAQ,wBAAwB,GAAG;AAClJ,eAAO,KAAK,YAAY,UAAU,EAAE,OAAO;AAAA,UACzC,GAAG,KAAK,YAAY,QAAQ;AAAA,UAC5B,GAAG;AAAA,QACL,CAAC,GAAG;AAAA,MACN,KAAK;AACH,YAAI,SAAS,KAAK,KAAK,YAAY,IAAI;AACvC,eAAO,KAAK,YAAY,OAAO,QAAQ,KAAK,YAAY,UAAU,EAAE,OAAO,MAAM,GAAG;AAAA,MACtF,KAAK;AACH,YAAI,CAAC,MAAO;AACZ,YAAI,WAAW;AAAA,UACb,GAAG;AAAA,UACH,IAAI,MAAM,OAAO,wBAAwB,IAAI;AAAA,QAC/C;AACA,eAAO,KAAK,YAAY,KAAK,IAAI,IAAI,OAAO,KAAK,YAAY,UAAU,EAAE,OAAO;AAAA,UAC9E,GAAG,KAAK,YAAY,QAAQ;AAAA,UAC5B,GAAG;AAAA,QACL,CAAC,GAAG;AAAA,IACR;AACA,WAAO,KAAK,YAAY,KAAK,IAAI,IAAI,OAAO,KAAK,YAAY,UAAU,EAAE,OAAO;AAAA,MAC9E,GAAG,KAAK,YAAY,QAAQ;AAAA,MAC5B,CAAC,IAAI,GAAG;AAAA,IACV,CAAC,GAAG;AAAA,EACN;AAAA,EACA,IAAI,KAAK;AACP,WAAO,EAAE,IAAI,GAAG;AAAA,EAClB;AAAA,EACA,UAAU,iBAAiB,QAAQ;AACjC,eAAW,SAAS,iBAAiB,kBAAkB,EAAE,IAAI,QAAQ;AACrE,QAAI,OAAO;AAAA,MACT,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AACA,WAAO,KAAK,YAAY,iBAAiB,IAAI;AAAA,EAC/C;AAAA,EACA,MAAM,MAAM,MAAM,MAAM;AACtB,QAAI,SAAS,GAAI,QAAO;AACxB,QAAI,aAAa,CAAC,KAAK,KAAK,GAAG,GAAG,aAAa,wBAAC,UAAU,MAAM,CAAC,EAAE,YAAY,IAAI,MAAM,MAAM,CAAC,GAAjD,eAAoD,UAAU,SAAS,WAAW,CAAC,QAAQ,UAAU,WAAW,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,IAAI,SAAS,QAAQ,SAAS,WAAW,KAAK,IAAI,WAAW,SAAS,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,UAAU,QAAQ,SAAS,CAAC,QAAQ,UAAU,QAAQ,WAAW,MAAM,GAAG,QAAQ,wBAAC,UAAU;AAC1X,UAAI,QAAQ,CAAC;AACb,cAAQ,OAAO;AAAA,QACb,KAAK;AACH,mBAAS,OAAO,KAAK,UAAU;AAC7B,kBAAM,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,UAAU,UAAU,GAAG;AAC1D,eAAK,UAAU,YAAY;AAC3B;AAAA,QACF,KAAK;AACH,mBAAS,OAAO,KAAK,UAAU;AAC7B,kBAAM,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,UAAU,MAAM,GAAG;AACtD,eAAK,UAAU,QAAQ;AACvB;AAAA,QACF,KAAK;AACH,mBAAS,OAAO,KAAK,YAAY;AAC/B,kBAAM,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,YAAY,KAAK,GAAG;AACvD,eAAK,YAAY,OAAO;AACxB;AAAA,QACF,KAAK;AACH,mBAAS,OAAO,KAAK,YAAY;AAC/B,kBAAM,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,YAAY,MAAM,GAAG;AACxD,eAAK,YAAY,QAAQ;AACzB;AAAA,MACJ;AAAA,IACF,GAxBiX,UAwB9W,QAAQ,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAC7C,aAAS,SAAS,MAAM,KAAK,CAAC,MAAM,MAAM,KAAK,IAAI,CAAC,aAAa,SAAS,SAAS,OAAO,IAAI;AAC5F,YAAM,KAAK;AACb,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM,MAAM;AACjB,WAAO,KAAK,MAAM,UAAU,MAAM,IAAI;AAAA,EACxC;AAAA,EACA,OAAO,MAAM,MAAM;AACjB,WAAO,KAAK,MAAM,UAAU,MAAM,IAAI;AAAA,EACxC;AAAA,EACA,UAAU;AACR,WAAO,KAAK,UAAU,EAAE,iBAAiB,KAAK,QAAQ,KAAK,OAAO,MAAM,sBAAsB,IAAI,IAAI,qBAAqB,IAAI,GAAG,OAAO,KAAK,QAAQ,UAAU,cAAc,KAAK,OAAO,OAAO;AAAA,MAC/L,GAAG,KAAK,UAAU,CAAC;AAAA,MACnB,OAAO,KAAK;AAAA,IACd,CAAC,GAAG,SAAS,OAAO,KAAK,QAAQ,UAAU,cAAc,KAAK,OAAO,OAAO,KAAK,UAAU,CAAC,CAAC,GAAG,KAAK,UAAU,sBAAsB,IAAI,GAAG;AAAA,EAC9I;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AACF;AA5tDA,IA4tDG,SAAS;;;AoJ7zPZ;AAAA;AAAAoB;;;ACCA;;AAAAC;;;ACMA;;AAAAC;;;ACPO;;AAAAC;AAAA,IAAM,aAAa,OAAO,IAAI,oBAAoB;AAClD,IAAM,mBAAmB,OAAO,IAAI,0BAA0B;AAU9D,SAAS,GAAsC,OAAY,MAAmC;AACpG,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACxC,WAAO;EACR;AAEA,MAAI,iBAAiB,MAAM;AAC1B,WAAO;EACR;AAEA,MAAI,CAAC,OAAO,UAAU,eAAe,KAAK,MAAM,UAAU,GAAG;AAC5D,UAAM,IAAI;MACT,UACC,KAAK,QAAQ,WACd;IACD;EACD;AAEA,MAAI,MAAM,OAAO,eAAe,KAAK,EAAE;AACvC,MAAI,KAAK;AAER,WAAO,KAAK;AACX,UAAI,cAAc,OAAO,IAAI,UAAU,MAAM,KAAK,UAAU,GAAG;AAC9D,eAAO;MACR;AAEA,YAAM,OAAO,eAAe,GAAG;IAChC;EACD;AAEA,SAAO;AACR;AA9BgB;;;ADmDT,IAAe,SAAf,MAIiE;EA3DxE,OA2DwE;;;EAwBvE,YACUC,QACTC,SACC;AAFQ,SAAA,QAAAD;AAGT,SAAK,SAASC;AACd,SAAK,OAAOA,QAAO;AACnB,SAAK,YAAYA,QAAO;AACxB,SAAK,UAAUA,QAAO;AACtB,SAAK,UAAUA,QAAO;AACtB,SAAK,YAAYA,QAAO;AACxB,SAAK,aAAaA,QAAO;AACzB,SAAK,aAAaA,QAAO;AACzB,SAAK,UAAUA,QAAO;AACtB,SAAK,WAAWA,QAAO;AACvB,SAAK,aAAaA,QAAO;AACzB,SAAK,aAAaA,QAAO;AACzB,SAAK,WAAWA,QAAO;AACvB,SAAK,aAAaA,QAAO;AACzB,SAAK,YAAYA,QAAO;AACxB,SAAK,oBAAoBA,QAAO;EACjC;EA3CA,QAAiB,UAAU,IAAY;EAI9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,aAA8B;EAC9B,YAA0D;EAC1D,oBAAyD;EAExD;EA0BV,mBAAmB,OAAyB;AAC3C,WAAO;EACR;EAEA,iBAAiB,OAAyB;AACzC,WAAO;EACR;;EAGA,sBAA+B;AAC9B,WAAO,KAAK,OAAO,cAAc,UAAa,KAAK,OAAO,UAAU,SAAS;EAC9E;AACD;;;AE7HA;;AAAAC;;;ACCA;;AAAAC;;;ACOA;;AAAAC;;;ACTA;;AAAAC;AAwLO,IAAe,gBAAf,MAKwC;EA7L/C,OA6L+C;;;EAC9C,QAAiB,UAAU,IAAY;EAI7B;EAEV,YAAY,MAAiB,UAAyB,YAA6B;AAClF,SAAK,SAAS;MACb;MACA,WAAW,SAAS;MACpB,SAAS;MACT,SAAS;MACT,YAAY;MACZ,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,YAAY;MACZ;MACA;MACA,WAAW;IACZ;EACD;;;;;;;;;;;;EAaA,QAAmC;AAClC,WAAO;EACR;;;;;;EAOA,UAAyB;AACxB,SAAK,OAAO,UAAU;AACtB,WAAO;EACR;;;;;;;;EASA,QAAQ,OAA+F;AACtG,SAAK,OAAO,UAAU;AACtB,SAAK,OAAO,aAAa;AACzB,WAAO;EACR;;;;;;;EAQA,WACC,IACsC;AACtC,SAAK,OAAO,YAAY;AACxB,SAAK,OAAO,aAAa;AACzB,WAAO;EACR;;;;EAKA,WAAW,KAAK;;;;;;;;EAShB,YACC,IACmB;AACnB,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,aAAa;AACzB,WAAO;EACR;;;;EAKA,YAAY,KAAK;;;;;;EAOjB,aAEA;AACC,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,UAAU;AACtB,WAAO;EAER;;EAUA,QAAQ,MAAc;AACrB,QAAI,KAAK,OAAO,SAAS,GAAI;AAC7B,SAAK,OAAO,OAAO;EACpB;AACD;;;AC5TA;;AAAAC;;;ACCO;;AAAAC;AAAA,IAAM,YAAY,OAAO,IAAI,cAAc;;;ADa3C,IAAM,oBAAN,MAAwB;EAd/B,OAc+B;;;EAC9B,QAAiB,UAAU,IAAY;;EAGvC;;EAGA,YAA4C;;EAG5C,YAA4C;EAE5C,YACCC,SAKA,SAIC;AACD,SAAK,YAAY,MAAM;AACtB,YAAM,EAAE,MAAM,SAAS,eAAe,IAAIA,QAAO;AACjD,aAAO,EAAE,MAAM,SAAS,cAAc,eAAe,CAAC,EAAG,OAAkB,eAAe;IAC3F;AACA,QAAI,SAAS;AACZ,WAAK,YAAY,QAAQ;AACzB,WAAK,YAAY,QAAQ;IAC1B;EACD;EAEA,SAAS,QAAkC;AAC1C,SAAK,YAAY,WAAW,SAAY,cAAc;AACtD,WAAO;EACR;EAEA,SAAS,QAAkC;AAC1C,SAAK,YAAY,WAAW,SAAY,cAAc;AACtD,WAAO;EACR;;EAGA,MAAMC,QAA4B;AACjC,WAAO,IAAI,WAAWA,QAAO,IAAI;EAClC;AACD;AAIO,IAAM,aAAN,MAAiB;EAjExB,OAiEwB;;;EAOvB,YAAqBA,QAAgB,SAA4B;AAA5C,SAAA,QAAAA;AACpB,SAAK,YAAY,QAAQ;AACzB,SAAK,WAAW,QAAQ;AACxB,SAAK,WAAW,QAAQ;EACzB;EAVA,QAAiB,UAAU,IAAY;EAE9B;EACA;EACA;EAQT,UAAkB;AACjB,UAAM,EAAE,MAAM,SAAS,eAAe,IAAI,KAAK,UAAU;AACzD,UAAM,cAAc,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI;AACvD,UAAM,qBAAqB,eAAe,IAAI,CAAC,WAAW,OAAO,IAAI;AACrE,UAAM,SAAS;MACd,KAAK,MAAM,SAAS;MACpB,GAAG;MACH,eAAe,CAAC,EAAG,MAAM,SAAS;MAClC,GAAG;IACJ;AACA,WAAO,QAAQ,GAAG,OAAO,KAAK,GAAG,CAAC;EACnC;AACD;;;AE1FO;;AAAAC;AAAA,SAAS,KAA6B,OAA0B,MAAY;AAClF,SAAO,GAAG,GAAG,IAAI;AAClB;AAFgB;;;ACAhB;;AAAAC;AASO,SAAS,cAAcC,QAAgB,SAAmB;AAChE,SAAO,GAAGA,OAAM,SAAS,CAAC,IAAI,QAAQ,KAAK,GAAG,CAAC;AAChD;AAFgB;AAIT,IAAM,0BAAN,MAA8B;EAbrC,OAaqC;;;EAQpC,YACC,SACQ,MACP;AADO,SAAA,OAAA;AAER,SAAK,UAAU;EAChB;EAZA,QAAiB,UAAU,IAAY;;EAGvC;;EAEA,yBAAyB;EASzB,mBAAmB;AAClB,SAAK,yBAAyB;AAC9B,WAAO;EACR;;EAGA,MAAMA,QAAkC;AACvC,WAAO,IAAI,iBAAiBA,QAAO,KAAK,SAAS,KAAK,wBAAwB,KAAK,IAAI;EACxF;AACD;AAEO,IAAM,4BAAN,MAAgC;EAvCvC,OAuCuC;;;EACtC,QAAiB,UAAU,IAAY;;EAGvC;EAEA,YACC,MACC;AACD,SAAK,OAAO;EACb;EAEA,MAAM,SAAoC;AACzC,WAAO,IAAI,wBAAwB,SAAS,KAAK,IAAI;EACtD;AACD;AAEO,IAAM,mBAAN,MAAuB;EAxD9B,OAwD8B;;;EAO7B,YAAqBA,QAAgB,SAAqB,kBAA2B,MAAe;AAA/E,SAAA,QAAAA;AACpB,SAAK,UAAU;AACf,SAAK,OAAO,QAAQ,cAAc,KAAK,OAAO,KAAK,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,CAAC;AACvF,SAAK,mBAAmB;EACzB;EAVA,QAAiB,UAAU,IAAY;EAE9B;EACA;EACA,mBAA4B;EAQrC,UAAU;AACT,WAAO,KAAK;EACb;AACD;;;ACxEA;;AAAAC;AAAA,SAAS,kBAAkB,aAAqB,WAAmB,UAAqC;AACvG,WAAS,IAAI,WAAW,IAAI,YAAY,QAAQ,KAAK;AACpD,UAAM,OAAO,YAAY,CAAC;AAE1B,QAAI,SAAS,MAAM;AAClB;AACA;IACD;AAEA,QAAI,SAAS,KAAK;AACjB,aAAO,CAAC,YAAY,MAAM,WAAW,CAAC,EAAE,QAAQ,OAAO,EAAE,GAAG,IAAI,CAAC;IAClE;AAEA,QAAI,UAAU;AACb;IACD;AAEA,QAAI,SAAS,OAAO,SAAS,KAAK;AACjC,aAAO,CAAC,YAAY,MAAM,WAAW,CAAC,EAAE,QAAQ,OAAO,EAAE,GAAG,CAAC;IAC9D;EACD;AAEA,SAAO,CAAC,YAAY,MAAM,SAAS,EAAE,QAAQ,OAAO,EAAE,GAAG,YAAY,MAAM;AAC5E;AAvBS;AAyBF,SAAS,mBAAmB,aAAqB,YAAY,GAAoB;AACvF,QAAM,SAAgB,CAAC;AACvB,MAAI,IAAI;AACR,MAAI,kBAAkB;AAEtB,SAAO,IAAI,YAAY,QAAQ;AAC9B,UAAM,OAAO,YAAY,CAAC;AAE1B,QAAI,SAAS,KAAK;AACjB,UAAI,mBAAmB,MAAM,WAAW;AACvC,eAAO,KAAK,EAAE;MACf;AACA,wBAAkB;AAClB;AACA;IACD;AAEA,sBAAkB;AAElB,QAAI,SAAS,MAAM;AAClB,WAAK;AACL;IACD;AAEA,QAAI,SAAS,KAAK;AACjB,YAAM,CAACC,QAAOC,UAAS,IAAI,kBAAkB,aAAa,IAAI,GAAG,IAAI;AACrE,aAAO,KAAKD,MAAK;AACjB,UAAIC;AACJ;IACD;AAEA,QAAI,SAAS,KAAK;AACjB,aAAO,CAAC,QAAQ,IAAI,CAAC;IACtB;AAEA,QAAI,SAAS,KAAK;AACjB,YAAM,CAACD,QAAOC,UAAS,IAAI,mBAAmB,aAAa,IAAI,CAAC;AAChE,aAAO,KAAKD,MAAK;AACjB,UAAIC;AACJ;IACD;AAEA,UAAM,CAAC,OAAO,YAAY,IAAI,kBAAkB,aAAa,GAAG,KAAK;AACrE,WAAO,KAAK,KAAK;AACjB,QAAI;EACL;AAEA,SAAO,CAAC,QAAQ,CAAC;AAClB;AAhDgB;AAkDT,SAAS,aAAa,aAA4B;AACxD,QAAM,CAAC,MAAM,IAAI,mBAAmB,aAAa,CAAC;AAClD,SAAO;AACR;AAHgB;AAKT,SAAS,YAAYC,QAAsB;AACjD,SAAO,IACNA,OAAM,IAAI,CAAC,SAAS;AACnB,QAAI,MAAM,QAAQ,IAAI,GAAG;AACxB,aAAO,YAAY,IAAI;IACxB;AAEA,QAAI,OAAO,SAAS,UAAU;AAC7B,aAAO,IAAI,KAAK,QAAQ,OAAO,MAAM,EAAE,QAAQ,MAAM,KAAK,CAAC;IAC5D;AAEA,WAAO,GAAG,IAAI;EACf,CAAC,EAAE,KAAK,GAAG,CACZ;AACD;AAdgB;;;AN3CT,IAAe,kBAAf,cAKG,cAEV;EAnCA,OAmCA;;;EACS,oBAAuC,CAAC;EAEhD,QAA0B,UAAU,IAAY;EAEhD,MAAoD,MAclD;AACD,WAAO,IAAI,eAAe,KAAK,OAAO,MAAM,MAAmC,IAAW;EAC3F;EAEA,WACC,KACA,UAAsC,CAAC,GAChC;AACP,SAAK,kBAAkB,KAAK,EAAE,KAAK,QAAQ,CAAC;AAC5C,WAAO;EACR;EAEA,OACC,MACAC,SACO;AACP,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,aAAaA,SAAQ;AACjC,WAAO;EACR;EAEA,kBAAkB,IAEf;AACF,SAAK,OAAO,YAAY;MACvB;MACA,MAAM;MACN,MAAM;IACP;AACA,WAAO;EAGR;;EAGA,iBAAiB,QAAkBC,QAA8B;AAChE,WAAO,KAAK,kBAAkB,IAAI,CAAC,EAAE,KAAK,QAAQ,MAAM;AACvD,aAAO;QACN,CAACC,MAAKC,aAAY;AACjB,gBAAM,UAAU,IAAI,kBAAkB,MAAM;AAC3C,kBAAM,gBAAgBD,KAAI;AAC1B,mBAAO,EAAE,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC,aAAa,EAAE;UAC7D,CAAC;AACD,cAAIC,SAAQ,UAAU;AACrB,oBAAQ,SAASA,SAAQ,QAAQ;UAClC;AACA,cAAIA,SAAQ,UAAU;AACrB,oBAAQ,SAASA,SAAQ,QAAQ;UAClC;AACA,iBAAO,QAAQ,MAAMF,MAAK;QAC3B;QACA;QACA;MACD;IACD,CAAC;EACF;;EAQA,uBACCA,QACoB;AACpB,WAAO,IAAI,kBAAkBA,QAAO,KAAK,MAAM;EAChD;AACD;AAGO,IAAe,WAAf,cAIG,OAA2D;EAlIrE,OAkIqE;;;EAGpE,YACmBA,QAClBD,SACC;AACD,QAAI,CAACA,QAAO,YAAY;AACvB,MAAAA,QAAO,aAAa,cAAcC,QAAO,CAACD,QAAO,IAAI,CAAC;IACvD;AACA,UAAMC,QAAOD,OAAM;AAND,SAAA,QAAAC;EAOnB;EAVA,QAA0B,UAAU,IAAY;AAWjD;AAIO,IAAM,oBAAN,cAEG,SAAoC;EApJ9C,OAoJ8C;;;EAC7C,QAA0B,UAAU,IAAY;EAEvC,aAAqB;AAC7B,WAAO,KAAK,WAAW;EACxB;EAEA,cAAsC;IACrC,OAAO,KAAK,OAAO,SAAS;IAC5B,OAAO,KAAK,OAAO,SAAS;IAC5B,SAAS,KAAK,OAAO;EACtB;EACA,gBAAwC;IACvC,OAAO;IACP,OAAO;IACP,SAAS;EACV;EAEA,MAAkC;AACjC,SAAK,YAAY,QAAQ;AACzB,WAAO;EACR;EAEA,OAAmC;AAClC,SAAK,YAAY,QAAQ;AACzB,WAAO;EACR;EAEA,aAAqD;AACpD,SAAK,YAAY,QAAQ;AACzB,WAAO;EACR;EAEA,YAAoD;AACnD,SAAK,YAAY,QAAQ;AACzB,WAAO;EACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BA,GAAG,SAA2C;AAC7C,SAAK,YAAY,UAAU;AAC3B,WAAO;EACR;AACD;AAEO,IAAM,gBAAN,MAAoB;EA7N3B,OA6N2B;;;EAC1B,QAAiB,UAAU,IAAY;EACvC,YACC,MACA,WACA,MACA,aACC;AACD,SAAK,OAAO;AACZ,SAAK,YAAY;AACjB,SAAK,OAAO;AACZ,SAAK,cAAc;EACpB;EAEA;EACA;EACA;EACA;AACD;AAWO,IAAM,iBAAN,cAGG,gBAoBR;EAjRF,OAiRE;;;EACD,QAA0B,UAAU,IAAI;EAExC,YACC,MACA,aACA,MACC;AACD,UAAM,MAAM,SAAS,SAAS;AAC9B,SAAK,OAAO,cAAc;AAC1B,SAAK,OAAO,OAAO;EACpB;;EAGS,MACRA,QACuG;AACvG,UAAM,aAAa,KAAK,OAAO,YAAY,MAAMA,MAAK;AACtD,WAAO,IAAI;MACVA;MACA,KAAK;MACL;IACD;EACD;AACD;AAEO,IAAM,UAAN,MAAM,iBAMH,SAAoE;EAjT9E,OAiT8E;;;EAK7E,YACCA,QACAD,SACS,YACA,OACR;AACD,UAAMC,QAAOD,OAAM;AAHV,SAAA,aAAA;AACA,SAAA,QAAA;AAGT,SAAK,OAAOA,QAAO;EACpB;EAZS;EAET,QAA0B,UAAU,IAAY;EAYhD,aAAqB;AACpB,WAAO,GAAG,KAAK,WAAW,WAAW,CAAC,IAAI,OAAO,KAAK,SAAS,WAAW,KAAK,OAAO,EAAE;EACzF;EAES,mBAAmB,OAAsC;AACjE,QAAI,OAAO,UAAU,UAAU;AAE9B,cAAQ,aAAa,KAAK;IAC3B;AACA,WAAO,MAAM,IAAI,CAAC,MAAM,KAAK,WAAW,mBAAmB,CAAC,CAAC;EAC9D;EAES,iBAAiB,OAAkB,gBAAgB,OAA2B;AACtF,UAAM,IAAI,MAAM;MAAI,CAAC,MACpB,MAAM,OACH,OACA,GAAG,KAAK,YAAY,QAAO,IAC3B,KAAK,WAAW,iBAAiB,GAAgB,IAAI,IACrD,KAAK,WAAW,iBAAiB,CAAC;IACtC;AACA,QAAI,cAAe,QAAO;AAC1B,WAAO,YAAY,CAAC;EACrB;AACD;;;ADlUO,IAAM,4BAAN,cAEG,gBAAgD;EA9B1D,OA8B0D;;;EACzD,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB,cAAiC;AAC7D,UAAM,MAAM,UAAU,oBAAoB;AAC1C,SAAK,OAAO,OAAO;EACpB;;EAGS,MACRI,QACsD;AACtD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,qBAAN,cACE,SACT;EAnDA,OAmDA;;;EACC,QAA0B,UAAU,IAAY;EAEvC;EACS,aAAa,KAAK,OAAO,KAAK;EAEhD,YACCA,QACAC,SACC;AACD,UAAMD,QAAOC,OAAM;AACnB,SAAK,OAAOA,QAAO;EACpB;EAEA,aAAqB;AACpB,WAAO,KAAK,KAAK;EAClB;AACD;AAcA,IAAM,cAAc,OAAO,IAAI,kBAAkB;AAa1C,SAAS,SAAS,KAAoD;AAC5E,SAAO,CAAC,CAAC,OAAO,OAAO,QAAQ,cAAc,eAAe,OAAO,IAAI,WAAW,MAAM;AACzF;AAFgB;AAIT,IAAM,sBAAN,cAEG,gBAAsD;EArGhE,OAqGgE;;;EAC/D,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB,cAAuC;AACnE,UAAM,MAAM,UAAU,cAAc;AACpC,SAAK,OAAO,OAAO;EACpB;;EAGS,MACRD,QACgD;AAChD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,eAAN,cACE,SACT;EA1HA,OA0HA;;;EACC,QAA0B,UAAU,IAAY;EAEvC,OAAO,KAAK,OAAO;EACV,aAAa,KAAK,OAAO,KAAK;EAEhD,YACCA,QACAC,SACC;AACD,UAAMD,QAAOC,OAAM;AACnB,SAAK,OAAOA,QAAO;EACpB;EAEA,aAAqB;AACpB,WAAO,KAAK,KAAK;EAClB;AACD;;;AQ7IA;;AAAAC;AAWO,IAAM,WAAN,MAGiB;EAdxB,OAcwB;;;EACvB,QAAiB,UAAU,IAAY;EAWvC,YAAYC,MAAU,QAAyB,OAAe,SAAS,OAAO,aAAuB,CAAC,GAAG;AACxG,SAAK,IAAI;MACR,OAAO;MACP,KAAAA;MACA,gBAAgB;MAChB;MACA;MACA;IACD;EACD;;;;AAKD;AAEO,IAAM,eAAN,cAGG,SAA6B;EA7CvC,OA6CuC;;;EACtC,QAA0B,UAAU,IAAY;AACjD;;;AC9CA;;AAAAC;;;ACDA;AAAA;AAAAC;AACA,IAAIC,WAAU;;;ADGd,IAAI;AACJ,IAAI;AAkBG,IAAM,SAAS;EACrB,gBAAoD,MAAgB,IAAsB;AACzF,QAAI,CAAC,MAAM;AACV,aAAO,GAAG;IACX;AAEA,QAAI,CAAC,WAAW;AACf,kBAAY,KAAK,MAAM,UAAU,eAAeC,QAAU;IAC3D;AAEA,WAAO;MACN,CAACC,OAAMC,eACNA,WAAU;QACT;QACC,CAAC,SAAe;AAChB,cAAI;AACH,mBAAO,GAAG,IAAI;UACf,SAAS,GAAG;AACX,iBAAK,UAAU;cACd,MAAMD,MAAK,eAAe;cAC1B,SAAS,aAAa,QAAQ,EAAE,UAAU;;YAC3C,CAAC;AACD,kBAAM;UACP,UAAA;AACC,iBAAK,IAAI;UACV;QACD;MACD;MACD;MACA;IACD;EACD;AACD;;;AEvDO;;AAAAE;AAAA,IAAM,iBAAiB,OAAO,IAAI,wBAAwB;;;ACCjE;;AAAAC;AAkBO,IAAM,SAAS,OAAO,IAAI,gBAAgB;AAG1C,IAAM,UAAU,OAAO,IAAI,iBAAiB;AAG5C,IAAM,qBAAqB,OAAO,IAAI,4BAA4B;AAGlE,IAAM,eAAe,OAAO,IAAI,sBAAsB;AAGtD,IAAM,WAAW,OAAO,IAAI,kBAAkB;AAG9C,IAAM,UAAU,OAAO,IAAI,iBAAiB;AAG5C,IAAM,qBAAqB,OAAO,IAAI,4BAA4B;AAEzE,IAAM,iBAAiB,OAAO,IAAI,wBAAwB;AASnD,IAAM,QAAN,MAAuE;EA/C9E,OA+C8E;;;EAC7E,QAAiB,UAAU,IAAY;;EAgBvC,OAAgB,SAAS;IACxB,MAAM;IACN;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;;;;EAMA,CAAC,SAAS;;;;;EAMV,CAAC,YAAY;;EAGb,CAAC,MAAM;;EAGP,CAAC,OAAO;;EAGR,CAAC,kBAAkB;;;;;EAMnB,CAAC,QAAQ;;EAGT,CAAC,OAAO,IAAI;;EAGZ,CAAC,cAAc,IAAI;;EAGnB,CAAC,kBAAkB,IAAsE;EAEzF,YAAY,MAAc,QAA4B,UAAkB;AACvE,SAAK,SAAS,IAAI,KAAK,YAAY,IAAI;AACvC,SAAK,MAAM,IAAI;AACf,SAAK,QAAQ,IAAI;EAClB;AACD;AAEO,SAAS,QAAQC,QAAgC;AACvD,SAAO,OAAOA,WAAU,YAAYA,WAAU,QAAQ,kBAAkBA;AACzE;AAFgB;AAuBT,SAAS,aAA8BA,QAA0B;AACvE,SAAOA,OAAM,SAAS;AACvB;AAFgB;AAIT,SAAS,mBAAoCA,QAAmD;AACtG,SAAO,GAAGA,OAAM,MAAM,KAAK,QAAQ,IAAIA,OAAM,SAAS,CAAC;AACxD;AAFgB;;;AbjIT,IAAM,qBAAN,MAAyB;EAhBhC,OAgBgC;;;EAC/B,QAAiB,UAAU,IAAY;AACxC;AAkDO,SAAS,aAAa,OAAqC;AACjE,SAAO,UAAU,QAAQ,UAAU,UAAa,OAAQ,MAAc,WAAW;AAClF;AAFgB;AAIhB,SAAS,aAAa,SAA+C;AACpE,QAAM,SAA2B,EAAE,KAAK,IAAI,QAAQ,CAAC,EAAE;AACvD,aAAW,SAAS,SAAS;AAC5B,WAAO,OAAO,MAAM;AACpB,WAAO,OAAO,KAAK,GAAG,MAAM,MAAM;AAClC,QAAI,MAAM,SAAS,QAAQ;AAC1B,UAAI,CAAC,OAAO,SAAS;AACpB,eAAO,UAAU,CAAC;MACnB;AACA,aAAO,QAAQ,KAAK,GAAG,MAAM,OAAO;IACrC;EACD;AACA,SAAO;AACR;AAbS;AAeF,IAAM,cAAN,MAAwC;EAvF/C,OAuF+C;;;EAC9C,QAAiB,UAAU,IAAY;EAE9B;EAET,YAAY,OAA0B;AACrC,SAAK,QAAQ,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;EACnD;EAEA,SAAuB;AACtB,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;AACD;AAEO,IAAM,MAAN,MAAM,KAAuC;EArGpD,OAqGoD;;;EAenD,YAAqB,aAAyB;AAAzB,SAAA,cAAA;AACpB,eAAW,SAAS,aAAa;AAChC,UAAI,GAAG,OAAO,KAAK,GAAG;AACrB,cAAM,aAAa,MAAM,MAAM,OAAO,MAAM;AAE5C,aAAK,WAAW;UACf,eAAe,SACZ,MAAM,MAAM,OAAO,IAAI,IACvB,aAAa,MAAM,MAAM,MAAM,OAAO,IAAI;QAC9C;MACD;IACD;EACD;EA1BA,QAAiB,UAAU,IAAY;;EAQvC,UAAsC;EAC9B,qBAAqB;;EAG7B,aAAuB,CAAC;EAgBxB,OAAO,OAAkB;AACxB,SAAK,YAAY,KAAK,GAAG,MAAM,WAAW;AAC1C,WAAO;EACR;EAEA,QAAQC,SAA4C;AACnD,WAAO,OAAO,gBAAgB,oBAAoB,CAAC,SAAS;AAC3D,YAAM,QAAQ,KAAK,2BAA2B,KAAK,aAAaA,OAAM;AACtE,YAAM,cAAc;QACnB,sBAAsB,MAAM;QAC5B,wBAAwB,KAAK,UAAU,MAAM,MAAM;MACpD,CAAC;AACD,aAAO;IACR,CAAC;EACF;EAEA,2BAA2B,QAAoB,SAAkC;AAChF,UAAMA,UAAS,OAAO,OAAO,CAAC,GAAG,SAAS;MACzC,cAAc,QAAQ,gBAAgB,KAAK;MAC3C,iBAAiB,QAAQ,mBAAmB,EAAE,OAAO,EAAE;IACxD,CAAC;AAED,UAAM;MACL;MACA;MACA;MACA;MACA;MACA;IACD,IAAIA;AAEJ,WAAO,aAAa,OAAO,IAAI,CAAC,UAA4B;AAC3D,UAAI,GAAG,OAAO,WAAW,GAAG;AAC3B,eAAO,EAAE,KAAK,MAAM,MAAM,KAAK,EAAE,GAAG,QAAQ,CAAC,EAAE;MAChD;AAEA,UAAI,GAAG,OAAO,IAAI,GAAG;AACpB,eAAO,EAAE,KAAK,WAAW,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE;MACnD;AAEA,UAAI,UAAU,QAAW;AACxB,eAAO,EAAE,KAAK,IAAI,QAAQ,CAAC,EAAE;MAC9B;AAEA,UAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,SAAqB,CAAC,IAAI,YAAY,GAAG,CAAC;AAChD,mBAAW,CAAC,GAAG,CAAC,KAAK,MAAM,QAAQ,GAAG;AACrC,iBAAO,KAAK,CAAC;AACb,cAAI,IAAI,MAAM,SAAS,GAAG;AACzB,mBAAO,KAAK,IAAI,YAAY,IAAI,CAAC;UAClC;QACD;AACA,eAAO,KAAK,IAAI,YAAY,GAAG,CAAC;AAChC,eAAO,KAAK,2BAA2B,QAAQA,OAAM;MACtD;AAEA,UAAI,GAAG,OAAO,IAAG,GAAG;AACnB,eAAO,KAAK,2BAA2B,MAAM,aAAa;UACzD,GAAGA;UACH,cAAc,gBAAgB,MAAM;QACrC,CAAC;MACF;AAEA,UAAI,GAAG,OAAO,KAAK,GAAG;AACrB,cAAM,aAAa,MAAM,MAAM,OAAO,MAAM;AAC5C,cAAM,YAAY,MAAM,MAAM,OAAO,IAAI;AACzC,eAAO;UACN,KAAK,eAAe,UAAa,MAAM,OAAO,IAC3C,WAAW,SAAS,IACpB,WAAW,UAAU,IAAI,MAAM,WAAW,SAAS;UACtD,QAAQ,CAAC;QACV;MACD;AAEA,UAAI,GAAG,OAAO,MAAM,GAAG;AACtB,cAAM,aAAa,OAAO,gBAAgB,KAAK;AAC/C,YAAI,QAAQ,iBAAiB,WAAW;AACvC,iBAAO,EAAE,KAAK,WAAW,UAAU,GAAG,QAAQ,CAAC,EAAE;QAClD;AAEA,cAAM,aAAa,MAAM,MAAM,MAAM,OAAO,MAAM;AAClD,eAAO;UACN,KAAK,MAAM,MAAM,OAAO,KAAK,eAAe,SACzC,WAAW,MAAM,MAAM,MAAM,OAAO,IAAI,CAAC,IAAI,MAAM,WAAW,UAAU,IACxE,WAAW,UAAU,IAAI,MAAM,WAAW,MAAM,MAAM,MAAM,OAAO,IAAI,CAAC,IAAI,MAC3E,WAAW,UAAU;UACzB,QAAQ,CAAC;QACV;MACD;AAEA,UAAI,GAAG,OAAO,IAAI,GAAG;AACpB,cAAM,aAAa,MAAM,cAAc,EAAE;AACzC,cAAM,WAAW,MAAM,cAAc,EAAE;AACvC,eAAO;UACN,KAAK,eAAe,UAAa,MAAM,cAAc,EAAE,UACpD,WAAW,QAAQ,IACnB,WAAW,UAAU,IAAI,MAAM,WAAW,QAAQ;UACrD,QAAQ,CAAC;QACV;MACD;AAEA,UAAI,GAAG,OAAO,KAAK,GAAG;AACrB,YAAI,GAAG,MAAM,OAAO,WAAW,GAAG;AACjC,iBAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;QAC/F;AAEA,cAAM,cAAc,MAAM,UAAU,OAAO,OAAO,MAAM,QAAQ,iBAAiB,MAAM,KAAK;AAE5F,YAAI,GAAG,aAAa,IAAG,GAAG;AACzB,iBAAO,KAAK,2BAA2B,CAAC,WAAW,GAAGA,OAAM;QAC7D;AAEA,YAAI,cAAc;AACjB,iBAAO,EAAE,KAAK,KAAK,eAAe,aAAaA,OAAM,GAAG,QAAQ,CAAC,EAAE;QACpE;AAEA,YAAI,UAA+B,CAAC,MAAM;AAC1C,YAAI,eAAe;AAClB,oBAAU,CAAC,cAAc,MAAM,OAAO,CAAC;QACxC;AAEA,eAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,WAAW,GAAG,QAAQ,CAAC,WAAW,GAAG,QAAQ;MACjG;AAEA,UAAI,GAAG,OAAO,WAAW,GAAG;AAC3B,eAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;MAC/F;AAEA,UAAI,GAAG,OAAO,KAAI,OAAO,KAAK,MAAM,eAAe,QAAW;AAC7D,eAAO,EAAE,KAAK,WAAW,MAAM,UAAU,GAAG,QAAQ,CAAC,EAAE;MACxD;AAEA,UAAI,GAAG,OAAO,QAAQ,GAAG;AACxB,YAAI,MAAM,EAAE,QAAQ;AACnB,iBAAO,EAAE,KAAK,WAAW,MAAM,EAAE,KAAK,GAAG,QAAQ,CAAC,EAAE;QACrD;AACA,eAAO,KAAK,2BAA2B;UACtC,IAAI,YAAY,GAAG;UACnB,MAAM,EAAE;UACR,IAAI,YAAY,IAAI;UACpB,IAAI,KAAK,MAAM,EAAE,KAAK;QACvB,GAAGA,OAAM;MACV;AAEA,UAAI,SAAS,KAAK,GAAG;AACpB,YAAI,MAAM,QAAQ;AACjB,iBAAO,EAAE,KAAK,WAAW,MAAM,MAAM,IAAI,MAAM,WAAW,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE;QACvF;AACA,eAAO,EAAE,KAAK,WAAW,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE;MACtD;AAEA,UAAI,aAAa,KAAK,GAAG;AACxB,YAAI,MAAM,sBAAsB,GAAG;AAClC,iBAAO,KAAK,2BAA2B,CAAC,MAAM,OAAO,CAAC,GAAGA,OAAM;QAChE;AACA,eAAO,KAAK,2BAA2B;UACtC,IAAI,YAAY,GAAG;UACnB,MAAM,OAAO;UACb,IAAI,YAAY,GAAG;QACpB,GAAGA,OAAM;MACV;AAEA,UAAI,cAAc;AACjB,eAAO,EAAE,KAAK,KAAK,eAAe,OAAOA,OAAM,GAAG,QAAQ,CAAC,EAAE;MAC9D;AAEA,aAAO,EAAE,KAAK,YAAY,gBAAgB,SAAS,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;IAC/F,CAAC,CAAC;EACH;EAEQ,eACP,OACA,EAAE,aAAa,GACN;AACT,QAAI,UAAU,MAAM;AACnB,aAAO;IACR;AACA,QAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AAC5D,aAAO,MAAM,SAAS;IACvB;AACA,QAAI,OAAO,UAAU,UAAU;AAC9B,aAAO,aAAa,KAAK;IAC1B;AACA,QAAI,OAAO,UAAU,UAAU;AAC9B,YAAM,sBAAsB,MAAM,SAAS;AAC3C,UAAI,wBAAwB,mBAAmB;AAC9C,eAAO,aAAa,KAAK,UAAU,KAAK,CAAC;MAC1C;AACA,aAAO,aAAa,mBAAmB;IACxC;AACA,UAAM,IAAI,MAAM,6BAA6B,KAAK;EACnD;EAEA,SAAc;AACb,WAAO;EACR;EAaA,GAAG,OAAyC;AAE3C,QAAI,UAAU,QAAW;AACxB,aAAO;IACR;AAEA,WAAO,IAAI,KAAI,QAAQ,MAAM,KAAK;EACnC;EAEA,QAIE,SAAoD;AACrD,SAAK,UAAU,OAAO,YAAY,aAAa,EAAE,oBAAoB,QAAQ,IAAI;AACjF,WAAO;EACR;EAEA,eAAqB;AACpB,SAAK,qBAAqB;AAC1B,WAAO;EACR;;;;;;;EAQA,GAAG,WAA8C;AAChD,WAAO,YAAY,OAAO;EAC3B;AACD;AAUO,IAAM,OAAN,MAAiC;EA5XxC,OA4XwC;;;EAKvC,YAAqB,OAAe;AAAf,SAAA,QAAA;EAAgB;EAJrC,QAAiB,UAAU,IAAY;EAE7B;EAIV,SAAuB;AACtB,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;AACD;AAkBO,SAAS,qBAAqB,OAAuD;AAC3F,SAAO,OAAO,UAAU,YAAY,UAAU,QAAQ,sBAAsB,SACxE,OAAQ,MAAc,qBAAqB;AAChD;AAHgB;AAKT,IAAM,cAA4C;EACxD,oBAAoB,wBAAC,UAAU,OAAX;AACrB;AAEO,IAAM,cAA4C;EACxD,kBAAkB,wBAAC,UAAU,OAAX;AACnB;AAMO,IAAM,aAA0C;EACtD,GAAG;EACH,GAAG;AACJ;AAGO,IAAM,QAAN,MAAqF;EA/a5F,OA+a4F;;;;;;;EAS3F,YACU,OACAC,WAA2D,aACnE;AAFQ,SAAA,QAAA;AACA,SAAA,UAAAA;EACP;EAXH,QAAiB,UAAU,IAAY;EAE7B;EAWV,SAAuB;AACtB,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;AACD;AAmCO,SAAS,IAAI,YAAkC,QAAyB;AAC9E,QAAM,cAA0B,CAAC;AACjC,MAAI,OAAO,SAAS,KAAM,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAAM,IAAK;AACnE,gBAAY,KAAK,IAAI,YAAY,QAAQ,CAAC,CAAE,CAAC;EAC9C;AACA,aAAW,CAAC,YAAYC,MAAK,KAAK,OAAO,QAAQ,GAAG;AACnD,gBAAY,KAAKA,QAAO,IAAI,YAAY,QAAQ,aAAa,CAAC,CAAE,CAAC;EAClE;AAEA,SAAO,IAAI,IAAI,WAAW;AAC3B;AAVgB;CAYT,CAAUC,SAAV;AACC,WAAS,QAAa;AAC5B,WAAO,IAAI,IAAI,CAAC,CAAC;EAClB;AAFgB;AAATA,OAAS,QAAA;AAKT,WAAS,SAAS,MAAuB;AAC/C,WAAO,IAAI,IAAI,IAAI;EACpB;AAFgB;AAATA,OAAS,WAAA;AAQT,WAAS,IAAI,KAAkB;AACrC,WAAO,IAAI,IAAI,CAAC,IAAI,YAAY,GAAG,CAAC,CAAC;EACtC;AAFgB;AAATA,OAAS,MAAA;AAiBT,WAAS,KAAK,QAAoB,WAA2B;AACnE,UAAM,SAAqB,CAAC;AAC5B,eAAW,CAAC,GAAG,KAAK,KAAK,OAAO,QAAQ,GAAG;AAC1C,UAAI,IAAI,KAAK,cAAc,QAAW;AACrC,eAAO,KAAK,SAAS;MACtB;AACA,aAAO,KAAK,KAAK;IAClB;AACA,WAAO,IAAI,IAAI,MAAM;EACtB;AATgB;AAATA,OAAS,OAAA;AAuBT,WAAS,WAAW,OAAqB;AAC/C,WAAO,IAAI,KAAK,KAAK;EACtB;AAFgB;AAATA,OAAS,aAAA;AAIT,WAASC,aAAkCC,OAAiC;AAClF,WAAO,IAAI,YAAYA,KAAI;EAC5B;AAFgBD;AAATD,OAAS,cAAAC;AAIT,WAASF,OACf,OACAI,UACwB;AACxB,WAAO,IAAI,MAAM,OAAOA,QAAO;EAChC;AALgBJ;AAATC,OAAS,QAAAD;AAAA,GA9DA,QAAA,MAAA,CAAA,EAAA;CAsEV,CAAUK,SAAV;EACC,MAAM,QAA2C;IAtjBzD,OAsjByD;;;IAWvD,YACUJ,MACA,YACR;AAFQ,WAAA,MAAAA;AACA,WAAA,aAAA;IACP;IAbH,QAAiB,UAAU,IAAY;;IAQvC,mBAAmB;IAOnB,SAAc;AACb,aAAO,KAAK;IACb;;IAGA,QAAQ;AACP,aAAO,IAAI,QAAQ,KAAK,KAAK,KAAK,UAAU;IAC7C;EACD;AAxBOI,OAAM,UAAA;AAAA,GADG,QAAA,MAAA,CAAA,EAAA;AA4BV,IAAM,cAAN,MAAqF;EAjlB5F,OAilB4F;;;EAK3F,YAAqBF,OAAa;AAAb,SAAA,OAAAA;EAAc;EAJnC,QAAiB,UAAU,IAAY;EAMvC,SAAc;AACb,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;AACD;AAOO,SAAS,iBAAiB,QAAmB,QAA4C;AAC/F,SAAO,OAAO,IAAI,CAAC,MAAM;AACxB,QAAI,GAAG,GAAG,WAAW,GAAG;AACvB,UAAI,EAAE,EAAE,QAAQ,SAAS;AACxB,cAAM,IAAI,MAAM,6BAA6B,EAAE,IAAI,gBAAgB;MACpE;AAEA,aAAO,OAAO,EAAE,IAAI;IACrB;AAEA,QAAI,GAAG,GAAG,KAAK,KAAK,GAAG,EAAE,OAAO,WAAW,GAAG;AAC7C,UAAI,EAAE,EAAE,MAAM,QAAQ,SAAS;AAC9B,cAAM,IAAI,MAAM,6BAA6B,EAAE,MAAM,IAAI,gBAAgB;MAC1E;AAEA,aAAO,EAAE,QAAQ,iBAAiB,OAAO,EAAE,MAAM,IAAI,CAAC;IACvD;AAEA,WAAO;EACR,CAAC;AACF;AApBgB;AAwBhB,IAAM,gBAAgB,OAAO,IAAI,uBAAuB;AAEjD,IAAe,OAAf,MAIiB;EAhoBxB,OAgoBwB;;;EACvB,QAAiB,UAAU,IAAY;;EAWvC,CAAC,cAAc;;EAWf,CAAC,aAAa,IAAI;EAIlB,YACC,EAAE,MAAAG,OAAM,QAAQ,gBAAgB,MAAM,GAMrC;AACD,SAAK,cAAc,IAAI;MACtB,MAAAA;MACA,cAAcA;MACd;MACA;MACA;MACA,YAAY,CAAC;MACb,SAAS;IACV;EACD;EAEA,SAAuB;AACtB,WAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;AACD;AAEO,SAAS,OAAO,MAA6B;AACnD,SAAO,OAAO,SAAS,YAAY,SAAS,QAAQ,iBAAiB;AACtE;AAFgB;AAiBhB,OAAO,UAAU,SAAS,WAAW;AACpC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACtB;AAGA,MAAM,UAAU,SAAS,WAAW;AACnC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACtB;AAGA,SAAS,UAAU,SAAS,WAAW;AACtC,SAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACtB;;;AHxsBO,IAAM,0BAAN,MAAuF;EAR9F,OAQ8F;;;EAG7F,YAAoBC,QAAqB;AAArB,SAAA,QAAAA;EAAsB;EAF1C,QAAiB,UAAU,IAAY;EAIvC,IAAI,WAAoB,MAA4B;AACnD,QAAI,SAAS,SAAS;AACrB,aAAO,KAAK;IACb;AAEA,WAAO,UAAU,IAAqB;EACvC;AACD;AAEO,IAAM,yBAAN,MAAgF;EAtBvF,OAsBuF;;;EAGtF,YAAoB,OAAuB,qBAA8B;AAArD,SAAA,QAAA;AAAuB,SAAA,sBAAA;EAA+B;EAF1E,QAAiB,UAAU,IAAY;EAIvC,IAAI,QAAW,MAA4B;AAC1C,QAAI,SAAS,MAAM,OAAO,SAAS;AAClC,aAAO;IACR;AAEA,QAAI,SAAS,MAAM,OAAO,MAAM;AAC/B,aAAO,KAAK;IACb;AAEA,QAAI,KAAK,uBAAuB,SAAS,MAAM,OAAO,cAAc;AACnE,aAAO,KAAK;IACb;AAEA,QAAI,SAAS,gBAAgB;AAC5B,aAAO;QACN,GAAG,OAAO,cAAqC;QAC/C,MAAM,KAAK;QACX,SAAS;MACV;IACD;AAEA,QAAI,SAAS,MAAM,OAAO,SAAS;AAClC,YAAM,UAAW,OAAiB,MAAM,OAAO,OAAO;AACtD,UAAI,CAAC,SAAS;AACb,eAAO;MACR;AAEA,YAAM,iBAAyC,CAAC;AAEhD,aAAO,KAAK,OAAO,EAAE,IAAI,CAAC,QAAQ;AACjC,uBAAe,GAAG,IAAI,IAAI;UACzB,QAAQ,GAAG;UACX,IAAI,wBAAwB,IAAI,MAAM,QAAQ,IAAI,CAAC;QACpD;MACD,CAAC;AAED,aAAO;IACR;AAEA,UAAM,QAAQ,OAAO,IAA2B;AAChD,QAAI,GAAG,OAAO,MAAM,GAAG;AACtB,aAAO,IAAI,MAAM,OAAoB,IAAI,wBAAwB,IAAI,MAAM,QAAQ,IAAI,CAAC,CAAC;IAC1F;AAEA,WAAO;EACR;AACD;AAEO,IAAM,iCAAN,MAAoF;EA3E3F,OA2E2F;;;EAG1F,YAAoB,OAAe;AAAf,SAAA,QAAA;EAAgB;EAFpC,QAAiB,UAAU,IAAY;EAIvC,IAAI,QAAW,MAA4B;AAC1C,QAAI,SAAS,eAAe;AAC3B,aAAO,aAAa,OAAO,aAAa,KAAK,KAAK;IACnD;AAEA,WAAO,OAAO,IAA2B;EAC1C;AACD;AAEO,SAAS,aACfA,QACA,YACI;AACJ,SAAO,IAAI,MAAMA,QAAO,IAAI,uBAAuB,YAAY,KAAK,CAAC;AACtE;AALgB;AAWT,SAAS,mBAAwC,QAAW,YAAuB;AACzF,SAAO,IAAI;IACV;IACA,IAAI,wBAAwB,IAAI,MAAM,OAAO,OAAO,IAAI,uBAAuB,YAAY,KAAK,CAAC,CAAC;EACnG;AACD;AALgB;AAOT,SAAS,8BAA8B,OAAoB,OAA4B;AAC7F,SAAO,IAAI,IAAI,QAAQ,uBAAuB,MAAM,KAAK,KAAK,GAAG,MAAM,UAAU;AAClF;AAFgB;AAIT,SAAS,uBAAuB,OAAY,OAAoB;AACtE,SAAO,IAAI,KAAK,MAAM,YAAY,IAAI,CAAC,MAAM;AAC5C,QAAI,GAAG,GAAG,MAAM,GAAG;AAClB,aAAO,mBAAmB,GAAG,KAAK;IACnC;AACA,QAAI,GAAG,GAAG,GAAG,GAAG;AACf,aAAO,uBAAuB,GAAG,KAAK;IACvC;AACA,QAAI,GAAG,GAAG,IAAI,OAAO,GAAG;AACvB,aAAO,8BAA8B,GAAG,KAAK;IAC9C;AACA,WAAO;EACR,CAAC,CAAC;AACH;AAbgB;;;AiBhHhB;;AAAAC;AAEO,IAAM,eAAN,cAA2B,MAAM;EAFxC,OAEwC;;;EACvC,QAAiB,UAAU,IAAY;EAEvC,YAAY,EAAE,SAAS,MAAM,GAA0C;AACtE,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,QAAQ;EACd;AACD;AAEO,IAAM,oBAAN,MAAM,2BAA0B,MAAM;EAZ7C,OAY6C;;;EAC5C,YACQ,OACA,QACS,OACf;AACD,UAAM,iBAAiB,KAAK;UAAa,MAAM,EAAE;AAJ1C,SAAA,QAAA;AACA,SAAA,SAAA;AACS,SAAA,QAAA;AAGhB,UAAM,kBAAkB,MAAM,kBAAiB;AAG/C,QAAI,MAAQ,MAAa,QAAQ;EAClC;AACD;AAEO,IAAM,2BAAN,cAAuC,aAAa;EA1B3D,OA0B2D;;;EAC1D,QAA0B,UAAU,IAAY;EAEhD,cAAc;AACb,UAAM,EAAE,SAAS,WAAW,CAAC;EAC9B;AACD;;;AChCA;;AAAAC;AAUO,IAAM,mBAAN,MAA4C;EAVnD,OAUmD;;;EAClD,QAAiB,UAAU,IAAY;EAEvC,MAAM,SAAiB;AACtB,YAAQ,IAAI,OAAO;EACpB;AACD;AAEO,IAAM,gBAAN,MAAsC;EAlB7C,OAkB6C;;;EAC5C,QAAiB,UAAU,IAAY;EAE9B;EAET,YAAYC,SAAgC;AAC3C,SAAK,SAASA,SAAQ,UAAU,IAAI,iBAAiB;EACtD;EAEA,SAAS,OAAe,QAAyB;AAChD,UAAM,oBAAoB,OAAO,IAAI,CAAC,MAAM;AAC3C,UAAI;AACH,eAAO,KAAK,UAAU,CAAC;MACxB,QAAQ;AACP,eAAO,OAAO,CAAC;MAChB;IACD,CAAC;AACD,UAAM,YAAY,kBAAkB,SAAS,gBAAgB,kBAAkB,KAAK,IAAI,CAAC,MAAM;AAC/F,SAAK,OAAO,MAAM,UAAU,KAAK,GAAG,SAAS,EAAE;EAChD;AACD;AAEO,IAAM,aAAN,MAAmC;EAxC1C,OAwC0C;;;EACzC,QAAiB,UAAU,IAAY;EAEvC,WAAiB;EAEjB;AACD;;;AC9CA;;AAAAC;AAEO,IAAe,eAAf,MAAqD;EAF5D,OAE4D;;;EAC3D,QAAiB,UAAU,IAAY;EAEvC,CAAC,OAAO,WAAW,IAAI;EAEvB,MACC,YACuB;AACvB,WAAO,KAAK,KAAK,QAAW,UAAU;EACvC;EAEA,QAAQ,WAAyD;AAChE,WAAO,KAAK;MACX,CAAC,UAAU;AACV,oBAAY;AACZ,eAAO;MACR;MACA,CAAC,WAAW;AACX,oBAAY;AACZ,cAAM;MACP;IACD;EACD;EAEA,KACC,aACA,YAC+B;AAC/B,WAAO,KAAK,QAAQ,EAAE,KAAK,aAAa,UAAU;EACnD;AAGD;;;AClCA;;AAAAC;;;ACAA;;AAAAC;;;ACCA;;AAAAC;;;ACCA;;AAAAC;AAYO,SAAS,aACf,SACA,KACA,qBACU;AAEV,QAAM,aAA6C,CAAC;AAEpD,QAAM,SAAS,QAAQ;IACtB,CAACC,SAAQ,EAAE,MAAM,MAAM,GAAG,gBAAgB;AACzC,UAAI;AACJ,UAAI,GAAG,OAAO,MAAM,GAAG;AACtB,kBAAU;MACX,WAAW,GAAG,OAAO,GAAG,GAAG;AAC1B,kBAAU,MAAM;MACjB,OAAO;AACN,kBAAU,MAAM,IAAI;MACrB;AACA,UAAI,OAAOA;AACX,iBAAW,CAAC,gBAAgB,SAAS,KAAK,KAAK,QAAQ,GAAG;AACzD,YAAI,iBAAiB,KAAK,SAAS,GAAG;AACrC,cAAI,EAAE,aAAa,OAAO;AACzB,iBAAK,SAAS,IAAI,CAAC;UACpB;AACA,iBAAO,KAAK,SAAS;QACtB,OAAO;AACN,gBAAM,WAAW,IAAI,WAAW;AAChC,gBAAM,QAAQ,KAAK,SAAS,IAAI,aAAa,OAAO,OAAO,QAAQ,mBAAmB,QAAQ;AAE9F,cAAI,uBAAuB,GAAG,OAAO,MAAM,KAAK,KAAK,WAAW,GAAG;AAClE,kBAAM,aAAa,KAAK,CAAC;AACzB,gBAAI,EAAE,cAAc,aAAa;AAChC,yBAAW,UAAU,IAAI,UAAU,OAAO,aAAa,MAAM,KAAK,IAAI;YACvE,WACC,OAAO,WAAW,UAAU,MAAM,YAAY,WAAW,UAAU,MAAM,aAAa,MAAM,KAAK,GAChG;AACD,yBAAW,UAAU,IAAI;YAC1B;UACD;QACD;MACD;AACA,aAAOA;IACR;IACA,CAAC;EACF;AAGA,MAAI,uBAAuB,OAAO,KAAK,UAAU,EAAE,SAAS,GAAG;AAC9D,eAAW,CAAC,YAAY,SAAS,KAAK,OAAO,QAAQ,UAAU,GAAG;AACjE,UAAI,OAAO,cAAc,YAAY,CAAC,oBAAoB,SAAS,GAAG;AACrE,eAAO,UAAU,IAAI;MACtB;IACD;EACD;AAEA,SAAO;AACR;AAxDgB;AA2DT,SAAS,oBACf,QACA,YACiC;AACjC,SAAO,OAAO,QAAQ,MAAM,EAAE,OAAyC,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM;AACjG,QAAI,OAAO,SAAS,UAAU;AAC7B,aAAO;IACR;AAEA,UAAM,UAAU,aAAa,CAAC,GAAG,YAAY,IAAI,IAAI,CAAC,IAAI;AAC1D,QAAI,GAAG,OAAO,MAAM,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,IAAI,OAAO,GAAG;AAClE,aAAO,KAAK,EAAE,MAAM,SAAS,MAAM,CAAC;IACrC,WAAW,GAAG,OAAO,KAAK,GAAG;AAC5B,aAAO,KAAK,GAAG,oBAAoB,MAAM,MAAM,OAAO,OAAO,GAAG,OAAO,CAAC;IACzE,OAAO;AACN,aAAO,KAAK,GAAG,oBAAoB,OAAkC,OAAO,CAAC;IAC9E;AACA,WAAO;EACR,GAAG,CAAC,CAAC;AACN;AAnBgB;AAqBT,SAAS,aAAa,MAA+B,OAAgC;AAC3F,QAAM,WAAW,OAAO,KAAK,IAAI;AACjC,QAAM,YAAY,OAAO,KAAK,KAAK;AAEnC,MAAI,SAAS,WAAW,UAAU,QAAQ;AACzC,WAAO;EACR;AAEA,aAAW,CAAC,OAAO,GAAG,KAAK,SAAS,QAAQ,GAAG;AAC9C,QAAI,QAAQ,UAAU,KAAK,GAAG;AAC7B,aAAO;IACR;EACD;AAEA,SAAO;AACR;AAfgB;AAkBT,SAAS,aAAaC,QAAc,QAA4C;AACtF,QAAM,UAAyC,OAAO,QAAQ,MAAM,EAClE,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,UAAU,MAAS,EACzC,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AAEtB,QAAI,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,MAAM,GAAG;AACxC,aAAO,CAAC,KAAK,KAAK;IACnB,OAAO;AACN,aAAO,CAAC,KAAK,IAAI,MAAM,OAAOA,OAAM,MAAM,OAAO,OAAO,EAAE,GAAG,CAAC,CAAC;IAChE;EACD,CAAC;AAEF,MAAI,QAAQ,WAAW,GAAG;AACzB,UAAM,IAAI,MAAM,kBAAkB;EACnC;AAEA,SAAO,OAAO,YAAY,OAAO;AAClC;AAjBgB;AAmDT,SAAS,YAAY,WAAgB,iBAAwB;AACnE,aAAW,iBAAiB,iBAAiB;AAC5C,eAAW,QAAQ,OAAO,oBAAoB,cAAc,SAAS,GAAG;AACvE,UAAI,SAAS,cAAe;AAE5B,aAAO;QACN,UAAU;QACV;QACA,OAAO,yBAAyB,cAAc,WAAW,IAAI,KAAK,uBAAO,OAAO,IAAI;MACrF;IACD;EACD;AACD;AAZgB;AA0BT,SAAS,gBAAiCA,QAA6B;AAC7E,SAAOA,OAAM,MAAM,OAAO,OAAO;AAClC;AAFgB;AAIT,SAAS,sBAAsC,MAAmC;AACxF,SAAO,KAAK,cAAc,EAAE;AAC7B;AAFgB;AAKT,SAAS,iBAAiBA,QAAsC;AACtE,SAAO,GAAGA,QAAO,QAAQ,IACtBA,OAAM,EAAE,QACR,GAAGA,QAAO,IAAI,IACdA,OAAM,cAAc,EAAE,OACtB,GAAGA,QAAO,GAAG,IACb,SACAA,OAAM,MAAM,OAAO,OAAO,IAC1BA,OAAM,MAAM,OAAO,IAAI,IACvBA,OAAM,MAAM,OAAO,QAAQ;AAC/B;AAVgB;AAwCT,SAAS,uBAEd,GAAiC,GAAwB;AAC1D,SAAO;IACN,MAAM,OAAO,MAAM,YAAY,EAAE,SAAS,IAAI,IAAI;IAClD,QAAQ,OAAO,MAAM,WAAW,IAAI;EACrC;AACD;AAPgB;AA8BT,SAAS,SAAS,MAAoB;AAC5C,MAAI,OAAO,SAAS,YAAY,SAAS,KAAM,QAAO;AAEtD,MAAI,KAAK,YAAY,SAAS,SAAU,QAAO;AAE/C,MAAI,YAAY,MAAM;AACrB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QACC,SAAS,cAAc,SAAS,YAAY,OAAO,KAAK,QAAQ,EAAE,UAAU,MAAM,eAC/E,SAAS,YACX,QAAO;AAET,WAAO;EACR;AAEA,MAAI,YAAY,MAAM;AACrB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS,YAAa,QAAO;AAEtD,WAAO;EACR;AAEA,MAAI,YAAY,MAAM;AACrB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS,YAAa,QAAO;AAEtD,WAAO;EACR;AAEA,MAAI,UAAU,MAAM;AACnB,QAAI,KAAK,MAAM,MAAM,aAAa,KAAK,MAAM,MAAM,iBAAiB,KAAK,MAAM,MAAM,OAAW,QAAO;AAEvG,WAAO;EACR;AAEA,MAAI,gBAAgB,MAAM;AACzB,UAAM,OAAO,OAAO,KAAK,YAAY;AACrC,QAAI,SAAS,YAAY,SAAS,YAAY,SAAS,YAAa,QAAO;AAE3E,WAAO;EACR;AAEA,MAAI,YAAY,MAAM;AACrB,UAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,QAAI,SAAS,YAAY,SAAS,cAAc,SAAS,YAAa,QAAO;AAE7E,WAAO;EACR;AAEA,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,EAAG,QAAO;AAE3C,SAAO;AACR;AApDgB;AAwDT,IAAM,cAAc,OAAO,gBAAgB,cAAc,OAAO,IAAI,YAAY;;;ADxShF,IAAM,oBAAoB,OAAO,IAAI,6BAA6B;AAElE,IAAM,YAAY,OAAO,IAAI,mBAAmB;AAEhD,IAAM,UAAN,cAA2D,MAAS;EA/B3E,OA+B2E;;;EAC1E,QAA0B,UAAU,IAAY;;EAGhD,OAAyB,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,QAAQ;IACjE;IACA;EACD,CAAC;;EAGD,CAAC,iBAAiB,IAAkB,CAAC;;EAGrC,CAAC,SAAS,IAAa;;EAGvB,CAAU,MAAM,OAAO,kBAAkB,IACxC;;EAGD,CAAU,MAAM,OAAO,kBAAkB,IAAuC,CAAC;AAClF;;;AD7BO,IAAM,oBAAN,MAAwB;EAxB/B,OAwB+B;;;EAC9B,QAAiB,UAAU,IAAY;;EAGvC;;EAGA;EAEA,YACC,SACA,MACC;AACD,SAAK,UAAU;AACf,SAAK,OAAO;EACb;;EAGA,MAAMC,QAA4B;AACjC,WAAO,IAAI,WAAWA,QAAO,KAAK,SAAS,KAAK,IAAI;EACrD;AACD;AAEO,IAAM,aAAN,MAAiB;EA/CxB,OA+CwB;;;EAMvB,YAAqBA,QAAgB,SAA4B,MAAe;AAA3D,SAAA,QAAAA;AACpB,SAAK,UAAU;AACf,SAAK,OAAO;EACb;EARA,QAAiB,UAAU,IAAY;EAE9B;EACA;EAOT,UAAkB;AACjB,WAAO,KAAK,QAAQ,GAAG,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,EAAE,KAAK,GAAG,CAAC;EAC9G;AACD;;;AG7DA;;AAAAC;AAgBO,SAAS,YAAY,OAAgB,QAA8B;AACzE,MACC,qBAAqB,MAAM,KACxB,CAAC,aAAa,KAAK,KACnB,CAAC,GAAG,OAAO,KAAK,KAChB,CAAC,GAAG,OAAO,WAAW,KACtB,CAAC,GAAG,OAAO,MAAM,KACjB,CAAC,GAAG,OAAO,KAAK,KAChB,CAAC,GAAG,OAAO,IAAI,GACjB;AACD,WAAO,IAAI,MAAM,OAAO,MAAM;EAC/B;AACA,SAAO;AACR;AAbgB;AA6CT,IAAM,KAAqB,wBAAC,MAAkB,UAAwB;AAC5E,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AAChD,GAFkC;AAsB3B,IAAM,KAAqB,wBAAC,MAAkB,UAAwB;AAC5E,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AACjD,GAFkC;AAqB3B,SAAS,OACZ,sBACe;AAClB,QAAM,aAAa,qBAAqB;IACvC,CAAC,MAAyC,MAAM;EACjD;AAEA,MAAI,WAAW,WAAW,GAAG;AAC5B,WAAO;EACR;AAEA,MAAI,WAAW,WAAW,GAAG;AAC5B,WAAO,IAAI,IAAI,UAAU;EAC1B;AAEA,SAAO,IAAI,IAAI;IACd,IAAI,YAAY,GAAG;IACnB,IAAI,KAAK,YAAY,IAAI,YAAY,OAAO,CAAC;IAC7C,IAAI,YAAY,GAAG;EACpB,CAAC;AACF;AApBgB;AAuCT,SAAS,MACZ,sBACe;AAClB,QAAM,aAAa,qBAAqB;IACvC,CAAC,MAAyC,MAAM;EACjD;AAEA,MAAI,WAAW,WAAW,GAAG;AAC5B,WAAO;EACR;AAEA,MAAI,WAAW,WAAW,GAAG;AAC5B,WAAO,IAAI,IAAI,UAAU;EAC1B;AAEA,SAAO,IAAI,IAAI;IACd,IAAI,YAAY,GAAG;IACnB,IAAI,KAAK,YAAY,IAAI,YAAY,MAAM,CAAC;IAC5C,IAAI,YAAY,GAAG;EACpB,CAAC;AACF;AApBgB;AAiCT,SAAS,IAAI,WAA4B;AAC/C,SAAO,UAAU,SAAS;AAC3B;AAFgB;AAkBT,IAAM,KAAqB,wBAAC,MAAkB,UAAwB;AAC5E,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AAChD,GAFkC;AAoB3B,IAAM,MAAsB,wBAAC,MAAkB,UAAwB;AAC7E,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AACjD,GAFmC;AAkB5B,IAAM,KAAqB,wBAAC,MAAkB,UAAwB;AAC5E,SAAO,MAAM,IAAI,MAAM,YAAY,OAAO,IAAI,CAAC;AAChD,GAFkC;AAkB3B,IAAM,MAAsB,wBAAC,MAAkB,UAAwB;AAC7E,SAAO,MAAM,IAAI,OAAO,YAAY,OAAO,IAAI,CAAC;AACjD,GAFmC;AA8B5B,SAAS,QACf,QACA,QACM;AACN,MAAI,MAAM,QAAQ,MAAM,GAAG;AAC1B,QAAI,OAAO,WAAW,GAAG;AACxB,aAAO;IACR;AACA,WAAO,MAAM,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC;EACpE;AAEA,SAAO,MAAM,MAAM,OAAO,YAAY,QAAQ,MAAM,CAAC;AACtD;AAZgB;AAyCT,SAAS,WACf,QACA,QACM;AACN,MAAI,MAAM,QAAQ,MAAM,GAAG;AAC1B,QAAI,OAAO,WAAW,GAAG;AACxB,aAAO;IACR;AACA,WAAO,MAAM,MAAM,WAAW,OAAO,IAAI,CAAC,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC;EACxE;AAEA,SAAO,MAAM,MAAM,WAAW,YAAY,QAAQ,MAAM,CAAC;AAC1D;AAZgB;AA8BT,SAAS,OAAO,OAAwB;AAC9C,SAAO,MAAM,KAAK;AACnB;AAFgB;AAoBT,SAAS,UAAU,OAAwB;AACjD,SAAO,MAAM,KAAK;AACnB;AAFgB;AAwBT,SAASC,QAAO,UAA2B;AACjD,SAAO,aAAa,QAAQ;AAC7B;AAFgB,OAAAA,SAAA;AAyBT,SAAS,UAAU,UAA2B;AACpD,SAAO,iBAAiB,QAAQ;AACjC;AAFgB;AAsCT,SAAS,QAAQ,QAAoB,KAAcC,MAAmB;AAC5E,SAAO,MAAM,MAAM,YAAY,YAAY,KAAK,MAAM,CAAC,QACtD;IACCA;IACA;EACD,CACD;AACD;AAPgB;AAyCT,SAAS,WACf,QACA,KACAA,MACM;AACN,SAAO,MAAM,MAAM,gBAClB;IACC;IACA;EACD,CACD,QAAQ,YAAYA,MAAK,MAAM,CAAC;AACjC;AAXgB;AA6BT,SAAS,KAAK,QAAoC,OAAiC;AACzF,SAAO,MAAM,MAAM,SAAS,KAAK;AAClC;AAFgB;AAsBT,SAAS,QAAQ,QAAoC,OAAiC;AAC5F,SAAO,MAAM,MAAM,aAAa,KAAK;AACtC;AAFgB;AAuBT,SAAS,MAAM,QAAoC,OAAiC;AAC1F,SAAO,MAAM,MAAM,UAAU,KAAK;AACnC;AAFgB;AAsBT,SAAS,SAAS,QAAoC,OAAiC;AAC7F,SAAO,MAAM,MAAM,cAAc,KAAK;AACvC;AAFgB;;;ACjlBhB;;AAAAC;AAoBO,SAAS,IAAI,QAAqC;AACxD,SAAO,MAAM,MAAM;AACpB;AAFgB;AAoBT,SAAS,KAAK,QAAqC;AACzD,SAAO,MAAM,MAAM;AACpB;AAFgB;;;ALVT,IAAe,WAAf,MAA4D;EAhCnE,OAgCmE;;;EAOlE,YACU,aACA,iBACA,cACR;AAHQ,SAAA,cAAA;AACA,SAAA,kBAAA;AACA,SAAA,eAAA;AAET,SAAK,sBAAsB,gBAAgB,MAAM,OAAO,IAAI;EAC7D;EAZA,QAAiB,UAAU,IAAY;EAG9B;EACT;AAWD;AAEO,IAAM,YAAN,MAGL;EArDF,OAqDE;;;EAKD,YACUC,QACAC,SACR;AAFQ,SAAA,QAAAD;AACA,SAAA,SAAAC;EACP;EAPH,QAAiB,UAAU,IAAY;AAQxC;AAEO,IAAM,MAAN,MAAM,aAGH,SAAqB;EAnE/B,OAmE+B;;;EAK9B,YACC,aACA,iBACSA,SAOA,YACR;AACD,UAAM,aAAa,iBAAiBA,SAAQ,YAAY;AAT/C,SAAA,SAAAA;AAOA,SAAA,aAAA;EAGV;EAjBA,QAA0B,UAAU,IAAY;EAmBhD,cAAc,WAAoC;AACjD,UAAM,WAAW,IAAI;MACpB,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;IACN;AACA,aAAS,YAAY;AACrB,WAAO;EACR;AACD;AAEO,IAAM,OAAN,MAAM,cAAwC,SAAqB;EAnG1E,OAmG0E;;;EAKzE,YACC,aACA,iBACSA,SACR;AACD,UAAM,aAAa,iBAAiBA,SAAQ,YAAY;AAF/C,SAAA,SAAAA;EAGV;EAVA,QAA0B,UAAU,IAAY;EAYhD,cAAc,WAAqC;AAClD,UAAM,WAAW,IAAI;MACpB,KAAK;MACL,KAAK;MACL,KAAK;IACN;AACA,aAAS,YAAY;AACrB,WAAO;EACR;AACD;AAqCO,SAAS,eAAe;AAC9B,SAAO;IACN;IACA;IACA;IACA,QAAAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACD;AAzBgB;AA6BT,SAAS,sBAAsB;AACrC,SAAO;IACN;IACA;IACA;EACD;AACD;AANgB;AAoOT,SAAS,8BAGf,QACA,eAC6D;AAC7D,MACC,OAAO,KAAK,MAAM,EAAE,WAAW,KAC5B,aAAa,UACb,CAAC,GAAG,OAAO,SAAS,GAAG,KAAK,GAC9B;AACD,aAAS,OAAO,SAAS;EAC1B;AAGA,QAAM,gBAAwC,CAAC;AAE/C,QAAM,kBAGF,CAAC;AACL,QAAM,eAAuC,CAAC;AAC9C,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAClD,QAAI,GAAG,OAAO,KAAK,GAAG;AACrB,YAAM,SAAS,mBAAmB,KAAK;AACvC,YAAM,oBAAoB,gBAAgB,MAAM;AAChD,oBAAc,MAAM,IAAI;AACxB,mBAAa,GAAG,IAAI;QACnB,QAAQ;QACR,QAAQ,MAAM,MAAM,OAAO,IAAI;QAC/B,QAAQ,MAAM,MAAM,OAAO,MAAM;QACjC,SAAS,MAAM,MAAM,OAAO,OAAO;QACnC,WAAW,mBAAmB,aAAa,CAAC;QAC5C,YAAY,mBAAmB,cAAc,CAAC;MAC/C;AAGA,iBACO,UAAU,OAAO;QACrB,MAAgB,MAAM,OAAO,OAAO;MACtC,GACC;AACD,YAAI,OAAO,SAAS;AACnB,uBAAa,GAAG,EAAG,WAAW,KAAK,MAAM;QAC1C;MACD;AAEA,YAAM,cAAc,MAAM,MAAM,OAAO,kBAAkB,IAAK,MAAgB,MAAM,OAAO,kBAAkB,CAAC;AAC9G,UAAI,aAAa;AAChB,mBAAW,eAAe,OAAO,OAAO,WAAW,GAAG;AACrD,cAAI,GAAG,aAAa,iBAAiB,GAAG;AACvC,yBAAa,GAAG,EAAG,WAAW,KAAK,GAAG,YAAY,OAAO;UAC1D;QACD;MACD;IACD,WAAW,GAAG,OAAO,SAAS,GAAG;AAChC,YAAM,SAAS,mBAAmB,MAAM,KAAK;AAC7C,YAAM,YAAY,cAAc,MAAM;AACtC,YAAMC,aAAsC,MAAM;QACjD,cAAc,MAAM,KAAK;MAC1B;AACA,UAAI;AAEJ,iBAAW,CAAC,cAAc,QAAQ,KAAK,OAAO,QAAQA,UAAS,GAAG;AACjE,YAAI,WAAW;AACd,gBAAM,cAAc,aAAa,SAAS;AAC1C,sBAAY,UAAU,YAAY,IAAI;AACtC,cAAI,YAAY;AACf,wBAAY,WAAW,KAAK,GAAG,UAAU;UAC1C;QACD,OAAO;AACN,cAAI,EAAE,UAAU,kBAAkB;AACjC,4BAAgB,MAAM,IAAI;cACzB,WAAW,CAAC;cACZ;YACD;UACD;AACA,0BAAgB,MAAM,EAAG,UAAU,YAAY,IAAI;QACpD;MACD;IACD;EACD;AAEA,SAAO,EAAE,QAAQ,cAAyB,cAAc;AACzD;AApFgB;AAyGT,SAAS,UAAqC,aAAoB;AACxE,SAAO,gCAAS,IAOfC,QACAC,SAIC;AACD,WAAO,IAAI;MACV;MACAD;MACAC;MACCA,SAAQ,OAAO,OAAgB,CAAC,KAAK,MAAM,OAAO,EAAE,SAAS,IAAI,KAC9D;IACL;EACD,GApBO;AAqBR;AAtBgB;AAwBT,SAAS,WAAW,aAAoB;AAC9C,SAAO,gCAAS,KACf,iBACAA,SACmC;AACnC,WAAO,IAAI,KAAK,aAAa,iBAAiBA,OAAM;EACrD,GALO;AAMR;AAPgB;AAcT,SAAS,kBACf,QACA,eACA,UACqB;AACrB,MAAI,GAAG,UAAU,GAAG,KAAK,SAAS,QAAQ;AACzC,WAAO;MACN,QAAQ,SAAS,OAAO;MACxB,YAAY,SAAS,OAAO;IAC7B;EACD;AAEA,QAAM,wBAAwB,cAAc,mBAAmB,SAAS,eAAe,CAAC;AACxF,MAAI,CAAC,uBAAuB;AAC3B,UAAM,IAAI;MACT,UAAU,SAAS,gBAAgB,MAAM,OAAO,IAAI,CAAC;IACtD;EACD;AAEA,QAAM,wBAAwB,OAAO,qBAAqB;AAC1D,MAAI,CAAC,uBAAuB;AAC3B,UAAM,IAAI,MAAM,UAAU,qBAAqB,uBAAuB;EACvE;AAEA,QAAM,cAAc,SAAS;AAC7B,QAAM,oBAAoB,cAAc,mBAAmB,WAAW,CAAC;AACvE,MAAI,CAAC,mBAAmB;AACvB,UAAM,IAAI;MACT,UAAU,YAAY,MAAM,OAAO,IAAI,CAAC;IACzC;EACD;AAEA,QAAM,mBAA+B,CAAC;AACtC,aACO,2BAA2B,OAAO;IACvC,sBAAsB;EACvB,GACC;AACD,QACE,SAAS,gBACN,aAAa,2BACb,wBAAwB,iBAAiB,SAAS,gBAClD,CAAC,SAAS,gBACV,wBAAwB,oBAAoB,SAAS,aACxD;AACD,uBAAiB,KAAK,uBAAuB;IAC9C;EACD;AAEA,MAAI,iBAAiB,SAAS,GAAG;AAChC,UAAM,SAAS,eACZ,IAAI;MACL,2CAA2C,SAAS,YAAY,eAAe,qBAAqB;IACrG,IACE,IAAI;MACL,yCAAyC,qBAAqB,UAC7D,SAAS,YAAY,MAAM,OAAO,IAAI,CACvC;IACD;EACF;AAEA,MACC,iBAAiB,CAAC,KACf,GAAG,iBAAiB,CAAC,GAAG,GAAG,KAC3B,iBAAiB,CAAC,EAAE,QACtB;AACD,WAAO;MACN,QAAQ,iBAAiB,CAAC,EAAE,OAAO;MACnC,YAAY,iBAAiB,CAAC,EAAE,OAAO;IACxC;EACD;AAEA,QAAM,IAAI;IACT,sDAAsD,iBAAiB,IAAI,SAAS,SAAS;EAC9F;AACD;AA3EgB;AA6ET,SAAS,4BACf,aACC;AACD,SAAO;IACN,KAAK,UAAsB,WAAW;IACtC,MAAM,WAAW,WAAW;EAC7B;AACD;AAPgB;AA8BT,SAAS,iBACf,cACA,aACA,KACA,2BACA,iBAA8C,CAAC,UAAU,OAC/B;AAC1B,QAAM,SAAkC,CAAC;AAEzC,aACO;IACL;IACA;EACD,KAAK,0BAA0B,QAAQ,GACtC;AACD,QAAI,cAAc,QAAQ;AACzB,YAAM,WAAW,YAAY,UAAU,cAAc,KAAK;AAC1D,YAAM,aAAa,IAAI,kBAAkB;AAKzC,YAAM,UAAU,OAAO,eAAe,WAClC,KAAK,MAAM,UAAU,IACtB;AACH,aAAO,cAAc,KAAK,IAAI,GAAG,UAAU,GAAG,IAC3C,WACE;QACF;QACA,aAAa,cAAc,kBAAmB;QAC9C;QACA,cAAc;QACd;MACD,IACE,QAAwB;QAAI,CAAC,WAC/B;UACC;UACA,aAAa,cAAc,kBAAmB;UAC9C;UACA,cAAc;UACd;QACD;MACD;IACF,OAAO;AACN,YAAM,QAAQ,eAAe,IAAI,kBAAkB,CAAC;AACpD,YAAM,QAAQ,cAAc;AAC5B,UAAI;AACJ,UAAI,GAAG,OAAO,MAAM,GAAG;AACtB,kBAAU;MACX,WAAW,GAAG,OAAO,GAAG,GAAG;AAC1B,kBAAU,MAAM;MACjB,OAAO;AACN,kBAAU,MAAM,IAAI;MACrB;AACA,aAAO,cAAc,KAAK,IAAI,UAAU,OAAO,OAAO,QAAQ,mBAAmB,KAAK;IACvF;EACD;AAEA,SAAO;AACR;AA3DgB;A;;;;;AMzpBT,IAAM,YAAY;EACxB,UAAU;EACV,UAAU;EACV,mBAAmB;EACnB,WAAW;EACX,WAAW;EACX,oBAAoB;EACpB,WAAW;EACX,WAAW;EACX,oBAAoB;EACpB,WAAW;EACX,WAAW;EACX,oBAAoB;EACpB,WAAW;EACX,WAAW;EACX,oBAAoB;EACpB,WAAW,CAAC;EACZ,WAAW;EACX,oBAAoB;;ACbL,SAAA,aAA+B,QAAgB,aAAqB;AACnF,SAAO,YAAY,SAAS,OAAO,UAAU;AAC9C;AAFgB;AAIV,SAAU,WAAW,QAAc;AACxC,SAAO,gBAAgB,UAAU,MAAM,QAAQ,OAAO,UAAU,KAAK,OAAO,WAAW,SAAS;AACjG;AAFgB;ACoDT,IAAM,gBAAgBC,KAAE,MAAM,CAACA,KAAE,OAAM,GAAIA,KAAE,OAAM,GAAIA,KAAE,QAAO,GAAIA,KAAE,KAAI,CAAE,CAAC;AACvE,IAAA,aAAyBA,KAAE,MAAM,CAAC,eAAeA,KAAE,MAAMA,KAAE,IAAG,CAAE,GAAGA,KAAE,OAAOA,KAAE,OAAM,GAAIA,KAAE,IAAG,CAAE,CAAC,CAAC;AAC9GC,cAAa,IAAI,UAAU,CAAC,GAAG,UAAU,iBAAiB,MAAM;AACzD,IAAM,eAA6B,EAAE,CAAC,IAAI,GAAG,UAAU,MAAM,SAAQ;AAEtE,SAAU,cAAc,QAAgB;AAC7C,SAAO,OAAO,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,CAAC,CAAC;AAChE;AAFgB;AAIA,SAAA,eAAe,QAAgBD,IAAiB;AAC/D,MAAI;AAEJ,MAAI,WAAW,MAAM,GAAG;AACvB,aAAS,OAAO,WAAW,SAASA,GAAE,KAAK,cAAc,OAAO,UAAU,CAAC,IAAIA,GAAE,OAAM;;AAGxF,MAAI,CAAC,QAAQ;AAEZ,QAAI,aAAkD,QAAQ,CAAC,cAAc,cAAc,CAAC,GAAG;AAC9F,eAASA,GAAE,MAAM,CAACA,GAAE,OAAM,GAAIA,GAAE,OAAM,CAAE,CAAC;eAEzC,aAAyD,QAAQ,CAAC,oBAAoB,eAAe,CAAC,GACrG;AACD,eAASA,GAAE,OAAO,EAAE,GAAGA,GAAE,OAAM,GAAI,GAAGA,GAAE,OAAM,EAAE,CAAE;eACxC,aAAgD,QAAQ,CAAC,gBAAgB,UAAU,CAAC,GAAG;AACjG,eAASA,GAAE,MACVA,GAAE,OAAM,GACR,OAAO,aACJ;QACD,UAAU,OAAO;QACjB,UAAU,OAAO;MACjB,IACC,MAAS;eAEH,aAA+B,QAAQ,CAAC,QAAQ,CAAC,GAAG;AAC9D,eAASA,GAAE,MAAM,CAACA,GAAE,OAAM,GAAIA,GAAE,OAAM,GAAIA,GAAE,OAAM,CAAE,CAAC;eAC3C,aAA6B,QAAQ,CAAC,WAAW,CAAC,GAAG;AAC/D,eAASA,GAAE,OAAO;QACjB,GAAGA,GAAE,OAAM;QACX,GAAGA,GAAE,OAAM;QACX,GAAGA,GAAE,OAAM;MACX,CAAA;IACF,WACS,aAAgC,QAAQ,CAAC,SAAS,CAAC,GAAG;AAC9D,eAASA,GAAE,MACV,eAAe,OAAO,YAAYA,EAAC,GACnC,OAAO,OACJ;QACD,UAAU,OAAO;QACjB,UAAU,OAAO;MACjB,IACC,MAAS;eAEH,OAAO,aAAa,SAAS;AACvC,eAASA,GAAE,MAAMA,GAAE,IAAG,CAAE;eACd,OAAO,aAAa,UAAU;AACxC,eAAS,qBAAqB,QAAQA,EAAC;eAC7B,OAAO,aAAa,UAAU;AACxC,eAAS,qBAAqB,QAAQA,EAAC;eAC7B,OAAO,aAAa,WAAW;AACzC,eAASA,GAAE,QAAO;eACR,OAAO,aAAa,QAAQ;AACtC,eAASA,GAAE,KAAI;eACL,OAAO,aAAa,UAAU;AACxC,eAAS,qBAAqB,QAAQA,EAAC;eAC7B,OAAO,aAAa,QAAQ;AACtC,eAAS;eACC,OAAO,aAAa,UAAU;AACxC,eAASA,GAAE,IAAG;eACJ,OAAO,aAAa,UAAU;AACxC,eAAS;;;AAIX,MAAI,CAAC,QAAQ;AACZ,aAASA,GAAE,IAAG;;AAGf,SAAO;AACR;AAtEgB;AAwEhB,SAAS,qBAAqB,QAAgBA,IAAiB;AAC9D,MAAI,WAAW,OAAO,WAAU,EAAG,SAAS,UAAU;AACtD,MAAI;AACJ,MAAIE;AACJ,MAAIC,WAAU;AAEd,MAAI,aAA0D,QAAQ,CAAC,gBAAgB,oBAAoB,CAAC,GAAG;AAC9G,UAAM,WAAW,IAAI,UAAU;AAC/B,IAAAD,OAAM,WAAW,UAAU,oBAAoB,UAAU;AACzD,IAAAC,WAAU;aAEV,aAAmG,QAAQ;IAC1G;IACA;IACA;IACA;EACA,CAAA,GACA;AACD,UAAM,WAAW,IAAI,UAAU;AAC/B,IAAAD,OAAM,WAAW,UAAU,qBAAqB,UAAU;AAC1D,IAAAC,WAAU;aAEV,aAEE,QAAQ;IACT;IACA;IACA;IACA;IACA;EACA,CAAA,GACA;AACD,UAAM,WAAW,IAAI,UAAU;AAC/B,IAAAD,OAAM,WAAW,UAAU,qBAAqB,UAAU;AAC1D,IAAAC,WAAU,aAAa,QAAQ,CAAC,kBAAkB,sBAAsB,CAAC;aAEzE,aAAmF,QAAQ;IAC1F;IACA;IACA;IACA;EACA,CAAA,GACA;AACD,UAAM,WAAW,IAAI,UAAU;AAC/B,IAAAD,OAAM,WAAW,UAAU,qBAAqB,UAAU;AAC1D,IAAAC,WAAU;aAEV,aAOE,QAAQ;IACT;IACA;IACA;IACA;IACA;IACA;EACA,CAAA,GACA;AACD,UAAM,WAAW,IAAI,UAAU;AAC/B,IAAAD,OAAM,WAAW,UAAU,qBAAqB,UAAU;aAE1D,aASC,QACA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAAA,GAED;AACD,eAAW,YAAY,aAAa,QAAQ,CAAC,eAAe,mBAAmB,CAAC;AAChF,UAAM,WAAW,IAAI,OAAO;AAC5B,IAAAA,OAAM,OAAO;AACb,IAAAC,WAAU;aACA,aAAoD,QAAQ,CAAC,aAAa,iBAAiB,CAAC,GAAG;AACzG,UAAM;AACN,IAAAD,OAAM;AACN,IAAAC,WAAU;SACJ;AACN,UAAM,OAAO;AACb,IAAAD,OAAM,OAAO;;AAGd,QAAM,MAAMC,WAAU,YAAY;AAClC,SAAOH,GAAE,GAAG,EAAE;IACb,SAAS;IACT,SAASE;EACT,CAAA;AACF;AAzGS;AA2GT,SAAS,qBAAqB,QAAgBF,IAAiB;AAC9D,QAAM,WAAW,OAAO,WAAU,EAAG,SAAS,UAAU;AACxD,QAAM,MAAM,WAAW,KAAK,UAAU;AACtC,QAAME,OAAM,WAAW,UAAU,qBAAqB,UAAU;AAEhE,SAAOF,GAAE,OAAO;IACf,SAAS;IACT,SAASE;EACT,CAAA;AACF;AATS;AAWT,SAAS,qBAAqB,QAAgBF,IAAiB;AAC9D,MAAI,aAA2D,QAAQ,CAAC,QAAQ,CAAC,GAAG;AACnF,WAAOA,GAAE,OAAO,EAAE,QAAQ,OAAM,CAAE;aAElC,aAAoG,QAAQ;IAC3G;EACA,CAAA,GACA;AACD,WAAOA,GAAE,OAAO,WAAW,OAAO,aAAa,EAAE,WAAW,OAAO,WAAU,IAAK,MAAS;;AAG5F,MAAIE;AACJ,MAAI,QAAQ;AAEZ,MAAI,aAA+C,QAAQ,CAAC,aAAa,YAAY,CAAC,GAAG;AACxF,IAAAA,OAAM,OAAO;aAEb,aAA0D,QAAQ,CAAC,gBAAgB,oBAAoB,CAAC,GACvG;AACD,IAAAA,OAAM,OAAO,UAAU,UAAU;aACvB,aAAoD,QAAQ,CAAC,aAAa,iBAAiB,CAAC,GAAG;AACzG,QAAI,OAAO,aAAa,YAAY;AACnC,MAAAA,OAAM,UAAU;eACN,OAAO,aAAa,cAAc;AAC5C,MAAAA,OAAM,UAAU;eACN,OAAO,aAAa,QAAQ;AACtC,MAAAA,OAAM,UAAU;WACV;AACN,MAAAA,OAAM,UAAU;;;AAIlB,MACC,aAAkE,QAAQ;IACzE;IACA;IACA;EACA,CAAA,GACA;AACD,IAAAA,OAAM,OAAO;AACb,YAAQ;;AAGT,QAAM,UAAkC,CAAA;AAExC,MAAIA,SAAQ,UAAa,OAAO;AAC/B,YAAQ,YAAYA;AACpB,YAAQ,YAAYA;aACVA,SAAQ,QAAW;AAC7B,YAAQ,YAAYA;;AAGrB,SAAOF,GAAE,OAAO,OAAO,KAAK,OAAO,EAAE,SAAS,IAAI,UAAU,MAAS;AACtE;AArDS;ACrPH,SAAU,WAAW,WAAuB;AACjD,SAAO,QAAQ,SAAS,IAAI,gBAAgB,SAAS,IAAI,sBAAsB,SAAS;AACzF;AAFgB;AAIV,SAAU,cACf,SACA,aACA,YACA,SAAoC;AAEpC,QAAM,gBAAyC,CAAA;AAE/C,aAAW,CAAC,KAAK,QAAQ,KAAK,OAAO,QAAQ,OAAO,GAAG;AACtD,QAAI,CAAC,GAAG,UAAU,MAAM,KAAK,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,GAAG,UAAU,IAAI,OAAO,KAAK,OAAO,aAAa,UAAU;AAC9G,YAAMI,WAAU,QAAQ,QAAQ,KAAK,OAAO,QAAQ,IAAI,WAAW,QAAQ,IAAI;AAC/E,oBAAc,GAAG,IAAI,cAAcA,UAAS,YAAY,GAAG,KAAK,CAAA,GAAI,YAAY,OAAO;AACvF;;AAGD,UAAM,aAAa,YAAY,GAAG;AAClC,QAAI,eAAe,UAAa,OAAO,eAAe,YAAY;AACjE,oBAAc,GAAG,IAAI;AACrB;;AAGD,UAAM,SAAS,GAAG,UAAU,MAAM,IAAI,WAAW;AACjD,UAAM,SAAS,SAAS,eAAe,QAAQ,SAAS,mBAAmBJ,IAAC,IAAIA,KAAE,IAAG;AACrF,UAAM,UAAU,OAAO,eAAe,aAAa,WAAW,MAAM,IAAI;AAExE,QAAI,WAAW,MAAM,MAAM,GAAG;AAC7B;WACM;AACN,oBAAc,GAAG,IAAI;;AAGtB,QAAI,QAAQ;AACX,UAAI,WAAW,SAAS,MAAM,GAAG;AAChC,sBAAc,GAAG,IAAIA,KAAE,MAAM,CAAC,cAAc,GAAG,GAAIA,KAAE,KAAI,CAAE,CAAC;;AAG7D,UAAI,WAAW,SAAS,MAAM,GAAG;AAChC,sBAAc,GAAG,IAAIA,KAAE,SAAS,cAAc,GAAG,CAAE;;;;AAKtD,SAAOA,KAAE,OAAO,aAAa;AAC9B;AA3CgB;AAwDhB,IAAM,mBAA+B;EACpC,OAAO,wBAAC,WAAW,QAAQ,WAAW,SAAS,YAAY,QAAQ,mBAAmB,SAAS,UAAxF;EACP,UAAU,wBAAC,WAAW,CAAC,OAAO,WAAY,OAAO,WAAW,OAAO,YAAzD;EACV,UAAU,wBAAC,WAAW,CAAC,OAAO,SAApB;;AAGX,IAAM,mBAA+B;EACpC,OAAO,wBAAC,WAAW,QAAQ,WAAW,SAAS,YAAY,QAAQ,mBAAmB,SAAS,UAAxF;EACP,UAAU,6BAAM,MAAN;EACV,UAAU,wBAAC,WAAW,CAAC,OAAO,SAApB;;IAcE,qBAAyC,wBACrD,QACA,WACG;AACH,QAAM,UAAU,WAAW,MAAM;AACjC,SAAO,cAAc,SAAS,UAAU,CAAA,GAAI,gBAAgB;AAC7D,GANsD;IAQzC,qBAAyC,wBACrD,QACA,WACG;AACH,QAAM,UAAU,WAAW,MAAM;AACjC,SAAO,cAAc,SAAS,UAAU,CAAA,GAAI,gBAAgB;AAC7D,GANsD;;;AC1GtD;AAAA;AAAAK;;;ACEA;;AAAAC;;;ACOA;;AAAAC;;;ACTA;;AAAAC;AAcO,IAAMC,qBAAN,MAAwB;EAd/B,OAc+B;;;EAC9B,QAAiB,UAAU,IAAY;;EAQvC;;EAGA;;EAGA;EAEA,YACCC,SAKA,SAIC;AACD,SAAK,YAAY,MAAM;AACtB,YAAM,EAAE,MAAM,SAAS,eAAe,IAAIA,QAAO;AACjD,aAAO,EAAE,MAAM,SAAS,cAAc,eAAe,CAAC,EAAG,OAAsB,eAAe;IAC/F;AACA,QAAI,SAAS;AACZ,WAAK,YAAY,QAAQ;AACzB,WAAK,YAAY,QAAQ;IAC1B;EACD;EAEA,SAAS,QAAkC;AAC1C,SAAK,YAAY;AACjB,WAAO;EACR;EAEA,SAAS,QAAkC;AAC1C,SAAK,YAAY;AACjB,WAAO;EACR;;EAGA,MAAMC,QAAgC;AACrC,WAAO,IAAIC,YAAWD,QAAO,IAAI;EAClC;AACD;AAEO,IAAMC,cAAN,MAAiB;EApExB,OAoEwB;;;EAOvB,YAAqBD,QAAoB,SAA4B;AAAhD,SAAA,QAAAA;AACpB,SAAK,YAAY,QAAQ;AACzB,SAAK,WAAW,QAAQ;AACxB,SAAK,WAAW,QAAQ;EACzB;EAVA,QAAiB,UAAU,IAAY;EAE9B;EACA;EACA;EAQT,UAAkB;AACjB,UAAM,EAAE,MAAM,SAAS,eAAe,IAAI,KAAK,UAAU;AACzD,UAAM,cAAc,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI;AACvD,UAAM,qBAAqB,eAAe,IAAI,CAAC,WAAW,OAAO,IAAI;AACrE,UAAM,SAAS;MACd,KAAK,MAAM,SAAS;MACpB,GAAG;MACH,eAAe,CAAC,EAAG,MAAM,SAAS;MAClC,GAAG;IACJ;AACA,WAAO,QAAQ,GAAG,OAAO,KAAK,GAAG,CAAC;EACnC;AACD;;;AC7FA;;AAAAE;AAKO,SAASC,eAAcC,QAAoB,SAAmB;AACpE,SAAO,GAAGA,OAAM,SAAS,CAAC,IAAI,QAAQ,KAAK,GAAG,CAAC;AAChD;AAFgB,OAAAD,gBAAA;AAQT,IAAME,2BAAN,MAA8B;EAbrC,OAaqC;;;EAMpC,YACC,SACQ,MACP;AADO,SAAA,OAAA;AAER,SAAK,UAAU;EAChB;EAVA,QAAiB,UAAU,IAAY;;EAGvC;;EAUA,MAAMC,QAAsC;AAC3C,WAAO,IAAIC,kBAAiBD,QAAO,KAAK,SAAS,KAAK,IAAI;EAC3D;AACD;AAEO,IAAME,6BAAN,MAAgC;EAhCvC,OAgCuC;;;EACtC,QAAiB,UAAU,IAAY;;EAGvC;EAEA,YACC,MACC;AACD,SAAK,OAAO;EACb;EAEA,MAAM,SAA4C;AACjD,WAAO,IAAIH,yBAAwB,SAAS,KAAK,IAAI;EACtD;AACD;AAEO,IAAME,oBAAN,MAAuB;EAjD9B,OAiD8B;;;EAM7B,YAAqBD,QAAoB,SAAyB,MAAe;AAA5D,SAAA,QAAAA;AACpB,SAAK,UAAU;AACf,SAAK,OAAO,QAAQG,eAAc,KAAK,OAAO,KAAK,QAAQ,IAAI,CAAC,WAAW,OAAO,IAAI,CAAC;EACxF;EARA,QAAiB,UAAU,IAAY;EAE9B;EACA;EAOT,UAAU;AACT,WAAO,KAAK;EACb;AACD;;;AF1BO,IAAe,sBAAf,cAKG,cAEV;EAnCA,OAmCA;;;EACC,QAA0B,UAAU,IAAY;EAExC,oBAAuC,CAAC;EAEhD,WACC,KACA,UAAsC,CAAC,GAChC;AACP,SAAK,kBAAkB,KAAK,EAAE,KAAK,QAAQ,CAAC;AAC5C,WAAO;EACR;EAEA,OACC,MACO;AACP,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,aAAa;AACzB,WAAO;EACR;EAEA,kBAAkB,IAAmCC,SAElD;AACF,SAAK,OAAO,YAAY;MACvB;MACA,MAAM;MACN,MAAMA,SAAQ,QAAQ;IACvB;AACA,WAAO;EACR;;EAGA,iBAAiB,QAAsBC,QAAkC;AACxE,WAAO,KAAK,kBAAkB,IAAI,CAAC,EAAE,KAAK,QAAQ,MAAM;AACvD,cAAQ,CAACC,MAAKC,aAAY;AACzB,cAAM,UAAU,IAAIC,mBAAkB,MAAM;AAC3C,gBAAM,gBAAgBF,KAAI;AAC1B,iBAAO,EAAE,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC,aAAa,EAAE;QAC7D,CAAC;AACD,YAAIC,SAAQ,UAAU;AACrB,kBAAQ,SAASA,SAAQ,QAAQ;QAClC;AACA,YAAIA,SAAQ,UAAU;AACrB,kBAAQ,SAASA,SAAQ,QAAQ;QAClC;AACA,eAAO,QAAQ,MAAMF,MAAK;MAC3B,GAAG,KAAK,OAAO;IAChB,CAAC;EACF;AAMD;AAGO,IAAe,eAAf,cAIG,OAA+D;EAjGzE,OAiGyE;;;EAGxE,YACmBA,QAClBD,SACC;AACD,QAAI,CAACA,QAAO,YAAY;AACvB,MAAAA,QAAO,aAAaK,eAAcJ,QAAO,CAACD,QAAO,IAAI,CAAC;IACvD;AACA,UAAMC,QAAOD,OAAM;AAND,SAAA,QAAAC;EAOnB;EAVA,QAA0B,UAAU,IAAY;AAWjD;;;ADpGO,IAAM,sBAAN,cACE,oBACT;EAlBA,OAkBA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,cAAc;EACrC;;EAGS,MACRK,QACgD;AAChD,WAAO,IAAI,aAA8CA,QAAO,KAAK,MAAyC;EAC/G;AACD;AAEO,IAAM,eAAN,cAAiF,aAAgB;EAjCxG,OAiCwG;;;EACvG,QAA0B,UAAU,IAAY;EAEhD,aAAqB;AACpB,WAAO;EACR;EAES,mBAAmB,OAAkD;AAC7E,QAAI,OAAO,WAAW,eAAe,OAAO,MAAM;AACjD,YAAM,MAAM,OAAO,SAAS,KAAK,IAC9B,QAEA,iBAAiB,cACjB,OAAO,KAAK,KAAK,IACjB,MAAM,SACN,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,IAC5D,OAAO,KAAK,KAAK;AACpB,aAAO,OAAO,IAAI,SAAS,MAAM,CAAC;IACnC;AAEA,WAAO,OAAO,YAAa,OAAO,KAAK,CAAC;EACzC;EAES,iBAAiB,OAAuB;AAChD,WAAO,OAAO,KAAK,MAAM,SAAS,CAAC;EACpC;AACD;AAWO,IAAM,wBAAN,cACE,oBACT;EAxEA,OAwEA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,QAAQ,gBAAgB;EACrC;;EAGS,MACRA,QACkD;AAClD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,iBAAN,cAAmF,aAAgB;EA1F1G,OA0F0G;;;EACzG,QAA0B,UAAU,IAAY;EAEhD,aAAqB;AACpB,WAAO;EACR;EAES,mBAAmB,OAAqD;AAChF,QAAI,OAAO,WAAW,eAAe,OAAO,MAAM;AACjD,YAAM,MAAM,OAAO,SAAS,KAAK,IAC9B,QAEA,iBAAiB,cACjB,OAAO,KAAK,KAAK,IACjB,MAAM,SACN,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,IAC5D,OAAO,KAAK,KAAK;AACpB,aAAO,KAAK,MAAM,IAAI,SAAS,MAAM,CAAC;IACvC;AAEA,WAAO,KAAK,MAAM,YAAa,OAAO,KAAK,CAAC;EAC7C;EAES,iBAAiB,OAA0B;AACnD,WAAO,OAAO,KAAK,KAAK,UAAU,KAAK,CAAC;EACzC;AACD;AAWO,IAAM,0BAAN,cACE,oBACT;EAjIA,OAiIA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,kBAAkB;EACzC;;EAGS,MACRA,QACoD;AACpD,WAAO,IAAI,iBAAkDA,QAAO,KAAK,MAAyC;EACnH;AACD;AAEO,IAAM,mBAAN,cAAyF,aAAgB;EAhJhH,OAgJgH;;;EAC/G,QAA0B,UAAU,IAAY;EAEvC,mBAAmB,OAAqD;AAChF,QAAI,OAAO,SAAS,KAAK,GAAG;AAC3B,aAAO;IACR;AAEA,WAAO,OAAO,KAAK,KAAmB;EACvC;EAEA,aAAqB;AACpB,WAAO;EACR;AACD;AAwBO,SAAS,KAAK,GAAyB,GAAgB;AAC7D,QAAM,EAAE,MAAM,QAAAC,QAAO,IAAI,uBAA+C,GAAG,CAAC;AAC5E,MAAIA,SAAQ,SAAS,QAAQ;AAC5B,WAAO,IAAI,sBAAsB,IAAI;EACtC;AACA,MAAIA,SAAQ,SAAS,UAAU;AAC9B,WAAO,IAAI,oBAAoB,IAAI;EACpC;AACA,SAAO,IAAI,wBAAwB,IAAI;AACxC;AATgB;;;AItLhB;;AAAAC;AAsBO,IAAM,4BAAN,cACE,oBAUT;EAjCA,OAiCA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YACC,MACA,aACA,kBACC;AACD,UAAM,MAAM,UAAU,oBAAoB;AAC1C,SAAK,OAAO,cAAc;AAC1B,SAAK,OAAO,mBAAmB;EAChC;;EAGA,MACCC,QACsD;AACtD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,qBAAN,cAA6F,aAAgB;EAzDpH,OAyDoH;;;EACnH,QAA0B,UAAU,IAAY;EAExC;EACA;EACA;EAER,YACCA,QACAC,SACC;AACD,UAAMD,QAAOC,OAAM;AACnB,SAAK,UAAUA,QAAO,iBAAiB,SAASA,QAAO,WAAW;AAClE,SAAK,QAAQA,QAAO,iBAAiB;AACrC,SAAK,UAAUA,QAAO,iBAAiB;EACxC;EAEA,aAAqB;AACpB,WAAO,KAAK;EACb;EAES,mBAAmB,OAAoC;AAC/D,WAAO,OAAO,KAAK,YAAY,aAAa,KAAK,QAAQ,KAAK,IAAI;EACnE;EAES,iBAAiB,OAAoC;AAC7D,WAAO,OAAO,KAAK,UAAU,aAAa,KAAK,MAAM,KAAK,IAAI;EAC/D;AACD;AAmHO,SAAS,WACf,kBAoBD;AACC,SAAO,CACN,GACA,MAC8D;AAC9D,UAAM,EAAE,MAAM,QAAAA,QAAO,IAAI,uBAAoC,GAAG,CAAC;AACjE,WAAO,IAAI;MACV;MACAA;MACA;IACD;EACD;AACD;AAjCgB;;;AChMhB;;AAAAC;AAYO,IAAe,2BAAf,cAGG,oBAKR;EApBF,OAoBE;;;EACD,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB,UAAyB,YAA6B;AAClF,UAAM,MAAM,UAAU,UAAU;AAChC,SAAK,OAAO,gBAAgB;EAC7B;EAES,WAAWC,SAAoE;AACvF,QAAIA,SAAQ,eAAe;AAC1B,WAAK,OAAO,gBAAgB;IAC7B;AACA,SAAK,OAAO,aAAa;AACzB,WAAO,MAAM,WAAW;EACzB;AAMD;AAEO,IAAe,oBAAf,cAGG,aAA6D;EA7CvE,OA6CuE;;;EACtE,QAA0B,UAAU,IAAY;EAEvC,gBAAyB,KAAK,OAAO;EAE9C,aAAqB;AACpB,WAAO;EACR;AACD;AAWO,IAAM,uBAAN,cACE,yBACT;EAlEA,OAkEA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,eAAe;EACtC;EAEA,MACCC,QACiD;AACjD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,gBAAN,cAAmF,kBAAqB;EAnF/G,OAmF+G;;;EAC9G,QAA0B,UAAU,IAAY;AACjD;AAWO,IAAM,yBAAN,cACE,yBACT;EAlGA,OAkGA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB,MAAoC;AAChE,UAAM,MAAM,QAAQ,iBAAiB;AACrC,SAAK,OAAO,OAAO;EACpB;;;;;;EAOA,aAA+B;AAC9B,WAAO,KAAK,QAAQ,+DAA+D;EACpF;EAEA,MACCA,QACmD;AACnD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,kBAAN,cACE,kBACT;EA/HA,OA+HA;;;EACC,QAA0B,UAAU,IAAY;EAEvC,OAAqC,KAAK,OAAO;EAEjD,mBAAmB,OAAqB;AAChD,QAAI,KAAK,OAAO,SAAS,aAAa;AACrC,aAAO,IAAI,KAAK,QAAQ,GAAI;IAC7B;AACA,WAAO,IAAI,KAAK,KAAK;EACtB;EAES,iBAAiB,OAAqB;AAC9C,UAAM,OAAO,MAAM,QAAQ;AAC3B,QAAI,KAAK,OAAO,SAAS,aAAa;AACrC,aAAO,KAAK,MAAM,OAAO,GAAI;IAC9B;AACA,WAAO;EACR;AACD;AAWO,IAAM,uBAAN,cACE,yBACT;EA/JA,OA+JA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB,MAAiB;AAC7C,UAAM,MAAM,WAAW,eAAe;AACtC,SAAK,OAAO,OAAO;EACpB;EAEA,MACCA,QACiD;AACjD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,gBAAN,cACE,kBACT;EAnLA,OAmLA;;;EACC,QAA0B,UAAU,IAAY;EAEvC,OAAkB,KAAK,OAAO;EAE9B,mBAAmB,OAAwB;AACnD,WAAO,OAAO,KAAK,MAAM;EAC1B;EAES,iBAAiB,OAAwB;AACjD,WAAO,QAAQ,IAAI;EACpB;AACD;AAwBO,SAAS,QAAQ,GAA4B,GAAmB;AACtE,QAAM,EAAE,MAAM,QAAAD,QAAO,IAAI,uBAAkD,GAAG,CAAC;AAC/E,MAAIA,SAAQ,SAAS,eAAeA,SAAQ,SAAS,gBAAgB;AACpE,WAAO,IAAI,uBAAuB,MAAMA,QAAO,IAAI;EACpD;AACA,MAAIA,SAAQ,SAAS,WAAW;AAC/B,WAAO,IAAI,qBAAqB,MAAMA,QAAO,IAAI;EAClD;AACA,SAAO,IAAI,qBAAqB,IAAI;AACrC;AATgB;;;AC/NhB;;AAAAE;AAcO,IAAM,uBAAN,cACE,oBACT;EAhBA,OAgBA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,eAAe;EACtC;;EAGS,MACRC,QACiD;AACjD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,gBAAN,cAAmF,aAAgB;EAlC1G,OAkC0G;;;EACzG,QAA0B,UAAU,IAAY;EAEvC,mBAAmB,OAAwB;AACnD,QAAI,OAAO,UAAU,SAAU,QAAO;AAEtC,WAAO,OAAO,KAAK;EACpB;EAEA,aAAqB;AACpB,WAAO;EACR;AACD;AAWO,IAAM,6BAAN,cACE,oBACT;EA3DA,OA2DA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,qBAAqB;EAC5C;;EAGS,MACRA,QACuD;AACvD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,sBAAN,cAA+F,aAAgB;EA7EtH,OA6EsH;;;EACrH,QAA0B,UAAU,IAAY;EAEvC,mBAAmB,OAAwB;AACnD,QAAI,OAAO,UAAU,SAAU,QAAO;AAEtC,WAAO,OAAO,KAAK;EACpB;EAES,mBAAmB;EAE5B,aAAqB;AACpB,WAAO;EACR;AACD;AAWO,IAAM,6BAAN,cACE,oBACT;EAxGA,OAwGA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,qBAAqB;EAC5C;;EAGS,MACRA,QACuD;AACvD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,sBAAN,cAA+F,aAAgB;EA1HtH,OA0HsH;;;EACrH,QAA0B,UAAU,IAAY;EAEvC,qBAAqB;EAErB,mBAAmB;EAE5B,aAAqB;AACpB,WAAO;EACR;AACD;AAiBO,SAAS,QAAQ,GAAkC,GAAyB;AAClF,QAAM,EAAE,MAAM,QAAAC,QAAO,IAAI,uBAA4C,GAAG,CAAC;AACzE,QAAM,OAAOA,SAAQ;AACrB,SAAO,SAAS,WACb,IAAI,2BAA2B,IAAI,IACnC,SAAS,WACT,IAAI,2BAA2B,IAAI,IACnC,IAAI,qBAAqB,IAAI;AACjC;AARgB;;;ACrJhB;;AAAAC;AAaO,IAAM,oBAAN,cACE,oBACT;EAfA,OAeA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,UAAU,YAAY;EACnC;;EAGS,MACRC,QAC8C;AAC9C,WAAO,IAAI,WAA4CA,QAAO,KAAK,MAA8C;EAClH;AACD;AAEO,IAAM,aAAN,cAA6E,aAAgB;EA9BpG,OA8BoG;;;EACnG,QAA0B,UAAU,IAAY;EAEhD,aAAqB;AACpB,WAAO;EACR;AACD;AAIO,SAAS,KAAK,MAAe;AACnC,SAAO,IAAI,kBAAkB,QAAQ,EAAE;AACxC;AAFgB;;;ACxChB;;AAAAC;AAmBO,IAAM,oBAAN,cAEG,oBAIR;EAzBF,OAyBE;;;EACD,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiBC,SAAgE;AAC5F,UAAM,MAAM,UAAU,YAAY;AAClC,SAAK,OAAO,aAAaA,QAAO;AAChC,SAAK,OAAO,SAASA,QAAO;EAC7B;;EAGS,MACRC,QACwE;AACxE,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,aAAN,cACE,aACT;EA/CA,OA+CA;;;EACC,QAA0B,UAAU,IAAY;EAE9B,aAAa,KAAK,OAAO;EAElC,SAAsB,KAAK,OAAO;EAE3C,YACCA,QACAD,SACC;AACD,UAAMC,QAAOD,OAAM;EACpB;EAEA,aAAqB;AACpB,WAAO,OAAO,KAAK,OAAO,SAAS,IAAI,KAAK,OAAO,MAAM,MAAM,EAAE;EAClE;AACD;AAYO,IAAM,wBAAN,cACE,oBACT;EA9EA,OA8EA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,YAAY,MAAiB;AAC5B,UAAM,MAAM,QAAQ,gBAAgB;EACrC;;EAGS,MACRC,QACkD;AAClD,WAAO,IAAI;MACVA;MACA,KAAK;IACN;EACD;AACD;AAEO,IAAM,iBAAN,cACE,aACT;EAlGA,OAkGA;;;EACC,QAA0B,UAAU,IAAY;EAEhD,aAAqB;AACpB,WAAO;EACR;EAES,mBAAmB,OAA0B;AACrD,WAAO,KAAK,MAAM,KAAK;EACxB;EAES,iBAAiB,OAA0B;AACnD,WAAO,KAAK,UAAU,KAAK;EAC5B;AACD;AAoCO,SAAS,KAAK,GAA+B,IAAsB,CAAC,GAAQ;AAClF,QAAM,EAAE,MAAM,QAAAD,QAAO,IAAI,uBAAyC,GAAG,CAAC;AACtE,MAAIA,QAAO,SAAS,QAAQ;AAC3B,WAAO,IAAI,sBAAsB,IAAI;EACtC;AACA,SAAO,IAAI,kBAAkB,MAAMA,OAAa;AACjD;AANgB;;;ACrJhB;;AAAAE;;;ACDA;;AAAAC;AAOO,IAAM,wBAAN,MAAM,uBAEb;EATA,OASA;;;EACC,QAAiB,UAAU,IAAY;EAE/B;EA8BR,YAAYC,SAA4C;AACvD,SAAK,SAAS,EAAE,GAAGA,QAAO;EAC3B;EAEA,IAAI,UAAa,MAA4B;AAC5C,QAAI,SAAS,KAAK;AACjB,aAAO;QACN,GAAG,SAAS,GAA4B;QACxC,gBAAgB,IAAI;UAClB,SAAsB,EAAE;UACzB;QACD;MACD;IACD;AAEA,QAAI,SAAS,gBAAgB;AAC5B,aAAO;QACN,GAAG,SAAS,cAAuC;QACnD,gBAAgB,IAAI;UAClB,SAAkB,cAAc,EAAE;UACnC;QACD;MACD;IACD;AAEA,QAAI,OAAO,SAAS,UAAU;AAC7B,aAAO,SAAS,IAA6B;IAC9C;AAEA,UAAM,UAAU,GAAG,UAAU,QAAQ,IAClC,SAAS,EAAE,iBACX,GAAG,UAAU,IAAI,IACjB,SAAS,cAAc,EAAE,iBACzB;AACH,UAAM,QAAiB,QAAQ,IAA4B;AAE3D,QAAI,GAAG,OAAO,IAAI,OAAO,GAAG;AAE3B,UAAI,KAAK,OAAO,uBAAuB,SAAS,CAAC,MAAM,kBAAkB;AACxE,eAAO,MAAM;MACd;AAEA,YAAM,WAAW,MAAM,MAAM;AAC7B,eAAS,mBAAmB;AAC5B,aAAO;IACR;AAEA,QAAI,GAAG,OAAO,GAAG,GAAG;AACnB,UAAI,KAAK,OAAO,gBAAgB,OAAO;AACtC,eAAO;MACR;AAEA,YAAM,IAAI;QACT,2BAA2B,IAAI;MAChC;IACD;AAEA,QAAI,GAAG,OAAO,MAAM,GAAG;AACtB,UAAI,KAAK,OAAO,OAAO;AACtB,eAAO,IAAI;UACV;UACA,IAAI;YACH,IAAI;cACH,MAAM;cACN,IAAI,uBAAuB,KAAK,OAAO,OAAO,KAAK,OAAO,uBAAuB,KAAK;YACvF;UACD;QACD;MACD;AACA,aAAO;IACR;AAEA,QAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAChD,aAAO;IACR;AAEA,WAAO,IAAI,MAAM,OAAO,IAAI,uBAAsB,KAAK,MAAM,CAAC;EAC/D;AACD;;;ACxHA;;AAAAC;;;ACCA;;AAAAC;;;ACDA;;AAAAC;AAOO,SAAS,0BAA0B;AACzC,SAAO;IACN;IACA;IACA;IACA;IACA;IACA;EACD;AACD;AATgB;;;ADmBT,IAAMC,qBAAoB,OAAO,IAAI,iCAAiC;AAEtE,IAAM,cAAN,cAA+D,MAAS;EA3B/E,OA2B+E;;;EAC9E,QAA0B,UAAU,IAAY;;EAGhD,OAAyB,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,QAAQ;IACjE,mBAAAA;EACD,CAAC;;EAGD,CAAU,MAAM,OAAO,OAAO;;EAG9B,CAACA,kBAAiB,IAAkB,CAAC;;EAGrC,CAAU,MAAM,OAAO,kBAAkB,IAE1B;AAChB;AAmHA,SAAS,gBAKR,MACA,SACA,aAKA,QACA,WAAW,MAMT;AACF,QAAM,WAAW,IAAI,YAKlB,MAAM,QAAQ,QAAQ;AAEzB,QAAM,gBAA6B,OAAO,YAAY,aAAa,QAAQ,wBAAwB,CAAC,IAAI;AAExG,QAAM,eAAe,OAAO;IAC3B,OAAO,QAAQ,aAAa,EAAE,IAAI,CAAC,CAACC,OAAM,cAAc,MAAM;AAC7D,YAAM,aAAa;AACnB,iBAAW,QAAQA,KAAI;AACvB,YAAM,SAAS,WAAW,MAAM,QAAQ;AACxC,eAASD,kBAAiB,EAAE,KAAK,GAAG,WAAW,iBAAiB,QAAQ,QAAQ,CAAC;AACjF,aAAO,CAACC,OAAM,MAAM;IACrB,CAAC;EACF;AAEA,QAAMC,SAAQ,OAAO,OAAO,UAAU,YAAY;AAElD,EAAAA,OAAM,MAAM,OAAO,OAAO,IAAI;AAC9B,EAAAA,OAAM,MAAM,OAAO,kBAAkB,IAAI;AAMzC,MAAI,aAAa;AAChB,IAAAA,OAAM,YAAY,OAAO,kBAAkB,IAAI;EAGhD;AAEA,SAAOA;AACR;AAvDS;AAyDF,IAAM,cAA6B,wBAAC,MAAM,SAAS,gBAAgB;AACzE,SAAO,gBAAgB,MAAM,SAAS,WAAW;AAClD,GAF0C;;;AE1N1C;;AAAAC;AA0DO,SAAS,iBAAiBC,QAAgE;AAChG,MAAI,GAAGA,QAAO,WAAW,GAAG;AAC3B,WAAO,CAAC,GAAGA,OAAM,MAAM,OAAO,QAAQ,CAAC,EAAE;EAC1C;AACA,MAAI,GAAGA,QAAO,QAAQ,GAAG;AACxB,WAAOA,OAAM,EAAE,cAAc,CAAC;EAC/B;AACA,MAAI,GAAGA,QAAO,GAAG,GAAG;AACnB,WAAOA,OAAM,cAAc,CAAC;EAC7B;AACA,SAAO,CAAC;AACT;AAXgB;;;AHyET,IAAM,mBAAN,cASG,aAEV;EA9IA,OA8IA;;;EAMC,YACSC,QACA,SACA,SACR,UACC;AACD,UAAM;AALE,SAAA,QAAAA;AACA,SAAA,UAAA;AACA,SAAA,UAAA;AAIR,SAAK,SAAS,EAAE,OAAAA,QAAO,SAAS;EACjC;EAbA,QAA0B,UAAU,IAAY;;EAGhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyCA,MAAM,OAAsE;AAC3E,SAAK,OAAO,QAAQ;AACpB,WAAO;EACR;EAMA,WACI,SAG8C;AACjD,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACrC,YAAM,UAAU,QAAQ,CAAC;QACxB,IAAI;UACH,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;UACtC,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAM,CAAC;QAC9E;MACD;AAEA,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,WAAK,OAAO,UAAU;IACvB,OAAO;AACN,YAAM,eAAe;AACrB,WAAK,OAAO,UAAU;IACvB;AACA,WAAO;EACR;EAEA,MAAM,OAA2E;AAChF,SAAK,OAAO,QAAQ;AACpB,WAAO;EACR;EA0BA,UACC,SAA6B,KAAK,MAAM,YAAY,OAAO,OAAO,GACrB;AAC7C,SAAK,OAAO,YAAY,oBAAkC,MAAM;AAChE,WAAO;EACR;;EAGA,SAAc;AACb,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;EACjD;EAEA,QAAe;AACd,UAAM,EAAE,SAAS,UAAU,GAAG,KAAK,IAAI,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;AAC5E,WAAO;EACR;;EAGA,SAAS,iBAAiB,MAAiC;AAC1D,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;MAC1E,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;MACrC,KAAK,OAAO;MACZ,KAAK,OAAO,YAAY,QAAQ;MAChC;MACA;MACA;QACC,MAAM;QACN,QAAQ,iBAAiB,KAAK,OAAO,KAAK;MAC3C;IACD;EACD;EAEA,UAAqC;AACpC,WAAO,KAAK,SAAS,KAAK;EAC3B;EAEA,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,SAAgD,wBAAC,sBAAsB;AACtE,WAAO,KAAK,SAAS,EAAE,OAAO,iBAAiB;EAChD,GAFgD;EAIhD,MAAe,QAAQ,mBAAiF;AACvG,WAAO,KAAK,SAAS,EAAE,QAAQ,iBAAiB;EACjD;EAEA,WAAsC;AACrC,WAAO;EACR;AACD;;;AIlTA;;AAAAC;;;ACAA;;AAAAC;;;ACAA;;AAAAC;;;ACCA;;AAAAC;AAIO,SAAS,YAAY,OAAe;AAC1C,QAAM,QAAQ,MACZ,QAAQ,cAAc,EAAE,EACxB,MAAM,yCAAyC,KAAK,CAAC;AAEvD,SAAO,MAAM,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC,EAAE,KAAK,GAAG;AACxD;AANgB;AAQT,SAAS,YAAY,OAAe;AAC1C,QAAM,QAAQ,MACZ,QAAQ,cAAc,EAAE,EACxB,MAAM,yCAAyC,KAAK,CAAC;AAEvD,SAAO,MAAM,OAAO,CAAC,KAAK,MAAM,MAAM;AACrC,UAAM,gBAAgB,MAAM,IAAI,KAAK,YAAY,IAAI,GAAG,KAAK,CAAC,EAAG,YAAY,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;AAC9F,WAAO,MAAM;EACd,GAAG,EAAE;AACN;AATgB;AAWhB,SAAS,SAAS,OAAe;AAChC,SAAO;AACR;AAFS;AAIF,IAAM,cAAN,MAAkB;EA3BzB,OA2ByB;;;EACxB,QAAiB,UAAU,IAAY;;EAGvC,QAAgC,CAAC;EACzB,eAAqC,CAAC;EACtC;EAER,YAAY,QAAiB;AAC5B,SAAK,UAAU,WAAW,eACvB,cACA,WAAW,cACX,cACA;EACJ;EAEA,gBAAgB,QAAwB;AACvC,QAAI,CAAC,OAAO,UAAW,QAAO,OAAO;AAErC,UAAM,SAAS,OAAO,MAAM,MAAM,OAAO,MAAM,KAAK;AACpD,UAAM,YAAY,OAAO,MAAM,MAAM,OAAO,YAAY;AACxD,UAAM,MAAM,GAAG,MAAM,IAAI,SAAS,IAAI,OAAO,IAAI;AAEjD,QAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,WAAK,WAAW,OAAO,KAAK;IAC7B;AACA,WAAO,KAAK,MAAM,GAAG;EACtB;EAEQ,WAAWC,QAAc;AAChC,UAAM,SAASA,OAAM,MAAM,OAAO,MAAM,KAAK;AAC7C,UAAM,YAAYA,OAAM,MAAM,OAAO,YAAY;AACjD,UAAM,WAAW,GAAG,MAAM,IAAI,SAAS;AAEvC,QAAI,CAAC,KAAK,aAAa,QAAQ,GAAG;AACjC,iBAAW,UAAU,OAAO,OAAOA,OAAM,MAAM,OAAO,OAAO,CAAC,GAAG;AAChE,cAAM,YAAY,GAAG,QAAQ,IAAI,OAAO,IAAI;AAC5C,aAAK,MAAM,SAAS,IAAI,KAAK,QAAQ,OAAO,IAAI;MACjD;AACA,WAAK,aAAa,QAAQ,IAAI;IAC/B;EACD;EAEA,aAAa;AACZ,SAAK,QAAQ,CAAC;AACd,SAAK,eAAe,CAAC;EACtB;AACD;;;AC3EA;;AAAAC;AAIO,IAAe,iBAAf,cAIG,KAAmC;EAR7C,OAQ6C;;;EAC5C,QAA0B,UAAU,IAAY;AAKjD;;;AFgCO,IAAe,gBAAf,MAA6B;EA9CpC,OA8CoC;;;EACnC,QAAiB,UAAU,IAAY;;EAG9B;EAET,YAAYC,SAA8B;AACzC,SAAK,SAAS,IAAI,YAAYA,SAAQ,MAAM;EAC7C;EAEA,WAAW,MAAsB;AAChC,WAAO,IAAI,IAAI;EAChB;EAEA,YAAY,MAAsB;AACjC,WAAO;EACR;EAEA,aAAa,KAAqB;AACjC,WAAO,IAAI,IAAI,QAAQ,MAAM,IAAI,CAAC;EACnC;EAEQ,aAAa,SAAkD;AACtE,QAAI,CAAC,SAAS,OAAQ,QAAO;AAE7B,UAAM,gBAAgB,CAAC,UAAU;AACjC,eAAW,CAAC,GAAG,CAAC,KAAK,QAAQ,QAAQ,GAAG;AACvC,oBAAc,KAAK,MAAM,IAAI,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,GAAG,GAAG;AACpE,UAAI,IAAI,QAAQ,SAAS,GAAG;AAC3B,sBAAc,KAAK,OAAO;MAC3B;IACD;AACA,kBAAc,KAAK,MAAM;AACzB,WAAO,IAAI,KAAK,aAAa;EAC9B;EAEA,iBAAiB,EAAE,OAAAC,QAAO,OAAO,WAAW,UAAU,OAAO,QAAQ,GAA4B;AAChG,UAAM,UAAU,KAAK,aAAa,QAAQ;AAE1C,UAAM,eAAe,YAClB,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,KAAK,CAAC,CAAC,KACxE;AAEH,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAEhD,UAAM,aAAa,KAAK,aAAa,OAAO;AAE5C,UAAM,WAAW,KAAK,WAAW,KAAK;AAEtC,WAAO,MAAM,OAAO,eAAeA,MAAK,GAAG,QAAQ,GAAG,YAAY,GAAG,UAAU,GAAG,QAAQ;EAC3F;EAEA,eAAeA,QAAoBC,MAAqB;AACvD,UAAM,eAAeD,OAAM,MAAM,OAAO,OAAO;AAE/C,UAAM,cAAc,OAAO,KAAK,YAAY,EAAE;MAAO,CAAC,YACrDC,KAAI,OAAO,MAAM,UAAa,aAAa,OAAO,GAAG,eAAe;IACrE;AAEA,UAAM,UAAU,YAAY;AAC5B,WAAO,IAAI,KAAK,YAAY,QAAQ,CAAC,SAAS,MAAM;AACnD,YAAM,MAAM,aAAa,OAAO;AAEhC,YAAM,QAAQA,KAAI,OAAO,KAAK,IAAI,MAAM,IAAI,WAAY,GAAG,GAAG;AAC9D,YAAM,MAAM,MAAM,IAAI,WAAW,KAAK,OAAO,gBAAgB,GAAG,CAAC,CAAC,MAAM,KAAK;AAE7E,UAAI,IAAI,UAAU,GAAG;AACpB,eAAO,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC;MAC3B;AACA,aAAO,CAAC,GAAG;IACZ,CAAC,CAAC;EACH;EAEA,iBAAiB,EAAE,OAAAD,QAAO,KAAAC,MAAK,OAAO,WAAW,UAAU,OAAO,MAAM,OAAO,QAAQ,GAA4B;AAClH,UAAM,UAAU,KAAK,aAAa,QAAQ;AAE1C,UAAM,SAAS,KAAK,eAAeD,QAAOC,IAAG;AAE7C,UAAM,UAAU,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,GAAG,KAAK,eAAe,IAAI,CAAC,CAAC;AAE/E,UAAM,WAAW,KAAK,WAAW,KAAK;AAEtC,UAAM,eAAe,YAClB,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,KAAK,CAAC,CAAC,KACxE;AAEH,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAEhD,UAAM,aAAa,KAAK,aAAa,OAAO;AAE5C,UAAM,WAAW,KAAK,WAAW,KAAK;AAEtC,WAAO,MAAM,OAAO,UAAUD,MAAK,QAAQ,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,GAAG,YAAY,GAAG,UAAU,GAAG,QAAQ;EACzH;;;;;;;;;;;;EAaQ,eACP,QACA,EAAE,gBAAgB,MAAM,IAAiC,CAAC,GACpD;AACN,UAAM,aAAa,OAAO;AAE1B,UAAM,SAAS,OACb,QAAQ,CAAC,EAAE,MAAM,GAAG,MAAM;AAC1B,YAAM,QAAoB,CAAC;AAE3B,UAAI,GAAG,OAAO,IAAI,OAAO,KAAK,MAAM,kBAAkB;AACrD,cAAM,KAAK,IAAI,WAAW,MAAM,UAAU,CAAC;MAC5C,WAAW,GAAG,OAAO,IAAI,OAAO,KAAK,GAAG,OAAO,GAAG,GAAG;AACpD,cAAM,QAAQ,GAAG,OAAO,IAAI,OAAO,IAAI,MAAM,MAAM;AAEnD,YAAI,eAAe;AAClB,gBAAM;YACL,IAAI;cACH,MAAM,YAAY,IAAI,CAAC,MAAM;AAC5B,oBAAI,GAAG,GAAG,MAAM,GAAG;AAClB,yBAAO,IAAI,WAAW,KAAK,OAAO,gBAAgB,CAAC,CAAC;gBACrD;AACA,uBAAO;cACR,CAAC;YACF;UACD;QACD,OAAO;AACN,gBAAM,KAAK,KAAK;QACjB;AAEA,YAAI,GAAG,OAAO,IAAI,OAAO,GAAG;AAC3B,gBAAM,KAAK,UAAU,IAAI,WAAW,MAAM,UAAU,CAAC,EAAE;QACxD;MACD,WAAW,GAAG,OAAO,MAAM,GAAG;AAC7B,cAAM,YAAY,MAAM,MAAM,MAAM,OAAO,IAAI;AAC/C,YAAI,MAAM,eAAe,uBAAuB;AAC/C,cAAI,eAAe;AAClB,kBAAM,KAAK,WAAW,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC,WAAW;UACpF,OAAO;AACN,kBAAM;cACL,WAAW,IAAI,WAAW,SAAS,CAAC,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC;YAC3F;UACD;QACD,OAAO;AACN,cAAI,eAAe;AAClB,kBAAM,KAAK,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC;UAC9D,OAAO;AACN,kBAAM,KAAK,MAAM,IAAI,WAAW,SAAS,CAAC,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC,CAAC,EAAE;UACnG;QACD;MACD;AAEA,UAAI,IAAI,aAAa,GAAG;AACvB,cAAM,KAAK,OAAO;MACnB;AAEA,aAAO;IACR,CAAC;AAEF,WAAO,IAAI,KAAK,MAAM;EACvB;EAEQ,WAAW,OAA8D;AAChF,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AACjC,aAAO;IACR;AAEA,UAAM,aAAoB,CAAC;AAE3B,QAAI,OAAO;AACV,iBAAW,CAAC,OAAO,QAAQ,KAAK,MAAM,QAAQ,GAAG;AAChD,YAAI,UAAU,GAAG;AAChB,qBAAW,KAAK,MAAM;QACvB;AACA,cAAMA,SAAQ,SAAS;AACvB,cAAM,QAAQ,SAAS,KAAK,UAAU,SAAS,EAAE,KAAK;AAEtD,YAAI,GAAGA,QAAO,WAAW,GAAG;AAC3B,gBAAM,YAAYA,OAAM,YAAY,OAAO,IAAI;AAC/C,gBAAM,cAAcA,OAAM,YAAY,OAAO,MAAM;AACnD,gBAAM,gBAAgBA,OAAM,YAAY,OAAO,YAAY;AAC3D,gBAAM,QAAQ,cAAc,gBAAgB,SAAY,SAAS;AACjE,qBAAW;YACV,MAAM,IAAI,IAAI,SAAS,QAAQ,CAAC,SAAS,cAAc,MAAM,IAAI,WAAW,WAAW,CAAC,MAAM,MAAS,GACtG,IAAI,WAAW,aAAa,CAC7B,GAAG,SAAS,OAAO,IAAI,WAAW,KAAK,CAAC,EAAE,GAAG,KAAK;UACnD;QACD,OAAO;AACN,qBAAW;YACV,MAAM,IAAI,IAAI,SAAS,QAAQ,CAAC,SAASA,MAAK,GAAG,KAAK;UACvD;QACD;AACA,YAAI,QAAQ,MAAM,SAAS,GAAG;AAC7B,qBAAW,KAAK,MAAM;QACvB;MACD;IACD;AAEA,WAAO,IAAI,KAAK,UAAU;EAC3B;EAEQ,WAAW,OAA0D;AAC5E,WAAO,OAAO,UAAU,YAAa,OAAO,UAAU,YAAY,SAAS,IACxE,aAAa,KAAK,KAClB;EACJ;EAEQ,aAAa,SAA4E;AAChG,UAAM,cAAoD,CAAC;AAE3D,QAAI,SAAS;AACZ,iBAAW,CAAC,OAAO,YAAY,KAAK,QAAQ,QAAQ,GAAG;AACtD,oBAAY,KAAK,YAAY;AAE7B,YAAI,QAAQ,QAAQ,SAAS,GAAG;AAC/B,sBAAY,KAAK,OAAO;QACzB;MACD;IACD;AAEA,WAAO,YAAY,SAAS,IAAI,gBAAgB,IAAI,KAAK,WAAW,CAAC,KAAK;EAC3E;EAEQ,eACPA,QAC4D;AAC5D,QAAI,GAAGA,QAAO,KAAK,KAAKA,OAAM,MAAM,OAAO,OAAO,GAAG;AACpD,aAAO,MAAM,MAAM,IAAI,WAAWA,OAAM,MAAM,OAAO,MAAM,KAAK,EAAE,CAAC,IAAI,GAAGA,OAAM,MAAM,OAAO,MAAM,CAAC,CAAC,GACpG,IAAI,WAAWA,OAAM,MAAM,OAAO,YAAY,CAAC,CAChD,IAAI,IAAI,WAAWA,OAAM,MAAM,OAAO,IAAI,CAAC,CAAC;IAC7C;AAEA,WAAOA;EACR;EAEA,iBACC;IACC;IACA;IACA;IACA;IACA;IACA,OAAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,GACM;AACN,UAAM,aAAa,cAAc,oBAAkC,MAAM;AACzE,eAAW,KAAK,YAAY;AAC3B,UACC,GAAG,EAAE,OAAO,MAAM,KACf,aAAa,EAAE,MAAM,KAAK,OACvB,GAAGA,QAAO,QAAQ,IACpBA,OAAM,EAAE,QACR,GAAGA,QAAO,cAAc,IACxBA,OAAM,cAAc,EAAE,OACtB,GAAGA,QAAO,GAAG,IACb,SACA,aAAaA,MAAK,MACnB,EAAE,CAACA,YACL,OAAO;QAAK,CAAC,EAAE,MAAM,MACpB,WAAWA,QAAM,MAAM,OAAO,OAAO,IAAI,aAAaA,OAAK,IAAIA,QAAM,MAAM,OAAO,QAAQ;MAC3F,GAAG,EAAE,MAAM,KAAK,GAChB;AACD,cAAM,YAAY,aAAa,EAAE,MAAM,KAAK;AAC5C,cAAM,IAAI;UACT,SACC,EAAE,KAAK,KAAK,IAAI,CACjB,gCAAgC,SAAS,MAAM,EAAE,MAAM,IAAI,qBAAqB,SAAS;QAC1F;MACD;IACD;AAEA,UAAM,gBAAgB,CAAC,SAAS,MAAM,WAAW;AAEjD,UAAM,UAAU,KAAK,aAAa,QAAQ;AAE1C,UAAM,cAAc,WAAW,iBAAiB;AAEhD,UAAM,YAAY,KAAK,eAAe,YAAY,EAAE,cAAc,CAAC;AAEnE,UAAM,WAAW,KAAK,eAAeA,MAAK;AAE1C,UAAM,WAAW,KAAK,WAAW,KAAK;AAEtC,UAAM,WAAW,QAAQ,aAAa,KAAK,KAAK;AAEhD,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AAEpD,UAAM,cAAiD,CAAC;AACxD,QAAI,SAAS;AACZ,iBAAW,CAAC,OAAO,YAAY,KAAK,QAAQ,QAAQ,GAAG;AACtD,oBAAY,KAAK,YAAY;AAE7B,YAAI,QAAQ,QAAQ,SAAS,GAAG;AAC/B,sBAAY,KAAK,OAAO;QACzB;MACD;IACD;AAEA,UAAM,aAAa,YAAY,SAAS,IAAI,gBAAgB,IAAI,KAAK,WAAW,CAAC,KAAK;AAEtF,UAAM,aAAa,KAAK,aAAa,OAAO;AAE5C,UAAM,WAAW,KAAK,WAAW,KAAK;AAEtC,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AAEpD,UAAM,aACL,MAAM,OAAO,SAAS,WAAW,IAAI,SAAS,SAAS,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAG,UAAU,GAAG,QAAQ,GAAG,SAAS;AAEnJ,QAAI,aAAa,SAAS,GAAG;AAC5B,aAAO,KAAK,mBAAmB,YAAY,YAAY;IACxD;AAEA,WAAO;EACR;EAEA,mBAAmB,YAAiB,cAAuD;AAC1F,UAAM,CAAC,aAAa,GAAG,IAAI,IAAI;AAE/B,QAAI,CAAC,aAAa;AACjB,YAAM,IAAI,MAAM,kDAAkD;IACnE;AAEA,QAAI,KAAK,WAAW,GAAG;AACtB,aAAO,KAAK,uBAAuB,EAAE,YAAY,YAAY,CAAC;IAC/D;AAGA,WAAO,KAAK;MACX,KAAK,uBAAuB,EAAE,YAAY,YAAY,CAAC;MACvD;IACD;EACD;EAEA,uBAAuB;IACtB;IACA,aAAa,EAAE,MAAM,OAAO,aAAa,OAAO,SAAS,OAAO;EACjE,GAAsF;AAErF,UAAM,YAAY,MAAM,WAAW,OAAO,CAAC;AAC3C,UAAM,aAAa,MAAM,YAAY,OAAO,CAAC;AAE7C,QAAI;AACJ,QAAI,WAAW,QAAQ,SAAS,GAAG;AAClC,YAAM,gBAAyC,CAAC;AAIhD,iBAAW,iBAAiB,SAAS;AACpC,YAAI,GAAG,eAAe,YAAY,GAAG;AACpC,wBAAc,KAAK,IAAI,WAAW,cAAc,IAAI,CAAC;QACtD,WAAW,GAAG,eAAe,GAAG,GAAG;AAClC,mBAAS,IAAI,GAAG,IAAI,cAAc,YAAY,QAAQ,KAAK;AAC1D,kBAAM,QAAQ,cAAc,YAAY,CAAC;AAEzC,gBAAI,GAAG,OAAO,YAAY,GAAG;AAC5B,4BAAc,YAAY,CAAC,IAAI,IAAI,WAAW,KAAK,OAAO,gBAAgB,KAAK,CAAC;YACjF;UACD;AAEA,wBAAc,KAAK,MAAM,aAAa,EAAE;QACzC,OAAO;AACN,wBAAc,KAAK,MAAM,aAAa,EAAE;QACzC;MACD;AAEA,mBAAa,gBAAgB,IAAI,KAAK,eAAe,OAAO,CAAC;IAC9D;AAEA,UAAM,WAAW,OAAO,UAAU,YAAa,OAAO,UAAU,YAAY,SAAS,IAClF,aAAa,KAAK,KAClB;AAEH,UAAM,gBAAgB,IAAI,IAAI,GAAG,IAAI,IAAI,QAAQ,SAAS,EAAE,EAAE;AAE9D,UAAM,YAAY,SAAS,cAAc,MAAM,KAAK;AAEpD,WAAO,MAAM,SAAS,GAAG,aAAa,GAAG,UAAU,GAAG,UAAU,GAAG,QAAQ,GAAG,SAAS;EACxF;EAEA,iBACC,EAAE,OAAAA,QAAO,QAAQ,gBAAgB,YAAY,WAAW,UAAU,OAAO,GACnE;AAEN,UAAM,gBAA8C,CAAC;AACrD,UAAM,UAAwCA,OAAM,MAAM,OAAO,OAAO;AAExE,UAAM,aAAuC,OAAO,QAAQ,OAAO,EAAE;MAAO,CAAC,CAAC,GAAG,GAAG,MACnF,CAAC,IAAI,oBAAoB;IAC1B;AACA,UAAM,cAAc,WAAW,IAAI,CAAC,CAAC,EAAE,MAAM,MAAM,IAAI,WAAW,KAAK,OAAO,gBAAgB,MAAM,CAAC,CAAC;AAEtG,QAAI,QAAQ;AACX,YAAME,UAAS;AAEf,UAAI,GAAGA,SAAQ,GAAG,GAAG;AACpB,sBAAc,KAAKA,OAAM;MAC1B,OAAO;AACN,sBAAc,KAAKA,QAAO,OAAO,CAAC;MACnC;IACD,OAAO;AACN,YAAM,SAAS;AACf,oBAAc,KAAK,IAAI,IAAI,SAAS,CAAC;AAErC,iBAAW,CAAC,YAAY,KAAK,KAAK,OAAO,QAAQ,GAAG;AACnD,cAAM,YAAgC,CAAC;AACvC,mBAAW,CAAC,WAAW,GAAG,KAAK,YAAY;AAC1C,gBAAM,WAAW,MAAM,SAAS;AAChC,cAAI,aAAa,UAAc,GAAG,UAAU,KAAK,KAAK,SAAS,UAAU,QAAY;AACpF,gBAAI;AACJ,gBAAI,IAAI,YAAY,QAAQ,IAAI,YAAY,QAAW;AACtD,6BAAe,GAAG,IAAI,SAAS,GAAG,IAAI,IAAI,UAAU,IAAI,MAAM,IAAI,SAAS,GAAG;YAE/E,WAAW,IAAI,cAAc,QAAW;AACvC,oBAAM,kBAAkB,IAAI,UAAU;AACtC,6BAAe,GAAG,iBAAiB,GAAG,IAAI,kBAAkB,IAAI,MAAM,iBAAiB,GAAG;YAE3F,WAAW,CAAC,IAAI,WAAW,IAAI,eAAe,QAAW;AACxD,oBAAM,mBAAmB,IAAI,WAAW;AACxC,6BAAe,GAAG,kBAAkB,GAAG,IAAI,mBAAmB,IAAI,MAAM,kBAAkB,GAAG;YAC9F,OAAO;AACN,6BAAe;YAChB;AACA,sBAAU,KAAK,YAAY;UAC5B,OAAO;AACN,sBAAU,KAAK,QAAQ;UACxB;QACD;AACA,sBAAc,KAAK,SAAS;AAC5B,YAAI,aAAa,OAAO,SAAS,GAAG;AACnC,wBAAc,KAAK,OAAO;QAC3B;MACD;IACD;AAEA,UAAM,UAAU,KAAK,aAAa,QAAQ;AAE1C,UAAM,YAAY,IAAI,KAAK,aAAa;AAExC,UAAM,eAAe,YAClB,iBAAiB,KAAK,eAAe,WAAW,EAAE,eAAe,KAAK,CAAC,CAAC,KACxE;AAEH,UAAM,gBAAgB,YAAY,SAC/B,IAAI,KAAK,UAAU,IACnB;AAMH,WAAO,MAAM,OAAO,eAAeF,MAAK,IAAI,WAAW,IAAI,SAAS,GAAG,aAAa,GAAG,YAAY;EACpG;EAEA,WAAWG,MAAU,cAAwD;AAC5E,WAAOA,KAAI,QAAQ;MAClB,QAAQ,KAAK;MACb,YAAY,KAAK;MACjB,aAAa,KAAK;MAClB,cAAc,KAAK;MACnB;IACD,CAAC;EACF;EAEA,qBAAqB;IACpB;IACA;IACA;IACA,OAAAH;IACA;IACA,aAAaD;IACb;IACA;IACA;EACD,GAU0D;AACzD,QAAI,YAAgF,CAAC;AACrF,QAAI,OAAO,QAAQ,UAAyC,CAAC,GAAG;AAChE,UAAM,QAAkC,CAAC;AAEzC,QAAIA,YAAW,MAAM;AACpB,YAAM,mBAAmB,OAAO,QAAQ,YAAY,OAAO;AAC3D,kBAAY,iBAAiB,IAAI,CAChC,CAAC,KAAK,KAAK,OACN;QACL,OAAO,MAAM;QACb,OAAO;QACP,OAAO,mBAAmB,OAAuB,UAAU;QAC3D,oBAAoB;QACpB,QAAQ;QACR,WAAW,CAAC;MACb,EAAE;IACH,OAAO;AACN,YAAM,iBAAiB,OAAO;QAC7B,OAAO,QAAQ,YAAY,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,mBAAmB,OAAO,UAAU,CAAC,CAAC;MACvG;AAEA,UAAIA,QAAO,OAAO;AACjB,cAAM,WAAW,OAAOA,QAAO,UAAU,aACtCA,QAAO,MAAM,gBAAgB,aAAa,CAAC,IAC3CA,QAAO;AACV,gBAAQ,YAAY,uBAAuB,UAAU,UAAU;MAChE;AAEA,YAAM,kBAA0E,CAAC;AACjF,UAAI,kBAA4B,CAAC;AAGjC,UAAIA,QAAO,SAAS;AACnB,YAAI,gBAAgB;AAEpB,mBAAW,CAAC,OAAO,KAAK,KAAK,OAAO,QAAQA,QAAO,OAAO,GAAG;AAC5D,cAAI,UAAU,QAAW;AACxB;UACD;AAEA,cAAI,SAAS,YAAY,SAAS;AACjC,gBAAI,CAAC,iBAAiB,UAAU,MAAM;AACrC,8BAAgB;YACjB;AACA,4BAAgB,KAAK,KAAK;UAC3B;QACD;AAEA,YAAI,gBAAgB,SAAS,GAAG;AAC/B,4BAAkB,gBACf,gBAAgB,OAAO,CAAC,MAAMA,QAAO,UAAU,CAAC,MAAM,IAAI,IAC1D,OAAO,KAAK,YAAY,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,gBAAgB,SAAS,GAAG,CAAC;QACnF;MACD,OAAO;AAEN,0BAAkB,OAAO,KAAK,YAAY,OAAO;MAClD;AAEA,iBAAW,SAAS,iBAAiB;AACpC,cAAM,SAAS,YAAY,QAAQ,KAAK;AACxC,wBAAgB,KAAK,EAAE,OAAO,OAAO,OAAO,OAAO,CAAC;MACrD;AAEA,UAAI,oBAIE,CAAC;AAGP,UAAIA,QAAO,MAAM;AAChB,4BAAoB,OAAO,QAAQA,QAAO,IAAI,EAC5C,OAAO,CAAC,UAAoE,CAAC,CAAC,MAAM,CAAC,CAAC,EACtF,IAAI,CAAC,CAAC,OAAO,WAAW,OAAO,EAAE,OAAO,aAAa,UAAU,YAAY,UAAU,KAAK,EAAG,EAAE;MAClG;AAEA,UAAI;AAGJ,UAAIA,QAAO,QAAQ;AAClB,iBAAS,OAAOA,QAAO,WAAW,aAC/BA,QAAO,OAAO,gBAAgB,EAAE,IAAI,CAAC,IACrCA,QAAO;AACV,mBAAW,CAAC,OAAO,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACpD,0BAAgB,KAAK;YACpB;YACA,OAAO,8BAA8B,OAAO,UAAU;UACvD,CAAC;QACF;MACD;AAIA,iBAAW,EAAE,OAAO,MAAM,KAAK,iBAAiB;AAC/C,kBAAU,KAAK;UACd,OAAO,GAAG,OAAO,IAAI,OAAO,IAAI,MAAM,aAAa,YAAY,QAAQ,KAAK,EAAG;UAC/E;UACA,OAAO,GAAG,OAAO,MAAM,IAAI,mBAAmB,OAAO,UAAU,IAAI;UACnE,oBAAoB;UACpB,QAAQ;UACR,WAAW,CAAC;QACb,CAAC;MACF;AAEA,UAAI,cAAc,OAAOA,QAAO,YAAY,aACzCA,QAAO,QAAQ,gBAAgB,oBAAoB,CAAC,IACpDA,QAAO,WAAW,CAAC;AACtB,UAAI,CAAC,MAAM,QAAQ,WAAW,GAAG;AAChC,sBAAc,CAAC,WAAW;MAC3B;AACA,gBAAU,YAAY,IAAI,CAAC,iBAAiB;AAC3C,YAAI,GAAG,cAAc,MAAM,GAAG;AAC7B,iBAAO,mBAAmB,cAAc,UAAU;QACnD;AACA,eAAO,uBAAuB,cAAc,UAAU;MACvD,CAAC;AAED,cAAQA,QAAO;AACf,eAASA,QAAO;AAGhB,iBACO;QACL,OAAO;QACP,aAAa;QACb;MACD,KAAK,mBACJ;AACD,cAAM,qBAAqB,kBAAkB,QAAQ,eAAe,QAAQ;AAC5E,cAAM,oBAAoB,mBAAmB,SAAS,eAAe;AACrE,cAAM,sBAAsB,cAAc,iBAAiB;AAC3D,cAAM,qBAAqB,GAAG,UAAU,IAAI,qBAAqB;AAEjE,cAAMK,UAAS;UACd,GAAG,mBAAmB,OAAO;YAAI,CAACC,QAAO,MACxC;cACC,mBAAmB,mBAAmB,WAAW,CAAC,GAAI,kBAAkB;cACxE,mBAAmBA,QAAO,UAAU;YACrC;UACD;QACD;AACA,cAAM,gBAAgB,KAAK,qBAAqB;UAC/C;UACA;UACA;UACA,OAAO,WAAW,mBAAmB;UACrC,aAAa,OAAO,mBAAmB;UACvC,aAAa,GAAG,UAAU,GAAG,IACzB,gCAAgC,OAChC,EAAE,OAAO,EAAE,IACX,EAAE,GAAG,6BAA6B,OAAO,EAAE,IAC5C;UACH,YAAY;UACZ,QAAAD;UACA,qBAAqB;QACtB,CAAC;AACD,cAAM,QAAS,OAAO,cAAc,GAAG,IAAK,GAAG,qBAAqB;AACpE,kBAAU,KAAK;UACd,OAAO;UACP,OAAO;UACP;UACA,oBAAoB;UACpB,QAAQ;UACR,WAAW,cAAc;QAC1B,CAAC;MACF;IACD;AAEA,QAAI,UAAU,WAAW,GAAG;AAC3B,YAAM,IAAI,aAAa;QACtB,SACC,iCAAiC,YAAY,MAAM,OAAO,UAAU;MACtE,CAAC;IACF;AAEA,QAAI;AAEJ,YAAQ,IAAI,QAAQ,KAAK;AAEzB,QAAI,qBAAqB;AACxB,UAAI,QAAQ,iBACX,IAAI;QACH,UAAU;UAAI,CAAC,EAAE,OAAAC,OAAM,MACtB,GAAGA,QAAO,YAAY,IACnB,IAAI,WAAW,KAAK,OAAO,gBAAgBA,MAAK,CAAC,IACjD,GAAGA,QAAO,IAAI,OAAO,IACrBA,OAAM,MACNA;QACJ;QACA;MACD,CACD;AACA,UAAI,GAAG,qBAAqB,IAAI,GAAG;AAClC,gBAAQ,gCAAgC,KAAK;MAC9C;AACA,YAAM,kBAAkB,CAAC;QACxB,OAAO;QACP,OAAO;QACP,OAAO,MAAM,GAAG,MAAM;QACtB,QAAQ;QACR,oBAAoB,YAAY;QAChC;MACD,CAAC;AAED,YAAM,gBAAgB,UAAU,UAAa,WAAW,UAAa,QAAQ,SAAS;AAEtF,UAAI,eAAe;AAClB,iBAAS,KAAK,iBAAiB;UAC9B,OAAO,aAAaL,QAAO,UAAU;UACrC,QAAQ,CAAC;UACT,YAAY;YACX;cACC,MAAM,CAAC;cACP,OAAO,IAAI,IAAI,GAAG;YACnB;UACD;UACA;UACA;UACA;UACA;UACA,cAAc,CAAC;QAChB,CAAC;AAED,gBAAQ;AACR,gBAAQ;AACR,iBAAS;AACT,kBAAU;MACX,OAAO;AACN,iBAAS,aAAaA,QAAO,UAAU;MACxC;AAEA,eAAS,KAAK,iBAAiB;QAC9B,OAAO,GAAG,QAAQ,WAAW,IAAI,SAAS,IAAI,SAAS,QAAQ,CAAC,GAAG,UAAU;QAC7E,QAAQ,CAAC;QACT,YAAY,gBAAgB,IAAI,CAAC,EAAE,OAAAK,OAAM,OAAO;UAC/C,MAAM,CAAC;UACP,OAAO,GAAGA,QAAO,MAAM,IAAI,mBAAmBA,QAAO,UAAU,IAAIA;QACpE,EAAE;QACF;QACA;QACA;QACA;QACA;QACA,cAAc,CAAC;MAChB,CAAC;IACF,OAAO;AACN,eAAS,KAAK,iBAAiB;QAC9B,OAAO,aAAaL,QAAO,UAAU;QACrC,QAAQ,CAAC;QACT,YAAY,UAAU,IAAI,CAAC,EAAE,MAAM,OAAO;UACzC,MAAM,CAAC;UACP,OAAO,GAAG,OAAO,MAAM,IAAI,mBAAmB,OAAO,UAAU,IAAI;QACpE,EAAE;QACF;QACA;QACA;QACA;QACA;QACA,cAAc,CAAC;MAChB,CAAC;IACF;AAEA,WAAO;MACN,YAAY,YAAY;MACxB,KAAK;MACL;IACD;EACD;AACD;AAEO,IAAM,oBAAN,cAAgC,cAAc;EA9yBrD,OA8yBqD;;;EACpD,QAA0B,UAAU,IAAY;EAEhD,QACC,YACA,SACAD,SACO;AACP,UAAM,kBAAkBA,YAAW,SAChC,yBACA,OAAOA,YAAW,WAClB,yBACAA,QAAO,mBAAmB;AAE7B,UAAM,uBAAuB;gCACC,IAAI,WAAW,eAAe,CAAC;;;;;;AAM7D,YAAQ,IAAI,oBAAoB;AAEhC,UAAM,eAAe,QAAQ;MAC5B,uCAAuC,IAAI,WAAW,eAAe,CAAC;IACvE;AAEA,UAAM,kBAAkB,aAAa,CAAC,KAAK;AAC3C,YAAQ,IAAI,UAAU;AAEtB,QAAI;AACH,iBAAW,aAAa,YAAY;AACnC,YAAI,CAAC,mBAAmB,OAAO,gBAAgB,CAAC,CAAC,IAAK,UAAU,cAAc;AAC7E,qBAAW,QAAQ,UAAU,KAAK;AACjC,oBAAQ,IAAI,IAAI,IAAI,IAAI,CAAC;UAC1B;AACA,kBAAQ;YACP,kBACC,IAAI,WAAW,eAAe,CAC/B,kCAAkC,UAAU,IAAI,KAAK,UAAU,YAAY;UAC5E;QACD;MACD;AAEA,cAAQ,IAAI,WAAW;IACxB,SAAS,GAAG;AACX,cAAQ,IAAI,aAAa;AACzB,YAAM;IACP;EACD;AACD;AAEO,IAAM,qBAAN,cAAiC,cAAc;EAl2BtD,OAk2BsD;;;EACrD,QAA0B,UAAU,IAAY;EAEhD,MAAM,QACL,YACA,SACAA,SACgB;AAChB,UAAM,kBAAkBA,YAAW,SAChC,yBACA,OAAOA,YAAW,WAClB,yBACAA,QAAO,mBAAmB;AAE7B,UAAM,uBAAuB;gCACC,IAAI,WAAW,eAAe,CAAC;;;;;;AAM7D,UAAM,QAAQ,IAAI,oBAAoB;AAEtC,UAAM,eAAe,MAAM,QAAQ;MAClC,uCAAuC,IAAI,WAAW,eAAe,CAAC;IACvE;AAEA,UAAM,kBAAkB,aAAa,CAAC,KAAK;AAE3C,UAAM,QAAQ,YAAY,OAAO,OAAO;AACvC,iBAAW,aAAa,YAAY;AACnC,YAAI,CAAC,mBAAmB,OAAO,gBAAgB,CAAC,CAAC,IAAK,UAAU,cAAc;AAC7E,qBAAW,QAAQ,UAAU,KAAK;AACjC,kBAAM,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC;UAC3B;AACA,gBAAM,GAAG;YACR,kBACC,IAAI,WAAW,eAAe,CAC/B,kCAAkC,UAAU,IAAI,KAAK,UAAU,YAAY;UAC5E;QACD;MACD;IACD,CAAC;EACF;AACD;;;AG74BA;;AAAAO;;;ACDA;;AAAAC;AAGO,IAAe,oBAAf,MAAyG;EAHhH,OAGgH;;;EAC/G,QAAiB,UAAU,IAAY;;EASvC,oBAAgC;AAC/B,WAAO,KAAK,EAAE;EACf;AAGD;;;ADsCO,IAAM,sBAAN,MAKL;EA5DF,OA4DE;;;EACD,QAAiB,UAAU,IAAY;EAE/B;EACA;EACA;EACA;EACA;EAER,YACCC,SAOC;AACD,SAAK,SAASA,QAAO;AACrB,SAAK,UAAUA,QAAO;AACtB,SAAK,UAAUA,QAAO;AACtB,SAAK,WAAWA,QAAO;AACvB,SAAK,WAAWA,QAAO;EACxB;EAEA,KACC,QAQC;AACD,UAAM,kBAAkB,CAAC,CAAC,KAAK;AAE/B,QAAI;AACJ,QAAI,KAAK,QAAQ;AAChB,eAAS,KAAK;IACf,WAAW,GAAG,QAAQ,QAAQ,GAAG;AAEhC,eAAS,OAAO;QACf,OAAO,KAAK,OAAO,EAAE,cAAc,EAAE,IAAI,CACxC,QACI,CAAC,KAAK,OAAO,GAAqC,CAAsC,CAAC;MAC/F;IACD,WAAW,GAAG,QAAQ,cAAc,GAAG;AACtC,eAAS,OAAO,cAAc,EAAE;IACjC,WAAW,GAAG,QAAQ,GAAG,GAAG;AAC3B,eAAS,CAAC;IACX,OAAO;AACN,eAAS,gBAA6B,MAAM;IAC7C;AAEA,WAAO,IAAI,iBAAiB;MAC3B,OAAO;MACP;MACA;MACA,SAAS,KAAK;MACd,SAAS,KAAK;MACd,UAAU,KAAK;MACf,UAAU,KAAK;IAChB,CAAC;EACF;AACD;AAEO,IAAe,+BAAf,cAaG,kBAA4C;EA5ItD,OA4IsD;;;EACrD,QAA0B,UAAU,IAAY;EAE9B;;EAiBlB;EACU;EACF;EACA;EACE;EACA;EACA,cAAgC;EAChC,aAA0B,oBAAI,IAAI;EAE5C,YACC,EAAE,OAAAC,QAAO,QAAQ,iBAAiB,SAAS,SAAS,UAAU,SAAS,GAStE;AACD,UAAM;AACN,SAAK,SAAS;MACb;MACA,OAAAA;MACA,QAAQ,EAAE,GAAG,OAAO;MACpB;MACA,cAAc,CAAC;IAChB;AACA,SAAK,kBAAkB;AACvB,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,IAAI;MACR,gBAAgB;MAChB,QAAQ,KAAK;IACd;AACA,SAAK,YAAY,iBAAiBA,MAAK;AACvC,SAAK,sBAAsB,OAAO,KAAK,cAAc,WAAW,EAAE,CAAC,KAAK,SAAS,GAAG,KAAK,IAAI,CAAC;AAC9F,eAAW,QAAQ,iBAAiBA,MAAK,EAAG,MAAK,WAAW,IAAI,IAAI;EACrE;;EAGA,gBAAgB;AACf,WAAO,CAAC,GAAG,KAAK,UAAU;EAC3B;EAEQ,WACP,UAGD;AACC,WAAO,CACNA,QACAC,QACI;AACJ,YAAM,gBAAgB,KAAK;AAC3B,YAAM,YAAY,iBAAiBD,MAAK;AAGxC,iBAAW,QAAQ,iBAAiBA,MAAK,EAAG,MAAK,WAAW,IAAI,IAAI;AAEpE,UAAI,OAAO,cAAc,YAAY,KAAK,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GAAG;AACjG,cAAM,IAAI,MAAM,UAAU,SAAS,iCAAiC;MACrE;AAEA,UAAI,CAAC,KAAK,iBAAiB;AAE1B,YAAI,OAAO,KAAK,KAAK,mBAAmB,EAAE,WAAW,KAAK,OAAO,kBAAkB,UAAU;AAC5F,eAAK,OAAO,SAAS;YACpB,CAAC,aAAa,GAAG,KAAK,OAAO;UAC9B;QACD;AACA,YAAI,OAAO,cAAc,YAAY,CAAC,GAAGA,QAAO,GAAG,GAAG;AACrD,gBAAM,YAAY,GAAGA,QAAO,QAAQ,IACjCA,OAAM,EAAE,iBACR,GAAGA,QAAO,IAAI,IACdA,OAAM,cAAc,EAAE,iBACtBA,OAAM,MAAM,OAAO,OAAO;AAC7B,eAAK,OAAO,OAAO,SAAS,IAAI;QACjC;MACD;AAEA,UAAI,OAAOC,QAAO,YAAY;AAC7B,QAAAA,MAAKA;UACJ,IAAI;YACH,KAAK,OAAO;YACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAM,CAAC;UAC5E;QACD;MACD;AAEA,UAAI,CAAC,KAAK,OAAO,OAAO;AACvB,aAAK,OAAO,QAAQ,CAAC;MACtB;AACA,WAAK,OAAO,MAAM,KAAK,EAAE,IAAAA,KAAI,OAAAD,QAAO,UAAU,OAAO,UAAU,CAAC;AAEhE,UAAI,OAAO,cAAc,UAAU;AAClC,gBAAQ,UAAU;UACjB,KAAK,QAAQ;AACZ,iBAAK,oBAAoB,SAAS,IAAI;AACtC;UACD;UACA,KAAK,SAAS;AACb,iBAAK,sBAAsB,OAAO;cACjC,OAAO,QAAQ,KAAK,mBAAmB,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC;YACrE;AACA,iBAAK,oBAAoB,SAAS,IAAI;AACtC;UACD;UACA,KAAK;UACL,KAAK,SAAS;AACb,iBAAK,oBAAoB,SAAS,IAAI;AACtC;UACD;UACA,KAAK,QAAQ;AACZ,iBAAK,sBAAsB,OAAO;cACjC,OAAO,QAAQ,KAAK,mBAAmB,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC;YACrE;AACA,iBAAK,oBAAoB,SAAS,IAAI;AACtC;UACD;QACD;MACD;AAEA,aAAO;IACR;EACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BA,WAAW,KAAK,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BjC,YAAY,KAAK,WAAW,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BnC,YAAY,KAAK,WAAW,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BnC,WAAW,KAAK,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BjC,YAAY,KAAK,WAAW,OAAO;EAE3B,kBACP,MACA,OAUC;AACD,WAAO,CAAC,mBAAmB;AAC1B,YAAM,cAAe,OAAO,mBAAmB,aAC5C,eAAe,sBAAsB,CAAC,IACtC;AAKH,UAAI,CAAC,aAAa,KAAK,kBAAkB,GAAG,YAAY,kBAAkB,CAAC,GAAG;AAC7E,cAAM,IAAI;UACT;QACD;MACD;AAEA,WAAK,OAAO,aAAa,KAAK,EAAE,MAAM,OAAO,YAAY,CAAC;AAC1D,aAAO;IACR;EACD;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BA,QAAQ,KAAK,kBAAkB,SAAS,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;EA2B7C,WAAW,KAAK,kBAAkB,SAAS,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;EA2B/C,YAAY,KAAK,kBAAkB,aAAa,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BrD,SAAS,KAAK,kBAAkB,UAAU,KAAK;;EAG/C,gBAAgB,cAKd;AACD,SAAK,OAAO,aAAa,KAAK,GAAG,YAAY;AAC7C,WAAO;EACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BA,MACC,OAC+C;AAC/C,QAAI,OAAO,UAAU,YAAY;AAChC,cAAQ;QACP,IAAI;UACH,KAAK,OAAO;UACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAM,CAAC;QAC5E;MACD;IACD;AACA,SAAK,OAAO,QAAQ;AACpB,WAAO;EACR;;;;;;;;;;;;;;;;;;;;;;;EAwBA,OACC,QACgD;AAChD,QAAI,OAAO,WAAW,YAAY;AACjC,eAAS;QACR,IAAI;UACH,KAAK,OAAO;UACZ,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAM,CAAC;QAC5E;MACD;IACD;AACA,SAAK,OAAO,SAAS;AACrB,WAAO;EACR;EAyBA,WACI,SAG8C;AACjD,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACrC,YAAM,UAAU,QAAQ,CAAC;QACxB,IAAI;UACH,KAAK,OAAO;UACZ,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAM,CAAC;QAC9E;MACD;AACA,WAAK,OAAO,UAAU,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;IAClE,OAAO;AACN,WAAK,OAAO,UAAU;IACvB;AACA,WAAO;EACR;EA8BA,WACI,SAG8C;AACjD,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACrC,YAAM,UAAU,QAAQ,CAAC;QACxB,IAAI;UACH,KAAK,OAAO;UACZ,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAM,CAAC;QAC9E;MACD;AAEA,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAEhE,UAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACxC,aAAK,OAAO,aAAa,GAAG,EAAE,EAAG,UAAU;MAC5C,OAAO;AACN,aAAK,OAAO,UAAU;MACvB;IACD,OAAO;AACN,YAAM,eAAe;AAErB,UAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACxC,aAAK,OAAO,aAAa,GAAG,EAAE,EAAG,UAAU;MAC5C,OAAO;AACN,aAAK,OAAO,UAAU;MACvB;IACD;AACA,WAAO;EACR;;;;;;;;;;;;;;;;;EAkBA,MAAM,OAA2E;AAChF,QAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACxC,WAAK,OAAO,aAAa,GAAG,EAAE,EAAG,QAAQ;IAC1C,OAAO;AACN,WAAK,OAAO,QAAQ;IACrB;AACA,WAAO;EACR;;;;;;;;;;;;;;;;;EAkBA,OAAO,QAA6E;AACnF,QAAI,KAAK,OAAO,aAAa,SAAS,GAAG;AACxC,WAAK,OAAO,aAAa,GAAG,EAAE,EAAG,SAAS;IAC3C,OAAO;AACN,WAAK,OAAO,SAAS;IACtB;AACA,WAAO;EACR;;EAGA,SAAc;AACb,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;EACjD;EAEA,QAAe;AACd,UAAM,EAAE,SAAS,UAAU,GAAG,KAAK,IAAI,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;AAC5E,WAAO;EACR;EAEA,GACC,OAC6D;AAC7D,UAAM,aAAuB,CAAC;AAC9B,eAAW,KAAK,GAAG,iBAAiB,KAAK,OAAO,KAAK,CAAC;AACtD,QAAI,KAAK,OAAO,OAAO;AAAE,iBAAW,MAAM,KAAK,OAAO,MAAO,YAAW,KAAK,GAAG,iBAAiB,GAAG,KAAK,CAAC;IAAG;AAE7G,WAAO,IAAI;MACV,IAAI,SAAS,KAAK,OAAO,GAAG,KAAK,OAAO,QAAQ,OAAO,OAAO,CAAC,GAAG,IAAI,IAAI,UAAU,CAAC,CAAC;MACtF,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAQ,CAAC;IACvF;EACD;;EAGS,oBAAiD;AACzD,WAAO,IAAI;MACV,KAAK,OAAO;MACZ,IAAI,sBAAsB,EAAE,OAAO,KAAK,WAAW,oBAAoB,SAAS,aAAa,QAAQ,CAAC;IACvG;EACD;EAEA,WAAsC;AACrC,WAAO;EACR;AACD;AAgCO,IAAM,mBAAN,cAYG,6BAYgD;EAz4B1D,OAy4B0D;;;EACzD,QAA0B,UAAU,IAAY;;EAGhD,SAAS,iBAAiB,MAAiC;AAC1D,QAAI,CAAC,KAAK,SAAS;AAClB,YAAM,IAAI,MAAM,oFAAoF;IACrG;AACA,UAAM,aAAa,oBAAkC,KAAK,OAAO,MAAM;AACvE,UAAM,QAAQ,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;MACjF,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;MACrC;MACA;MACA;MACA;MACA;QACC,MAAM;QACN,QAAQ,CAAC,GAAG,KAAK,UAAU;MAC5B;MACA,KAAK;IACN;AACA,UAAM,sBAAsB,KAAK;AACjC,WAAO;EACR;EAEA,WAAWD,SAAmF;AAC7F,SAAK,cAAcA,YAAW,SAC3B,EAAE,QAAQ,CAAC,GAAG,QAAQ,MAAM,gBAAgB,KAAK,IACjDA,YAAW,QACX,EAAE,QAAQ,MAAM,IAChB,EAAE,QAAQ,MAAM,gBAAgB,MAAM,GAAGA,QAAO;AACnD,WAAO;EACR;EAEA,UAAqC;AACpC,WAAO,KAAK,SAAS,KAAK;EAC3B;EAEA,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,SAAgD,wBAAC,sBAAsB;AACtE,WAAO,KAAK,SAAS,EAAE,OAAO,iBAAiB;EAChD,GAFgD;EAIhD,MAAM,UAA8C;AACnD,WAAO,KAAK,IAAI;EACjB;AACD;AAEA,YAAY,kBAAkB,CAAC,YAAY,CAAC;AAE5C,SAAS,kBAAkB,MAAmB,OAA2C;AACxF,SAAO,CAAC,YAAY,gBAAgB,gBAAgB;AACnD,UAAM,eAAe,CAAC,aAAa,GAAG,WAAW,EAAE,IAAI,CAAC,YAAY;MACnE;MACA;MACA,aAAa;IACd,EAAE;AAEF,eAAW,eAAe,cAAc;AACvC,UAAI,CAAC,aAAc,WAAmB,kBAAkB,GAAG,YAAY,YAAY,kBAAkB,CAAC,GAAG;AACxG,cAAM,IAAI;UACT;QACD;MACD;IACD;AAEA,WAAQ,WAA+B,gBAAgB,YAAY;EACpE;AACD;AAlBS;AAoBT,IAAM,wBAAwB,8BAAO;EACpC;EACA;EACA;EACA;AACD,IAL8B;AAgCvB,IAAM,QAAQ,kBAAkB,SAAS,KAAK;AA2B9C,IAAM,WAAW,kBAAkB,SAAS,IAAI;AA2BhD,IAAM,YAAY,kBAAkB,aAAa,KAAK;AA2BtD,IAAM,SAAS,kBAAkB,UAAU,KAAK;;;AJjkChD,IAAM,eAAN,MAAmB;EAX1B,OAW0B;;;EACzB,QAAiB,UAAU,IAAY;EAE/B;EACA;EAER,YAAY,SAA+C;AAC1D,SAAK,UAAU,GAAG,SAAS,aAAa,IAAI,UAAU;AACtD,SAAK,gBAAgB,GAAG,SAAS,aAAa,IAAI,SAAY;EAC/D;EAEA,QAAqB,wBAAC,OAAe,cAAiC;AACrE,UAAM,eAAe;AACrB,UAAM,KAAK,wBACV,OAII;AACJ,UAAI,OAAO,OAAO,YAAY;AAC7B,aAAK,GAAG,YAAY;MACrB;AAEA,aAAO,IAAI;QACV,IAAI;UACH,GAAG,OAAO;UACV,cAAc,uBAAuB,KAAK,GAAG,kBAAkB,KAAK,CAAC,IAAI,CAAC;UAC1E;UACA;QACD;QACA,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAQ,CAAC;MACvF;IACD,GAnBW;AAoBX,WAAO,EAAE,GAAG;EACb,GAvBqB;EAyBrB,QAAQ,SAAyB;AAChC,UAAMG,QAAO;AAMb,aAAS,OACR,QACkE;AAClE,aAAO,IAAI,oBAAoB;QAC9B,QAAQ,UAAU;QAClB,SAAS;QACT,SAASA,MAAK,WAAW;QACzB,UAAU;MACX,CAAC;IACF;AATS;AAeT,aAAS,eACR,QACkE;AAClE,aAAO,IAAI,oBAAoB;QAC9B,QAAQ,UAAU;QAClB,SAAS;QACT,SAASA,MAAK,WAAW;QACzB,UAAU;QACV,UAAU;MACX,CAAC;IACF;AAVS;AAYT,WAAO,EAAE,QAAQ,eAAe;EACjC;EAMA,OACC,QACkE;AAClE,WAAO,IAAI,oBAAoB,EAAE,QAAQ,UAAU,QAAW,SAAS,QAAW,SAAS,KAAK,WAAW,EAAE,CAAC;EAC/G;EAMA,eACC,QACkE;AAClE,WAAO,IAAI,oBAAoB;MAC9B,QAAQ,UAAU;MAClB,SAAS;MACT,SAAS,KAAK,WAAW;MACzB,UAAU;IACX,CAAC;EACF;;EAGQ,aAAa;AACpB,QAAI,CAAC,KAAK,SAAS;AAClB,WAAK,UAAU,IAAI,kBAAkB,KAAK,aAAa;IACxD;AAEA,WAAO,KAAK;EACb;AACD;;;AD9EO,IAAM,sBAAN,MAIL;EA3CF,OA2CE;;;EAGD,YACWC,QACA,SACA,SACF,UACP;AAJS,SAAA,QAAAA;AACA,SAAA,UAAA;AACA,SAAA,UAAA;AACF,SAAA,WAAA;EACN;EAPH,QAAiB,UAAU,IAAY;EAWvC,OACC,QACoD;AACpD,aAAS,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,MAAM;AACjD,QAAI,OAAO,WAAW,GAAG;AACxB,YAAM,IAAI,MAAM,iDAAiD;IAClE;AACA,UAAM,eAAe,OAAO,IAAI,CAAC,UAAU;AAC1C,YAAM,SAAsC,CAAC;AAC7C,YAAM,OAAO,KAAK,MAAM,MAAM,OAAO,OAAO;AAC5C,iBAAW,UAAU,OAAO,KAAK,KAAK,GAAG;AACxC,cAAM,WAAW,MAAM,MAA4B;AACnD,eAAO,MAAM,IAAI,GAAG,UAAU,GAAG,IAAI,WAAW,IAAI,MAAM,UAAU,KAAK,MAAM,CAAC;MACjF;AACA,aAAO;IACR,CAAC;AAQD,WAAO,IAAI,iBAAiB,KAAK,OAAO,cAAc,KAAK,SAAS,KAAK,SAAS,KAAK,QAAQ;EAChG;EAQA,OACC,aAIoD;AACpD,UAAM,SAAS,OAAO,gBAAgB,aAAa,YAAY,IAAI,aAAa,CAAC,IAAI;AAErF,QACC,CAAC,GAAG,QAAQ,GAAG,KACZ,CAAC,aAAa,KAAK,MAAM,OAAO,GAAG,OAAO,EAAE,cAAc,GAC5D;AACD,YAAM,IAAI;QACT;MACD;IACD;AAEA,WAAO,IAAI,iBAAiB,KAAK,OAAO,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,UAAU,IAAI;EAChG;AACD;AAoHO,IAAM,mBAAN,cAUG,aAEV;EA1OA,OA0OA;;;EAMC,YACCA,QACA,QACQ,SACA,SACR,UACA,QACC;AACD,UAAM;AALE,SAAA,UAAA;AACA,SAAA,UAAA;AAKR,SAAK,SAAS,EAAE,OAAAA,QAAO,QAAuB,UAAU,OAAO;EAChE;EAfA,QAA0B,UAAU,IAAY;;EAGhD;EAsCA,UACC,SAA6B,KAAK,OAAO,MAAM,YAAY,OAAO,OAAO,GACX;AAC9D,SAAK,OAAO,YAAY,oBAAkC,MAAM;AAChE,WAAO;EACR;;;;;;;;;;;;;;;;;;;;;;;EAwBA,oBAAoBC,UAAgE,CAAC,GAAS;AAC7F,QAAI,CAAC,KAAK,OAAO,WAAY,MAAK,OAAO,aAAa,CAAC;AAEvD,QAAIA,QAAO,WAAW,QAAW;AAChC,WAAK,OAAO,WAAW,KAAK,4BAA4B;IACzD,OAAO;AACN,YAAM,YAAY,MAAM,QAAQA,QAAO,MAAM,IAAI,MAAMA,QAAO,MAAM,KAAK,MAAM,CAACA,QAAO,MAAM,CAAC;AAC9F,YAAM,WAAWA,QAAO,QAAQ,aAAaA,QAAO,KAAK,KAAK;AAC9D,WAAK,OAAO,WAAW,KAAK,mBAAmB,SAAS,cAAc,QAAQ,EAAE;IACjF;AACA,WAAO;EACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BA,mBAAmBA,SAA0D;AAC5E,QAAIA,QAAO,UAAUA,QAAO,eAAeA,QAAO,WAAW;AAC5D,YAAM,IAAI;QACT;MACD;IACD;AAEA,QAAI,CAAC,KAAK,OAAO,WAAY,MAAK,OAAO,aAAa,CAAC;AAEvD,UAAM,WAAWA,QAAO,QAAQ,aAAaA,QAAO,KAAK,KAAK;AAC9D,UAAM,iBAAiBA,QAAO,cAAc,aAAaA,QAAO,WAAW,KAAK;AAChF,UAAM,cAAcA,QAAO,WAAW,aAAaA,QAAO,QAAQ,KAAK;AACvE,UAAM,YAAY,MAAM,QAAQA,QAAO,MAAM,IAAI,MAAMA,QAAO,MAAM,KAAK,MAAM,CAACA,QAAO,MAAM,CAAC;AAC9F,UAAM,SAAS,KAAK,QAAQ,eAAe,KAAK,OAAO,OAAO,aAAa,KAAK,OAAO,OAAOA,QAAO,GAAG,CAAC;AACzG,SAAK,OAAO,WAAW;MACtB,mBAAmB,SAAS,GAAG,cAAc,kBAAkB,MAAM,GAAG,QAAQ,GAAG,WAAW;IAC/F;AACA,WAAO;EACR;;EAGA,SAAc;AACb,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;EACjD;EAEA,QAAe;AACd,UAAM,EAAE,SAAS,UAAU,GAAG,KAAK,IAAI,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;AAC5E,WAAO;EACR;;EAGA,SAAS,iBAAiB,MAAiC;AAC1D,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;MAC1E,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;MACrC,KAAK,OAAO;MACZ,KAAK,OAAO,YAAY,QAAQ;MAChC;MACA;MACA;QACC,MAAM;QACN,QAAQ,iBAAiB,KAAK,OAAO,KAAK;MAC3C;IACD;EACD;EAEA,UAAqC;AACpC,WAAO,KAAK,SAAS,KAAK;EAC3B;EAEA,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,SAAgD,wBAAC,sBAAsB;AACtE,WAAO,KAAK,SAAS,EAAE,OAAO,iBAAiB;EAChD,GAFgD;EAIhD,MAAe,UAA8C;AAC5D,WAAQ,KAAK,OAAO,YAAY,KAAK,IAAI,IAAI,KAAK,IAAI;EACvD;EAEA,WAAsC;AACrC,WAAO;EACR;AACD;;;AOlaA;;AAAAC;AA+CO,IAAM,sBAAN,MAIL;EAnDF,OAmDE;;;EAOD,YACWC,QACA,SACA,SACF,UACP;AAJS,SAAA,QAAAA;AACA,SAAA,UAAA;AACA,SAAA,UAAA;AACF,SAAA,WAAA;EACN;EAXH,QAAiB,UAAU,IAAY;EAavC,IACC,QAKC;AACD,WAAO,IAAI;MACV,KAAK;MACL,aAAa,KAAK,OAAO,MAAM;MAC/B,KAAK;MACL,KAAK;MACL,KAAK;IACN;EACD;AACD;AA+IO,IAAM,mBAAN,cAWG,aAEV;EA5OA,OA4OA;;;EAMC,YACCA,QACAC,MACQ,SACA,SACR,UACC;AACD,UAAM;AAJE,SAAA,UAAA;AACA,SAAA,UAAA;AAIR,SAAK,SAAS,EAAE,KAAAA,MAAK,OAAAD,QAAO,UAAU,OAAO,CAAC,EAAE;EACjD;EAdA,QAA0B,UAAU,IAAY;;EAGhD;EAaA,KACC,QAC+C;AAC/C,SAAK,OAAO,OAAO;AACnB,WAAO;EACR;EAEQ,WACP,UAC2B;AAC3B,WAAQ,CACPA,QACAE,QACI;AACJ,YAAM,YAAY,iBAAiBF,MAAK;AAExC,UAAI,OAAO,cAAc,YAAY,KAAK,OAAO,MAAM,KAAK,CAAC,SAAS,KAAK,UAAU,SAAS,GAAG;AAChG,cAAM,IAAI,MAAM,UAAU,SAAS,iCAAiC;MACrE;AAEA,UAAI,OAAOE,QAAO,YAAY;AAC7B,cAAM,OAAO,KAAK,OAAO,OACtB,GAAGF,QAAO,WAAW,IACpBA,OAAM,MAAM,OAAO,OAAO,IAC1B,GAAGA,QAAO,QAAQ,IAClBA,OAAM,EAAE,iBACR,GAAGA,QAAO,cAAc,IACxBA,OAAM,cAAc,EAAE,iBACtB,SACD;AACH,QAAAE,MAAKA;UACJ,IAAI;YACH,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;YACtC,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAM,CAAC;UAC5E;UACA,QAAQ,IAAI;YACX;YACA,IAAI,sBAAsB,EAAE,oBAAoB,OAAO,aAAa,MAAM,CAAC;UAC5E;QACD;MACD;AAEA,WAAK,OAAO,MAAM,KAAK,EAAE,IAAAA,KAAI,OAAAF,QAAO,UAAU,OAAO,UAAU,CAAC;AAEhE,aAAO;IACR;EACD;EAEA,WAAW,KAAK,WAAW,MAAM;EAEjC,YAAY,KAAK,WAAW,OAAO;EAEnC,YAAY,KAAK,WAAW,OAAO;EAEnC,WAAW,KAAK,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmCjC,MAAM,OAAsE;AAC3E,SAAK,OAAO,QAAQ;AACpB,WAAO;EACR;EAMA,WACI,SAG8C;AACjD,QAAI,OAAO,QAAQ,CAAC,MAAM,YAAY;AACrC,YAAM,UAAU,QAAQ,CAAC;QACxB,IAAI;UACH,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO;UACtC,IAAI,sBAAsB,EAAE,oBAAoB,SAAS,aAAa,MAAM,CAAC;QAC9E;MACD;AAEA,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,WAAK,OAAO,UAAU;IACvB,OAAO;AACN,YAAM,eAAe;AACrB,WAAK,OAAO,UAAU;IACvB;AACA,WAAO;EACR;EAEA,MAAM,OAA2E;AAChF,SAAK,OAAO,QAAQ;AACpB,WAAO;EACR;EA4BA,UACC,SAAyB,KAAK,OAAO,MAAM,YAAY,OAAO,OAAO,GACP;AAC9D,SAAK,OAAO,YAAY,oBAAkC,MAAM;AAChE,WAAO;EACR;;EAGA,SAAc;AACb,WAAO,KAAK,QAAQ,iBAAiB,KAAK,MAAM;EACjD;EAEA,QAAe;AACd,UAAM,EAAE,SAAS,UAAU,GAAG,KAAK,IAAI,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;AAC5E,WAAO;EACR;;EAGA,SAAS,iBAAiB,MAAiC;AAC1D,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;MAC1E,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC;MACrC,KAAK,OAAO;MACZ,KAAK,OAAO,YAAY,QAAQ;MAChC;MACA;MACA;QACC,MAAM;QACN,QAAQ,iBAAiB,KAAK,OAAO,KAAK;MAC3C;IACD;EACD;EAEA,UAAqC;AACpC,WAAO,KAAK,SAAS,KAAK;EAC3B;EAEA,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,MAA0C,wBAAC,sBAAsB;AAChE,WAAO,KAAK,SAAS,EAAE,IAAI,iBAAiB;EAC7C,GAF0C;EAI1C,SAAgD,wBAAC,sBAAsB;AACtE,WAAO,KAAK,SAAS,EAAE,OAAO,iBAAiB;EAChD,GAFgD;EAIhD,MAAe,UAA8C;AAC5D,WAAQ,KAAK,OAAO,YAAY,KAAK,IAAI,IAAI,KAAK,IAAI;EACvD;EAEA,WAAsC;AACrC,WAAO;EACR;AACD;;;AChdA;;AAAAG;AAMO,IAAM,qBAAN,MAAM,4BAEH,IAAmD;EAR7D,OAQ6D;;;EAsB5D,YACU,QAKR;AACD,UAAM,oBAAmB,mBAAmB,OAAO,QAAQ,OAAO,OAAO,EAAE,WAAW;AAN7E,SAAA,SAAA;AAQT,SAAK,UAAU,OAAO;AAEtB,SAAK,MAAM,oBAAmB;MAC7B,OAAO;MACP,OAAO;IACR;EACD;EApCQ;EAER,QAA0B,UAAU,IAAI;EACxC,CAAC,OAAO,WAAW,IAAI;EAEf;EAER,OAAe,mBACd,QACA,SACc;AACd,WAAO,4BAAoC,MAAM,GAAG,IAAI,IAAI,SAAS,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO;EAC7F;EAEA,OAAe,WACd,QACA,SACc;AACd,WAAO,2BAAmC,MAAM,GAAG,IAAI,IAAI,SAAS,EAAE,GAAG,OAAO,CAAC,GAAG,OAAO;EAC5F;EAmBA,KACC,aACA,YAC+B;AAC/B,WAAO,QAAQ,QAAQ,KAAK,QAAQ,MAAM,KAAK,GAAG,CAAC,EAAE;MACpD;MACA;IACD;EACD;EAEA,MACC,YACkB;AAClB,WAAO,KAAK,KAAK,QAAW,UAAU;EACvC;EAEA,QAAQ,WAA8D;AACrE,WAAO,KAAK;MACX,CAAC,UAAU;AACV,oBAAY;AACZ,eAAO;MACR;MACA,CAAC,WAAW;AACX,oBAAY;AACZ,cAAM;MACP;IACD;EACD;AACD;;;AC3EA;;AAAAC;AAqBO,IAAM,yBAAN,MAKL;EA1BF,OA0BE;;;EAGD,YACW,MACA,YACA,QACA,eACAC,QACA,aACA,SACA,SACT;AARS,SAAA,OAAA;AACA,SAAA,aAAA;AACA,SAAA,SAAA;AACA,SAAA,gBAAA;AACA,SAAA,QAAAA;AACA,SAAA,cAAA;AACA,SAAA,UAAA;AACA,SAAA,UAAA;EACR;EAXH,QAAiB,UAAU,IAAY;EAavC,SACCC,SACkF;AAClF,WAAQ,KAAK,SAAS,SACnB,IAAI;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACLA,UAAUA,UAAyC,CAAC;MACpD;IACD,IACE,IAAI;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACLA,UAAUA,UAAyC,CAAC;MACpD;IACD;EACF;EAEA,UACCA,SAC+F;AAC/F,WAAQ,KAAK,SAAS,SACnB,IAAI;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACLA,UAAS,EAAE,GAAIA,SAAoD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;MAC3F;IACD,IACE,IAAI;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACLA,UAAS,EAAE,GAAIA,SAAoD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;MAC3F;IACD;EACF;AACD;AAEO,IAAM,wBAAN,cAA6E,aAEpF;EAnGA,OAmGA;;;EAYC,YACS,YACA,QACA,eAEDD,QACC,aACA,SACA,SACAC,SACR,MACC;AACD,UAAM;AAXE,SAAA,aAAA;AACA,SAAA,SAAA;AACA,SAAA,gBAAA;AAED,SAAA,QAAAD;AACC,SAAA,cAAA;AACA,SAAA,UAAA;AACA,SAAA,UAAA;AACA,SAAA,SAAAC;AAIR,SAAK,OAAO;EACb;EAzBA,QAA0B,UAAU,IAAY;;EAShD;;EAmBA,SAAc;AACb,WAAO,KAAK,QAAQ,qBAAqB;MACxC,YAAY,KAAK;MACjB,QAAQ,KAAK;MACb,eAAe,KAAK;MACpB,OAAO,KAAK;MACZ,aAAa,KAAK;MAClB,aAAa,KAAK;MAClB,YAAY,KAAK,YAAY;IAC9B,CAAC,EAAE;EACJ;;EAGA,SACC,iBAAiB,OAC0F;AAC3G,UAAM,EAAE,OAAO,WAAW,IAAI,KAAK,OAAO;AAE1C,WAAO,KAAK,QAAQ,iBAAiB,wBAAwB,cAAc;MAC1E;MACA;MACA,KAAK,SAAS,UAAU,QAAQ;MAChC;MACA,CAAC,SAAS,mBAAmB;AAC5B,cAAM,OAAO,QAAQ;UAAI,CAAC,QACzB,iBAAiB,KAAK,QAAQ,KAAK,aAAa,KAAK,MAAM,WAAW,cAAc;QACrF;AACA,YAAI,KAAK,SAAS,SAAS;AAC1B,iBAAO,KAAK,CAAC;QACd;AACA,eAAO;MACR;IACD;EACD;EAEA,UAAoH;AACnH,WAAO,KAAK,SAAS,KAAK;EAC3B;EAEQ,SAA8E;AACrF,UAAM,QAAQ,KAAK,QAAQ,qBAAqB;MAC/C,YAAY,KAAK;MACjB,QAAQ,KAAK;MACb,eAAe,KAAK;MACpB,OAAO,KAAK;MACZ,aAAa,KAAK;MAClB,aAAa,KAAK;MAClB,YAAY,KAAK,YAAY;IAC9B,CAAC;AAED,UAAM,aAAa,KAAK,QAAQ,WAAW,MAAM,GAAU;AAE3D,WAAO,EAAE,OAAO,WAAW;EAC5B;EAEA,QAAe;AACd,WAAO,KAAK,OAAO,EAAE;EACtB;;EAGA,aAAsB;AACrB,QAAI,KAAK,SAAS,SAAS;AAC1B,aAAO,KAAK,SAAS,KAAK,EAAE,IAAI;IACjC;AACA,WAAO,KAAK,SAAS,KAAK,EAAE,IAAI;EACjC;EAEA,MAAe,UAA4B;AAC1C,WAAO,KAAK,WAAW;EACxB;AACD;AAEO,IAAM,4BAAN,cAAiD,sBAAuC;EAxM/F,OAwM+F;;;EAC9F,QAA0B,UAAU,IAAY;EAEhD,OAAgB;AACf,WAAO,KAAK,WAAW;EACxB;AACD;;;AC9MA;;AAAAC;AAcO,IAAM,YAAN,cAAiC,aAExC;EAhBA,OAgBA;;;EAWC,YACQ,SAEA,QACP,QACQ,SACA,gBACP;AACD,UAAM;AAPC,SAAA,UAAA;AAEA,SAAA,SAAA;AAEC,SAAA,UAAA;AACA,SAAA,iBAAA;AAGR,SAAK,SAAS,EAAE,OAAO;EACxB;EApBA,QAA0B,UAAU,IAAY;;EAQhD;EAcA,WAAW;AACV,WAAO,EAAE,GAAG,KAAK,QAAQ,WAAW,KAAK,OAAO,CAAC,GAAG,QAAQ,KAAK,OAAO,OAAO;EAChF;EAEA,UAAU,QAAiB,aAAuB;AACjD,WAAO,cAAc,KAAK,eAAe,MAAM,IAAI;EACpD;EAEA,WAA0B;AACzB,WAAO;EACR;;EAGA,wBAAiC;AAChC,WAAO;EACR;AACD;;;AhBxBO,IAAM,qBAAN,MAKL;EAnCF,OAmCE;;;EAeD,YACS,YAEC,SAEA,SACT,QACC;AANO,SAAA,aAAA;AAEC,SAAA,UAAA;AAEA,SAAA,UAAA;AAGT,SAAK,IAAI,SACN;MACD,QAAQ,OAAO;MACf,YAAY,OAAO;MACnB,eAAe,OAAO;IACvB,IACE;MACD,QAAQ;MACR,YAAY,CAAC;MACb,eAAe,CAAC;IACjB;AACD,SAAK,QAAQ,CAAC;AACd,UAAM,QAAQ,KAAK;AAGnB,QAAI,KAAK,EAAE,QAAQ;AAClB,iBAAW,CAAC,WAAW,OAAO,KAAK,OAAO,QAAQ,KAAK,EAAE,MAAM,GAAG;AACjE,cAAM,SAA0B,IAAI,IAAI;UACvC;UACA,OAAQ;UACR,KAAK,EAAE;UACP,KAAK,EAAE;UACP,OAAQ,WAAW,SAAS;UAC5B;UACA;UACA;QACD;MACD;IACD;AACA,SAAK,SAAS,EAAE,YAAY,8BAAO,YAAiB;IAAC,GAAzB,cAA2B;EACxD;EApDA,QAAiB,UAAU,IAAY;EAQvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8EA,QAAqB,wBAAC,OAAe,cAAiC;AACrE,UAAMC,QAAO;AACb,UAAM,KAAK,wBACV,OAII;AACJ,UAAI,OAAO,OAAO,YAAY;AAC7B,aAAK,GAAG,IAAI,aAAaA,MAAK,OAAO,CAAC;MACvC;AAEA,aAAO,IAAI;QACV,IAAI;UACH,GAAG,OAAO;UACV,cAAc,uBAAuB,KAAK,GAAG,kBAAkB,KAAK,CAAC,IAAI,CAAC;UAC1E;UACA;QACD;QACA,IAAI,sBAAsB,EAAE,OAAO,oBAAoB,SAAS,aAAa,QAAQ,CAAC;MACvF;IACD,GAnBW;AAoBX,WAAO,EAAE,GAAG;EACb,GAvBqB;EAyBrB,OACC,QACA,SACC;AACD,WAAO,IAAI,mBAAmB,EAAE,QAAQ,SAAS,SAAS,KAAK,QAAQ,CAAC;EACzE;;;;;;;;;;;;;;;;;;;;EAqBA,QAAQ,SAAyB;AAChC,UAAMA,QAAO;AA0Cb,aAAS,OACR,QAC2E;AAC3E,aAAO,IAAI,oBAAoB;QAC9B,QAAQ,UAAU;QAClB,SAASA,MAAK;QACd,SAASA,MAAK;QACd,UAAU;MACX,CAAC;IACF;AATS;AAwCT,aAAS,eACR,QAC2E;AAC3E,aAAO,IAAI,oBAAoB;QAC9B,QAAQ,UAAU;QAClB,SAASA,MAAK;QACd,SAASA,MAAK;QACd,UAAU;QACV,UAAU;MACX,CAAC;IACF;AAVS;AAuCT,aAAS,OAAmCC,QAAqE;AAChH,aAAO,IAAI,oBAAoBA,QAAOD,MAAK,SAASA,MAAK,SAAS,OAAO;IAC1E;AAFS;AA4BT,aAAS,OAAmC,MAAoE;AAC/G,aAAO,IAAI,oBAAoB,MAAMA,MAAK,SAASA,MAAK,SAAS,OAAO;IACzE;AAFS;AA4BT,aAAS,QAAoC,MAAiE;AAC7G,aAAO,IAAI,iBAAiB,MAAMA,MAAK,SAASA,MAAK,SAAS,OAAO;IACtE;AAFS;AAIT,WAAO,EAAE,QAAQ,gBAAgB,QAAQ,QAAQ,QAAQ,QAAQ;EAClE;EA0CA,OAAO,QAAmG;AACzG,WAAO,IAAI,oBAAoB,EAAE,QAAQ,UAAU,QAAW,SAAS,KAAK,SAAS,SAAS,KAAK,QAAQ,CAAC;EAC7G;EA+BA,eACC,QAC2E;AAC3E,WAAO,IAAI,oBAAoB;MAC9B,QAAQ,UAAU;MAClB,SAAS,KAAK;MACd,SAAS,KAAK;MACd,UAAU;IACX,CAAC;EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BA,OAAmCC,QAAqE;AACvG,WAAO,IAAI,oBAAoBA,QAAO,KAAK,SAAS,KAAK,OAAO;EACjE;EAEA;;;;;;;;;;;;;;;;;;;;;;;;;EA0BA,OAAmC,MAAoE;AACtG,WAAO,IAAI,oBAAoB,MAAM,KAAK,SAAS,KAAK,OAAO;EAChE;;;;;;;;;;;;;;;;;;;;;;;;;EA0BA,OAAmC,MAAiE;AACnG,WAAO,IAAI,iBAAiB,MAAM,KAAK,SAAS,KAAK,OAAO;EAC7D;EAEA,IAAI,OAA+D;AAClE,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAO;AACzE,QAAI,KAAK,eAAe,SAAS;AAChC,aAAO,IAAI;QACV,YAAY,KAAK,QAAQ,IAAI,MAAM;QACnC,MAAM;QACN;QACA,KAAK;QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;MACjE;IACD;AACA,WAAO,KAAK,QAAQ,IAAI,MAAM;EAC/B;EAEA,IAAiB,OAAwD;AACxE,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAO;AACzE,QAAI,KAAK,eAAe,SAAS;AAChC,aAAO,IAAI;QACV,YAAY,KAAK,QAAQ,IAAI,MAAM;QACnC,MAAM;QACN;QACA,KAAK;QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;MACjE;IACD;AACA,WAAO,KAAK,QAAQ,IAAI,MAAM;EAC/B;EAEA,IAAiB,OAAsD;AACtE,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAO;AACzE,QAAI,KAAK,eAAe,SAAS;AAChC,aAAO,IAAI;QACV,YAAY,KAAK,QAAQ,IAAI,MAAM;QACnC,MAAM;QACN;QACA,KAAK;QACL,KAAK,QAAQ,kCAAkC,KAAK,KAAK,OAAO;MACjE;IACD;AACA,WAAO,KAAK,QAAQ,IAAI,MAAM;EAC/B;EAEA,OAAwC,OAAwD;AAC/F,UAAM,SAAS,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI,MAAM,OAAO;AACzE,QAAI,KAAK,eAAe,SAAS;AAChC,aAAO,IAAI;QACV,YAAY,KAAK,QAAQ,OAAO,MAAM;QACtC,MAAM;QACN;QACA,KAAK;QACL,KAAK,QAAQ,qCAAqC,KAAK,KAAK,OAAO;MACpE;IACD;AACA,WAAO,KAAK,QAAQ,OAAO,MAAM;EAClC;EAEA,YACC,aACAC,SACyB;AACzB,WAAO,KAAK,QAAQ,YAAY,aAAaA,OAAM;EACpD;AACD;;;AiBllBA;;AAAAC;;;ACAA;;AAAAC;AAIO,IAAe,QAAf,MAAqB;EAJ5B,OAI4B;;;EAC3B,QAAiB,UAAU,IAAY;AAoCxC;AAEO,IAAM,YAAN,cAAwB,MAAM;EA3CrC,OA2CqC;;;EAC3B,WAAW;AACnB,WAAO;EACR;EAEA,QAA0B,UAAU,IAAY;EAEhD,MAAe,IAAI,MAA0C;AAC5D,WAAO;EACR;EACA,MAAe,IACd,cACA,WACA,SACA,SACgB;EAEjB;EACA,MAAe,SAAS,SAAwC;EAEhE;AACD;AAIA,eAAsB,UAAUC,MAAa,QAAgB;AAC5D,QAAM,aAAa,GAAGA,IAAG,IAAI,KAAK,UAAU,MAAM,CAAC;AACnD,QAAMC,WAAU,IAAI,YAAY;AAChC,QAAM,OAAOA,SAAQ,OAAO,UAAU;AACtC,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,CAAC,GAAG,IAAI,WAAW,UAAU,CAAC;AAChD,QAAM,UAAU,UAAU,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAE7E,SAAO;AACR;AATsB;;;AD9Cf,IAAM,oBAAN,cAAmC,aAAgB;EAtB1D,OAsB0D;;;EAGzD,YAAoB,UAAmB;AACtC,UAAM;AADa,SAAA,WAAA;EAEpB;EAJA,QAA0B,UAAU,IAAY;EAMhD,MAAe,UAAsB;AACpC,WAAO,KAAK,SAAS;EACtB;EAEA,OAAU;AACT,WAAO,KAAK,SAAS;EACtB;AACD;AAKO,IAAe,sBAAf,MAA2F;EAzClG,OAyCkG;;;EAMjG,YACS,MACA,eACE,OACF,OAEA,eAKA,aACP;AAXO,SAAA,OAAA;AACA,SAAA,gBAAA;AACE,SAAA,QAAA;AACF,SAAA,QAAA;AAEA,SAAA,gBAAA;AAKA,SAAA,cAAA;AAGR,QAAI,SAAS,MAAM,SAAS,MAAM,SAAS,gBAAgB,QAAW;AACrE,WAAK,cAAc,EAAE,QAAQ,MAAM,gBAAgB,KAAK;IACzD;AACA,QAAI,CAAC,KAAK,aAAa,QAAQ;AAC9B,WAAK,cAAc;IACpB;EACD;EAzBA,QAAiB,UAAU,IAAY;;EAGvC;;EAyBA,MAAgB,eACf,aACA,QACA,OACa;AACb,QAAI,KAAK,UAAU,UAAa,GAAG,KAAK,OAAO,SAAS,KAAK,KAAK,kBAAkB,QAAW;AAC9F,UAAI;AACH,eAAO,MAAM,MAAM;MACpB,SAAS,GAAG;AACX,cAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;MAC5D;IACD;AAGA,QAAI,KAAK,eAAe,CAAC,KAAK,YAAY,QAAQ;AACjD,UAAI;AACH,eAAO,MAAM,MAAM;MACpB,SAAS,GAAG;AACX,cAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;MAC5D;IACD;AAGA,SAEE,KAAK,cAAc,SAAS,YAAY,KAAK,cAAc,SAAS,YACjE,KAAK,cAAc,SAAS,aAC3B,KAAK,cAAc,OAAO,SAAS,GACvC;AACD,UAAI;AACH,cAAM,CAAC,GAAG,IAAI,MAAM,QAAQ,IAAI;UAC/B,MAAM;UACN,KAAK,MAAM,SAAS,EAAE,QAAQ,KAAK,cAAc,OAAO,CAAC;QAC1D,CAAC;AACD,eAAO;MACR,SAAS,GAAG;AACX,cAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;MAC5D;IACD;AAGA,QAAI,CAAC,KAAK,aAAa;AACtB,UAAI;AACH,eAAO,MAAM,MAAM;MACpB,SAAS,GAAG;AACX,cAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;MAC5D;IACD;AAEA,QAAI,KAAK,cAAc,SAAS,UAAU;AACzC,YAAM,YAAY,MAAM,KAAK,MAAM;QAClC,KAAK,YAAY,OAAO,MAAM,UAAU,aAAa,MAAM;QAC3D,KAAK,cAAc;QACnB,KAAK,YAAY,QAAQ;QACzB,KAAK,YAAY;MAClB;AACA,UAAI,cAAc,QAAW;AAC5B,YAAI;AACJ,YAAI;AACH,mBAAS,MAAM,MAAM;QACtB,SAAS,GAAG;AACX,gBAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;QAC5D;AAGA,cAAM,KAAK,MAAM;UAChB,KAAK,YAAY,OAAO,MAAM,UAAU,aAAa,MAAM;UAC3D;;UAEA,KAAK,YAAY,iBAAiB,KAAK,cAAc,SAAS,CAAC;UAC/D,KAAK,YAAY,QAAQ;UACzB,KAAK,YAAY;QAClB;AAEA,eAAO;MACR;AAEA,aAAO;IACR;AACA,QAAI;AACH,aAAO,MAAM,MAAM;IACpB,SAAS,GAAG;AACX,YAAM,IAAI,kBAAkB,aAAa,QAAQ,CAAU;IAC5D;EACD;EAEA,WAAkB;AACjB,WAAO,KAAK;EACb;EAIA,aAAa,QAAiB,cAAiC;AAC9D,WAAO;EACR;EAIA,aAAa,SAAkB,cAAiC;AAC/D,UAAM,IAAI,MAAM,iBAAiB;EAClC;EAIA,aAAa,SAAkB,cAAiC;AAC/D,UAAM,IAAI,MAAM,iBAAiB;EAClC;EAIA,QAAQ,mBAAqF;AAC5F,QAAI,KAAK,SAAS,SAAS;AAC1B,aAAO,KAAK,KAAK,aAAa,EAAE,iBAAiB;IAClD;AACA,WAAO,IAAI,kBAAkB,MAAM,KAAK,KAAK,aAAa,EAAE,iBAAiB,CAAC;EAC/E;EAEA,UAAU,UAAmB,aAAuB;AACnD,YAAQ,KAAK,eAAe;MAC3B,KAAK,OAAO;AACX,eAAO,KAAK,aAAa,UAAU,WAAW;MAC/C;MACA,KAAK,OAAO;AACX,eAAO,KAAK,aAAa,UAAU,WAAW;MAC/C;MACA,KAAK,OAAO;AACX,eAAO,KAAK,aAAa,UAAU,WAAW;MAC/C;IACD;EACD;AAID;AAQO,IAAe,gBAAf,MAKL;EAxNF,OAwNE;;;EAGD,YAEU,SACR;AADQ,SAAA,UAAA;EACP;EALH,QAAiB,UAAU,IAAY;EAoBvC,oBACC,OACA,QACA,eACA,uBACA,oBACA,eAIA,aACmE;AACnE,WAAO,KAAK;MACX;MACA;MACA;MACA;MACA;MACA;MACA;IACD;EACD;EAOA,IAAI,OAA6C;AAChD,UAAM,cAAc,KAAK,QAAQ,WAAW,KAAK;AACjD,QAAI;AACH,aAAO,KAAK,oBAAoB,aAAa,QAAW,OAAO,KAAK,EAAE,IAAI;IAC3E,SAASC,MAAK;AACb,YAAM,IAAI,aAAa,EAAE,OAAOA,MAAK,SAAS,4BAA4B,YAAY,GAAG,IAAI,CAAC;IAC/F;EACD;;EAGA,kCAAkC,QAAiB;AAClD,WAAO;EACR;EAEA,IAAiB,OAAsC;AACtD,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAW,OAAO,KAAK,EAAE,IAAI;EAI9F;;EAGA,kCAAkC,SAA2B;AAC5D,UAAM,IAAI,MAAM,iBAAiB;EAClC;EAEA,IAAiB,OAAoC;AACpD,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAW,OAAO,KAAK,EAAE,IAAI;EAI9F;;EAGA,kCAAkC,SAA2B;AAC5D,UAAM,IAAI,MAAM,iBAAiB;EAClC;EAEA,OACC,OAC2B;AAC3B,WAAO,KAAK,oBAAoB,KAAK,QAAQ,WAAW,KAAK,GAAG,QAAW,OAAO,KAAK,EAAE,OAAO;EAIjG;EAEA,MAAM,MAAMC,MAAU;AACrB,UAAM,SAAS,MAAM,KAAK,OAAOA,IAAG;AAEpC,WAAO,OAAO,CAAC,EAAE,CAAC;EACnB;;EAGA,qCAAqC,SAA2B;AAC/D,UAAM,IAAI,MAAM,iBAAiB;EAClC;AACD;AAMO,IAAe,oBAAf,cAKG,mBAAkE;EA7U5E,OA6U4E;;;EAG3E,YACC,YACA,SACA,SACU,QAKS,cAAc,GAChC;AACD,UAAM,YAAY,SAAS,SAAS,MAAM;AAPhC,SAAA,SAAA;AAKS,SAAA,cAAA;EAGpB;EAdA,QAA0B,UAAU,IAAY;EAgBhD,WAAkB;AACjB,UAAM,IAAI,yBAAyB;EACpC;AACD;;;AEjWA;AAAA;AAAAC;AAGO,IAAM,eAAe;AAAA,EACxB,IAAI,KAAK,EAAE,WAAW;AAC1B;AAEO,IAAM,aAAa,CAAC,MAAM,QAAQ,QAAQ,cAAc,cAAc,YAAY;;;A7BIlF,IAAM,QAAQ,YAAY,SAAS;AAAA,EACtC,GAAG;AAAA,EACH,OAAO,KAAK,EAAE,QAAQ;AAAA,EACtB,aAAa,KAAK;AACtB,CAAC;;;A8BfD;AAAA;AAAAC;;;ACAA;;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AACO,IAAM,cAAN,cAA0B,MAAM;AAAA,EADvC,OACuC;AAAA;AAAA;AAAA;AAAA,EAEnC;AAAA;AAAA,EAEA;AAAA,EACA,YAAY,SAAS,MAAM,SAAS,OAAO;AACvC,QAAI,SAAS,QAAW;AACpB,gBAAU,GAAG,IAAI,KAAK,OAAO;AAAA,IACjC;AACA,UAAM,SAAS,EAAE,MAAM,CAAC;AACxB,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EAChB;AACJ;;;ACfA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAKO,SAAS,SAASC,OAAM;AAC3B,QAAM,QAAQ,OAAO,KAAKA,KAAI;AAC9B,MAAI,UAAU,MAAM;AAChB,UAAM,IAAI,YAAY,YAAYA,KAAI,8BAA8B,aAAa;AAAA,EACrF;AACA,QAAM,SAAS,MAAM;AACrB,QAAM,SAAS,OAAO,QAAQ;AAC9B,QAAM,YAAY,OAAO,WAAW,MAAM,SACpC,eAAe,OAAO,WAAW,CAAC,IAClC;AACN,QAAM,OAAO,cAAc,OAAO,MAAM,CAAC;AACzC,QAAM,QAAQ,OAAO,OAAO,MAAM,SAAYC,YAAW,OAAO,OAAO,CAAC,IAAI;AAC5E,QAAM,WAAW,OAAO,UAAU,MAAM,SAClC,cAAc,OAAO,UAAU,CAAC,IAChC;AACN,SAAO,EAAE,QAAQ,WAAW,MAAM,OAAO,SAAS;AACtD;AAhBgB;AAiBhB,IAAM,UAAU,MAAM;AAClB,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,OAAO;AACb,QAAM,QAAQ;AACd,QAAM,WAAW;AACjB,SAAO,IAAI,OAAO,IAAI,MAAM,OAAO,SAAS,KAAK,IAAI,OAAO,KAAK,OAAO,QAAQ,OAAO,IAAI;AAC/F,GAAG;AACH,SAAS,eAAeD,OAAM;AAC1B,QAAM,QAAQ,aAAa,KAAKA,KAAI;AACpC,MAAI,UAAU,MAAM;AAChB,UAAM,IAAI,YAAY,0DAA0D,aAAa;AAAA,EACjG;AACA,QAAM,SAAS,MAAM;AACrB,QAAM,OAAO,cAAc,OAAO,SAAS,KAAK,OAAO,MAAM,CAAC;AAC9D,QAAM,OAAO,OAAO,MAAM,IAAI,SAAS,OAAO,MAAM,GAAG,EAAE,IAAI;AAC7D,QAAM,WAAW,OAAO,UAAU,MAAM,SAClC;AAAA,IACE,UAAU,cAAc,OAAO,UAAU,CAAC;AAAA,IAC1C,UAAU,OAAO,UAAU,MAAM,SAC3B,cAAc,OAAO,UAAU,CAAC,IAChC;AAAA,EACV,IACE;AACN,SAAO,EAAE,MAAM,MAAM,SAAS;AAClC;AAjBS;AAkBT,IAAM,gBAAgB,MAAM;AACxB,SAAO,IAAI,OAAO,uHAAuH,IAAI;AACjJ,GAAG;AAGH,SAASC,YAAWD,OAAM;AACtB,QAAM,YAAYA,MAAK,MAAM,GAAG;AAChC,QAAM,QAAQ,CAAC;AACf,aAAW,YAAY,WAAW;AAC9B,QAAI,aAAa,IAAI;AACjB;AAAA,IACJ;AACA,QAAI;AACJ,QAAI;AACJ,UAAM,WAAW,SAAS,QAAQ,GAAG;AACrC,QAAI,WAAW,GAAG;AACd,YAAM;AACN,cAAQ;AAAA,IACZ,OACK;AACD,YAAM,SAAS,UAAU,GAAG,QAAQ;AACpC,cAAQ,SAAS,UAAU,WAAW,CAAC;AAAA,IAC3C;AACA,UAAM,KAAK;AAAA,MACP,KAAK,cAAc,IAAI,WAAW,KAAK,GAAG,CAAC;AAAA,MAC3C,OAAO,cAAc,MAAM,WAAW,KAAK,GAAG,CAAC;AAAA,IACnD,CAAC;AAAA,EACL;AACA,SAAO,EAAE,MAAM;AACnB;AAxBS,OAAAC,aAAA;AAyBT,SAAS,cAAcD,OAAM;AACzB,MAAI;AACA,WAAO,mBAAmBA,KAAI;AAAA,EAClC,SACO,GAAG;AACN,QAAI,aAAa,UAAU;AACvB,YAAM,IAAI,YAAY,+CAA+C,CAAC,IAAI,eAAe,QAAW,CAAC;AAAA,IACzG;AACA,UAAM;AAAA,EACV;AACJ;AAVS;AAWF,SAAS,cAAc,QAAQ,WAAW,MAAM;AACnD,MAAI,cAAc,QAAW;AACzB,UAAM,IAAI,YAAY,mBAAmB,KAAK,UAAU,SAAS,GAAG,CAAC,uCAAuC,aAAa;AAAA,EAC7H;AACA,QAAM,aAAa,GAAG,MAAM;AAC5B,QAAM,WAAW,WAAW,UAAU,IAAI;AAC1C,QAAM,WAAW,WAAW,UAAU,IAAI;AAC1C,QAAM,eAAe,eAAe,UAAU,QAAQ;AACtD,QAAM,gBAAgB,KAAK,YAAY,GAAG,QAAQ,GAAG,QAAQ;AAC7D,MAAI,WAAW,KAAK,MAAM,GAAG,EAAE,IAAI,kBAAkB,EAAE,KAAK,GAAG;AAC/D,MAAI,aAAa,MAAM,CAAC,SAAS,WAAW,GAAG,GAAG;AAC9C,eAAW,MAAM;AAAA,EACrB;AACA,SAAO,IAAI,IAAI,GAAG,UAAU,GAAG,aAAa,GAAG,QAAQ,EAAE;AAC7D;AAdgB;AAehB,SAAS,WAAW,MAAM;AACtB,SAAO,KAAK,SAAS,GAAG,IAAI,IAAI,UAAU,IAAI,CAAC,MAAM,UAAU,IAAI;AACvE;AAFS;AAGT,SAAS,WAAW,MAAM;AACtB,SAAO,SAAS,SAAY,IAAI,IAAI,KAAK;AAC7C;AAFS;AAGT,SAAS,eAAe,UAAU;AAC9B,MAAI,aAAa,QAAW;AACxB,WAAO;AAAA,EACX;AACA,QAAM,eAAe,mBAAmB,SAAS,QAAQ;AACzD,QAAM,eAAe,SAAS,aAAa,SACrC,IAAI,mBAAmB,SAAS,QAAQ,CAAC,KACzC;AACN,SAAO,GAAG,YAAY,GAAG,YAAY;AACzC;AATS;;;AC9GT;AAAA;AAAAE;;;ACAA;AAAA;AAAAC;AAWA,IAAMC,WAAU;AAIhB,IAAM,UAAUA;AAChB,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,MAAM,OAAO,gBAAgB,aAAa,IAAI,YAAY,IAAI;AACpE,IAAM,MAAM,OAAO,gBAAgB,aAAa,IAAI,YAAY,IAAI;AACpE,IAAM,QAAQ;AACd,IAAM,SAAS,MAAM,UAAU,MAAM,KAAK,KAAK;AAC/C,IAAM,UAAU,CAAC,MAAM;AACnB,MAAI,MAAM,CAAC;AACX,IAAE,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC;AAC9B,SAAO;AACX,GAAG,MAAM;AACT,IAAM,QAAQ;AACd,IAAM,UAAU,OAAO,aAAa,KAAK,MAAM;AAC/C,IAAM,WAAW,OAAO,WAAW,SAAS,aACtC,WAAW,KAAK,KAAK,UAAU,IAC/B,CAAC,OAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC,CAAC;AAC9D,IAAM,aAAa,wBAAC,QAAQ,IACvB,QAAQ,MAAM,EAAE,EAAE,QAAQ,UAAU,CAAC,OAAO,MAAM,MAAM,MAAM,GAAG,GADnD;AAEnB,IAAM,WAAW,wBAAC,MAAM,EAAE,QAAQ,qBAAqB,EAAE,GAAxC;AAIjB,IAAM,eAAe,wBAAC,QAAQ;AAE1B,MAAI,KAAK,IAAI,IAAI,IAAIC,OAAM;AAC3B,QAAM,MAAM,IAAI,SAAS;AACzB,WAAS,IAAI,GAAG,IAAI,IAAI,UAAS;AAC7B,SAAK,KAAK,IAAI,WAAW,GAAG,KAAK,QAC5B,KAAK,IAAI,WAAW,GAAG,KAAK,QAC5B,KAAK,IAAI,WAAW,GAAG,KAAK;AAC7B,YAAM,IAAI,UAAU,yBAAyB;AACjD,UAAO,MAAM,KAAO,MAAM,IAAK;AAC/B,IAAAA,QAAO,OAAO,OAAO,KAAK,EAAE,IACtB,OAAO,OAAO,KAAK,EAAE,IACrB,OAAO,OAAO,IAAI,EAAE,IACpB,OAAO,MAAM,EAAE;AAAA,EACzB;AACA,SAAO,MAAMA,KAAI,MAAM,GAAG,MAAM,CAAC,IAAI,MAAM,UAAU,GAAG,IAAIA;AAChE,GAhBqB;AAsBrB,IAAM,QAAQ,OAAO,SAAS,aAAa,CAAC,QAAQ,KAAK,GAAG,IACtD,aAAa,CAAC,QAAQ,OAAO,KAAK,KAAK,QAAQ,EAAE,SAAS,QAAQ,IAC9D;AACV,IAAM,kBAAkB,aAClB,CAAC,QAAQ,OAAO,KAAK,GAAG,EAAE,SAAS,QAAQ,IAC3C,CAAC,QAAQ;AAEP,QAAM,UAAU;AAChB,MAAI,OAAO,CAAC;AACZ,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAI,GAAG,KAAK,SAAS;AACjD,SAAK,KAAK,QAAQ,MAAM,MAAM,IAAI,SAAS,GAAG,IAAI,OAAO,CAAC,CAAC;AAAA,EAC/D;AACA,SAAO,MAAM,KAAK,KAAK,EAAE,CAAC;AAC9B;AAMJ,IAAM,iBAAiB,wBAAC,KAAK,UAAU,UAAU,UAAU,WAAW,gBAAgB,GAAG,CAAC,IAAI,gBAAgB,GAAG,GAA1F;AAIvB,IAAM,UAAU,wBAAC,MAAM;AACnB,MAAI,EAAE,SAAS,GAAG;AACd,QAAI,KAAK,EAAE,WAAW,CAAC;AACvB,WAAO,KAAK,MAAO,IACb,KAAK,OAAS,QAAQ,MAAQ,OAAO,CAAE,IACnC,QAAQ,MAAQ,KAAK,EAAK,IACzB,QAAQ,MAAS,OAAO,KAAM,EAAK,IAChC,QAAQ,MAAS,OAAO,IAAK,EAAK,IAClC,QAAQ,MAAQ,KAAK,EAAK;AAAA,EAC5C,OACK;AACD,QAAI,KAAK,SACF,EAAE,WAAW,CAAC,IAAI,SAAU,QAC5B,EAAE,WAAW,CAAC,IAAI;AACzB,WAAQ,QAAQ,MAAS,OAAO,KAAM,CAAK,IACrC,QAAQ,MAAS,OAAO,KAAM,EAAK,IACnC,QAAQ,MAAS,OAAO,IAAK,EAAK,IAClC,QAAQ,MAAQ,KAAK,EAAK;AAAA,EACpC;AACJ,GAnBgB;AAoBhB,IAAM,UAAU;AAMhB,IAAM,OAAO,wBAAC,MAAM,EAAE,QAAQ,SAAS,OAAO,GAAjC;AAEb,IAAM,UAAU,aACV,CAAC,MAAM,OAAO,KAAK,GAAG,MAAM,EAAE,SAAS,QAAQ,IAC/C,MACI,CAAC,MAAM,gBAAgB,IAAI,OAAO,CAAC,CAAC,IACpC,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC;AAM9B,IAAM,SAAS,wBAAC,KAAK,UAAU,UAAU,UACnC,WAAW,QAAQ,GAAG,CAAC,IACvB,QAAQ,GAAG,GAFF;AAOf,IAAMC,aAAY,wBAAC,QAAQ,OAAO,KAAK,IAAI,GAAzB;AAIlB,IAAM,UAAU;AAChB,IAAM,UAAU,wBAAC,SAAS;AACtB,UAAQ,KAAK,QAAQ;AAAA,IACjB,KAAK;AACD,UAAIC,OAAO,IAAO,KAAK,WAAW,CAAC,MAAM,MACjC,KAAO,KAAK,WAAW,CAAC,MAAM,MAC9B,KAAO,KAAK,WAAW,CAAC,MAAM,IAC/B,KAAO,KAAK,WAAW,CAAC,GAAI,SAASA,MAAK;AACjD,aAAQ,SAAS,WAAW,MAAM,KAAM,IAClC,SAAS,SAAS,QAAS,KAAM;AAAA,IAC3C,KAAK;AACD,aAAO,SAAU,KAAO,KAAK,WAAW,CAAC,MAAM,MACvC,KAAO,KAAK,WAAW,CAAC,MAAM,IAC/B,KAAO,KAAK,WAAW,CAAC,CAAE;AAAA,IACrC;AACI,aAAO,SAAU,KAAO,KAAK,WAAW,CAAC,MAAM,IACxC,KAAO,KAAK,WAAW,CAAC,CAAE;AAAA,EACzC;AACJ,GAjBgB;AAuBhB,IAAM,OAAO,wBAAC,MAAM,EAAE,QAAQ,SAAS,OAAO,GAAjC;AAIb,IAAM,eAAe,wBAACF,SAAQ;AAE1B,EAAAA,OAAMA,KAAI,QAAQ,QAAQ,EAAE;AAC5B,MAAI,CAAC,MAAM,KAAKA,IAAG;AACf,UAAM,IAAI,UAAU,mBAAmB;AAC3C,EAAAA,QAAO,KAAK,MAAM,KAAKA,KAAI,SAAS,EAAE;AACtC,MAAI,KAAK,IAAI;AACb,MAAI,WAAW,CAAC;AAChB,WAAS,IAAI,GAAG,IAAIA,KAAI,UAAS;AAC7B,UAAM,OAAOA,KAAI,OAAO,GAAG,CAAC,KAAK,KAC3B,OAAOA,KAAI,OAAO,GAAG,CAAC,KAAK,MAC1B,KAAK,OAAOA,KAAI,OAAO,GAAG,CAAC,MAAM,KACjC,KAAK,OAAOA,KAAI,OAAO,GAAG,CAAC;AAClC,QAAI,OAAO,IAAI;AACX,eAAS,KAAK,QAAQ,OAAO,KAAK,GAAG,CAAC;AAAA,IAC1C,WACS,OAAO,IAAI;AAChB,eAAS,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAO,IAAI,GAAG,CAAC;AAAA,IAC1D,OACK;AACD,eAAS,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAO,IAAI,KAAK,MAAM,GAAG,CAAC;AAAA,IACrE;AAAA,EACJ;AACA,SAAO,SAAS,KAAK,EAAE;AAC3B,GAxBqB;AA8BrB,IAAM,QAAQ,OAAO,SAAS,aAAa,CAACA,SAAQ,KAAK,SAASA,IAAG,CAAC,IAChE,aAAa,CAACA,SAAQ,OAAO,KAAKA,MAAK,QAAQ,EAAE,SAAS,QAAQ,IAC9D;AAEV,IAAM,gBAAgB,aAChB,CAAC,MAAM,SAAS,OAAO,KAAK,GAAG,QAAQ,CAAC,IACxC,CAAC,MAAM,SAAS,MAAM,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,OAAK,EAAE,WAAW,CAAC,CAAC,CAAC;AAIlE,IAAM,eAAe,wBAAC,MAAM,cAAc,OAAO,CAAC,CAAC,GAA9B;AAErB,IAAM,UAAU,aACV,CAAC,MAAM,OAAO,KAAK,GAAG,QAAQ,EAAE,SAAS,MAAM,IAC/C,MACI,CAAC,MAAM,IAAI,OAAO,cAAc,CAAC,CAAC,IAClC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;AAC9B,IAAM,SAAS,wBAAC,MAAM,SAAS,EAAE,QAAQ,SAAS,CAAC,OAAO,MAAM,MAAM,MAAM,GAAG,CAAC,GAAjE;AAMf,IAAMG,UAAS,wBAAC,QAAQ,QAAQ,OAAO,GAAG,CAAC,GAA5B;AAKf,IAAM,UAAU,wBAAC,QAAQ;AACrB,MAAI,OAAO,QAAQ;AACf,WAAO;AACX,QAAM,IAAI,IAAI,QAAQ,QAAQ,EAAE,EAAE,QAAQ,WAAW,EAAE;AACvD,SAAO,CAAC,oBAAoB,KAAK,CAAC,KAAK,CAAC,oBAAoB,KAAK,CAAC;AACtE,GALgB;AAOhB,IAAM,UAAU,wBAAC,MAAM;AACnB,SAAO;AAAA,IACH,OAAO;AAAA,IAAG,YAAY;AAAA,IAAO,UAAU;AAAA,IAAM,cAAc;AAAA,EAC/D;AACJ,GAJgB;AAQhB,IAAM,eAAe,kCAAY;AAC7B,QAAM,OAAO,wBAAC,MAAM,SAAS,OAAO,eAAe,OAAO,WAAW,MAAM,QAAQ,IAAI,CAAC,GAA3E;AACb,OAAK,cAAc,WAAY;AAAE,WAAOA,QAAO,IAAI;AAAA,EAAG,CAAC;AACvD,OAAK,YAAY,SAAU,SAAS;AAAE,WAAO,OAAO,MAAM,OAAO;AAAA,EAAG,CAAC;AACrE,OAAK,eAAe,WAAY;AAAE,WAAO,OAAO,MAAM,IAAI;AAAA,EAAG,CAAC;AAC9D,OAAK,eAAe,WAAY;AAAE,WAAO,OAAO,MAAM,IAAI;AAAA,EAAG,CAAC;AAC9D,OAAK,gBAAgB,WAAY;AAAE,WAAO,aAAa,IAAI;AAAA,EAAG,CAAC;AACnE,GAPqB;AAWrB,IAAM,mBAAmB,kCAAY;AACjC,QAAM,OAAO,wBAAC,MAAM,SAAS,OAAO,eAAe,WAAW,WAAW,MAAM,QAAQ,IAAI,CAAC,GAA/E;AACb,OAAK,YAAY,SAAU,SAAS;AAAE,WAAO,eAAe,MAAM,OAAO;AAAA,EAAG,CAAC;AAC7E,OAAK,eAAe,WAAY;AAAE,WAAO,eAAe,MAAM,IAAI;AAAA,EAAG,CAAC;AACtE,OAAK,eAAe,WAAY;AAAE,WAAO,eAAe,MAAM,IAAI;AAAA,EAAG,CAAC;AAC1E,GALyB;AASzB,IAAM,iBAAiB,6BAAM;AACzB,eAAa;AACb,mBAAiB;AACrB,GAHuB;AAIvB,IAAM,UAAU;AAAA,EACZ,SAASJ;AAAA,EACT;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA,YAAYI;AAAA,EACZ,UAAU;AAAA,EACV;AAAA,EACA,WAAWF;AAAA,EACX,WAAWA;AAAA,EACX;AAAA,EACA;AAAA,EACA,QAAQE;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ADpRO,IAAM,mBAAmB;AACzB,SAAS,uBAAuB,MAAM;AACzC,MAAI,SAAS,SAAS;AAClB,WAAO;AAAA,EACX,WACS,SAAS,QAAQ;AACtB,WAAO;AAAA,EACX,WACS,SAAS,YAAY;AAC1B,WAAO;AAAA,EACX,OACK;AACD,UAAM,WAAW,+EAA+E;AAAA,EACpG;AACJ;AAbgB;AAcT,IAAM,gBAAN,MAAoB;AAAA,EAhB3B,OAgB2B;AAAA;AAAA;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,SAAS,aAAa,MAAM,cAAc,iBAAiB;AACnE,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,OAAO;AACZ,SAAK,eAAe;AACpB,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,SAAS;AACL,WAAO;AAAA,MACH,SAAS,KAAK;AAAA,MACd,aAAa,KAAK;AAAA,MAClB,MAAM,KAAK,KAAK,IAAI,SAAS;AAAA,MAC7B,cAAc,KAAK;AAAA,MACnB,iBAAiB,KAAK,oBAAoB,SACpC,KAAK,KAAK,kBACV;AAAA,IACV;AAAA,EACJ;AACJ;AACA,SAAS,UAAU,KAAK;AACpB,SAAO,MAAM,UAAU,IAAI,KAAK,KAAK,WAAW;AACpD;AAFS;AAGT,SAAS,YAAY,OAAO;AACxB,MAAI,OAAO,UAAU,UAAU;AAC3B,WAAO,KAAK;AAAA,EAChB,WACS,iBAAiB,aAAa;AACnC,WAAO,QAAO,eAAe,IAAI,WAAW,KAAK,CAAC;AAAA,EACtD,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAVS;;;AFzCT,IAAM,eAAe;AAKd,SAAS,aAAaC,SAAQ,YAAY;AAC7C,MAAI,OAAOA,YAAW,UAAU;AAG5B,UAAM,IAAI,UAAU,gDAAgD,OAAOA,OAAM,EAAE;AAAA,EACvF;AACA,MAAI,EAAE,KAAK,WAAW,KAAK,SAAS,YAAY,IAAIA;AAEpD,gBAAc,KAAK,IAAI,GAAG,eAAe,EAAE;AAC3C,cAAY;AACZ,MAAI,wBAAwB,CAAC;AAE7B,MAAI,QAAQ,cAAc;AACtB,UAAM;AAAA,EACV;AAEA,QAAMC,OAAM,SAAS,GAAG;AACxB,QAAM,oBAAoBA,KAAI,OAAO,YAAY;AACjD,QAAM,iBAAiB,sBAAsB,UACzCA,KAAI,SAAS,gBACbA,KAAI,cAAc;AACtB,MAAI;AACJ,MAAI,gBAAgB;AAChB,qBAAiB;AAAA,MACb,OAAO;AAAA,QACH,QAAQ,CAAC,UAAU,SAAS;AAAA,QAC5B,QAAQ,wBAAC,KAAK,UAAU,sBAAsB,KAAK,GAAG,GAAG,IAAI,KAAK,EAAE,GAA5D;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ,OACK;AACD,qBAAiB;AAAA,MACb,KAAK;AAAA,QACD,QAAQ,CAAC,KAAK,GAAG;AAAA,QACjB,QAAQ,wBAAC,GAAG,UAAW,MAAM,UAAU,KAA/B;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,wBAAC,GAAG,UAAW,YAAY,OAA3B;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AACA,aAAW,EAAE,KAAK,MAAM,KAAKA,KAAI,OAAO,SAAS,CAAC,GAAG;AACjD,QAAI,CAAC,OAAO,OAAO,gBAAgB,GAAG,GAAG;AACrC,YAAM,IAAI,YAAY,mCAAmC,KAAK,UAAU,GAAG,CAAC,IAAI,yBAAyB;AAAA,IAC7G;AACA,UAAM,gBAAgB,eAAe,GAAG;AACxC,QAAI,cAAc,WAAW,UACzB,CAAC,cAAc,OAAO,SAAS,KAAK,GAAG;AACvC,YAAM,IAAI,YAAY,0BAA0B,GAAG,qBAAqB,KAAK,UAAU,KAAK,CAAC,4BAA4B,cAAc,OAAO,IAAI,CAAC,MAAM,MAAM,IAAI,GAAG,EAAE,KAAK,IAAI,CAAC,KAAK,aAAa;AAAA,IACxM;AACA,QAAI,cAAc,WAAW,QAAW;AACpC,qBAAe,OAAO,KAAK,KAAK;AAAA,IACpC;AAAA,EACJ;AAEA,QAAM,8BAA8B,sBAAsB,WAAW,IAC/D,KACA,IAAI,sBAAsB,KAAK,GAAG,CAAC;AACzC,QAAM,OAAOA,KAAI,OAAO;AACxB,MAAI;AACJ,MAAI,sBAAsB,UAAU;AAChC,QAAI,QAAQ,OAAO;AACf,UAAIA,KAAI,WAAW,SAAS,QAAW;AACnC,cAAM,IAAI,YAAY,6DAA6D,aAAa;AAAA,MACpG;AACA,eAAS,aAAa,SAAS;AAAA,IACnC,OACK;AACD,eAAS,aAAa,UAAU;AAAA,IACpC;AAAA,EACJ,OACK;AACD,aAAS;AAAA,EACb;AACA,MAAI,WAAW,UAAU,WAAW,MAAM;AACtC,YAAQ;AAAA,EACZ,OACK;AACD,YAAQ;AAAA,EACZ;AACA,MAAI,WAAW,UACX,WAAW,QACX,WAAW,WACX,WAAW,SACX,WAAW,QAAQ;AACnB,UAAM,IAAI,YAAY,8FACX,KAAK,UAAUA,KAAI,SAAS,GAAG,CAAC,uCACF,gBAAgB,IAAI,0BAA0B;AAAA,EAC3F;AACA,MAAI,YAAY,YAAY,YAAY,YAAY,YAAY,UAAU;AACtE,UAAM,IAAI,UAAU,2EAA2E,KAAK,UAAU,OAAO,CAAC,EAAE;AAAA,EAC5H;AACA,MAAIA,KAAI,aAAa,QAAW;AAC5B,UAAM,IAAI,YAAY,oCAAoC,KAAK,UAAU,MAAMA,KAAI,QAAQ,CAAC,IAAI,aAAa;AAAA,EACjH;AACA,MAAI,gBAAgB;AAChB,WAAO;AAAA,MACH,QAAQ;AAAA,MACR,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAASD,QAAO;AAAA,MAChB,cAAcA,QAAO;AAAA,MACrB,gBAAgBA,QAAO;AAAA,MACvB,SAASA,QAAO;AAAA,MAChB,OAAOA,QAAO;AAAA,MACd,WAAW;AAAA,MACX,eAAe;AAAA,MACf,WAAW;AAAA,IACf;AAAA,EACJ;AACA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA,WAAWC,KAAI;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,eAAeD,QAAO;AAAA,IACtB,SAASA,QAAO;AAAA,IAChB,cAAcA,QAAO;AAAA,IACrB,gBAAgBA,QAAO;AAAA,IACvB,SAASA,QAAO;AAAA,IAChB,OAAOA,QAAO;AAAA,EAClB;AACJ;AA/HgB;;;AIRhB;AAAA;AAAAE;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAA,IAAI;AACJ,IAAI,OAAO,cAAc,aAAa;AAClC,eAAa;AACjB,WAAW,OAAO,WAAW,aAAa;AACtC,eAAa,OAAO;AACxB,WAAW,OAAO,WAAW,aAAa;AACtC,eAAa,OAAO;AACxB,WAAW,OAAO,SAAS,aAAa;AACpC,eAAa,KAAK;AACtB;;;ACTA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AACO,IAAM,SAAN,MAAa;AAAA,EADpB,OACoB;AAAA;AAAA;AAAA;AAAA,EAEhB,cAAc;AACV,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AACJ;;;ACZA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AACO,IAAM,cAAN,cAA0B,MAAM;AAAA,EADvC,OACuC;AAAA;AAAA;AAAA;AAAA,EAEnC,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,aAAN,cAAyB,YAAY;AAAA,EAT5C,OAS4C;AAAA;AAAA;AAAA;AAAA,EAExC,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,gBAAN,cAA4B,YAAY;AAAA,EAjB/C,OAiB+C;AAAA;AAAA;AAAA,EAC3C;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAY,SAAS,YAAY;AAC7B,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,OAAO,WAAW;AACvB,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA,EACjB;AACJ;AAEO,IAAM,cAAN,cAA0B,YAAY;AAAA,EA/B7C,OA+B6C;AAAA;AAAA;AAAA;AAAA,EAEzC,YAAY,SAAS,OAAO;AACxB,QAAI,UAAU,QAAW;AACrB,YAAM,GAAG,OAAO,KAAK,KAAK,EAAE;AAC5B,WAAK,QAAQ;AAAA,IACjB,OACK;AACD,YAAM,OAAO;AAAA,IACjB;AACA,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,4BAAN,cAAwC,YAAY;AAAA,EA7C3D,OA6C2D;AAAA;AAAA;AAAA;AAAA,EAEvD,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,iBAAN,cAA6B,YAAY;AAAA,EArDhD,OAqDgD;AAAA;AAAA;AAAA;AAAA,EAE5C,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,kBAAN,cAA8B,YAAY;AAAA,EA7DjD,OA6DiD;AAAA;AAAA;AAAA,EAC7C;AAAA;AAAA,EAEA,YAAY,SAASC,SAAQ;AACzB,UAAM,OAAO;AACb,SAAK,SAASA;AACd,SAAK,OAAO;AAAA,EAChB;AACJ;AAUO,IAAM,uBAAN,cAAmC,YAAY;AAAA,EA/EtD,OA+EsD;AAAA;AAAA;AAAA;AAAA,EAElD,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,gBAAN,cAA4B,YAAY;AAAA,EAvF/C,OAuF+C;AAAA;AAAA;AAAA;AAAA,EAE3C,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,IAAM,cAAN,cAA0B,YAAY;AAAA,EA/F7C,OA+F6C;AAAA;AAAA;AAAA;AAAA,EAEzC,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EAChB;AACJ;;;ADpGO,SAAS,OAAO,OAAO;AAC1B,MAAI,OAAO,UAAU,UAAU;AAC3B,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,QAAQ;AACnC;AALgB;AAMT,SAAS,UAAU,OAAO;AAC7B,MAAI,UAAU,QAAQ,UAAU,QAAW;AACvC,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,gBAAgB;AAC3C;AARgB;AAST,SAAS,OAAO,OAAO;AAC1B,MAAI,OAAO,UAAU,UAAU;AAC3B,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,QAAQ;AACnC;AALgB;AAMT,SAAS,QAAQ,OAAO;AAC3B,MAAI,OAAO,UAAU,WAAW;AAC5B,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,SAAS;AACpC;AALgB;AAMT,SAAS,MAAM,OAAO;AACzB,MAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,OAAO;AAClC;AALgB;AAMT,SAAS,OAAO,OAAO;AAC1B,MAAI,UAAU,QAAQ,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AACtE,WAAO;AAAA,EACX;AACA,QAAM,UAAU,OAAO,QAAQ;AACnC;AALgB;AAMT,SAAS,gBAAgB,OAAO,KAAK;AACxC,SAAO,MAAM,KAAK,EAAE,IAAI,CAAC,cAAc,IAAI,OAAO,SAAS,CAAC,CAAC;AACjE;AAFgB;AAGhB,SAAS,UAAU,OAAO,UAAU;AAChC,MAAI,UAAU,QAAW;AACrB,WAAO,IAAI,WAAW,YAAY,QAAQ,gCAAgC;AAAA,EAC9E;AACA,MAAI,WAAW,OAAO;AACtB,MAAI,UAAU,MAAM;AAChB,eAAW;AAAA,EACf,WACS,MAAM,QAAQ,KAAK,GAAG;AAC3B,eAAW;AAAA,EACf;AACA,SAAO,IAAI,WAAW,YAAY,QAAQ,cAAc,QAAQ,EAAE;AACtE;AAZS;AAaF,SAAS,eAAe,OAAO,KAAK;AACvC,SAAO,IAAI,OAAO,KAAK,CAAC;AAC5B;AAFgB;;;AExDhB;AAAA;AAAAC;AAAO,IAAM,eAAN,MAAmB;AAAA,EAA1B,OAA0B;AAAA;AAAA;AAAA,EACtB;AAAA,EACA;AAAA,EACA,YAAY,QAAQ;AAChB,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,KAAK,GAAG;AACrB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,MAAM;AACF,SAAK,QAAQ,KAAK,GAAG;AACrB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,KAAK,MAAM;AACP,QAAI,KAAK,UAAU;AACf,WAAK,QAAQ,KAAK,GAAG;AACrB,WAAK,WAAW;AAAA,IACpB,OACK;AACD,WAAK,QAAQ,KAAK,IAAI;AAAA,IAC1B;AACA,SAAK,QAAQ,KAAK,IAAI;AACtB,SAAK,QAAQ,KAAK,IAAI;AAAA,EAC1B;AAAA,EACA,OAAO,MAAM,OAAO;AAChB,SAAK,KAAK,IAAI;AACd,SAAK,QAAQ,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,EAC3C;AAAA,EACA,UAAU,MAAM,OAAO;AACnB,SAAK,KAAK,IAAI;AACd,SAAK,QAAQ,KAAK,GAAG;AACrB,SAAK,QAAQ,KAAK,KAAK;AACvB,SAAK,QAAQ,KAAK,GAAG;AAAA,EACzB;AAAA,EACA,OAAO,MAAM,OAAO;AAChB,SAAK,KAAK,IAAI;AACd,SAAK,QAAQ,KAAK,KAAK,KAAK;AAAA,EAChC;AAAA,EACA,QAAQ,MAAM,OAAO;AACjB,SAAK,KAAK,IAAI;AACd,SAAK,QAAQ,KAAK,QAAQ,SAAS,OAAO;AAAA,EAC9C;AAAA,EACA,OAAO,MAAM,OAAO,UAAU;AAC1B,SAAK,KAAK,IAAI;AACd,SAAK,MAAM;AACX,aAAS,MAAM,KAAK;AACpB,SAAK,IAAI;AAAA,EACb;AAAA,EACA,aAAa,MAAM,QAAQ,UAAU;AACjC,SAAK,KAAK,IAAI;AACd,SAAK,QAAQ,KAAK,GAAG;AACrB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,UAAI,MAAM,GAAG;AACT,aAAK,QAAQ,KAAK,GAAG;AAAA,MACzB;AACA,WAAK,MAAM;AACX,eAAS,MAAM,OAAO,CAAC,CAAC;AACxB,WAAK,IAAI;AAAA,IACb;AACA,SAAK,QAAQ,KAAK,GAAG;AAAA,EACzB;AACJ;AACO,SAAS,gBAAgB,OAAO,KAAK;AACxC,QAAM,SAAS,CAAC;AAChB,QAAM,SAAS,IAAI,aAAa,MAAM;AACtC,SAAO,MAAM;AACb,MAAI,QAAQ,KAAK;AACjB,SAAO,IAAI;AACX,SAAO,OAAO,KAAK,EAAE;AACzB;AAPgB;;;AChEhB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAO,IAAM,SAAS;AACf,IAAM,WAAW;AACjB,IAAM,mBAAmB;AAGzB,IAAM,WAAW;;;ADHxB,IAAM,gBAAN,MAAoB;AAAA,EAFpB,OAEoB;AAAA;AAAA;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAYC,QAAO;AACf,SAAK,SAASA;AACd,SAAK,QAAQ,IAAI,SAASA,OAAM,QAAQA,OAAM,YAAYA,OAAM,UAAU;AAC1E,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,SAAS;AACL,QAAI,QAAQ;AACZ,aAAS,QAAQ,KAAI,SAAS,GAAG;AAC7B,YAAMC,QAAO,KAAK,OAAO,KAAK,MAAM;AACpC,gBAAUA,QAAO,QAAS;AAC1B,UAAI,EAAEA,QAAO,MAAO;AAChB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,YAAY;AACR,QAAI,QAAQ;AACZ,aAAS,QAAQ,MAAK,SAAS,IAAI;AAC/B,YAAMA,QAAO,KAAK,OAAO,KAAK,MAAM;AACpC,eAAS,OAAOA,QAAO,GAAI,KAAK;AAChC,UAAI,EAAEA,QAAO,MAAO;AAChB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,QAAQ;AACV,UAAMD,SAAQ,IAAI,WAAW,KAAK,OAAO,QAAQ,KAAK,OAAO,aAAa,KAAK,MAAM,MAAM;AAC3F,SAAK,QAAQ;AACb,WAAOA;AAAA,EACX;AAAA,EACA,SAAS;AACL,UAAM,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,IAAI;AACnD,SAAK,QAAQ;AACb,WAAO;AAAA,EACX;AAAA,EACA,aAAa;AACT,eAAS;AACL,YAAMC,QAAO,KAAK,OAAO,KAAK,MAAM;AACpC,UAAI,EAAEA,QAAO,MAAO;AAChB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,KAAKC,QAAO;AACR,SAAK,QAAQA;AAAA,EACjB;AAAA,EACA,MAAM;AACF,WAAO,KAAK,QAAQ,KAAK,OAAO;AAAA,EACpC;AACJ;AACO,IAAM,cAAN,MAAkB;AAAA,EA1DzB,OA0DyB;AAAA;AAAA;AAAA,EACrB;AAAA,EACA;AAAA,EACA,YAAY,QAAQ;AAChB,SAAK,UAAU;AACf,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,MAAM,UAAU;AACZ,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,QAAQ,kBAAkB;AACtB,QAAI,KAAK,cAAc,kBAAkB;AACrC,YAAM,IAAI,WAAW,sBAAsB,gBAAgB,SAAS,KAAK,SAAS,EAAE;AAAA,IACxF;AACA,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,gBAAgB;AAC7B,UAAM,SAAS,KAAK,QAAQ,OAAO;AACnC,WAAO,KAAK,QAAQ,MAAM,MAAM;AAAA,EACpC;AAAA,EACA,SAAS;AACL,WAAO,IAAI,YAAY,EAAE,OAAO,KAAK,MAAM,CAAC;AAAA,EAChD;AAAA,EACA,QAAQ,KAAK;AACT,WAAO,oBAAoB,KAAK,MAAM,GAAG,GAAG;AAAA,EAChD;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,MAAM;AACnB,WAAO,KAAK,QAAQ,OAAO;AAAA,EAC/B;AAAA,EACA,SAAS;AACL,WAAO,KAAK,MAAM;AAAA,EACtB;AAAA,EACA,OAAO;AACH,WAAO,KAAK,MAAM,MAAM;AAAA,EAC5B;AAAA,EACA,SAAS;AACL,SAAK,QAAQ,MAAM;AACnB,WAAO,KAAK,QAAQ,UAAU;AAAA,EAClC;AAAA,EACA,SAAS;AACL,UAAM,QAAQ,KAAK,OAAO;AAC1B,WAAQ,SAAS,KAAO,EAAE,QAAQ;AAAA,EACtC;AAAA,EACA,SAAS;AACL,SAAK,QAAQ,QAAQ;AACrB,WAAO,KAAK,QAAQ,OAAO;AAAA,EAC/B;AAAA,EACA,YAAY;AACR,QAAI,KAAK,YAAY,GAAG;AACpB;AAAA,IACJ,WACS,KAAK,cAAc,QAAQ;AAChC,WAAK,QAAQ,WAAW;AAAA,IAC5B,WACS,KAAK,cAAc,UAAU;AAClC,WAAK,QAAQ,KAAK,CAAC;AAAA,IACvB,WACS,KAAK,cAAc,kBAAkB;AAC1C,YAAM,SAAS,KAAK,QAAQ,OAAO;AACnC,WAAK,QAAQ,KAAK,MAAM;AAAA,IAC5B,WACS,KAAK,cAAc,UAAU;AAClC,WAAK,QAAQ,KAAK,CAAC;AAAA,IACvB,OACK;AACD,YAAM,IAAI,WAAW,wBAAwB,KAAK,SAAS,EAAE;AAAA,IACjE;AACA,SAAK,YAAY;AAAA,EACrB;AACJ;AACO,SAAS,oBAAoB,MAAM,KAAK;AAC3C,QAAM,YAAY,IAAI,cAAc,IAAI;AACxC,QAAM,cAAc,IAAI,YAAY,SAAS;AAC7C,MAAI,QAAQ,IAAI,QAAQ;AACxB,SAAO,CAAC,UAAU,IAAI,GAAG;AACrB,UAAM,MAAM,UAAU,OAAO;AAC7B,UAAM,MAAM,OAAO;AACnB,UAAM,WAAW,MAAM;AACvB,gBAAY,MAAM,QAAQ;AAC1B,UAAM,SAAS,IAAI,GAAG;AACtB,QAAI,WAAW,QAAW;AACtB,YAAM,gBAAgB,OAAO,aAAa,KAAK;AAC/C,UAAI,kBAAkB,QAAW;AAC7B,gBAAQ;AAAA,MACZ;AAAA,IACJ;AACA,gBAAY,UAAU;AAAA,EAC1B;AACA,SAAO;AACX;AAnBgB;;;AElIhB;AAAA;AAAAC;AACO,IAAM,gBAAN,MAAM,eAAc;AAAA,EAD3B,OAC2B;AAAA;AAAA;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AACV,SAAK,OAAO,IAAI,YAAY,GAAG;AAC/B,SAAK,SAAS,IAAI,WAAW,KAAK,IAAI;AACtC,SAAK,QAAQ,IAAI,SAAS,KAAK,IAAI;AACnC,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,QAAQ,OAAO;AACX,QAAI,KAAK,OAAO,SAAS,KAAK,KAAK,YAAY;AAC3C;AAAA,IACJ;AACA,QAAI,SAAS,KAAK,KAAK;AACvB,WAAO,SAAS,KAAK,OAAO,OAAO;AAC/B,gBAAU;AAAA,IACd;AACA,UAAM,SAAS,IAAI,YAAY,MAAM;AACrC,UAAM,WAAW,IAAI,WAAW,MAAM;AACtC,UAAM,UAAU,IAAI,SAAS,MAAM;AACnC,aAAS,IAAI,IAAI,WAAW,KAAK,MAAM,GAAG,KAAK,IAAI,CAAC;AACpD,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,QAAQ,OAAO;AACX,SAAK,QAAQ,CAAC;AACd,YAAQ,IAAI;AACZ,OAAG;AACC,UAAIC,QAAO,QAAQ;AACnB,iBAAW;AACX,MAAAA,SAAS,QAAQ,MAAO;AACxB,WAAK,OAAO,KAAK,MAAM,IAAIA;AAAA,IAC/B,SAAS;AAAA,EACb;AAAA,EACA,WAAW,OAAO;AACd,SAAK,QAAQ,EAAE;AACf,YAAQ,QAAQ;AAChB,OAAG;AACC,UAAIA,QAAO,OAAO,QAAQ,KAAK;AAC/B,gBAAU;AACV,MAAAA,SAAS,QAAQ,MAAO;AACxB,WAAK,OAAO,KAAK,MAAM,IAAIA;AAAA,IAC/B,SAAS;AAAA,EACb;AAAA,EACA,KAAK,KAAK,UAAU;AAChB,SAAK,QAAS,OAAO,IAAK,QAAQ;AAAA,EACtC;AAAA,EACA,MAAM,KAAK,OAAO;AACd,SAAK,KAAK,KAAK,gBAAgB;AAC/B,SAAK,QAAQ,MAAM,UAAU;AAC7B,SAAK,QAAQ,MAAM,UAAU;AAC7B,SAAK,OAAO,IAAI,OAAO,KAAK,IAAI;AAChC,SAAK,QAAQ,MAAM;AAAA,EACvB;AAAA,EACA,OAAO,KAAK,OAAO;AACf,SAAK,MAAM,KAAK,IAAI,YAAY,EAAE,OAAO,KAAK,CAAC;AAAA,EACnD;AAAA,EACA,QAAQ,KAAK,OAAO,KAAK;AACrB,UAAM,SAAS,IAAI,eAAc;AACjC,QAAI,QAAQ,KAAK;AACjB,SAAK,MAAM,KAAK,OAAO,KAAK,CAAC;AAAA,EACjC;AAAA,EACA,MAAM,KAAK,OAAO;AACd,SAAK,KAAK,KAAK,MAAM;AACrB,SAAK,QAAQ,KAAK;AAAA,EACtB;AAAA,EACA,OAAO,KAAK,OAAO;AACf,SAAK,MAAM,KAAK,KAAK;AAAA,EACzB;AAAA,EACA,KAAK,KAAK,OAAO;AACb,SAAK,MAAM,KAAK,QAAQ,IAAI,CAAC;AAAA,EACjC;AAAA,EACA,OAAO,KAAK,OAAO;AACf,SAAK,KAAK,KAAK,MAAM;AACrB,SAAK,WAAY,SAAS,KAAO,SAAS,GAAI;AAAA,EAClD;AAAA,EACA,OAAO,KAAK,OAAO;AACf,SAAK,KAAK,KAAK,QAAQ;AACvB,SAAK,QAAQ,CAAC;AACd,SAAK,MAAM,WAAW,KAAK,MAAM,OAAO,IAAI;AAC5C,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,OAAO;AACH,WAAO,IAAI,WAAW,KAAK,MAAM,GAAG,KAAK,IAAI;AAAA,EACjD;AACJ;AACO,SAAS,qBAAqB,OAAO,KAAK;AAC7C,QAAM,IAAI,IAAI,cAAc;AAC5B,MAAI,GAAG,KAAK;AACZ,SAAO,EAAE,KAAK;AAClB;AAJgB;;;AC1FhB;AAAA;AAAAC;AAQO,IAAM,UAAN,MAAc;AAAA,EARrB,OAQqB;AAAA;AAAA;AAAA;AAAA,EAEjB;AAAA;AAAA,EAEA;AAAA,EACA,cAAc;AACV,SAAK,WAAW,oBAAI,IAAI;AACxB,SAAK,WAAW,oBAAI,IAAI;AAAA,EAC5B;AAAA;AAAA,EAEA,QAAQ;AAEJ,eAAWC,WAAU,KAAK,UAAU;AAChC,WAAK,SAAS,OAAOA,OAAM;AAC3B,WAAK,SAAS,IAAIA,OAAM;AAExB,UAAI,CAAC,KAAK,SAAS,IAAI,KAAK,SAAS,OAAO,CAAC,GAAG;AAC5C,aAAK,SAAS,IAAI,KAAK,SAAS,OAAO,CAAC;AAAA,MAC5C;AACA,aAAOA;AAAA,IACX;AAIA,UAAM,SAAS,KAAK,SAAS;AAC7B,SAAK,SAAS,IAAI,MAAM;AACxB,WAAO;AAAA,EACX;AAAA,EACA,KAAK,IAAI;AACL,QAAI,CAAC,KAAK,SAAS,OAAO,EAAE,GAAG;AAC3B,YAAM,IAAI,cAAc,qCAAqC;AAAA,IACjE;AAEA,SAAK,SAAS,OAAO,KAAK,SAAS,IAAI;AACvC,QAAI,KAAK,KAAK,SAAS,MAAM;AACzB,WAAK,SAAS,IAAI,EAAE;AAAA,IACxB;AAAA,EACJ;AACJ;;;AC9CA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AACO,SAAS,WAAW,OAAO,SAAS;AACvC,QAAM,IAAI,cAAc,OAAO;AACnC;AAFgB;;;ADCT,SAAS,aAAa,OAAO;AAChC,MAAI,UAAU,MAAM;AAChB,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,QAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AACzB,YAAM,IAAI,WAAW,sEAAsE;AAAA,IAC/F;AACA,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,QAAI,QAAQ,cAAc,QAAQ,YAAY;AAC1C,YAAM,IAAI,WAAW,6FAA6F;AAAA,IACtH;AACA,WAAO;AAAA,EACX,WACS,OAAO,UAAU,WAAW;AACjC,WAAO,QAAQ,KAAK;AAAA,EACxB,WACS,iBAAiB,aAAa;AACnC,WAAO,IAAI,WAAW,KAAK;AAAA,EAC/B,WACS,iBAAiB,YAAY;AAClC,WAAO;AAAA,EACX,WACS,iBAAiB,MAAM;AAC5B,WAAO,CAAC,MAAM,QAAQ;AAAA,EAC1B,WACS,OAAO,UAAU,UAAU;AAChC,WAAO,KAAK,MAAM,SAAS;AAAA,EAC/B,OACK;AACD,UAAM,IAAI,UAAU,2BAA2B;AAAA,EACnD;AACJ;AArCgB;AAsChB,IAAM,aAAa,CAAC;AACpB,IAAM,aAAa;AACZ,SAAS,eAAe,OAAO,SAAS;AAC3C,MAAI,UAAU,MAAM;AAChB,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,QAAI,YAAY,UAAU;AACtB,YAAM,MAAM,OAAO,KAAK;AACxB,UAAI,CAAC,OAAO,cAAc,GAAG,GAAG;AAC5B,cAAM,IAAI,WAAW,qFAAqF;AAAA,MAC9G;AACA,aAAO;AAAA,IACX,WACS,YAAY,UAAU;AAC3B,aAAO;AAAA,IACX,WACS,YAAY,UAAU;AAC3B,aAAO,KAAK;AAAA,IAChB,OACK;AACD,YAAM,IAAI,YAAY,2BAA2B;AAAA,IACrD;AAAA,EACJ,WACS,iBAAiB,YAAY;AAIlC,WAAO,MAAM,MAAM,EAAE;AAAA,EACzB,WACS,UAAU,QAAW;AAC1B,UAAM,IAAI,WAAW,qCAAqC;AAAA,EAC9D,OACK;AACD,UAAM,WAAW,OAAO,0BAA0B;AAAA,EACtD;AACJ;AAxCgB;;;ADxCT,SAAS,oBAAoB,QAAQ;AACxC,SAAO;AAAA,IACH,kBAAkB,OAAO;AAAA,IACzB,iBAAiB,OAAO;AAAA,IACxB,aAAa,OAAO,KAAK,IAAI,SAAO,IAAI,IAAI;AAAA,IAC5C,iBAAiB,OAAO,KAAK,IAAI,SAAO,IAAI,QAAQ;AAAA,EACxD;AACJ;AAPgB;AAQT,SAAS,oBAAoB,QAAQ,SAAS;AACjD,QAAM,aAAa,oBAAoB,MAAM;AAC7C,QAAM,OAAO,OAAO,KAAK,IAAI,SAAO,aAAa,WAAW,aAAa,KAAK,OAAO,CAAC;AACtF,SAAO,EAAE,GAAG,YAAY,KAAK;AACjC;AAJgB;AAKT,SAAS,mBAAmB,QAAQ,SAAS;AAChD,QAAM,aAAa,oBAAoB,MAAM;AAC7C,MAAI;AACJ,MAAI,OAAO,KAAK,SAAS,GAAG;AACxB,UAAM,aAAa,WAAW,aAAa,OAAO,KAAK,CAAC,GAAG,OAAO;AAAA,EACtE;AACA,SAAO,EAAE,GAAG,YAAY,IAAI;AAChC;AAPgB;AAQT,SAAS,qBAAqB,QAAQ,SAAS;AAClD,QAAM,aAAa,oBAAoB,MAAM;AAC7C,MAAI;AACJ,MAAI,OAAO,KAAK,SAAS,KAAK,WAAW,YAAY,SAAS,GAAG;AAC7D,YAAQ,eAAe,OAAO,KAAK,CAAC,EAAE,CAAC,GAAG,OAAO;AAAA,EACrD;AACA,SAAO,EAAE,GAAG,YAAY,MAAM;AAClC;AAPgB;AAQhB,SAAS,aAAa,UAAU,QAAQ,SAAS;AAC7C,QAAM,MAAM,CAAC;AAEb,SAAO,eAAe,KAAK,UAAU,EAAE,OAAO,OAAO,OAAO,CAAC;AAC7D,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,UAAM,QAAQ,eAAe,OAAO,CAAC,GAAG,OAAO;AAC/C,WAAO,eAAe,KAAK,GAAG,EAAE,MAAM,CAAC;AACvC,UAAM,UAAU,SAAS,CAAC;AAC1B,QAAI,YAAY,UAAa,CAAC,OAAO,OAAO,KAAK,OAAO,GAAG;AACvD,aAAO,eAAe,KAAK,SAAS,EAAE,OAAO,YAAY,MAAM,cAAc,MAAM,UAAU,KAAK,CAAC;AAAA,IACvG;AAAA,EACJ;AACA,SAAO;AACX;AAbS;AAcF,SAAS,eAAeC,QAAO;AAClC,SAAO,IAAI,cAAcA,OAAM,SAASA,MAAK;AACjD;AAFgB;;;AG7ChB;AAAA;AAAAC;AAEO,IAAM,MAAN,MAAU;AAAA,EAFjB,OAEiB;AAAA;AAAA;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,OAAO,OAAO;AACtB,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA,EAEA,UAAU,OAAO;AACb,QAAI,KAAK,WAAW,OAAO;AACvB,YAAM,IAAI,YAAY,oDAAoD;AAAA,IAC9E,WACS,KAAK,YAAY,QAAW;AACjC,YAAM,IAAI,YAAY,sBAAsB,KAAK,OAAO;AAAA,IAC5D;AACA,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,8BAA8B,CAAC;AAAA,EACnE;AAAA;AAAA,EAEA,WAAWC,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B,WAAK,UAAUA;AACf,WAAK,OAAO,UAAU,KAAK,MAAM;AAAA,IACrC;AAAA,EACJ;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY;AAAA,EAC5B;AACJ;AACO,SAAS,WAAW,OAAOC,MAAK;AACnC,MAAIA,gBAAe,KAAK;AACpB,WAAO,EAAE,OAAOA,KAAI,UAAU,KAAK,EAAE;AAAA,EACzC,OACK;AACD,WAAO,EAAE,KAAK,KAAKA,KAAI;AAAA,EAC3B;AACJ;AAPgB;;;ACtChB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAO,IAAM,QAAN,MAAY;AAAA,EAAnB,OAAmB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA,cAAc;AACV,SAAK,aAAa,CAAC;AACnB,SAAK,cAAc,CAAC;AAAA,EACxB;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,WAAW,SAAS,KAAK,YAAY;AAAA,EACrD;AAAA,EACA,KAAK,MAAM;AACP,SAAK,WAAW,KAAK,IAAI;AAAA,EAC7B;AAAA,EACA,QAAQ;AACJ,QAAI,KAAK,YAAY,WAAW,KAAK,KAAK,WAAW,SAAS,GAAG;AAC7D,WAAK,cAAc,KAAK,WAAW,QAAQ;AAC3C,WAAK,aAAa,CAAC;AAAA,IACvB;AACA,WAAO,KAAK,YAAY,IAAI;AAAA,EAChC;AAAA,EACA,QAAQ;AACJ,WAAO,KAAK,YAAY,WAAW,IAC7B,KAAK,YAAY,KAAK,YAAY,SAAS,CAAC,IAC5C,KAAK,WAAW,CAAC;AAAA,EAC3B;AACJ;;;ACzBA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAIO,IAAM,OAAN,MAAW;AAAA,EAJlB,OAIkB;AAAA;AAAA;AAAA;AAAA,EAEd;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAYC,MAAK;AACb,SAAK,MAAMA;AACX,SAAK,QAAQ,CAAC;AACd,SAAK,aAAa,oBAAI,IAAI;AAAA,EAC9B;AAAA;AAAA,EAEA,YAAY,QAAQ;AAChB,SAAK,MAAM,SAAS;AACpB,eAAW,SAAS,QAAQ;AACxB,WAAK,MAAM,KAAK,aAAa,KAAK,CAAC;AAAA,IACvC;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,UAAU,OAAO,OAAO;AACpB,QAAI,WAAW,QAAQ,MAAM,SAAS,GAAG;AACrC,YAAM,IAAI,WAAW,yDAAyD;AAAA,IAClF;AACA,WAAO,KAAK,MAAM,SAAS,OAAO;AAC9B,WAAK,MAAM,KAAK,IAAI;AAAA,IACxB;AACA,SAAK,MAAM,QAAQ,CAAC,IAAI,aAAa,KAAK;AAC1C,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,SAAS,MAAM,OAAO;AAClB,SAAK,WAAW,IAAI,MAAM,aAAa,KAAK,CAAC;AAC7C,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,YAAY;AACR,SAAK,MAAM,SAAS;AACpB,SAAK,WAAW,MAAM;AACtB,WAAO;AAAA,EACX;AACJ;AACO,SAAS,YAAY,UAAU,MAAM,UAAU;AAClD,MAAI;AACJ,MAAI,OAAO,CAAC;AACZ,MAAI,YAAY,CAAC;AACjB,MAAI,gBAAgB,MAAM;AACtB,YAAQ,KAAK;AACb,WAAO,KAAK;AACZ,eAAW,CAAC,MAAM,KAAK,KAAK,KAAK,WAAW,QAAQ,GAAG;AACnD,gBAAU,KAAK,EAAE,MAAM,MAAM,CAAC;AAAA,IAClC;AAAA,EACJ,WACS,MAAM,QAAQ,IAAI,GAAG;AAC1B,YAAQ,KAAK,CAAC;AACd,QAAI,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG;AACxB,aAAO,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,aAAa,GAAG,CAAC;AAAA,IACjD,OACK;AACD,kBAAY,OAAO,QAAQ,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM;AACvD,eAAO,EAAE,MAAM,OAAO,aAAa,KAAK,EAAE;AAAA,MAC9C,CAAC;AAAA,IACL;AAAA,EACJ,OACK;AACD,YAAQ;AAAA,EACZ;AACA,QAAM,EAAE,KAAAA,MAAK,MAAM,IAAI,WAAW,UAAU,KAAK;AACjD,SAAO,EAAE,KAAAA,MAAK,OAAO,MAAM,WAAW,SAAS;AACnD;AA3BgB;;;AD3CT,IAAM,QAAN,MAAY;AAAA,EALnB,OAKmB;AAAA;AAAA;AAAA;AAAA,EAEf;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,WAAW;AAC3B,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,SAAS,CAAC;AACf,SAAK,YAAY;AAAA,EACrB;AAAA;AAAA,EAEA,OAAO;AACH,WAAO,IAAI,UAAU,IAAI;AAAA,EAC7B;AAAA;AAAA,EAEA,UAAU;AACN,QAAI,KAAK,WAAW;AAChB,YAAM,IAAI,YAAY,sCAAsC;AAAA,IAChE;AACA,SAAK,YAAY;AACjB,UAAM,QAAQ;AAAA,MACV,OAAO,KAAK,OAAO,IAAI,CAAC,SAAS,KAAK,KAAK;AAAA,IAC/C;AACA,QAAI,KAAK,YAAY;AACjB,aAAO,cAAc,KAAK,SAAS,KAAK,QAAQ,KAAK;AAAA,IACzD,OACK;AACD,aAAO,eAAe,KAAK,SAAS,KAAK,QAAQ,KAAK;AAAA,IAC1D;AAAA,EACJ;AACJ;AACA,SAAS,eAAe,QAAQ,OAAO,OAAO;AAC1C,SAAO,OAAO,OAAO,KAAK,EAAE,KAAK,CAAC,WAAW;AACzC,aAAS,OAAO,GAAG,OAAO,MAAM,QAAQ,EAAE,MAAM;AAC5C,YAAM,aAAa,OAAO,YAAY,IAAI,IAAI;AAC9C,YAAM,YAAY,OAAO,WAAW,IAAI,IAAI;AAC5C,YAAM,IAAI,EAAE,SAAS,YAAY,SAAS;AAAA,IAC9C;AAAA,EACJ,CAAC;AACL;AARS;AAST,eAAe,cAAc,QAAQ,OAAO,OAAO;AAC/C,QAAM,SAAS,MAAM,OAAO,YAAY,KAAK;AAC7C,MAAI;AACA,QAAI,WAAW;AACf,QAAI,aAAa;AACjB,QAAI,OAAO,CAAC;AACZ,eAAS;AACL,YAAM,QAAQ,MAAM,OAAO,KAAK;AAChC,UAAI,UAAU,QAAW;AACrB;AAAA,MACJ;AACA,UAAI,MAAM,SAAS,cAAc;AAC7B,YAAI,MAAM,OAAO,YAAY,MAAM,QAAQ,MAAM,QAAQ;AACrD,gBAAM,IAAI,WAAW,oDAAoD;AAAA,QAC7E,WACS,eAAe,QAAW;AAC/B,gBAAM,IAAI,WAAW,iEAAiE;AAAA,QAC1F;AACA,iBAAS,OAAO,UAAU,OAAO,MAAM,MAAM,EAAE,MAAM;AACjD,gBAAM,IAAI,EAAE,SAAS,QAAW,MAAS;AAAA,QAC7C;AACA,mBAAW,MAAM,OAAO;AACxB,qBAAa;AACb,eAAO,CAAC;AAAA,MACZ,WACS,MAAM,SAAS,YAAY;AAChC,YAAI,eAAe,QAAW;AAC1B,gBAAM,IAAI,WAAW,oDAAoD;AAAA,QAC7E;AACA,cAAM,aAAa;AAAA,UACf,MAAM,WAAW;AAAA,UACjB;AAAA,UACA,kBAAkB,MAAM;AAAA,UACxB,iBAAiB,MAAM;AAAA,QAC3B;AACA,cAAM,WAAW,IAAI,EAAE,SAAS,YAAY,MAAS;AACrD,qBAAa;AACb,eAAO,CAAC;AAAA,MACZ,WACS,MAAM,SAAS,cAAc;AAClC,YAAI,eAAe,QAAW;AAC1B,cAAI,MAAM,QAAQ,MAAM,QAAQ;AAC5B,kBAAM,IAAI,WAAW,oDAAoD;AAAA,UAC7E;AACA,mBAAS,OAAO,UAAU,OAAO,MAAM,MAAM,EAAE,MAAM;AACjD,kBAAM,IAAI,EAAE,SAAS,QAAW,MAAS;AAAA,UAC7C;AAAA,QACJ,OACK;AACD,cAAI,MAAM,SAAS,WAAW,MAAM;AAChC,kBAAM,IAAI,WAAW,oDAAoD;AAAA,UAC7E;AACA,uBAAa;AACb,iBAAO,CAAC;AAAA,QACZ;AACA,cAAM,MAAM,IAAI,EAAE,SAAS,QAAW,MAAM,KAAK;AACjD,mBAAW,MAAM,OAAO;AAAA,MAC5B,WACS,MAAM,SAAS,OAAO;AAC3B,YAAI,eAAe,QAAW;AAC1B,gBAAM,IAAI,WAAW,gDAAgD;AAAA,QACzE;AACA,aAAK,KAAK,MAAM,GAAG;AAAA,MACvB,WACS,MAAM,SAAS,SAAS;AAC7B,cAAM,eAAe,MAAM,KAAK;AAAA,MACpC,WACS,MAAM,SAAS,QAAQ;AAC5B,cAAM,IAAI,WAAW,0CAA0C;AAAA,MACnE,OACK;AACD,cAAM,WAAW,OAAO,wBAAwB;AAAA,MACpD;AAAA,IACJ;AACA,QAAI,eAAe,QAAW;AAC1B,YAAM,IAAI,WAAW,qDAAqD;AAAA,IAC9E;AACA,aAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,EAAE,MAAM;AACnD,YAAM,IAAI,EAAE,SAAS,QAAW,MAAS;AAAA,IAC7C;AAAA,EACJ,UACA;AACI,WAAO,MAAM;AAAA,EACjB;AACJ;AApFe;AAsFR,IAAM,YAAN,MAAgB;AAAA,EAvIvB,OAuIuB;AAAA;AAAA;AAAA;AAAA,EAEnB;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAY,OAAO;AACf,SAAK,SAAS;AACd,SAAK,SAAS,CAAC;AACf,SAAK,SAAS;AAAA,EAClB;AAAA;AAAA;AAAA,EAGA,UAAU,MAAM;AACZ,SAAK,OAAO,KAAK,KAAK,MAAM;AAC5B,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,MAAM,MAAM;AACR,WAAO,KAAK,KAAK,MAAM,MAAM,mBAAmB;AAAA,EACpD;AAAA;AAAA,EAEA,SAAS,MAAM;AACX,WAAO,KAAK,KAAK,MAAM,MAAM,kBAAkB;AAAA,EACnD;AAAA;AAAA,EAEA,WAAW,MAAM;AACb,WAAO,KAAK,KAAK,MAAM,MAAM,oBAAoB;AAAA,EACrD;AAAA;AAAA,EAEA,IAAI,MAAM;AACN,WAAO,KAAK,KAAK,MAAM,OAAO,mBAAmB;AAAA,EACrD;AAAA,EACA,KAAK,QAAQ,UAAU,WAAW;AAC9B,QAAI,KAAK,WAAW,QAAW;AAC3B,YAAM,IAAI,YAAY,oDAAoD;AAAA,IAC9E;AACA,UAAM,OAAO,YAAY,KAAK,OAAO,QAAQ,UAAU,GAAG,QAAQ,QAAQ;AAC1E,QAAI;AACJ,QAAI,KAAK,OAAO,WAAW,GAAG;AAC1B,kBAAY;AAAA,IAChB,WACS,KAAK,OAAO,WAAW,GAAG;AAC/B,kBAAY,KAAK,OAAO,CAAC;AAAA,IAC7B,OACK;AACD,kBAAY,EAAE,MAAM,OAAO,OAAO,KAAK,OAAO,MAAM,EAAE;AAAA,IAC1D;AACA,UAAM,QAAQ,EAAE,MAAM,UAAU;AAChC,WAAO,IAAI,QAAQ,CAAC,gBAAgB,kBAAkB;AAClD,YAAM,WAAW,wBAAC,YAAY,cAAc;AACxC,YAAI,eAAe,UAAa,cAAc,QAAW;AACrD,wBAAc,IAAI,WAAW,uCAAuC,CAAC;AAAA,QACzE,WACS,cAAc,QAAW;AAC9B,wBAAc,eAAe,SAAS,CAAC;AAAA,QAC3C,WACS,eAAe,QAAW;AAC/B,yBAAe,UAAU,YAAY,KAAK,OAAO,QAAQ,OAAO,CAAC;AAAA,QACrE,OACK;AACD,yBAAe,MAAS;AAAA,QAC5B;AAAA,MACJ,GAbiB;AAcjB,WAAK,SAAS,KAAK,OAAO,OAAO;AACjC,WAAK,OAAO,OAAO,KAAK,EAAE,OAAO,SAAS,CAAC;AAAA,IAC/C,CAAC;AAAA,EACL;AACJ;AACO,IAAM,YAAN,MAAM,WAAU;AAAA,EA7MvB,OA6MuB;AAAA;AAAA;AAAA;AAAA,EAEnB;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAY,OAAO,OAAO;AACtB,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,GAAG,MAAM;AACZ,WAAO,IAAI,WAAU,KAAK,QAAQ,EAAE,MAAM,MAAM,MAAM,UAAU,IAAI,EAAE,CAAC;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,MAAM,MAAM;AACf,WAAO,IAAI,WAAU,KAAK,QAAQ,EAAE,MAAM,SAAS,MAAM,UAAU,IAAI,EAAE,CAAC;AAAA,EAC9E;AAAA;AAAA;AAAA,EAGA,OAAO,IAAI,MAAM;AACb,WAAO,IAAI,WAAU,KAAK,QAAQ,EAAE,MAAM,OAAO,MAAM,KAAK,OAAO,CAAC;AAAA,EACxE;AAAA;AAAA;AAAA,EAGA,OAAO,IAAI,OAAO,OAAO;AACrB,eAAW,QAAQ,OAAO;AACtB,qBAAe,OAAO,IAAI;AAAA,IAC9B;AACA,WAAO,IAAI,WAAU,OAAO,EAAE,MAAM,OAAO,OAAO,MAAM,IAAI,OAAK,EAAE,MAAM,EAAE,CAAC;AAAA,EAChF;AAAA;AAAA;AAAA,EAGA,OAAO,GAAG,OAAO,OAAO;AACpB,eAAW,QAAQ,OAAO;AACtB,qBAAe,OAAO,IAAI;AAAA,IAC9B;AACA,WAAO,IAAI,WAAU,OAAO,EAAE,MAAM,MAAM,OAAO,MAAM,IAAI,OAAK,EAAE,MAAM,EAAE,CAAC;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,aAAa,OAAO;AACvB,UAAM,QAAQ,OAAO,EAAE,eAAe,GAAG,0BAA0B;AACnE,WAAO,IAAI,WAAU,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAAA,EACzD;AACJ;AACA,SAAS,UAAU,MAAM;AACrB,MAAI,KAAK,WAAW,QAAW;AAC3B,UAAM,IAAI,YAAY,gFAAgF;AAAA,EAC1G;AACA,SAAO,KAAK;AAChB;AALS;AAMT,SAAS,eAAe,eAAe,MAAM;AACzC,MAAI,KAAK,WAAW,eAAe;AAC/B,UAAM,IAAI,YAAY,0DAA0D;AAAA,EACpF;AACJ;AAJS;;;AE1QT;AAAA;AAAAC;AAAO,SAAS,wBAAwB,QAAQ;AAC5C,SAAO;AAAA,IACH,YAAY,OAAO,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,IAC3C,SAAS,OAAO;AAAA,IAChB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,EACvB;AACJ;AAPgB;;;AHMT,IAAM,SAAN,MAAa;AAAA,EANpB,OAMoB;AAAA;AAAA;AAAA;AAAA,EAEhB,YAAY,SAAS;AACjB,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA,EAEA,MAAM,MAAM;AACR,WAAO,KAAK,SAAS,MAAM,MAAM,mBAAmB;AAAA,EACxD;AAAA;AAAA,EAEA,SAAS,MAAM;AACX,WAAO,KAAK,SAAS,MAAM,MAAM,kBAAkB;AAAA,EACvD;AAAA;AAAA,EAEA,WAAW,MAAM;AACb,WAAO,KAAK,SAAS,MAAM,MAAM,oBAAoB;AAAA,EACzD;AAAA;AAAA,EAEA,IAAI,MAAM;AACN,WAAO,KAAK,SAAS,MAAM,OAAO,mBAAmB;AAAA,EACzD;AAAA,EACA,SAAS,QAAQ,UAAU,WAAW;AAClC,UAAM,OAAO,YAAY,KAAK,UAAU,GAAG,QAAQ,QAAQ;AAC3D,WAAO,KAAK,SAAS,IAAI,EAAE,KAAK,CAAC,MAAM,UAAU,GAAG,KAAK,OAAO,CAAC;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,YAAY,OAAO;AACrB,WAAO,IAAI,MAAM,MAAM,SAAS;AAAA,EACpC;AAAA;AAAA,EAEA,SAAS,OAAO;AACZ,UAAM,WAAW,WAAW,KAAK,UAAU,GAAG,KAAK;AACnD,WAAO,KAAK,UAAU,QAAQ,EAAE,KAAK,uBAAuB;AAAA,EAChE;AAAA;AAAA;AAAA,EAGA,SAAS,OAAO;AACZ,UAAM,WAAW,WAAW,KAAK,UAAU,GAAG,KAAK;AACnD,WAAO,KAAK,UAAU,QAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AACJ;;;AIxDA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAO,IAAM,SAAN,MAAa;AAAA,EAApB,OAAoB;AAAA;AAAA;AACpB;;;ADEA,IAAM,iBAAiB;AACvB,IAAM,iBAAiB;AAChB,IAAM,WAAN,cAAuB,OAAO;AAAA,EALrC,OAKqC;AAAA;AAAA;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,QAAQ,UAAU;AAClC,UAAM;AACN,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,cAAc,IAAI,MAAM;AAC7B,SAAK,cAAc,IAAI,MAAM;AAC7B,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA;AAAA,EAEA,MAAM,OAAO;AACT,eAAS;AACL,UAAI,KAAK,YAAY,QAAW;AAC5B,cAAM,IAAI,YAAY,oBAAoB,KAAK,OAAO;AAAA,MAC1D;AACA,aAAO,CAAC,KAAK,SAAS,KAAK,YAAY,SAAS,gBAAgB;AAC5D,aAAK,YAAY,KAAK,KAAK,OAAO,CAAC;AAAA,MACvC;AACA,YAAM,QAAQ,KAAK,YAAY,MAAM;AACrC,UAAI,KAAK,SAAS,UAAU,QAAW;AACnC,eAAO;AAAA,MACX;AAEA,YAAM,KAAK,YAAY,MAAM,EAAE,KAAK,CAAC,aAAa;AAC9C,YAAI,aAAa,QAAW;AACxB;AAAA,QACJ;AACA,mBAAWC,UAAS,SAAS,SAAS;AAClC,eAAK,YAAY,KAAKA,MAAK;AAAA,QAC/B;AACA,aAAK,UAAU,SAAS;AAAA,MAC5B,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,SAAS;AACL,WAAO,KAAK,QAAQ,mBAAmB,MAAM;AAAA,MACzC,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU;AAAA,IACd,CAAC,EAAE,KAAK,CAAC,SAAS,MAAM,CAACC,WAAU;AAC/B,WAAK,WAAWA,MAAK;AACrB,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,WAAWA,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,SAAK,QAAQ,mBAAmB,MAAM;AAAA,MAClC,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,IACnB,CAAC,EAAE,MAAM,MAAM,MAAS;AACxB,SAAK,QAAQ,cAAc,IAAI;AAAA,EACnC;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY;AAAA,EAC5B;AACJ;;;AN3EO,IAAM,WAAN,MAAM,kBAAiB,OAAO;AAAA,EAJrC,OAIqC;AAAA;AAAA;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,OAAO,KAAK,QAAQ;AAChB,UAAM,WAAW,OAAO,eAAe,MAAM;AAC7C,UAAM,SAAS,IAAI,UAAS,QAAQ,QAAQ;AAC5C,UAAM,mBAAmB,6BAAM,QAAN;AACzB,UAAM,gBAAgB,wBAAC,MAAM,OAAO,WAAW,CAAC,GAA1B;AACtB,UAAM,UAAU,EAAE,MAAM,eAAe,SAAS;AAChD,WAAO,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAChE,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,YAAY,QAAQ,UAAU;AAC1B,UAAM,OAAO,OAAO;AACpB,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,SAAS,IAAI,MAAM;AACxB,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA,EAEA,SAAS;AACL,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,YAAY;AACR,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,SAAS,MAAM;AACX,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf;AAAA,IACJ,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,OAAO,OAAO;AACV,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf;AAAA,IACJ,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,UAAU,UAAU;AAChB,SAAK,QAAQ,eAAe,GAAG,YAAY;AAC3C,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,KAAK,SAAS;AAAA,MACd,OAAO,SAAS;AAAA,IACpB,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,UAAU,UAAU;AAChB,SAAK,QAAQ,eAAe,GAAG,YAAY;AAC3C,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,KAAK,SAAS;AAAA,MACd,OAAO,SAAS;AAAA,IACpB,CAAC,EAAE,KAAK,CAAC,cAAc;AACnB,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB;AACZ,SAAK,QAAQ,eAAe,GAAG,iBAAiB;AAChD,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,IACnB,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA,EACA,mBAAmB,SAAS;AACxB,WAAO,IAAI,QAAQ,CAAC,kBAAkB,kBAAkB;AACpD,WAAK,aAAa,EAAE,MAAM,WAAW,SAAS,kBAAkB,cAAc,CAAC;AAAA,IACnF,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,YAAY,OAAO;AACf,SAAK,QAAQ,eAAe,GAAG,QAAQ;AACvC,WAAO,IAAI,QAAQ,CAAC,gBAAgB,kBAAkB;AAClD,WAAK,aAAa,EAAE,MAAM,UAAU,OAAO,gBAAgB,cAAc,CAAC;AAAA,IAC9E,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,mBAAmB,QAAQ,SAAS;AAChC,QAAI,WAAW,KAAK,SAAS;AACzB,YAAM,IAAI,cAAc,sEAAsE;AAAA,IAClG;AACA,WAAO,IAAI,QAAQ,CAAC,kBAAkB,kBAAkB;AACpD,UAAI,KAAK,YAAY,QAAW;AAC5B,sBAAc,IAAI,YAAY,oBAAoB,KAAK,OAAO,CAAC;AAAA,MACnE,OACK;AACD,aAAK,QAAQ,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAAA,MAC1E;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,cAAc,QAAQ;AAClB,QAAI,WAAW,KAAK,SAAS;AACzB,YAAM,IAAI,cAAc,8DAA8D;AAAA,IAC1F;AACA,SAAK,UAAU;AACf,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,aAAa,OAAO;AAChB,QAAI,KAAK,YAAY,QAAW;AAC5B,YAAM,cAAc,IAAI,YAAY,oBAAoB,KAAK,OAAO,CAAC;AAAA,IACzE,WACS,KAAK,UAAU;AACpB,YAAM,cAAc,IAAI,YAAY,qBAAqB,MAAS,CAAC;AAAA,IACvE,OACK;AACD,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK,YAAY;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,cAAc;AACV,eAAS;AACL,YAAM,QAAQ,KAAK,OAAO,MAAM;AAChC,UAAI,UAAU,UAAa,KAAK,YAAY,UAAa,KAAK,UAAU;AACpE,aAAK,WAAW,IAAI,YAAY,8BAA8B,CAAC;AAC/D;AAAA,MACJ,WACS,OAAO,SAAS,aAAa,KAAK,YAAY,QAAW;AAC9D,cAAM,EAAE,SAAS,kBAAkB,cAAc,IAAI;AACrD,aAAK,OAAO,MAAM;AAClB,aAAK,QAAQ,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAAA,MAC1E,WACS,OAAO,SAAS,YAAY,KAAK,YAAY,QAAW;AAC7D,cAAM,EAAE,OAAO,eAAe,IAAI;AAClC,aAAK,OAAO,MAAM;AAClB,cAAM,WAAW,KAAK,QAAQ,eAAe,MAAM;AACnD,cAAM,SAAS,IAAI,SAAS,KAAK,SAAS,MAAM,QAAQ;AACxD,cAAM,UAAU;AAAA,UACZ,MAAM;AAAA,UACN,UAAU,KAAK;AAAA,UACf;AAAA,UACA;AAAA,QACJ;AACA,cAAM,mBAAmB,6BAAM,QAAN;AACzB,cAAM,gBAAgB,wBAAC,MAAM,OAAO,WAAW,CAAC,GAA1B;AACtB,aAAK,QAAQ,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AACtE,aAAK,UAAU;AACf,uBAAe,MAAM;AAAA,MACzB,OACK;AACD;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAWC,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,QAAI,KAAK,YAAY,QAAW;AAC5B,WAAK,QAAQ,WAAWA,MAAK;AAAA,IACjC;AACA,eAAS;AACL,YAAM,QAAQ,KAAK,OAAO,MAAM;AAChC,UAAI,UAAU,QAAW;AACrB,cAAM,cAAcA,MAAK;AAAA,MAC7B,OACK;AACD;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,UAAU,EAAE,MAAM,gBAAgB,UAAU,KAAK,UAAU;AACjE,UAAM,mBAAmB,6BAAM,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,GAArD;AACzB,UAAM,gBAAgB,6BAAM,QAAN;AACtB,SAAK,QAAQ,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAAA,EAC1E;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,kBAAkB;AACd,SAAK,WAAW;AAChB,SAAK,YAAY;AAAA,EACrB;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY,UAAa,KAAK;AAAA,EAC9C;AACJ;;;AQlNA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAEO,SAASC,MAAK,GAAG,KAAK;AACzB,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,OAAO,IAAI,GAAG;AAAA,EAC3B;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,OAAO,UAAU,IAAI,KAAK;AAAA,EAChC;AACA,IAAE,aAAa,QAAQ,IAAI,MAAM,KAAK;AACtC,IAAE,aAAa,cAAc,IAAI,WAAW,QAAQ;AACpD,IAAE,QAAQ,aAAa,IAAI,QAAQ;AACvC;AAVgB,OAAAA,OAAA;AAWhB,SAAS,SAAS,GAAG,KAAK;AACtB,IAAE,OAAO,QAAQ,IAAI,IAAI;AACzB,IAAE,OAAO,SAAS,IAAI,OAAO,KAAK;AACtC;AAHS;AAIF,SAASC,OAAM,GAAG,KAAK;AAC1B,IAAE,aAAa,SAAS,IAAI,OAAOC,UAAS;AAChD;AAFgB,OAAAD,QAAA;AAGhB,SAASC,WAAU,GAAG,KAAK;AACvB,MAAI,IAAI,cAAc,QAAW;AAC7B,MAAE,OAAO,aAAa,IAAI,WAAWC,UAAS;AAAA,EAClD;AACA,IAAE,OAAO,QAAQ,IAAI,MAAMH,KAAI;AACnC;AALS,OAAAE,YAAA;AAMT,SAASC,WAAU,GAAG,KAAK;AACvB,IAAE,UAAU,QAAQ,IAAI,IAAI;AAC5B,MAAI,IAAI,SAAS,QAAQ,IAAI,SAAS,SAAS;AAC3C,MAAE,OAAO,QAAQ,IAAI,IAAI;AAAA,EAC7B,WACS,IAAI,SAAS,OAAO;AACzB,MAAE,OAAO,QAAQ,IAAI,MAAMA,UAAS;AAAA,EACxC,WACS,IAAI,SAAS,SAAS,IAAI,SAAS,MAAM;AAC9C,MAAE,aAAa,SAAS,IAAI,OAAOA,UAAS;AAAA,EAChD,WACS,IAAI,SAAS,iBAAiB;AAAA,EAEvC,OACK;AACD,UAAM,WAAW,KAAK,8BAA8B;AAAA,EACxD;AACJ;AAjBS,OAAAA,YAAA;AAkBT,SAAS,MAAM,GAAG,KAAK;AACnB,MAAI,QAAQ,MAAM;AACd,MAAE,UAAU,QAAQ,MAAM;AAAA,EAC9B,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,UAAU,QAAQ,SAAS;AAC7B,MAAE,UAAU,SAAS,KAAK,GAAG;AAAA,EACjC,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,UAAU,QAAQ,OAAO;AAC3B,MAAE,OAAO,SAAS,GAAG;AAAA,EACzB,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,UAAU,QAAQ,MAAM;AAC1B,MAAE,OAAO,SAAS,GAAG;AAAA,EACzB,WACS,eAAe,YAAY;AAChC,MAAE,UAAU,QAAQ,MAAM;AAC1B,MAAE,UAAU,UAAU,QAAO,eAAe,GAAG,CAAC;AAAA,EACpD,WACS,QAAQ,QAAW;AAAA,EAE5B,OACK;AACD,UAAM,WAAW,KAAK,0BAA0B;AAAA,EACpD;AACJ;AA1BS;;;AD1CF,SAAS,UAAU,GAAG,KAAK;AAC9B,IAAE,UAAU,QAAQ,IAAI,IAAI;AAC5B,MAAI,IAAI,SAAS,SAAS;AACtB,QAAI,IAAI,QAAQ,QAAW;AACvB,QAAE,OAAO,OAAO,IAAI,GAAG;AAAA,IAC3B;AAAA,EACJ,WACS,IAAI,SAAS,WAAW;AAC7B,MAAE,OAAO,cAAc,IAAI,SAAS;AACpC,MAAE,OAAO,WAAW,IAAI,SAASC,QAAO;AAAA,EAC5C,OACK;AACD,UAAM,WAAW,KAAK,8BAA8B;AAAA,EACxD;AACJ;AAdgB;AAehB,SAASA,SAAQ,GAAG,KAAK;AACrB,IAAE,UAAU,QAAQ,IAAI,IAAI;AAC5B,MAAI,IAAI,SAAS,eAAe;AAC5B,MAAE,OAAO,aAAa,IAAI,QAAQ;AAAA,EACtC,WACS,IAAI,SAAS,gBAAgB;AAClC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAAA,EACtC,WACS,IAAI,SAAS,WAAW;AAC7B,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,MAAE,OAAO,QAAQ,IAAI,MAAMC,KAAI;AAAA,EACnC,WACS,IAAI,SAAS,SAAS;AAC3B,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,MAAE,OAAO,SAAS,IAAI,OAAOC,MAAK;AAAA,EACtC,WACS,IAAI,SAAS,eAAe;AACjC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,MAAE,OAAO,SAAS,IAAI,OAAOA,MAAK;AAAA,EACtC,WACS,IAAI,SAAS,gBAAgB;AAClC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAAA,EACtC,WACS,IAAI,SAAS,gBAAgB;AAClC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAAA,EACtC,WACS,IAAI,SAAS,YAAY;AAC9B,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,QAAI,IAAI,QAAQ,QAAW;AACvB,QAAE,OAAO,OAAO,IAAI,GAAG;AAAA,IAC3B;AACA,QAAI,IAAI,UAAU,QAAW;AACzB,QAAE,OAAO,UAAU,IAAI,KAAK;AAAA,IAChC;AAAA,EACJ,WACS,IAAI,SAAS,YAAY;AAC9B,MAAE,OAAO,aAAa,IAAI,QAAQ;AAClC,QAAI,IAAI,QAAQ,QAAW;AACvB,QAAE,OAAO,OAAO,IAAI,GAAG;AAAA,IAC3B;AACA,QAAI,IAAI,UAAU,QAAW;AACzB,QAAE,OAAO,UAAU,IAAI,KAAK;AAAA,IAChC;AAAA,EACJ,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,OAAO,UAAU,IAAI,KAAK;AAC5B,MAAE,OAAO,OAAO,IAAI,GAAG;AAAA,EAC3B,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,OAAO,UAAU,IAAI,KAAK;AAAA,EAChC,WACS,IAAI,SAAS,kBAAkB;AACpC,MAAE,OAAO,aAAa,IAAI,QAAQ;AAAA,EACtC,OACK;AACD,UAAM,WAAW,KAAK,4BAA4B;AAAA,EACtD;AACJ;AA3DS,OAAAF,UAAA;;;AEjBT;AAAA;AAAAG;;;ACAA;AAAA;AAAAC;AACO,SAASC,MAAK,GAAG,KAAK;AACzB,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,MAAM,GAAG,IAAI,KAAK;AAAA,EACxB;AACA,aAAW,OAAO,IAAI,MAAM;AACxB,MAAE,QAAQ,GAAG,KAAKC,MAAK;AAAA,EAC3B;AACA,aAAW,OAAO,IAAI,WAAW;AAC7B,MAAE,QAAQ,GAAG,KAAKC,SAAQ;AAAA,EAC9B;AACA,IAAE,KAAK,GAAG,IAAI,QAAQ;AAC1B;AAdgB,OAAAF,OAAA;AAehB,SAASE,UAAS,GAAG,KAAK;AACtB,IAAE,OAAO,GAAG,IAAI,IAAI;AACpB,IAAE,QAAQ,GAAG,IAAI,OAAOD,MAAK;AACjC;AAHS,OAAAC,WAAA;AAIF,SAASC,OAAM,GAAG,KAAK;AAC1B,aAAW,QAAQ,IAAI,OAAO;AAC1B,MAAE,QAAQ,GAAG,MAAMC,UAAS;AAAA,EAChC;AACJ;AAJgB,OAAAD,QAAA;AAKhB,SAASC,WAAU,GAAG,KAAK;AACvB,MAAI,IAAI,cAAc,QAAW;AAC7B,MAAE,QAAQ,GAAG,IAAI,WAAWC,UAAS;AAAA,EACzC;AACA,IAAE,QAAQ,GAAG,IAAI,MAAML,KAAI;AAC/B;AALS,OAAAI,YAAA;AAMT,SAASC,WAAU,GAAG,KAAK;AACvB,MAAI,IAAI,SAAS,MAAM;AACnB,MAAE,OAAO,GAAG,IAAI,IAAI;AAAA,EACxB,WACS,IAAI,SAAS,SAAS;AAC3B,MAAE,OAAO,GAAG,IAAI,IAAI;AAAA,EACxB,WACS,IAAI,SAAS,OAAO;AACzB,MAAE,QAAQ,GAAG,IAAI,MAAMA,UAAS;AAAA,EACpC,WACS,IAAI,SAAS,OAAO;AACzB,MAAE,QAAQ,GAAG,IAAI,OAAO,aAAa;AAAA,EACzC,WACS,IAAI,SAAS,MAAM;AACxB,MAAE,QAAQ,GAAG,IAAI,OAAO,aAAa;AAAA,EACzC,WACS,IAAI,SAAS,iBAAiB;AACnC,MAAE,QAAQ,GAAG,QAAW,KAAK;AAAA,EACjC,OACK;AACD,UAAM,WAAW,KAAK,8BAA8B;AAAA,EACxD;AACJ;AAtBS,OAAAA,YAAA;AAuBT,SAAS,cAAc,GAAG,KAAK;AAC3B,aAAW,QAAQ,KAAK;AACpB,MAAE,QAAQ,GAAG,MAAMA,UAAS;AAAA,EAChC;AACJ;AAJS;AAKT,SAASJ,OAAM,GAAG,KAAK;AACnB,MAAI,QAAQ,MAAM;AACd,MAAE,QAAQ,GAAG,QAAW,KAAK;AAAA,EACjC,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,OAAO,GAAG,GAAG;AAAA,EACnB,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,OAAO,GAAG,GAAG;AAAA,EACnB,WACS,OAAO,QAAQ,UAAU;AAC9B,MAAE,OAAO,GAAG,GAAG;AAAA,EACnB,WACS,eAAe,YAAY;AAChC,MAAE,MAAM,GAAG,GAAG;AAAA,EAClB,WACS,QAAQ,QAAW;AAAA,EAE5B,OACK;AACD,UAAM,WAAW,KAAK,0BAA0B;AAAA,EACpD;AACJ;AAtBS,OAAAA,QAAA;AAuBT,SAAS,MAAM,IAAI,MAAM;AAEzB;AAFS;;;ADhFF,SAASK,WAAU,GAAG,KAAK;AAC9B,MAAI,IAAI,SAAS,SAAS;AACtB,MAAE,QAAQ,GAAG,KAAK,QAAQ;AAAA,EAC9B,WACS,IAAI,SAAS,WAAW;AAC7B,MAAE,QAAQ,GAAG,KAAK,UAAU;AAAA,EAChC,OACK;AACD,UAAM,WAAW,KAAK,8BAA8B;AAAA,EACxD;AACJ;AAVgB,OAAAA,YAAA;AAWhB,SAAS,SAAS,GAAG,KAAK;AACtB,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACJ;AAJS;AAKT,SAAS,WAAW,GAAG,KAAK;AACxB,IAAE,MAAM,GAAG,IAAI,SAAS;AACxB,QAAM,UAAU,IAAI;AACpB,MAAI,QAAQ,SAAS,eAAe;AAChC,MAAE,QAAQ,GAAG,SAAS,aAAa;AAAA,EACvC,WACS,QAAQ,SAAS,gBAAgB;AACtC,MAAE,QAAQ,GAAG,SAAS,cAAc;AAAA,EACxC,WACS,QAAQ,SAAS,WAAW;AACjC,MAAE,QAAQ,GAAG,SAAS,UAAU;AAAA,EACpC,WACS,QAAQ,SAAS,SAAS;AAC/B,MAAE,QAAQ,GAAG,SAAS,QAAQ;AAAA,EAClC,WACS,QAAQ,SAAS,eAAe;AACrC,MAAE,QAAQ,GAAG,SAAS,aAAa;AAAA,EACvC,WACS,QAAQ,SAAS,gBAAgB;AACtC,MAAE,QAAQ,GAAG,SAAS,cAAc;AAAA,EACxC,WACS,QAAQ,SAAS,gBAAgB;AACtC,MAAE,QAAQ,GAAG,SAAS,cAAc;AAAA,EACxC,WACS,QAAQ,SAAS,YAAY;AAClC,MAAE,QAAQ,GAAG,SAAS,WAAW;AAAA,EACrC,WACS,QAAQ,SAAS,YAAY;AAClC,MAAE,QAAQ,IAAI,SAAS,WAAW;AAAA,EACtC,WACS,QAAQ,SAAS,aAAa;AACnC,MAAE,QAAQ,IAAI,SAAS,WAAW;AAAA,EACtC,WACS,QAAQ,SAAS,aAAa;AACnC,MAAE,QAAQ,IAAI,SAAS,WAAW;AAAA,EACtC,WACS,QAAQ,SAAS,kBAAkB;AACxC,MAAE,QAAQ,IAAI,SAAS,gBAAgB;AAAA,EAC3C,OACK;AACD,UAAM,WAAW,SAAS,4BAA4B;AAAA,EAC1D;AACJ;AA1CS;AA2CT,SAAS,cAAc,GAAG,KAAK;AAC3B,IAAE,MAAM,GAAG,IAAI,QAAQ;AAC3B;AAFS;AAGT,SAAS,eAAe,GAAG,KAAK;AAC5B,IAAE,MAAM,GAAG,IAAI,QAAQ;AAC3B;AAFS;AAGT,SAAS,WAAW,GAAG,KAAK;AACxB,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,IAAE,QAAQ,GAAG,IAAI,MAAMC,KAAI;AAC/B;AAHS;AAIT,SAAS,SAAS,GAAG,KAAK;AACtB,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,IAAE,QAAQ,GAAG,IAAI,OAAOC,MAAK;AACjC;AAHS;AAIT,SAAS,cAAc,GAAG,KAAK;AAC3B,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,IAAE,QAAQ,GAAG,IAAI,OAAOA,MAAK;AACjC;AAJS;AAKT,SAAS,eAAe,GAAG,KAAK;AAC5B,IAAE,MAAM,GAAG,IAAI,QAAQ;AAC3B;AAFS;AAGT,SAAS,eAAe,GAAG,KAAK;AAC5B,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,IAAE,OAAO,GAAG,IAAI,QAAQ;AAC5B;AAHS;AAIT,SAAS,YAAY,GAAG,KAAK;AACzB,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,MAAM,GAAG,IAAI,KAAK;AAAA,EACxB;AACJ;AARS;AAST,SAAS,YAAY,GAAG,KAAK;AACzB,IAAE,MAAM,GAAG,IAAI,QAAQ;AACvB,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,MAAM,GAAG,IAAI,KAAK;AAAA,EACxB;AACJ;AARS;AAST,SAAS,YAAY,GAAG,KAAK;AACzB,IAAE,MAAM,GAAG,IAAI,KAAK;AACpB,IAAE,OAAO,GAAG,IAAI,GAAG;AACvB;AAHS;AAIT,SAAS,YAAY,GAAG,KAAK;AACzB,IAAE,MAAM,GAAG,IAAI,KAAK;AACxB;AAFS;AAGT,SAAS,iBAAiB,GAAG,KAAK;AAC9B,IAAE,MAAM,GAAG,IAAI,QAAQ;AAC3B;AAFS;;;AEhHT;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGO,SAASC,OAAM,KAAK;AACvB,QAAM,UAAY,OAAO,IAAI,SAAS,CAAC;AACvC,QAAM,OAAS,UAAU,IAAI,MAAM,CAAC;AACpC,SAAO,EAAE,SAAS,KAAK;AAC3B;AAJgB,OAAAA,QAAA;AAKT,SAAS,WAAW,KAAK;AAC5B,QAAM,OAAS,gBAAgB,IAAI,MAAM,GAAG,GAAG;AAC/C,QAAM,OAAS,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,WAAa,gBAAgB,QAAQC,MAAK,CAAC;AAClF,QAAM,mBAAqB,OAAO,IAAI,oBAAoB,CAAC;AAC3D,QAAM,qBAAuB,UAAU,IAAI,mBAAmB,CAAC;AAC/D,QAAM,kBAAkB,uBAAuB,SACzC,OAAO,kBAAkB,IAAI;AACnC,SAAO,EAAE,MAAM,MAAM,kBAAkB,gBAAgB;AAC3D;AARgB;AAShB,SAAS,IAAI,KAAK;AACd,QAAM,OAAS,UAAU,IAAI,MAAM,CAAC;AACpC,QAAM,WAAa,UAAU,IAAI,UAAU,CAAC;AAC5C,SAAO,EAAE,MAAM,SAAS;AAC5B;AAJS;AAKF,SAAS,YAAY,KAAK;AAC7B,QAAM,cAAc,oBAAI,IAAI;AAC5B,EAAE,MAAM,IAAI,cAAc,CAAC,EAAE,QAAQ,CAAC,OAAO,MAAM;AAC/C,QAAI,UAAU,MAAM;AAChB,kBAAY,IAAI,GAAG,WAAa,OAAO,KAAK,CAAC,CAAC;AAAA,IAClD;AAAA,EACJ,CAAC;AACD,QAAM,aAAa,oBAAI,IAAI;AAC3B,EAAE,MAAM,IAAI,aAAa,CAAC,EAAE,QAAQ,CAAC,OAAO,MAAM;AAC9C,QAAI,UAAU,MAAM;AAChB,iBAAW,IAAI,GAAGD,OAAQ,OAAO,KAAK,CAAC,CAAC;AAAA,IAC5C;AAAA,EACJ,CAAC;AACD,SAAO,EAAE,aAAa,WAAW;AACrC;AAdgB;AAeT,SAAS,YAAY,KAAK;AAC7B,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,cAAc;AACvB,UAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,UAAM,OAAS,gBAAgB,IAAI,MAAM,GAAG,GAAG;AAC/C,WAAO,EAAE,MAAM,cAAc,MAAM,KAAK;AAAA,EAC5C,WACS,SAAS,YAAY;AAC1B,UAAM,mBAAqB,OAAO,IAAI,oBAAoB,CAAC;AAC3D,UAAM,qBAAuB,UAAU,IAAI,mBAAmB,CAAC;AAC/D,UAAM,kBAAkB,uBAAuB,SACzC,OAAO,kBAAkB,IAAI;AACnC,WAAO,EAAE,MAAM,YAAY,kBAAkB,gBAAgB;AAAA,EACjE,WACS,SAAS,cAAc;AAC5B,UAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,UAAME,SAAQF,OAAQ,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,WAAO,EAAE,MAAM,cAAc,MAAM,OAAAE,OAAM;AAAA,EAC7C,WACS,SAAS,OAAO;AACrB,UAAM,MAAQ,gBAAgB,IAAI,KAAK,GAAGD,MAAK;AAC/C,WAAO,EAAE,MAAM,OAAO,IAAI;AAAA,EAC9B,WACS,SAAS,SAAS;AACvB,UAAMC,SAAQF,OAAQ,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,WAAO,EAAE,MAAM,SAAS,OAAAE,OAAM;AAAA,EAClC,OACK;AACD,UAAM,IAAI,WAAW,gCAAgC;AAAA,EACzD;AACJ;AA9BgB;AA+BT,SAAS,eAAe,KAAK;AAChC,QAAM,SAAW,gBAAgB,IAAI,QAAQ,GAAG,aAAa;AAC7D,QAAM,OAAS,gBAAgB,IAAI,MAAM,GAAG,WAAW;AACvD,QAAM,YAAc,QAAQ,IAAI,YAAY,CAAC;AAC7C,QAAM,aAAe,QAAQ,IAAI,aAAa,CAAC;AAC/C,SAAO,EAAE,QAAQ,MAAM,WAAW,WAAW;AACjD;AANgB;AAOhB,SAAS,cAAc,KAAK;AACxB,QAAM,OAAS,UAAU,IAAI,MAAM,CAAC;AACpC,SAAO,EAAE,KAAK;AAClB;AAHS;AAIT,SAAS,YAAY,KAAK;AACtB,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,QAAM,WAAa,UAAU,IAAI,UAAU,CAAC;AAC5C,SAAO,EAAE,MAAM,SAAS;AAC5B;AAJS;AAKF,SAASD,OAAM,KAAK;AACvB,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,QAAQ;AACjB,WAAO;AAAA,EACX,WACS,SAAS,WAAW;AACzB,UAAM,QAAU,OAAO,IAAI,OAAO,CAAC;AACnC,WAAO,OAAO,KAAK;AAAA,EACvB,WACS,SAAS,SAAS;AACvB,WAAS,OAAO,IAAI,OAAO,CAAC;AAAA,EAChC,WACS,SAAS,QAAQ;AACtB,WAAS,OAAO,IAAI,OAAO,CAAC;AAAA,EAChC,WACS,SAAS,QAAQ;AACtB,WAAO,QAAO,aAAe,OAAO,IAAI,QAAQ,CAAC,CAAC;AAAA,EACtD,OACK;AACD,UAAM,IAAI,WAAW,0BAA0B;AAAA,EACnD;AACJ;AArBgB,OAAAA,QAAA;;;ADjFT,SAAS,UAAU,KAAK;AAC3B,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,YAAY;AACrB,WAAO,EAAE,MAAM,WAAW;AAAA,EAC9B,WACS,SAAS,eAAe;AAC7B,UAAME,SAAQC,OAAQ,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,WAAO,EAAE,MAAM,eAAe,OAAAD,OAAM;AAAA,EACxC,WACS,SAAS,eAAe;AAC7B,UAAM,YAAc,OAAO,IAAI,YAAY,CAAC;AAC5C,UAAM,WAAWE,UAAW,OAAO,IAAI,UAAU,CAAC,CAAC;AACnD,WAAO,EAAE,MAAM,eAAe,WAAW,SAAS;AAAA,EACtD,WACS,SAAS,kBAAkB;AAChC,UAAM,YAAc,OAAO,IAAI,YAAY,CAAC;AAC5C,UAAMF,SAAQC,OAAQ,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,WAAO,EAAE,MAAM,kBAAkB,WAAW,OAAAD,OAAM;AAAA,EACtD,OACK;AACD,UAAM,IAAI,WAAW,8BAA8B;AAAA,EACvD;AACJ;AAtBgB;AAuBhB,SAASE,UAAS,KAAK;AACnB,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,eAAe;AACxB,WAAO,EAAE,MAAM,cAAc;AAAA,EACjC,WACS,SAAS,gBAAgB;AAC9B,WAAO,EAAE,MAAM,eAAe;AAAA,EAClC,WACS,SAAS,WAAW;AACzB,UAAM,SAAS,WAAa,OAAO,IAAI,QAAQ,CAAC,CAAC;AACjD,WAAO,EAAE,MAAM,WAAW,OAAO;AAAA,EACrC,WACS,SAAS,SAAS;AACvB,UAAM,SAAS,YAAc,OAAO,IAAI,QAAQ,CAAC,CAAC;AAClD,WAAO,EAAE,MAAM,SAAS,OAAO;AAAA,EACnC,WACS,SAAS,eAAe;AAC7B,WAAO,EAAE,MAAM,cAAc;AAAA,EACjC,WACS,SAAS,gBAAgB;AAC9B,WAAO,EAAE,MAAM,eAAe;AAAA,EAClC,WACS,SAAS,gBAAgB;AAC9B,UAAM,UAAY,gBAAgB,IAAI,SAAS,GAAG,WAAW;AAC7D,UAAM,OAAS,QAAQ,IAAI,MAAM,CAAC;AAClC,WAAO,EAAE,MAAM,gBAAgB,SAAS,KAAK;AAAA,EACjD,WACS,SAAS,YAAY;AAC1B,WAAO,EAAE,MAAM,WAAW;AAAA,EAC9B,WACS,SAAS,YAAY;AAC1B,UAAM,SAAS,eAAiB,OAAO,IAAI,QAAQ,CAAC,CAAC;AACrD,WAAO,EAAE,MAAM,YAAY,OAAO;AAAA,EACtC,WACS,SAAS,aAAa;AAC3B,WAAO,EAAE,MAAM,YAAY;AAAA,EAC/B,WACS,SAAS,aAAa;AAC3B,WAAO,EAAE,MAAM,YAAY;AAAA,EAC/B,WACS,SAAS,kBAAkB;AAChC,UAAM,eAAiB,QAAQ,IAAI,eAAe,CAAC;AACnD,WAAO,EAAE,MAAM,kBAAkB,aAAa;AAAA,EAClD,OACK;AACD,UAAM,IAAI,WAAW,6BAA6B;AAAA,EACtD;AACJ;AA/CS,OAAAA,WAAA;;;AE1BT;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAO,IAAMC,SAAQ;AAAA,EACjB,UAAU;AAAE,WAAO,EAAE,SAAS,IAAI,MAAM,OAAU;AAAA,EAAG;AAAA,EACrD,EAAE,GAAG,KAAK;AAAE,QAAI,UAAU,EAAE,OAAO;AAAA,EAAG;AAAA,EACtC,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AACvC;AACO,IAAMC,cAAa;AAAA,EACtB,UAAU;AACN,WAAO;AAAA,MACH,MAAM,CAAC;AAAA,MACP,MAAM,CAAC;AAAA,MACP,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,EAAE,GAAG,KAAK;AAAE,QAAI,KAAK,KAAK,EAAE,QAAQC,IAAG,CAAC;AAAA,EAAG;AAAA,EAC3C,EAAE,GAAG,KAAK;AAAE,QAAI,KAAK,KAAK,EAAE,QAAQ,GAAG,CAAC;AAAA,EAAG;AAAA,EAC3C,EAAE,GAAG,KAAK;AAAE,QAAI,mBAAmB,OAAO,EAAE,OAAO,CAAC;AAAA,EAAG;AAAA,EACvD,EAAE,GAAG,KAAK;AAAE,QAAI,kBAAkB,EAAE,OAAO;AAAA,EAAG;AAClD;AACA,IAAMA,OAAM;AAAA,EACR,UAAU;AAAE,WAAO,EAAE,MAAM,QAAW,UAAU,OAAU;AAAA,EAAG;AAAA,EAC7D,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EACnC,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,OAAO;AAAA,EAAG;AAC3C;AACA,IAAM,MAAM;AAAA,EACR,UAAU;AAAE,WAAO,CAAC;AAAA,EAAG;AAAA,EACvB,EAAE,GAAG,KAAK;AAAE,QAAI,KAAK,EAAE,QAAQC,MAAK,CAAC;AAAA,EAAG;AAC5C;AACO,IAAMC,eAAc;AAAA,EACvB,UAAU;AAAE,WAAO,EAAE,aAAa,oBAAI,IAAI,GAAG,YAAY,oBAAI,IAAI,EAAE;AAAA,EAAG;AAAA,EACtE,EAAE,GAAG,KAAK;AACN,UAAM,CAAC,KAAK,KAAK,IAAI,EAAE,QAAQ,qBAAqB;AACpD,QAAI,YAAY,IAAI,KAAK,KAAK;AAAA,EAClC;AAAA,EACA,EAAE,GAAG,KAAK;AACN,UAAM,CAAC,KAAK,KAAK,IAAI,EAAE,QAAQ,oBAAoB;AACnD,QAAI,WAAW,IAAI,KAAK,KAAK;AAAA,EACjC;AACJ;AACA,IAAM,wBAAwB;AAAA,EAC1B,UAAU;AAAE,WAAO,CAAC,GAAGH,YAAW,QAAQ,CAAC;AAAA,EAAG;AAAA,EAC9C,EAAE,GAAG,KAAK;AAAE,QAAI,CAAC,IAAI,EAAE,OAAO;AAAA,EAAG;AAAA,EACjC,EAAE,GAAG,KAAK;AAAE,QAAI,CAAC,IAAI,EAAE,QAAQA,WAAU;AAAA,EAAG;AAChD;AACA,IAAM,uBAAuB;AAAA,EACzB,UAAU;AAAE,WAAO,CAAC,GAAGD,OAAM,QAAQ,CAAC;AAAA,EAAG;AAAA,EACzC,EAAE,GAAG,KAAK;AAAE,QAAI,CAAC,IAAI,EAAE,OAAO;AAAA,EAAG;AAAA,EACjC,EAAE,GAAG,KAAK;AAAE,QAAI,CAAC,IAAI,EAAE,QAAQA,MAAK;AAAA,EAAG;AAC3C;AACO,IAAMK,eAAc;AAAA,EACvB,UAAU;AAAE,WAAO,EAAE,MAAM,OAAO;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,cAAc;AAAA,EAAG;AAAA,EACzC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,YAAY;AAAA,EAAG;AAAA,EACvC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,cAAc;AAAA,EAAG;AAAA,EACzC,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,OAAO,KAAK,EAAE,QAAQ,GAAG,EAAE;AAAA,EAAG;AAAA,EACpD,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,SAAS,OAAO,EAAE,QAAQL,MAAK,EAAE;AAAA,EAAG;AAC9D;AACA,IAAM,iBAAiB;AAAA,EACnB,UAAU;AAAE,WAAO,EAAE,MAAM,cAAc,MAAM,GAAG,MAAM,CAAC,EAAE;AAAA,EAAG;AAAA,EAC9D,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EACnC,EAAE,GAAG,KAAK;AAAE,QAAI,KAAK,KAAK,EAAE,QAAQE,IAAG,CAAC;AAAA,EAAG;AAC/C;AACA,IAAM,eAAe;AAAA,EACjB,UAAU;AACN,WAAO;AAAA,MACH,MAAM;AAAA,MACN,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,EAAE,GAAG,KAAK;AAAE,QAAI,mBAAmB,EAAE,OAAO;AAAA,EAAG;AAAA,EAC/C,EAAE,GAAG,KAAK;AAAE,QAAI,kBAAkB,EAAE,OAAO;AAAA,EAAG;AAClD;AACA,IAAM,iBAAiB;AAAA,EACnB,UAAU;AACN,WAAO;AAAA,MACH,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAOF,OAAM,QAAQ;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EACnC,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,EAAE,QAAQA,MAAK;AAAA,EAAG;AAC9C;AACO,IAAMM,kBAAiB;AAAA,EAC1B,UAAU;AACN,WAAO;AAAA,MACH,QAAQ,CAAC;AAAA,MACT,MAAM,CAAC;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,IAChB;AAAA,EACJ;AAAA,EACA,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,KAAK,EAAE,QAAQC,cAAa,CAAC;AAAA,EAAG;AAAA,EACvD,EAAE,GAAG,KAAK;AAAE,QAAI,KAAK,KAAK,EAAE,QAAQC,YAAW,CAAC;AAAA,EAAG;AAAA,EACnD,EAAE,GAAG,KAAK;AAAE,QAAI,YAAY,EAAE,KAAK;AAAA,EAAG;AAAA,EACtC,EAAE,GAAG,KAAK;AAAE,QAAI,aAAa,EAAE,KAAK;AAAA,EAAG;AAC3C;AACA,IAAMD,iBAAgB;AAAA,EAClB,UAAU;AAAE,WAAO,EAAE,MAAM,OAAU;AAAA,EAAG;AAAA,EACxC,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AACvC;AACA,IAAMC,eAAc;AAAA,EAChB,UAAU;AAAE,WAAO,EAAE,MAAM,IAAI,UAAU,OAAU;AAAA,EAAG;AAAA,EACtD,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EACnC,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,OAAO;AAAA,EAAG;AAC3C;AACA,IAAML,SAAQ;AAAA,EACV,UAAU;AAAE,WAAO;AAAA,EAAW;AAAA,EAC9B,EAAE,GAAG;AAAE,WAAO;AAAA,EAAM;AAAA,EACpB,EAAE,GAAG;AAAE,WAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EAC1B,EAAE,GAAG;AAAE,WAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EAC1B,EAAE,GAAG;AAAE,WAAO,EAAE,OAAO;AAAA,EAAG;AAAA,EAC1B,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM;AAAA,EAAG;AAC7B;;;ADjHO,IAAMM,aAAY;AAAA,EACrB,UAAU;AAAE,WAAO,EAAE,MAAM,OAAO;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,WAAW;AAAA,EAAG;AAAA,EACpC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,aAAa;AAAA,EAAG;AAAA,EACxC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,aAAa;AAAA,EAAG;AAAA,EACxC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,gBAAgB;AAAA,EAAG;AAC/C;AACA,IAAM,gBAAgB;AAAA,EAClB,UAAU;AAAE,WAAO,EAAE,MAAM,eAAe,OAAOC,OAAM,QAAQ,EAAE;AAAA,EAAG;AAAA,EACpE,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,EAAE,QAAQA,MAAK;AAAA,EAAG;AAC9C;AACA,IAAM,mBAAmB;AAAA,EACrB,UAAU;AAAE,WAAO,EAAE,MAAM,kBAAkB,WAAW,GAAG,OAAOA,OAAM,QAAQ,EAAE;AAAA,EAAG;AAAA,EACrF,EAAE,GAAG,KAAK;AAAE,QAAI,YAAY,EAAE,MAAM;AAAA,EAAG;AAAA,EACvC,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,EAAE,QAAQA,MAAK;AAAA,EAAG;AAC9C;AACA,IAAM,gBAAgB;AAAA,EAClB,UAAU;AACN,WAAO;AAAA,MACH,MAAM;AAAA,MACN,WAAW;AAAA,MACX,UAAU,EAAE,MAAM,OAAO;AAAA,IAC7B;AAAA,EACJ;AAAA,EACA,EAAE,GAAG,KAAK;AAAE,QAAI,YAAY,EAAE,MAAM;AAAA,EAAG;AAAA,EACvC,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,cAAc;AAAA,EAAG;AAAA,EACpD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,eAAe;AAAA,EAAG;AAAA,EACrD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,QAAQ,WAAW;AAAA,EAAG;AAAA,EACnD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,QAAQ,SAAS;AAAA,EAAG;AAAA,EACjD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,cAAc;AAAA,EAAG;AAAA,EACpD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,eAAe;AAAA,EAAG;AAAA,EACrD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,QAAQ,eAAe;AAAA,EAAG;AAAA,EACvD,EAAE,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,WAAW;AAAA,EAAG;AAAA,EACjD,GAAG,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,QAAQ,YAAY;AAAA,EAAG;AAAA,EACrD,GAAG,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,YAAY;AAAA,EAAG;AAAA,EACnD,GAAG,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,MAAM,YAAY;AAAA,EAAG;AAAA,EACnD,GAAG,GAAG,KAAK;AAAE,QAAI,WAAW,EAAE,QAAQ,iBAAiB;AAAA,EAAG;AAC9D;AACA,IAAM,cAAc;AAAA,EAChB,UAAU;AAAE,WAAO,EAAE,MAAM,WAAW,QAAQC,YAAW,QAAQ,EAAE;AAAA,EAAG;AAAA,EACtE,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,WAAU;AAAA,EAAG;AACpD;AACA,IAAM,YAAY;AAAA,EACd,UAAU;AAAE,WAAO,EAAE,MAAM,SAAS,QAAQC,aAAY,QAAQ,EAAE;AAAA,EAAG;AAAA,EACrE,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,YAAW;AAAA,EAAG;AACrD;AACA,IAAM,kBAAkB;AAAA,EACpB,UAAU;AAAE,WAAO,EAAE,MAAM,gBAAgB,SAAS,CAAC,GAAG,MAAM,MAAM;AAAA,EAAG;AAAA,EACvE,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,KAAK,EAAE,QAAQC,YAAW,CAAC;AAAA,EAAG;AAAA,EACtD,EAAE,GAAG,KAAK;AAAE,QAAI,OAAO,EAAE,KAAK;AAAA,EAAG;AACrC;AACA,IAAM,eAAe;AAAA,EACjB,UAAU;AAAE,WAAO,EAAE,MAAM,YAAY,QAAQC,gBAAe,QAAQ,EAAE;AAAA,EAAG;AAAA,EAC3E,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,eAAc;AAAA,EAAG;AACxD;AACA,IAAM,oBAAoB;AAAA,EACtB,UAAU;AAAE,WAAO,EAAE,MAAM,kBAAkB,cAAc,MAAM;AAAA,EAAG;AAAA,EACpE,EAAE,GAAG,KAAK;AAAE,QAAI,eAAe,EAAE,KAAK;AAAA,EAAG;AAC7C;;;A5B/CO,IAAM,iBAAiB,oBAAI,IAAI;AAAA,EAClC,CAAC,UAAU,EAAE,SAAS,GAAG,UAAU,OAAO,CAAC;AAAA,EAC3C,CAAC,UAAU,EAAE,SAAS,GAAG,UAAU,OAAO,CAAC;AAC/C,CAAC;AACM,IAAM,iBAAiB,oBAAI,IAAI;AAAA,EAClC,CAAC,mBAAmB,EAAE,SAAS,GAAG,UAAU,WAAW,CAAC;AAAA,EACxD,CAAC,UAAU,EAAE,SAAS,GAAG,UAAU,OAAO,CAAC;AAAA,EAC3C,CAAC,UAAU,EAAE,SAAS,GAAG,UAAU,OAAO,CAAC;AAAA,EAC3C,CAAC,UAAU,EAAE,SAAS,GAAG,UAAU,OAAO,CAAC;AAC/C,CAAC;AAEM,IAAM,WAAN,cAAuB,OAAO;AAAA,EAvBrC,OAuBqC;AAAA;AAAA;AAAA,EACjC;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAY,QAAQ,KAAK;AACrB,UAAM;AACN,SAAK,UAAU;AACf,SAAK,iBAAiB,CAAC;AACvB,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,oBAAoB;AACzB,SAAK,eAAe,oBAAI,IAAI;AAC5B,SAAK,kBAAkB,IAAI,QAAQ;AACnC,SAAK,iBAAiB,IAAI,QAAQ;AAClC,SAAK,iBAAiB,IAAI,QAAQ;AAClC,SAAK,cAAc,IAAI,QAAQ;AAC/B,SAAK,QAAQ,aAAa;AAC1B,SAAK,QAAQ,iBAAiB,QAAQ,MAAM,KAAK,cAAc,CAAC;AAChE,SAAK,QAAQ,iBAAiB,SAAS,CAAC,UAAU,KAAK,eAAe,KAAK,CAAC;AAC5E,SAAK,QAAQ,iBAAiB,SAAS,CAAC,UAAU,KAAK,eAAe,KAAK,CAAC;AAC5E,SAAK,QAAQ,iBAAiB,WAAW,CAAC,UAAU,KAAK,iBAAiB,KAAK,CAAC;AAChF,SAAK,MAAM,EAAE,MAAM,SAAS,IAAI,CAAC;AAAA,EACrC;AAAA;AAAA,EAEA,MAAM,KAAK;AACP,QAAI,KAAK,YAAY,QAAW;AAC5B,YAAM,IAAI,cAAc,6CAA6C;AAAA,IACzE;AACA,QAAI,KAAK,SAAS;AACd,WAAK,cAAc,GAAG;AAAA,IAC1B,OACK;AACD,YAAM,eAAe,6BAAM,KAAK,cAAc,GAAG,GAA5B;AACrB,YAAM,gBAAgB,6BAAM,QAAN;AACtB,WAAK,eAAe,KAAK,EAAE,cAAc,cAAc,CAAC;AAAA,IAC5D;AAAA,EACJ;AAAA;AAAA,EAEA,gBAAgB;AACZ,UAAM,WAAW,KAAK,QAAQ;AAC9B,QAAI,aAAa,QAAW;AACxB,WAAK,WAAW,IAAI,YAAY,uOAE6B,CAAC;AAC9D;AAAA,IACJ,WACS,aAAa,IAAI;AACtB,WAAK,eAAe,EAAE,SAAS,GAAG,UAAU,OAAO;AAAA,IACvD,OACK;AACD,WAAK,eAAe,eAAe,IAAI,QAAQ;AAC/C,UAAI,KAAK,iBAAiB,QAAW;AACjC,aAAK,WAAW,IAAI,WAAW,uCAAuC,KAAK,UAAU,QAAQ,CAAC,EAAE,CAAC;AACjG;AAAA,MACJ;AAAA,IACJ;AACA,eAAW,aAAa,KAAK,gBAAgB;AACzC,gBAAU,aAAa;AAAA,IAC3B;AACA,SAAK,eAAe,SAAS;AAC7B,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,cAAc,KAAK;AACf,UAAM,WAAW,KAAK,aAAa;AACnC,QAAI,aAAa,QAAQ;AACrB,YAAM,UAAU,gBAAgB,KAAK,SAAc;AACnD,WAAK,QAAQ,KAAK,OAAO;AAAA,IAC7B,WACS,aAAa,YAAY;AAC9B,YAAM,cAAc,qBAAqB,KAAKC,UAAkB;AAChE,WAAK,QAAQ,KAAK,WAAW;AAAA,IACjC,OACK;AACD,YAAM,WAAW,UAAU,qBAAqB;AAAA,IACpD;AAAA,EACJ;AAAA;AAAA,EAEA,aAAa;AACT,WAAO,IAAI,QAAQ,CAAC,iBAAiB,kBAAkB;AACnD,WAAK,oBAAoB;AACzB,UAAI,KAAK,YAAY,QAAW;AAC5B,sBAAc,KAAK,OAAO;AAAA,MAC9B,WACS,CAAC,KAAK,SAAS;AACpB,cAAM,eAAe,6BAAM,gBAAgB,KAAK,aAAa,OAAO,GAA/C;AACrB,aAAK,eAAe,KAAK,EAAE,cAAc,cAAc,CAAC;AAAA,MAC5D,OACK;AACD,wBAAgB,KAAK,aAAa,OAAO;AAAA,MAC7C;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA;AAAA,EAGA,eAAe,YAAY,SAAS;AAChC,QAAI,KAAK,iBAAiB,UAAa,CAAC,KAAK,mBAAmB;AAC5D,YAAM,IAAI,qBAAqB,GAAG,OAAO,0CAA0C,UAAU,kJAExB;AAAA,IACzE,WACS,KAAK,aAAa,UAAU,YAAY;AAC7C,YAAM,IAAI,qBAAqB,GAAG,OAAO,qCAAqC,UAAU,+DAClC,KAAK,aAAa,OAAO,EAAE;AAAA,IACrF;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,aAAa,SAAS,WAAW;AAC7B,QAAI,KAAK,YAAY,QAAW;AAC5B,gBAAU,cAAc,IAAI,YAAY,oBAAoB,KAAK,OAAO,CAAC;AACzE;AAAA,IACJ;AACA,UAAM,YAAY,KAAK,gBAAgB,MAAM;AAC7C,SAAK,aAAa,IAAI,WAAW,EAAE,GAAG,WAAW,MAAM,QAAQ,KAAK,CAAC;AACrE,SAAK,MAAM,EAAE,MAAM,WAAW,WAAW,QAAQ,CAAC;AAAA,EACtD;AAAA;AAAA,EAEA,eAAe,OAAO;AAClB,UAAM,eAAe,MAAM;AAC3B,UAAM,UAAU,gBAAgB;AAChC,SAAK,WAAW,IAAI,eAAe,OAAO,CAAC;AAAA,EAC/C;AAAA;AAAA,EAEA,eAAe,OAAO;AAClB,QAAI,UAAU,kCAAkC,MAAM,IAAI;AAC1D,QAAI,MAAM,QAAQ;AACd,iBAAW,KAAK,MAAM,MAAM;AAAA,IAChC;AACA,SAAK,WAAW,IAAI,eAAe,OAAO,CAAC;AAAA,EAC/C;AAAA;AAAA,EAEA,WAAWC,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,eAAW,aAAa,KAAK,gBAAgB;AACzC,gBAAU,cAAcA,MAAK;AAAA,IACjC;AACA,SAAK,eAAe,SAAS;AAC7B,eAAW,CAAC,WAAW,aAAa,KAAK,KAAK,aAAa,QAAQ,GAAG;AAClE,oBAAc,cAAcA,MAAK;AACjC,WAAK,gBAAgB,KAAK,SAAS;AAAA,IACvC;AACA,SAAK,aAAa,MAAM;AACxB,SAAK,QAAQ,MAAM;AAAA,EACvB;AAAA;AAAA,EAEA,iBAAiB,OAAO;AACpB,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,QAAI;AACA,UAAI;AACJ,YAAM,WAAW,KAAK,aAAa;AACnC,UAAI,aAAa,QAAQ;AACrB,YAAI,OAAO,MAAM,SAAS,UAAU;AAChC,eAAK,QAAQ,MAAM,MAAM,oDAAoD;AAC7E,eAAK,WAAW,IAAI,WAAW,0DAA0D,CAAC;AAC1F;AAAA,QACJ;AACA,cAAM,eAAe,KAAK,MAAM,MAAM,IAAI,GAAG,SAAc;AAAA,MAC/D,WACS,aAAa,YAAY;AAC9B,YAAI,EAAE,MAAM,gBAAgB,cAAc;AACtC,eAAK,QAAQ,MAAM,MAAM,0DAA0D;AACnF,eAAK,WAAW,IAAI,WAAW,gEAAgE,CAAC;AAChG;AAAA,QACJ;AACA,cAAM,oBAAoB,IAAI,WAAW,MAAM,IAAI,GAAGC,UAAkB;AAAA,MAC5E,OACK;AACD,cAAM,WAAW,UAAU,qBAAqB;AAAA,MACpD;AACA,WAAK,WAAW,GAAG;AAAA,IACvB,SACO,GAAG;AACN,WAAK,QAAQ,MAAM,MAAM,0BAA0B;AACnD,WAAK,WAAW,CAAC;AAAA,IACrB;AAAA,EACJ;AAAA;AAAA,EAEA,WAAW,KAAK;AACZ,QAAI,IAAI,SAAS,QAAQ;AACrB,YAAM,IAAI,WAAW,oCAAoC;AAAA,IAC7D,WACS,IAAI,SAAS,cAAc,IAAI,SAAS,eAAe;AAC5D,UAAI,KAAK,aAAa;AAClB,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC/D;AACA,WAAK,cAAc;AACnB,UAAI,IAAI,SAAS,eAAe;AAC5B,cAAM,eAAe,IAAI,KAAK;AAAA,MAClC;AACA;AAAA,IACJ,WACS,CAAC,KAAK,aAAa;AACxB,YAAM,IAAI,WAAW,sDAAsD;AAAA,IAC/E;AACA,QAAI,IAAI,SAAS,eAAe;AAC5B,YAAM,YAAY,IAAI;AACtB,YAAM,gBAAgB,KAAK,aAAa,IAAI,SAAS;AACrD,WAAK,aAAa,OAAO,SAAS;AAClC,UAAI,kBAAkB,QAAW;AAC7B,cAAM,IAAI,WAAW,iCAAiC;AAAA,MAC1D;AACA,WAAK,gBAAgB,KAAK,SAAS;AACnC,UAAI;AACA,YAAI,cAAc,SAAS,IAAI,SAAS,MAAM;AAC1C,kBAAQ,IAAI,EAAE,eAAe,IAAI,CAAC;AAClC,gBAAM,IAAI,WAAW,sCAAsC;AAAA,QAC/D;AACA,sBAAc,iBAAiB,IAAI,QAAQ;AAAA,MAC/C,SACO,GAAG;AACN,sBAAc,cAAc,CAAC;AAC7B,cAAM;AAAA,MACV;AAAA,IACJ,WACS,IAAI,SAAS,kBAAkB;AACpC,YAAM,YAAY,IAAI;AACtB,YAAM,gBAAgB,KAAK,aAAa,IAAI,SAAS;AACrD,WAAK,aAAa,OAAO,SAAS;AAClC,UAAI,kBAAkB,QAAW;AAC7B,cAAM,IAAI,WAAW,oCAAoC;AAAA,MAC7D;AACA,WAAK,gBAAgB,KAAK,SAAS;AACnC,oBAAc,cAAc,eAAe,IAAI,KAAK,CAAC;AAAA,IACzD,OACK;AACD,YAAM,WAAW,KAAK,2BAA2B;AAAA,IACrD;AAAA,EACJ;AAAA;AAAA,EAEA,aAAa;AACT,WAAO,SAAS,KAAK,IAAI;AAAA,EAC7B;AAAA;AAAA,EAEA,SAASC,MAAK;AACV,SAAK,eAAe,GAAG,YAAY;AACnC,UAAM,QAAQ,KAAK,YAAY,MAAM;AACrC,UAAM,SAAS,IAAI,IAAI,MAAM,KAAK;AAClC,UAAM,mBAAmB,6BAAM,QAAN;AACzB,UAAM,gBAAgB,wBAAC,MAAM,OAAO,WAAW,CAAC,GAA1B;AACtB,UAAM,UAAU,EAAE,MAAM,aAAa,OAAO,KAAAA,KAAI;AAChD,SAAK,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAC9D,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,UAAU,OAAO;AACb,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,UAAM,mBAAmB,6BAAM,KAAK,YAAY,KAAK,KAAK,GAAjC;AACzB,UAAM,gBAAgB,wBAAC,MAAM,KAAK,WAAW,CAAC,GAAxB;AACtB,UAAM,UAAU,EAAE,MAAM,aAAa,MAAM;AAC3C,SAAK,aAAa,SAAS,EAAE,kBAAkB,cAAc,CAAC;AAAA,EAClE;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY;AAAA,EAC5B;AACJ;;;A8B7TA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAA,IAAM,SAAS;AACf,IAAM,WAAW;AACjB,IAAM,WAAW;;;ACFjB;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAEA,IAAI;AACJ,IAAI,OAAO,mBAAmB,aAAa;AACvC,oBAAkB;AACtB,OACK;AACD,QAAM,WAAW,QAAQ,QAAQ;AACjC,oBAAkB,wBAAC,aAAa;AAC5B,aAAS,KAAK,QAAQ;AAAA,EAC1B,GAFkB;AAGtB;;;ACXA;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAAO,IAAM,YAAN,MAAgB;AAAA,EAAvB,OAAuB;AAAA;AAAA;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,YAAY;AACpB,SAAK,SAAS,IAAI,WAAW,IAAI,YAAY,UAAU,CAAC;AACxD,SAAK,YAAY;AACjB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,WAAW,KAAK;AAAA,EAChC;AAAA,EACA,OAAO;AACH,WAAO,KAAK,OAAO,MAAM,KAAK,WAAW,KAAK,QAAQ;AAAA,EAC1D;AAAA,EACA,KAAK,OAAO;AACR,SAAK,YAAY,MAAM,UAAU;AACjC,SAAK,OAAO,IAAI,OAAO,KAAK,QAAQ;AACpC,SAAK,YAAY,MAAM;AAAA,EAC3B;AAAA,EACA,YAAY,YAAY;AACpB,QAAI,KAAK,WAAW,cAAc,KAAK,OAAO,YAAY;AACtD;AAAA,IACJ;AACA,UAAM,eAAe,KAAK,WAAW,KAAK;AAC1C,QAAI,eAAe,cAAc,KAAK,OAAO,cACzC,IAAI,KAAK,YAAY,KAAK,OAAO,YAAY;AAC7C,WAAK,OAAO,WAAW,GAAG,KAAK,WAAW,KAAK,QAAQ;AAAA,IAC3D,OACK;AACD,UAAI,SAAS,KAAK,OAAO;AACzB,SAAG;AACC,kBAAU;AAAA,MACd,SAAS,eAAe,aAAa;AACrC,YAAM,WAAW,IAAI,WAAW,IAAI,YAAY,MAAM,CAAC;AACvD,eAAS,IAAI,KAAK,OAAO,MAAM,KAAK,WAAW,KAAK,QAAQ,GAAG,CAAC;AAChE,WAAK,SAAS;AAAA,IAClB;AACA,SAAK,WAAW;AAChB,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,MAAM,QAAQ;AACV,SAAK,aAAa;AAAA,EACtB;AACJ;;;AC5CA;AAAA;AAAAC;AAGO,SAAS,iBAAiB,KAAK;AAClC,QAAM,QAAU,UAAU,IAAI,OAAO,CAAC;AACtC,QAAM,UAAY,UAAU,IAAI,UAAU,CAAC;AAC3C,QAAM,UAAY,gBAAgB,IAAI,SAAS,GAAG,YAAY;AAC9D,SAAO,EAAE,OAAO,SAAS,QAAQ;AACrC;AALgB;AAMhB,SAAS,aAAa,KAAK;AACvB,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,MAAM;AACf,UAAM,WAAW,eAAiB,OAAO,IAAI,UAAU,CAAC,CAAC;AACzD,WAAO,EAAE,MAAM,MAAM,SAAS;AAAA,EAClC,WACS,SAAS,SAAS;AACvB,UAAMC,SAAQC,OAAQ,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,WAAO,EAAE,MAAM,SAAS,OAAAD,OAAM;AAAA,EAClC,OACK;AACD,UAAM,IAAI,WAAW,iCAAiC;AAAA,EAC1D;AACJ;AAbS;AAcT,SAAS,eAAe,KAAK;AACzB,QAAM,OAAS,OAAO,IAAI,MAAM,CAAC;AACjC,MAAI,SAAS,SAAS;AAClB,WAAO,EAAE,MAAM,QAAQ;AAAA,EAC3B,WACS,SAAS,WAAW;AACzB,UAAM,SAAS,WAAa,OAAO,IAAI,QAAQ,CAAC,CAAC;AACjD,WAAO,EAAE,MAAM,WAAW,OAAO;AAAA,EACrC,WACS,SAAS,SAAS;AACvB,UAAM,SAAS,YAAc,OAAO,IAAI,QAAQ,CAAC,CAAC;AAClD,WAAO,EAAE,MAAM,SAAS,OAAO;AAAA,EACnC,WACS,SAAS,YAAY;AAC1B,WAAO,EAAE,MAAM,WAAW;AAAA,EAC9B,WACS,SAAS,YAAY;AAC1B,UAAM,SAAS,eAAiB,OAAO,IAAI,QAAQ,CAAC,CAAC;AACrD,WAAO,EAAE,MAAM,YAAY,OAAO;AAAA,EACtC,WACS,SAAS,aAAa;AAC3B,WAAO,EAAE,MAAM,YAAY;AAAA,EAC/B,WACS,SAAS,aAAa;AAC3B,WAAO,EAAE,MAAM,YAAY;AAAA,EAC/B,WACS,SAAS,kBAAkB;AAChC,UAAM,eAAiB,QAAQ,IAAI,eAAe,CAAC;AACnD,WAAO,EAAE,MAAM,kBAAkB,aAAa;AAAA,EAClD,OACK;AACD,UAAM,IAAI,WAAW,mCAAmC;AAAA,EAC5D;AACJ;AAjCS;AAkCF,SAAS,eAAe,KAAK;AAChC,QAAM,QAAU,UAAU,IAAI,OAAO,CAAC;AACtC,QAAM,UAAY,UAAU,IAAI,UAAU,CAAC;AAC3C,SAAO,EAAE,OAAO,QAAQ;AAC5B;AAJgB;;;ACzDhB;AAAA;AAAAE;AACO,IAAMC,oBAAmB;AAAA,EAC5B,UAAU;AAAE,WAAO,EAAE,OAAO,QAAW,SAAS,QAAW,SAAS,CAAC,EAAE;AAAA,EAAG;AAAA,EAC1E,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,EAAE,OAAO;AAAA,EAAG;AAAA,EACpC,EAAE,GAAG,KAAK;AAAE,QAAI,UAAU,EAAE,OAAO;AAAA,EAAG;AAAA,EACtC,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,KAAK,EAAE,QAAQC,aAAY,CAAC;AAAA,EAAG;AAC3D;AACA,IAAMA,gBAAe;AAAA,EACjB,UAAU;AAAE,WAAO,EAAE,MAAM,OAAO;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,MAAM,UAAU,EAAE,QAAQC,eAAc,EAAE;AAAA,EAAG;AAAA,EACnE,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,SAAS,OAAO,EAAE,QAAQC,MAAK,EAAE;AAAA,EAAG;AAC9D;AACA,IAAMD,kBAAiB;AAAA,EACnB,UAAU;AAAE,WAAO,EAAE,MAAM,OAAO;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,QAAQ;AAAA,EAAG;AAAA,EACjC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,iBAAiB;AAAA,EAAG;AAAA,EAC5C,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,eAAe;AAAA,EAAG;AAAA,EAC1C,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,WAAW;AAAA,EAAG;AAAA,EACpC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,kBAAkB;AAAA,EAAG;AAAA,EAC7C,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,YAAY;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,MAAM,YAAY;AAAA,EAAG;AAAA,EACrC,EAAE,GAAG;AAAE,WAAO,EAAE,QAAQ,uBAAuB;AAAA,EAAG;AACtD;AACA,IAAM,oBAAoB;AAAA,EACtB,UAAU;AAAE,WAAO,EAAE,MAAM,WAAW,QAAQE,YAAW,QAAQ,EAAE;AAAA,EAAG;AAAA,EACtE,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,WAAU;AAAA,EAAG;AACpD;AACA,IAAM,kBAAkB;AAAA,EACpB,UAAU;AAAE,WAAO,EAAE,MAAM,SAAS,QAAQC,aAAY,QAAQ,EAAE;AAAA,EAAG;AAAA,EACrE,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,YAAW;AAAA,EAAG;AACrD;AACA,IAAM,qBAAqB;AAAA,EACvB,UAAU;AAAE,WAAO,EAAE,MAAM,YAAY,QAAQC,gBAAe,QAAQ,EAAE;AAAA,EAAG;AAAA,EAC3E,EAAE,GAAG,KAAK;AAAE,QAAI,SAAS,EAAE,QAAQA,eAAc;AAAA,EAAG;AACxD;AACA,IAAM,0BAA0B;AAAA,EAC5B,UAAU;AAAE,WAAO,EAAE,MAAM,kBAAkB,cAAc,MAAM;AAAA,EAAG;AAAA,EACpE,EAAE,GAAG,KAAK;AAAE,QAAI,eAAe,EAAE,KAAK;AAAA,EAAG;AAC7C;AACO,IAAMC,kBAAiB;AAAA,EAC1B,UAAU;AAAE,WAAO,EAAE,OAAO,QAAW,SAAS,OAAU;AAAA,EAAG;AAAA,EAC7D,EAAE,GAAG,KAAK;AAAE,QAAI,QAAQ,EAAE,OAAO;AAAA,EAAG;AAAA,EACpC,EAAE,GAAG,KAAK;AAAE,QAAI,UAAU,EAAE,OAAO;AAAA,EAAG;AAC1C;;;AHjCO,IAAM,aAAN,cAAyB,OAAO;AAAA,EAVvC,OAUuC;AAAA;AAAA;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,UAAU;AAC1B,UAAM;AACN,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,SAAS,IAAI,UAAU,KAAK,IAAI;AACrC,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,MAAM,KAAK,UAAU;AACjB,QAAI,SAAS,SAAS,MAAM;AACxB,YAAM,IAAI,WAAW,qCAAqC;AAAA,IAC9D;AACA,SAAK,UAAU,SAAS,KAAK,UAAU;AACvC,UAAM,WAAW,MAAM,KAAK,UAAU,gBAAqBC,eAAuB;AAClF,QAAI,aAAa,QAAW;AACxB,YAAM,IAAI,WAAW,kCAAkC;AAAA,IAC3D;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,OAAO;AACH,WAAO,KAAK,UAAU,aAAkBC,YAAoB;AAAA,EAChE;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,WAAWC,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,SAAK,QAAQ,cAAc,IAAI;AAC/B,QAAI,KAAK,YAAY,QAAW;AAC5B,WAAK,QAAQ,OAAO;AAAA,IACxB;AAAA,EACJ;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EACA,MAAM,UAAU,SAAS,aAAa;AAClC,eAAS;AACL,UAAI,KAAK,OAAO;AACZ,eAAO;AAAA,MACX,WACS,KAAK,YAAY,QAAW;AACjC,cAAM,IAAI,YAAY,oBAAoB,KAAK,OAAO;AAAA,MAC1D;AACA,UAAI,KAAK,cAAc,QAAQ;AAC3B,cAAM,WAAW,KAAK,eAAe;AACrC,YAAI,aAAa,QAAW;AACxB,gBAAM,WAAW,IAAI,YAAY,EAAE,OAAO,QAAQ;AAClD,gBAAM,YAAY,KAAK,MAAM,QAAQ;AACrC,iBAAa,eAAe,WAAW,OAAO;AAAA,QAClD;AAAA,MACJ,WACS,KAAK,cAAc,YAAY;AACpC,cAAM,eAAe,KAAK,mBAAmB;AAC7C,YAAI,iBAAiB,QAAW;AAC5B,iBAAiB,oBAAoB,cAAc,WAAW;AAAA,QAClE;AAAA,MACJ,OACK;AACD,cAAM,WAAW,KAAK,WAAW,qBAAqB;AAAA,MAC1D;AACA,UAAI,KAAK,YAAY,QAAW;AAC5B,cAAM,IAAI,cAAc,yDAAyD;AAAA,MACrF;AACA,YAAM,EAAE,OAAO,KAAK,IAAI,MAAM,KAAK,QAAQ,KAAK;AAChD,UAAI,QAAQ,KAAK,OAAO,WAAW,GAAG;AAClC,aAAK,QAAQ;AAAA,MACjB,WACS,MAAM;AACX,cAAM,IAAI,WAAW,iCAAiC;AAAA,MAC1D,OACK;AACD,aAAK,OAAO,KAAK,KAAK;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,iBAAiB;AACb,UAAM,OAAO,KAAK,OAAO,KAAK;AAC9B,UAAM,cAAc;AACpB,UAAM,aAAa,KAAK,QAAQ,WAAW;AAC3C,QAAI,aAAa,GAAG;AAChB,aAAO;AAAA,IACX;AACA,UAAM,WAAW,KAAK,MAAM,GAAG,UAAU;AACzC,SAAK,OAAO,MAAM,aAAa,CAAC;AAChC,WAAO;AAAA,EACX;AAAA,EACA,qBAAqB;AACjB,UAAM,OAAO,KAAK,OAAO,KAAK;AAC9B,QAAI,cAAc;AAClB,QAAI,eAAe;AACnB,eAAS;AACL,UAAI,gBAAgB,KAAK,YAAY;AACjC,eAAO;AAAA,MACX;AACA,YAAMC,QAAO,KAAK,YAAY;AAC9B,sBAAgBA,QAAO,QAAU,IAAI;AACrC,sBAAgB;AAChB,UAAI,EAAEA,QAAO,MAAO;AAChB;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,KAAK,aAAa,eAAe,aAAa;AAC9C,aAAO;AAAA,IACX;AACA,UAAM,eAAe,KAAK,MAAM,cAAc,eAAe,WAAW;AACxE,SAAK,OAAO,MAAM,eAAe,WAAW;AAC5C,WAAO;AAAA,EACX;AACJ;;;AItIA;AAAA;AAAAC;AAEO,SAAS,gBAAgB,GAAG,KAAK;AACpC,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,OAAO,SAAS,IAAI,KAAK;AAAA,EAC/B;AACA,IAAE,aAAa,YAAY,IAAI,UAAU,aAAa;AAC1D;AALgB;AAMhB,SAAS,cAAc,GAAG,KAAK;AAC3B,IAAE,UAAU,QAAQ,IAAI,IAAI;AAC5B,MAAI,IAAI,SAAS,SAAS;AAAA,EAE1B,WACS,IAAI,SAAS,WAAW;AAC7B,MAAE,OAAO,QAAQ,IAAI,MAAMC,KAAI;AAAA,EACnC,WACS,IAAI,SAAS,SAAS;AAC3B,MAAE,OAAO,SAAS,IAAI,OAAOC,MAAK;AAAA,EACtC,WACS,IAAI,SAAS,YAAY;AAC9B,QAAI,IAAI,QAAQ,QAAW;AACvB,QAAE,OAAO,OAAO,IAAI,GAAG;AAAA,IAC3B;AACA,QAAI,IAAI,UAAU,QAAW;AACzB,QAAE,OAAO,UAAU,IAAI,KAAK;AAAA,IAChC;AAAA,EACJ,WACS,IAAI,SAAS,YAAY;AAC9B,QAAI,IAAI,QAAQ,QAAW;AACvB,QAAE,OAAO,OAAO,IAAI,GAAG;AAAA,IAC3B;AACA,QAAI,IAAI,UAAU,QAAW;AACzB,QAAE,OAAO,UAAU,IAAI,KAAK;AAAA,IAChC;AAAA,EACJ,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,OAAO,UAAU,IAAI,KAAK;AAC5B,MAAE,OAAO,OAAO,IAAI,GAAG;AAAA,EAC3B,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,OAAO,UAAU,IAAI,KAAK;AAAA,EAChC,WACS,IAAI,SAAS,kBAAkB;AAAA,EAExC,OACK;AACD,UAAM,WAAW,KAAK,kCAAkC;AAAA,EAC5D;AACJ;AAxCS;AAyCF,SAAS,cAAc,GAAG,KAAK;AAClC,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,OAAO,SAAS,IAAI,KAAK;AAAA,EAC/B;AACA,IAAE,OAAO,SAAS,IAAI,OAAOA,MAAK;AACtC;AALgB;;;ACjDhB;AAAA;AAAAC;AAEO,SAASC,iBAAgB,GAAG,KAAK;AACpC,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,OAAO,GAAG,IAAI,KAAK;AAAA,EACzB;AACA,aAAW,OAAO,IAAI,UAAU;AAC5B,MAAE,QAAQ,GAAG,KAAKC,cAAa;AAAA,EACnC;AACJ;AAPgB,OAAAD,kBAAA;AAQhB,SAASC,eAAc,GAAG,KAAK;AAC3B,MAAI,IAAI,SAAS,SAAS;AACtB,MAAE,QAAQ,GAAG,KAAKC,eAAc;AAAA,EACpC,WACS,IAAI,SAAS,WAAW;AAC7B,MAAE,QAAQ,GAAG,KAAK,gBAAgB;AAAA,EACtC,WACS,IAAI,SAAS,SAAS;AAC3B,MAAE,QAAQ,GAAG,KAAK,cAAc;AAAA,EACpC,WACS,IAAI,SAAS,YAAY;AAC9B,MAAE,QAAQ,GAAG,KAAK,iBAAiB;AAAA,EACvC,WACS,IAAI,SAAS,YAAY;AAC9B,MAAE,QAAQ,GAAG,KAAK,iBAAiB;AAAA,EACvC,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,QAAQ,GAAG,KAAK,iBAAiB;AAAA,EACvC,WACS,IAAI,SAAS,aAAa;AAC/B,MAAE,QAAQ,GAAG,KAAK,iBAAiB;AAAA,EACvC,WACS,IAAI,SAAS,kBAAkB;AACpC,MAAE,QAAQ,GAAG,KAAK,sBAAsB;AAAA,EAC5C,OACK;AACD,UAAM,WAAW,KAAK,kCAAkC;AAAA,EAC5D;AACJ;AA5BS,OAAAD,gBAAA;AA6BT,SAASC,gBAAe,IAAI,MAAM;AAClC;AADS,OAAAA,iBAAA;AAET,SAAS,iBAAiB,GAAG,KAAK;AAC9B,IAAE,QAAQ,GAAG,IAAI,MAAMC,KAAI;AAC/B;AAFS;AAGT,SAAS,eAAe,GAAG,KAAK;AAC5B,IAAE,QAAQ,GAAG,IAAI,OAAOC,MAAK;AACjC;AAFS;AAGT,SAAS,kBAAkB,GAAG,KAAK;AAC/B,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,MAAM,GAAG,IAAI,KAAK;AAAA,EACxB;AACJ;AAPS;AAQT,SAAS,kBAAkB,GAAG,KAAK;AAC/B,MAAI,IAAI,QAAQ,QAAW;AACvB,MAAE,OAAO,GAAG,IAAI,GAAG;AAAA,EACvB;AACA,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,MAAM,GAAG,IAAI,KAAK;AAAA,EACxB;AACJ;AAPS;AAQT,SAAS,kBAAkB,GAAG,KAAK;AAC/B,IAAE,MAAM,GAAG,IAAI,KAAK;AACpB,IAAE,OAAO,GAAG,IAAI,GAAG;AACvB;AAHS;AAIT,SAAS,kBAAkB,GAAG,KAAK;AAC/B,IAAE,MAAM,GAAG,IAAI,KAAK;AACxB;AAFS;AAGT,SAAS,uBAAuB,IAAI,MAAM;AAC1C;AADS;AAEF,SAASC,eAAc,GAAG,KAAK;AAClC,MAAI,IAAI,UAAU,QAAW;AACzB,MAAE,OAAO,GAAG,IAAI,KAAK;AAAA,EACzB;AACA,IAAE,QAAQ,GAAG,IAAI,OAAOD,MAAK;AACjC;AALgB,OAAAC,gBAAA;;;APvDT,IAAM,aAAN,cAAyB,OAAO;AAAA,EAjBvC,OAiBuC;AAAA;AAAA;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,SAAS,KAAK,aAAa;AAC3C,UAAM,OAAO,OAAO;AACpB,SAAK,UAAU;AACf,SAAK,WAAW,QAAQ,SAAS;AACjC,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,SAAS,IAAI,MAAM;AACxB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,UAAU;AACf,SAAK,cAAc,IAAI,QAAQ;AAAA,EACnC;AAAA;AAAA,EAEA,SAAS;AACL,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,YAAY;AACR,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,SAASC,MAAK;AACV,UAAM,QAAQ,KAAK,YAAY,MAAM;AACrC,SAAK,mBAAmB,EAAE,MAAM,aAAa,OAAO,KAAAA,KAAI,CAAC,EAAE,KAAK,MAAM,QAAW,CAACC,WAAU,KAAK,WAAWA,MAAK,CAAC;AAClH,WAAO,IAAI,IAAI,MAAM,KAAK;AAAA,EAC9B;AAAA;AAAA,EAEA,UAAU,OAAO;AACb,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,mBAAmB,EAAE,MAAM,aAAa,MAAM,CAAC,EAAE,KAAK,MAAM,KAAK,YAAY,KAAK,KAAK,GAAG,CAACA,WAAU,KAAK,WAAWA,MAAK,CAAC;AAAA,EACpI;AAAA;AAAA,EAEA,SAAS,MAAM;AACX,WAAO,KAAK,mBAAmB,EAAE,MAAM,WAAW,KAAK,CAAC,EAAE,KAAK,CAAC,aAAa;AACzE,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,OAAO,OAAO;AACV,WAAO,KAAK,mBAAmB,EAAE,MAAM,SAAS,MAAM,CAAC,EAAE,KAAK,CAAC,aAAa;AACxE,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,UAAU,UAAU;AAChB,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,KAAK,SAAS;AAAA,MACd,OAAO,SAAS;AAAA,IACpB,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,UAAU,UAAU;AAChB,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,MACN,KAAK,SAAS;AAAA,MACd,OAAO,SAAS;AAAA,IACpB,CAAC,EAAE,KAAK,CAAC,cAAc;AACnB,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB;AACZ,SAAK,QAAQ,eAAe,GAAG,iBAAiB;AAChD,WAAO,KAAK,mBAAmB;AAAA,MAC3B,MAAM;AAAA,IACV,CAAC,EAAE,KAAK,CAAC,aAAa;AAClB,aAAO,SAAS;AAAA,IACpB,CAAC;AAAA,EACL;AAAA,EACA,mBAAmB,SAAS;AACxB,WAAO,IAAI,QAAQ,CAAC,kBAAkB,kBAAkB;AACpD,WAAK,aAAa,EAAE,MAAM,YAAY,SAAS,kBAAkB,cAAc,CAAC;AAAA,IACpF,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,YAAY,OAAO;AACf,WAAO,IAAI,QAAQ,CAAC,gBAAgB,kBAAkB;AAClD,WAAK,aAAa,EAAE,MAAM,UAAU,OAAO,gBAAgB,cAAc,CAAC;AAAA,IAC9E,CAAC;AAAA,EACL;AAAA;AAAA,EAEA,cAAc,QAAQ;AAClB,QAAI,WAAW,KAAK,SAAS;AACzB,YAAM,IAAI,cAAc,8DAA8D;AAAA,IAC1F;AACA,SAAK,UAAU;AACf,oBAAe,MAAM,KAAK,YAAY,CAAC;AAAA,EAC3C;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,kBAAkB;AACd,SAAK,WAAW;AAChB,oBAAe,MAAM,KAAK,YAAY,CAAC;AAAA,EAC3C;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY,UAAa,KAAK;AAAA,EAC9C;AAAA;AAAA,EAEA,WAAWA,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,QAAI,KAAK,YAAY,QAAW;AAC5B,WAAK,QAAQ,WAAWA,MAAK;AAAA,IACjC;AACA,SAAK,QAAQ,cAAc,IAAI;AAC/B,eAAS;AACL,YAAM,QAAQ,KAAK,OAAO,MAAM;AAChC,UAAI,UAAU,QAAW;AACrB,cAAM,cAAcA,MAAK;AAAA,MAC7B,OACK;AACD;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,KAAK,WAAW,UAAa,KAAK,cAAc,CAAC,KAAK,cAAc;AACrE,WAAK,OAAO,KAAK;AAAA,QACb,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,QAAQ;AAAA,QACzB,kBAAkB,6BAAM,QAAN;AAAA,QAClB,eAAe,6BAAM,QAAN;AAAA,MACnB,CAAC;AACD,WAAK,eAAe;AACpB,sBAAe,MAAM,KAAK,YAAY,CAAC;AAAA,IAC3C;AAAA,EACJ;AAAA,EACA,aAAa,OAAO;AAChB,QAAI,KAAK,YAAY,QAAW;AAC5B,YAAM,IAAI,YAAY,oBAAoB,KAAK,OAAO;AAAA,IAC1D,WACS,KAAK,UAAU;AACpB,YAAM,IAAI,YAAY,qBAAqB,MAAS;AAAA,IACxD,OACK;AACD,WAAK,OAAO,KAAK,KAAK;AACtB,sBAAe,MAAM,KAAK,YAAY,CAAC;AAAA,IAC3C;AAAA,EACJ;AAAA,EACA,cAAc;AACV,QAAI,KAAK,aAAa,KAAK,YAAY,QAAW;AAC9C;AAAA,IACJ;AACA,QAAI,KAAK,YAAY,KAAK,OAAO,WAAW,GAAG;AAC3C,WAAK,WAAW,IAAI,YAAY,8BAA8B,CAAC;AAC/D;AAAA,IACJ;AACA,UAAM,WAAW,KAAK,QAAQ;AAC9B,QAAI,aAAa,QAAW;AACxB,WAAK,QAAQ,iBAAiB,KAAK,MAAM,KAAK,YAAY,GAAG,CAACA,WAAU,KAAK,WAAWA,MAAK,CAAC;AAC9F;AAAA,IACJ;AACA,UAAM,aAAa,KAAK,OAAO,MAAM;AACrC,QAAI,eAAe,QAAW;AAC1B;AAAA,IACJ,WACS,WAAW,SAAS,YAAY;AACrC,YAAM,WAAW,CAAC,UAAU;AAC5B,iBAAS;AACL,cAAM,QAAQ,KAAK,OAAO,MAAM;AAChC,YAAI,UAAU,UAAa,MAAM,SAAS,YAAY;AAClD,mBAAS,KAAK,KAAK;AACnB,eAAK,OAAO,MAAM;AAAA,QACtB,WACS,UAAU,UAAa,KAAK,YAAY,CAAC,KAAK,cAAc;AACjE,mBAAS,KAAK;AAAA,YACV,MAAM;AAAA,YACN,SAAS,EAAE,MAAM,QAAQ;AAAA,YACzB,kBAAkB,6BAAM,QAAN;AAAA,YAClB,eAAe,6BAAM,QAAN;AAAA,UACnB,CAAC;AACD,eAAK,eAAe;AACpB;AAAA,QACJ,OACK;AACD;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,eAAe,UAAU,QAAQ;AAAA,IAC1C,WACS,WAAW,SAAS,UAAU;AACnC,WAAK,aAAa,UAAU,UAAU;AAAA,IAC1C,OACK;AACD,YAAM,WAAW,YAAY,+BAA+B;AAAA,IAChE;AAAA,EACJ;AAAA,EACA,eAAe,UAAU,UAAU;AAC/B,SAAK,OAAO,MAAM,KAAK,uBAAuB,UAAU,QAAQ,GAAG,CAAC,SAAS,uBAAuB,MAAM,SAAS,QAAQ,GAAG,CAAC,aAAa,SAAS,OAAO,CAAC,aAAa,SAAS,SAAS,CAAC,aAAa,uBAAuB,UAAU,QAAQ,GAAG,CAACA,WAAU,SAAS,QAAQ,CAAC,UAAU,MAAM,cAAcA,MAAK,CAAC,CAAC;AAAA,EAC5T;AAAA,EACA,aAAa,UAAU,OAAO;AAC1B,UAAM,SAAS,IAAI,WAAW,MAAM,SAAS,QAAQ;AACrD,SAAK,UAAU;AACf,SAAK,OAAO,MAAM,KAAK,qBAAqB,OAAO,QAAQ,GAAG,CAAC,SAAS,OAAO,KAAK,IAAI,GAAG,CAAC,aAAa,SAAS,OAAO,CAAC,aAAa,SAAS,SAAS,CAAC,cAAc,MAAM,eAAe,MAAM,GAAG,CAACA,WAAU,MAAM,cAAcA,MAAK,CAAC;AAAA,EAC/O;AAAA,EACA,OAAO,eAAe,gBAAgB,UAAU,YAAYC,iBAAgB,aAAa;AACrF,QAAI;AACJ,QAAI;AACA,YAAM,UAAU,cAAc;AAC9B,YAAMC,SAAQ,KAAK;AACnB,gBAAUA,OAAM,OAAO;AAAA,IAC3B,SACOF,QAAO;AACV,gBAAU,QAAQ,OAAOA,MAAK;AAAA,IAClC;AACA,SAAK,YAAY;AACjB,YAAQ,KAAK,CAAC,SAAS;AACnB,UAAI,CAAC,KAAK,IAAI;AACV,eAAO,kBAAkB,IAAI,EAAE,KAAK,CAACA,WAAU;AAC3C,gBAAMA;AAAA,QACV,CAAC;AAAA,MACL;AACA,aAAO,eAAe,IAAI;AAAA,IAC9B,CAAC,EAAE,KAAK,CAAC,MAAM;AACX,WAAK,SAAS,SAAS,CAAC;AACxB,WAAK,WAAW,WAAW,CAAC,KAAK,KAAK;AACtC,MAAAC,gBAAe,CAAC;AAAA,IACpB,CAAC,EAAE,MAAM,CAACD,WAAU;AAChB,WAAK,WAAWA,MAAK;AACrB,kBAAYA,MAAK;AAAA,IACrB,CAAC,EAAE,QAAQ,MAAM;AACb,WAAK,YAAY;AACjB,WAAK,YAAY;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EACA,uBAAuB,UAAU,UAAU;AACvC,WAAO,KAAK,eAAe,IAAI,IAAI,SAAS,cAAc,KAAK,QAAQ,GAAG;AAAA,MACtE,OAAO,KAAK;AAAA,MACZ,UAAU,SAAS,IAAI,CAAC,UAAU,MAAM,OAAO;AAAA,IACnD,GAAG,SAAS,UAAU,iBAAsBG,gBAAwB;AAAA,EACxE;AAAA,EACA,qBAAqB,OAAO,UAAU;AAClC,QAAI,SAAS,eAAe,QAAW;AACnC,YAAM,IAAI,qBAAqB,0GACkB,SAAS,OAAO,GAAG;AAAA,IACxE;AACA,WAAO,KAAK,eAAe,IAAI,IAAI,SAAS,YAAY,KAAK,QAAQ,GAAG;AAAA,MACpE,OAAO,KAAK;AAAA,MACZ,OAAO,MAAM;AAAA,IACjB,GAAG,SAAS,UAAU,eAAoBC,cAAsB;AAAA,EACpE;AAAA,EACA,eAAe,KAAK,SAAS,UAAU,SAAS,aAAa;AACzD,QAAI;AACJ,QAAI;AACJ,QAAI,aAAa,QAAQ;AACrB,iBAAW,gBAAgB,SAAS,OAAO;AAC3C,oBAAc;AAAA,IAClB,WACS,aAAa,YAAY;AAC9B,iBAAW,qBAAqB,SAAS,WAAW;AACpD,oBAAc;AAAA,IAClB,OACK;AACD,YAAM,WAAW,UAAU,qBAAqB;AAAA,IACpD;AACA,UAAM,UAAU,IAAI,SAAQ;AAC5B,YAAQ,IAAI,gBAAgB,WAAW;AACvC,QAAI,KAAK,SAAS,QAAW;AACzB,cAAQ,IAAI,iBAAiB,UAAU,KAAK,IAAI,EAAE;AAAA,IACtD;AACA,WAAO,IAAI,SAAQ,IAAI,SAAS,GAAG,EAAE,QAAQ,QAAQ,SAAS,MAAM,SAAS,CAAC;AAAA,EAClF;AACJ;AACA,SAAS,uBAAuB,UAAU,UAAU;AAChD,MAAI,SAAS,QAAQ,WAAW,SAAS,QAAQ;AAC7C,UAAM,IAAI,WAAW,uDAAuD;AAAA,EAChF;AACA,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACtC,UAAM,SAAS,SAAS,QAAQ,CAAC;AACjC,UAAM,QAAQ,SAAS,CAAC;AACxB,QAAI,OAAO,SAAS,MAAM;AACtB,UAAI,OAAO,SAAS,SAAS,MAAM,QAAQ,MAAM;AAC7C,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC/D;AACA,YAAM,iBAAiB,OAAO,QAAQ;AAAA,IAC1C,WACS,OAAO,SAAS,SAAS;AAC9B,YAAM,cAAc,eAAe,OAAO,KAAK,CAAC;AAAA,IACpD,WACS,OAAO,SAAS,QAAQ;AAC7B,YAAM,IAAI,WAAW,4CAA4C;AAAA,IACrE,OACK;AACD,YAAM,WAAW,QAAQ,0CAA0C;AAAA,IACvE;AAAA,EACJ;AACJ;AAvBS;AAwBT,eAAe,uBAAuB,MAAM,UAAU;AAClD,MAAI,aAAa,QAAQ;AACrB,UAAM,WAAW,MAAM,KAAK,KAAK;AACjC,WAAO,eAAe,UAAU,gBAAqB;AAAA,EACzD;AACA,MAAI,aAAa,YAAY;AACzB,UAAM,WAAW,MAAM,KAAK,YAAY;AACxC,WAAO,oBAAoB,IAAI,WAAW,QAAQ,GAAGC,iBAAyB;AAAA,EAClF;AACA,QAAM,KAAK,MAAM,OAAO;AACxB,QAAM,WAAW,UAAU,qBAAqB;AACpD;AAXe;AAYf,eAAe,kBAAkB,MAAM;AACnC,QAAM,WAAW,KAAK,QAAQ,IAAI,cAAc,KAAK;AACrD,MAAI,UAAU,+BAA+B,KAAK,MAAM;AACxD,MAAI,aAAa,oBAAoB;AACjC,UAAM,WAAW,MAAM,KAAK,KAAK;AACjC,QAAI,aAAa,UAAU;AACvB,aAAO,eAAe,QAAQ;AAAA,IAClC;AACA,WAAO,IAAI,gBAAgB,SAAS,KAAK,MAAM;AAAA,EACnD;AACA,MAAI,aAAa,cAAc;AAC3B,UAAM,YAAY,MAAM,KAAK,KAAK,GAAG,KAAK;AAC1C,QAAI,aAAa,IAAI;AACjB,iBAAW,KAAK,QAAQ;AAAA,IAC5B;AACA,WAAO,IAAI,gBAAgB,SAAS,KAAK,MAAM;AAAA,EACnD;AACA,QAAM,KAAK,MAAM,OAAO;AACxB,SAAO,IAAI,gBAAgB,SAAS,KAAK,MAAM;AACnD;AAnBe;;;AFnVR,IAAM,iBAAiB;AAAA,EAC1B;AAAA,IACI,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUJ;AACA,IAAM,mBAAmB;AAAA,EACrB,aAAa;AAAA,EACb,cAAc;AAAA,EACd,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AACd;AAEO,IAAM,aAAN,cAAyB,OAAO;AAAA,EA9BvC,OA8BuC;AAAA;AAAA;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,YAAY,KAAK,KAAK,aAAa,kBAAkB,GAAG;AACpD,UAAM;AACN,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS,eAAe;AAC7B,SAAK,UAAU;AACf,SAAK,WAAW,oBAAI,IAAI;AACxB,QAAI,mBAAmB,GAAG;AACtB,WAAK,mBAAmB,aAAa,KAAK,QAAQ,KAAK,IAAI;AAC3D,WAAK,iBAAiB,KAAK,CAAC,aAAa,KAAK,YAAY,UAAU,CAACC,WAAU,KAAK,WAAWA,MAAK,CAAC;AAAA,IACzG,OACK;AACD,WAAK,mBAAmB,QAAQ,QAAQ,gBAAgB;AACxD,WAAK,iBAAiB,KAAK,CAAC,aAAa,KAAK,YAAY,UAAU,CAACA,WAAU,KAAK,WAAWA,MAAK,CAAC;AAAA,IACzG;AAAA,EACJ;AAAA;AAAA,EAEA,MAAM,aAAa;AACf,QAAI,KAAK,cAAc,QAAW;AAC9B,aAAO,KAAK,UAAU;AAAA,IAC1B;AACA,YAAQ,MAAM,KAAK,kBAAkB;AAAA,EACzC;AAAA;AAAA;AAAA,EAGA,eAAe,YAAY,SAAS;AAChC,QAAI,cAAc,iBAAiB,SAAS;AACxC;AAAA,IACJ,WACS,KAAK,cAAc,QAAW;AACnC,YAAM,IAAI,qBAAqB,GAAG,OAAO,0CAA0C,UAAU,6IAExB;AAAA,IACzE,WACS,KAAK,UAAU,UAAU,YAAY;AAC1C,YAAM,IAAI,qBAAqB,GAAG,OAAO,0CAA0C,UAAU,0DAC5C,KAAK,UAAU,OAAO,GAAG;AAAA,IAC9E;AAAA,EACJ;AAAA;AAAA,EAEA,aAAa;AACT,QAAI,KAAK,YAAY,QAAW;AAC5B,YAAM,IAAI,YAAY,oBAAoB,KAAK,OAAO;AAAA,IAC1D;AACA,UAAM,SAAS,IAAI,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM;AACrE,SAAK,SAAS,IAAI,MAAM;AACxB,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,cAAc,QAAQ;AAClB,SAAK,SAAS,OAAO,MAAM;AAAA,EAC/B;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,WAAW,IAAI,YAAY,4BAA4B,CAAC;AAAA,EACjE;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EACA,WAAWA,QAAO;AACd,QAAI,KAAK,YAAY,QAAW;AAC5B;AAAA,IACJ;AACA,SAAK,UAAUA;AACf,eAAW,UAAU,MAAM,KAAK,KAAK,QAAQ,GAAG;AAC5C,aAAO,WAAW,IAAI,YAAY,qBAAqBA,MAAK,CAAC;AAAA,IACjE;AAAA,EACJ;AACJ;AACA,eAAe,aAAa,aAAa,WAAW;AAChD,QAAMC,SAAQ;AACd,aAAW,YAAY,gBAAgB;AACnC,UAAM,MAAM,IAAI,IAAI,SAAS,aAAa,SAAS;AACnD,UAAM,UAAU,IAAI,SAAQ,IAAI,SAAS,GAAG,EAAE,QAAQ,MAAM,CAAC;AAC7D,UAAM,WAAW,MAAMA,OAAM,OAAO;AACpC,UAAM,SAAS,YAAY;AAC3B,QAAI,SAAS,IAAI;AACb,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAZe;;;AU/Gf;AAAA;AAAAC;;;A1CmBO,SAAS,OAAO,KAAK,KAAK,kBAAkB,GAAG;AAClD,MAAI,OAAO,eAAc,aAAa;AAClC,UAAM,IAAI,0BAA0B,kDAAkD;AAAA,EAC1F;AACA,MAAI,eAAe;AACnB,MAAI,mBAAmB,GAAG;AACtB,mBAAe,MAAM,KAAK,eAAe,KAAK,CAAC;AAAA,EACnD,OACK;AACD,mBAAe,MAAM,KAAK,eAAe,KAAK,CAAC;AAAA,EACnD;AACA,QAAM,SAAS,IAAI,WAAU,KAAK,YAAY;AAC9C,SAAO,IAAI,SAAS,QAAQ,GAAG;AACnC;AAbgB;AAoBT,SAAS,SAAS,KAAK,KAAK,aAAa,kBAAkB,GAAG;AACjE,SAAO,IAAI,WAAW,eAAe,MAAM,MAAM,IAAI,IAAI,GAAG,GAAG,KAAK,aAAa,eAAe;AACpG;AAFgB;;;A2CvChB;AAAA;AAAAC;AAGO,IAAM,mBAAN,MAAuB;AAAA,EAH9B,OAG8B;AAAA;AAAA;AAAA,EAC1B;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA,YAAY,MAAMC,UAAS;AACvB,SAAK,QAAQ;AACb,SAAK,WAAWA;AAChB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,MAAM;AACV,WAAO,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,YAAY,QAAQ,CAAC,CAAC;AAAA,EAC1D;AAAA,EACA,MAAM,MAAM,OAAO;AACf,UAAM,SAAS,KAAK,WAAW;AAC/B,QAAI,OAAO,QAAQ;AACf,YAAM,IAAI,YAAY,+DAA+D,oBAAoB;AAAA,IAC7G;AACA,QAAI;AACA,YAAM,aAAa,MAAM,IAAI,WAAW;AACxC,UAAI;AACJ,UAAI,KAAK,aAAa,QAAW;AAG7B,aAAK,aAAa,EAAE,MAAM,UAAU;AACpC,cAAM,QAAQ,OAAO,MAAM,KAAK,YAAY,CAAC;AAC7C,cAAM,YAAY,MAAM,KAAK;AAC7B,cAAM,eAAe,UAAU,IAAI,uBAAuB,KAAK,KAAK,CAAC;AAGrE,YAAI,WAAW;AACf,uBAAe,WAAW,IAAI,CAAC,cAAc;AACzC,gBAAM,WAAW,MACZ,KAAK,EACL,UAAgB,UAAU,GAAG,QAAQ,CAAC;AAC3C,cAAI,KAAK,YAAY,GAAG;AAEpB,qBAAS,UAAgB,UAAU,IAAU,UAAU,aAAa,KAAK,CAAC,CAAC;AAAA,UAC/E;AACA,gBAAM,cAAc,SAAS,MAAM,SAAS;AAC5C,sBAAY,MAAM,MAAM,MAAS;AACjC,qBAAW;AACX,iBAAO;AAAA,QACX,CAAC;AAGD,aAAK,WAAW,MACX,QAAQ,EACR,KAAK,MAAM,YAAY,EACvB,KAAK,MAAM,MAAS;AACzB,YAAI;AACA,gBAAM,KAAK;AAAA,QACf,SACO,GAAG;AAGN,eAAK,MAAM;AACX,gBAAM;AAAA,QACV;AAAA,MACJ,OACK;AACD,YAAI,KAAK,WAAW,GAAG;AAGnB,gBAAM,KAAK;AAAA,QACf,OACK;AAAA,QAIL;AACA,aAAK,aAAa,EAAE,MAAM,UAAU;AACpC,cAAM,QAAQ,OAAO,MAAM,KAAK,YAAY,CAAC;AAC7C,YAAI,WAAW;AACf,uBAAe,WAAW,IAAI,CAAC,cAAc;AACzC,gBAAM,WAAW,MAAM,KAAK;AAC5B,cAAI,aAAa,QAAW;AACxB,qBAAS,UAAgB,UAAU,GAAG,QAAQ,CAAC;AAAA,UACnD;AACA,cAAI,KAAK,YAAY,GAAG;AACpB,qBAAS,UAAgB,UAAU,IAAU,UAAU,aAAa,KAAK,CAAC,CAAC;AAAA,UAC/E;AACA,gBAAM,cAAc,SAAS,MAAM,SAAS;AAC5C,sBAAY,MAAM,MAAM,MAAS;AACjC,qBAAW;AACX,iBAAO;AAAA,QACX,CAAC;AACD,cAAM,MAAM,QAAQ;AAAA,MACxB;AACA,YAAM,aAAa,CAAC;AACpB,iBAAW,eAAe,cAAc;AACpC,cAAM,OAAO,MAAM;AACnB,YAAI,SAAS,QAAW;AACpB,gBAAM,IAAI,YAAY,sGACuC,oBAAoB;AAAA,QACrF;AACA,mBAAW,KAAK,mBAAmB,IAAI,CAAC;AAAA,MAC5C;AACA,aAAO;AAAA,IACX,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,MAAM,gBAAgBC,MAAK;AACvB,UAAM,SAAS,KAAK,WAAW;AAC/B,QAAI,OAAO,QAAQ;AACf,YAAM,IAAI,YAAY,+DAA+D,oBAAoB;AAAA,IAC7G;AACA,QAAI;AACA,UAAI,KAAK,aAAa,QAAW;AAE7B,aAAK,WAAW,OACX,IAAI,uBAAuB,KAAK,KAAK,CAAC,EACtC,KAAK,MAAM,MAAS;AACzB,YAAI;AACA,gBAAM,KAAK;AAAA,QACf,SACO,GAAG;AACN,eAAK,MAAM;AACX,gBAAM;AAAA,QACV;AAAA,MACJ,OACK;AAED,cAAM,KAAK;AAAA,MACf;AACA,YAAM,OAAO,SAASA,IAAG;AAAA,IAC7B,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,MAAM,WAAW;AACb,QAAI;AACA,YAAM,SAAS,KAAK,WAAW;AAC/B,UAAI,OAAO,QAAQ;AACf;AAAA,MACJ;AACA,UAAI,KAAK,aAAa,QAAW;AAAA,MAGjC,OACK;AAED;AAAA,MACJ;AAEA,YAAM,UAAU,OAAO,IAAI,UAAU,EAAE,MAAM,CAAC,MAAM;AAChD,cAAM,cAAc,CAAC;AAAA,MACzB,CAAC;AACD,aAAO,gBAAgB;AACvB,YAAM;AAAA,IACV,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB,UACA;AAKI,WAAK,MAAM;AAAA,IACf;AAAA,EACJ;AAAA,EACA,MAAM,SAAS;AAEX,QAAI;AACA,YAAM,SAAS,KAAK,WAAW;AAC/B,UAAI,OAAO,QAAQ;AACf,cAAM,IAAI,YAAY,8DAA8D,oBAAoB;AAAA,MAC5G;AACA,UAAI,KAAK,aAAa,QAAW;AAE7B,cAAM,KAAK;AAAA,MACf,OACK;AACD;AAAA,MACJ;AACA,YAAM,UAAU,OAAO,IAAI,QAAQ,EAAE,MAAM,CAAC,MAAM;AAC9C,cAAM,cAAc,CAAC;AAAA,MACzB,CAAC;AACD,aAAO,gBAAgB;AACvB,YAAM;AAAA,IACV,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB,UACA;AACI,WAAK,MAAM;AAAA,IACf;AAAA,EACJ;AACJ;AACA,eAAsB,kBAAkB,MAAMD,UAAS,OAAO,YAAY,qBAAqB,OAAO;AAClG,MAAI,oBAAoB;AACpB,UAAM,KAAK,EAAE,IAAI,yBAAyB;AAAA,EAC9C;AACA,QAAM,YAAY,MAAM,KAAK;AAC7B,QAAM,eAAe,UAAU,IAAI,uBAAuB,IAAI,CAAC;AAC/D,MAAI,WAAW;AACf,QAAM,eAAe,WAAW,IAAI,CAAC,cAAc;AAC/C,UAAM,WAAW,MAAM,KAAK,EAAE,UAAgB,UAAU,GAAG,QAAQ,CAAC;AACpE,QAAIA,YAAW,GAAG;AACd,eAAS,UAAgB,UAAU,IAAU,UAAU,aAAa,KAAK,CAAC,CAAC;AAAA,IAC/E;AACA,UAAM,cAAc,SAAS,MAAM,SAAS;AAC5C,eAAW;AACX,WAAO;AAAA,EACX,CAAC;AACD,QAAM,aAAa,MAAM,KAAK,EAAE,UAAgB,UAAU,GAAG,QAAQ,CAAC;AACtE,MAAIA,YAAW,GAAG;AACd,eAAW,UAAgB,UAAU,IAAU,UAAU,aAAa,KAAK,CAAC,CAAC;AAAA,EACjF;AACA,QAAM,gBAAgB,WAAW,IAAI,QAAQ;AAC7C,QAAM,eAAe,MAChB,KAAK,EACL,UAAgB,UAAU,IAAU,UAAU,GAAG,UAAU,CAAC,CAAC;AAClE,eAAa,IAAI,UAAU,EAAE,MAAM,CAAC,MAAM,MAAS;AACnD,MAAI,oBAAoB;AACpB,UAAM,KAAK,EAAE,IAAI,wBAAwB;AAAA,EAC7C;AACA,QAAM,MAAM,QAAQ;AACpB,QAAM,aAAa,CAAC;AACpB,QAAM;AACN,aAAW,eAAe,cAAc;AACpC,UAAM,YAAY,MAAM;AACxB,QAAI,cAAc,QAAW;AACzB,YAAM,IAAI,YAAY,gGAAgG,oBAAoB;AAAA,IAC9I;AACA,eAAW,KAAK,mBAAmB,SAAS,CAAC;AAAA,EACjD;AACA,QAAM;AACN,SAAO;AACX;AAxCsB;AAyCf,SAAS,YAAY,MAAM;AAC9B,MAAIC;AACJ,MAAI;AACJ,MAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,KAACA,MAAK,IAAI,IAAI;AAAA,EAClB,WACS,OAAO,SAAS,UAAU;AAC/B,IAAAA,OAAM;AAAA,EACV,OACK;AACD,IAAAA,OAAM,KAAK;AACX,WAAO,KAAK;AAAA,EAChB;AACA,QAAM,YAAY,IAAU,KAAKA,IAAG;AACpC,MAAI,MAAM;AACN,QAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,gBAAU,YAAY,IAAI;AAAA,IAC9B,OACK;AACD,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,IAAI,GAAG;AAC7C,kBAAU,SAAS,KAAK,KAAK;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAzBgB;AA0BT,SAAS,mBAAmB,WAAW;AAC1C,QAAM,UAAU,UAAU,YAAY,IAAI,CAAC,MAAM,KAAK,EAAE;AACxD,QAAM,cAAc,UAAU,gBAAgB,IAAI,CAAC,MAAM,KAAK,EAAE;AAChE,QAAM,OAAO,UAAU;AACvB,QAAM,eAAe,UAAU;AAC/B,QAAM,kBAAkB,UAAU,oBAAoB,SAChD,UAAU,kBACV;AACN,SAAO,IAAI,cAAc,SAAS,aAAa,MAAM,cAAc,eAAe;AACtF;AATgB;AAUT,SAAS,cAAc,GAAG;AAC7B,MAAI,aAAmB,aAAa;AAChC,UAAM,OAAO,kBAAkB,CAAC;AAChC,WAAO,IAAI,YAAY,EAAE,SAAS,MAAM,QAAW,CAAC;AAAA,EACxD;AACA,SAAO;AACX;AANgB;AAOhB,SAAS,kBAAkB,GAAG;AAC1B,MAAI,aAAmB,iBAAiB,EAAE,SAAS,QAAW;AAC1D,WAAO,EAAE;AAAA,EACb,WACS,aAAmB,YAAY;AACpC,WAAO;AAAA,EACX,WACS,aAAmB,aAAa;AACrC,WAAO,EAAE,iBAAuB,cAC1B,kBAAkB,EAAE,KAAK,IACzB;AAAA,EACV,WACS,aAAmB,gBAAgB;AACxC,WAAO;AAAA,EACX,WACS,aAAmB,iBAAiB;AACzC,WAAO;AAAA,EACX,WACS,aAAmB,sBAAsB;AAC9C,WAAO;AAAA,EACX,WACS,aAAmB,eAAe;AACvC,WAAO;AAAA,EACX,OACK;AACD,WAAO;AAAA,EACX;AACJ;AA3BS;;;AC1RT;AAAA;AAAAC;AAAO,IAAM,WAAN,MAAe;AAAA,EAAtB,OAAsB;AAAA;AAAA;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,OAAO,UAAU;AACzB,SAAK,SAAS;AACd,SAAK,QAAQ,IAAI,IAAI;AACrB,SAAK,WAAW;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,YAAY;AACd,QAAI,KAAK,YAAY,GAAG;AACpB;AAAA,IACJ;AACA,UAAM,cAAc,oBAAI,IAAI;AAC5B,eAAW,aAAa,YAAY;AAChC,UAAI,OAAO,UAAU,QAAQ,UAAU;AACnC;AAAA,MACJ;AACA,YAAM,UAAU,UAAU;AAG1B,UAAI,QAAQ,UAAU,KAAM;AACxB;AAAA,MACJ;AACA,UAAI,SAAS,KAAK,MAAM,IAAI,OAAO;AACnC,UAAI,WAAW,QAAW;AACtB,eAAO,KAAK,MAAM,OAAO,IAAI,KAAK,UAAU;AACxC,gBAAM,CAAC,cAAc,WAAW,IAAI,KAAK,MAAM,QAAQ;AACvD,cAAI,YAAY,IAAI,WAAW,GAAG;AAG9B;AAAA,UACJ;AACA,sBAAY,MAAM;AAClB,eAAK,MAAM,OAAO,YAAY;AAAA,QAClC;AACA,YAAI,KAAK,MAAM,OAAO,KAAK,KAAK,UAAU;AACtC,mBAAS,KAAK,OAAO,SAAS,OAAO;AACrC,eAAK,MAAM,IAAI,SAAS,MAAM;AAAA,QAClC;AAAA,MACJ;AACA,UAAI,WAAW,QAAW;AACtB,kBAAU,MAAM;AAChB,oBAAY,IAAI,MAAM;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,IAAM,MAAN,MAAU;AAAA,EAvDV,OAuDU;AAAA;AAAA;AAAA;AAAA;AAAA,EAGN;AAAA,EACA,cAAc;AACV,SAAK,SAAS,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,KAAK;AACL,UAAM,QAAQ,KAAK,OAAO,IAAI,GAAG;AACjC,QAAI,UAAU,QAAW;AAErB,WAAK,OAAO,OAAO,GAAG;AACtB,WAAK,OAAO,IAAI,KAAK,KAAK;AAAA,IAC9B;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,KAAK,OAAO;AACZ,SAAK,OAAO,IAAI,KAAK,KAAK;AAAA,EAC9B;AAAA,EACA,UAAU;AACN,eAAW,SAAS,KAAK,OAAO,QAAQ,GAAG;AACvC,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EACA,OAAO,KAAK;AACR,SAAK,OAAO,OAAO,GAAG;AAAA,EAC1B;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,OAAO;AAAA,EACvB;AACJ;;;A7C/EA,2BAAyB;AAMlB,SAAS,cAAcC,SAAQ;AAClC,MAAIA,QAAO,WAAW,SAASA,QAAO,WAAW,MAAM;AACnD,UAAM,IAAI,YAAY,4EACX,KAAK,UAAUA,QAAO,SAAS,GAAG,CAAC,uCAAuC,gBAAgB,IAAI,0BAA0B;AAAA,EACvI;AACA,MAAIA,QAAO,kBAAkB,QAAW;AACpC,UAAM,IAAI,YAAY,yDAAyD,8BAA8B;AAAA,EACjH;AACA,MAAIA,QAAO,WAAW,QAAQA,QAAO,KAAK;AACtC,UAAM,IAAI,YAAY,mDAAmD,aAAa;AAAA,EAC1F,WACSA,QAAO,WAAW,SAAS,CAACA,QAAO,KAAK;AAC7C,UAAM,IAAI,YAAY,sDAAsD,aAAa;AAAA,EAC7F;AACA,QAAM,MAAM,cAAcA,QAAO,QAAQA,QAAO,WAAWA,QAAO,IAAI;AACtE,MAAI;AACJ,MAAI;AACA,aAAe,OAAO,KAAKA,QAAO,SAAS;AAAA,EAC/C,SACO,GAAG;AACN,QAAI,aAAmB,2BAA2B;AAC9C,YAAM,kBAAkBA,QAAO,WAAW,QAAQ,UAAU;AAC5D,YAAM,eAAe,cAAc,iBAAiBA,QAAO,WAAWA,QAAO,IAAI;AACjF,YAAM,IAAI,YAAY,8FACZ,eAAe,WAAW,KAAK,UAAU,YAAY,CAAC,wCACvB,gBAAgB,IAAI,0BAA0B;AAAA,IAC3F;AACA,UAAM,cAAc,CAAC;AAAA,EACzB;AACA,SAAO,IAAIC,UAAS,QAAQ,KAAKD,QAAO,WAAWA,QAAO,SAASA,QAAO,WAAW;AACzF;AA9BgB;AA+BhB,IAAM,mBAAmB,KAAK;AAC9B,IAAM,mBAAmB;AAClB,IAAMC,YAAN,MAAe;AAAA,EA9CtB,OA8CsB;AAAA;AAAA;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,KAAK,WAAW,SAAS,aAAa;AACtD,SAAK,OAAO;AACZ,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,aAAa,KAAK,UAAU,MAAM;AACvC,SAAK,mBAAmB;AACxB,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,4BAAwB,qBAAAC,SAAa,WAAW;AAAA,EACzD;AAAA,EACA,MAAM,MAAM,IAAI;AACZ,WAAO,KAAK,sBAAsB,EAAE;AAAA,EACxC;AAAA,EACA,MAAM,QAAQ,WAAW,MAAM;AAC3B,QAAI;AACJ,QAAI,OAAO,cAAc,UAAU;AAC/B,aAAO;AAAA,QACH,KAAK;AAAA,QACL,MAAM,QAAQ,CAAC;AAAA,MACnB;AAAA,IACJ,OACK;AACD,aAAO;AAAA,IACX;AACA,WAAO,KAAK,MAAM,YAAY;AAC1B,YAAM,cAAc,MAAM,KAAK,YAAY;AAC3C,UAAI;AACA,cAAM,YAAY,YAAY,IAAI;AAGlC,oBAAY,KAAK,SAAS,MAAM,CAAC,SAAS,CAAC;AAC3C,cAAM,mBAAmB,YAAY,OAAO,MAAM,SAAS;AAC3D,oBAAY,OAAO,gBAAgB;AACnC,cAAM,kBAAkB,MAAM;AAC9B,eAAO,mBAAmB,eAAe;AAAA,MAC7C,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB,UACA;AACI,aAAK,aAAa,WAAW;AAAA,MACjC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,MAAM,OAAO,OAAO,YAAY;AAClC,WAAO,KAAK,MAAM,YAAY;AAC1B,YAAM,cAAc,MAAM,KAAK,YAAY;AAC3C,UAAI;AACA,cAAM,kBAAkB,MAAM,IAAI,CAAC,SAAS;AACxC,cAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,mBAAO;AAAA,cACH,KAAK,KAAK,CAAC;AAAA,cACX,MAAM,KAAK,CAAC,KAAK,CAAC;AAAA,YACtB;AAAA,UACJ;AACA,iBAAO;AAAA,QACX,CAAC;AACD,cAAM,aAAa,gBAAgB,IAAI,WAAW;AAClD,cAAMC,WAAU,MAAM,YAAY,KAAK,OAAO,WAAW;AAGzD,oBAAY,KAAK,SAAS,MAAM,UAAU;AAC1C,cAAM,QAAQ,YAAY,OAAO,MAAMA,YAAW,CAAC;AACnD,cAAM,iBAAiB,kBAAkB,MAAMA,UAAS,OAAO,UAAU;AACzE,cAAM,UAAU,MAAM;AACtB,eAAO;AAAA,MACX,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB,UACA;AACI,aAAK,aAAa,WAAW;AAAA,MACjC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,QAAQ,OAAO;AACjB,WAAO,KAAK,MAAM,YAAY;AAC1B,YAAM,cAAc,MAAM,KAAK,YAAY;AAC3C,UAAI;AACA,cAAM,aAAa,MAAM,IAAI,WAAW;AACxC,cAAMA,WAAU,MAAM,YAAY,KAAK,OAAO,WAAW;AAGzD,cAAM,QAAQ,YAAY,OAAO,MAAMA,YAAW,CAAC;AACnD,cAAM,iBAAiB,kBAAkB,YAAYA,UAAS,OAAO,YAAY,IAAI;AACrF,cAAM,UAAU,MAAM;AACtB,eAAO;AAAA,MACX,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB,UACA;AACI,aAAK,aAAa,WAAW;AAAA,MACjC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,YAAY,OAAO,SAAS;AAC9B,WAAO,KAAK,MAAM,YAAY;AAC1B,YAAM,cAAc,MAAM,KAAK,YAAY;AAC3C,UAAI;AACA,cAAMA,WAAU,MAAM,YAAY,KAAK,OAAO,WAAW;AAGzD,eAAO,IAAI,cAAc,MAAM,aAAa,MAAMA,QAAO;AAAA,MAC7D,SACO,GAAG;AACN,aAAK,aAAa,WAAW;AAC7B,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,gBAAgBC,MAAK;AACvB,WAAO,KAAK,MAAM,YAAY;AAC1B,YAAM,cAAc,MAAM,KAAK,YAAY;AAC3C,UAAI;AAGA,cAAM,UAAU,YAAY,OAAO,SAASA,IAAG;AAC/C,oBAAY,OAAO,gBAAgB;AACnC,cAAM;AAAA,MACV,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB,UACA;AACI,aAAK,aAAa,WAAW;AAAA,MACjC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,OAAO;AACH,UAAM,IAAI,YAAY,iCAAiC,oBAAoB;AAAA,EAC/E;AAAA,EACA,MAAM,cAAc;AAChB,QAAI,KAAK,QAAQ;AACb,YAAM,IAAI,YAAY,wBAAwB,eAAe;AAAA,IACjE;AACA,UAAM,MAAM,oBAAI,KAAK;AACrB,UAAM,YAAY,IAAI,QAAQ,IAAI,KAAK,WAAW,SAAS,QAAQ;AACnE,QAAI,YAAY,oBACZ,KAAK,qBAAqB,QAAW;AAErC,YAAM,kBAAkB,KAAK,UAAU;AACvC,WAAK,mBAAmB;AAQxB,sBAAgB,OAAO,WAAW,EAAE,KAAK,CAAC,aAAa;AACnD,YAAI,KAAK,eAAe,iBAAiB;AAGrC,cAAI,KAAK,WAAW,aAAa,SAAS,GAAG;AACzC,iBAAK,WAAW,OAAO,MAAM;AAAA,UACjC,OACK;AAAA,UAIL;AAAA,QACJ;AACA,aAAK,aAAa;AAClB,aAAK,mBAAmB;AAAA,MAC5B,GAAG,CAAC,OAAO;AAGP,aAAK,mBAAmB;AAAA,MAC5B,CAAC;AAAA,IACL;AACA,QAAI,KAAK,WAAW,OAAO,QAAQ;AAE/B,UAAI;AACA,YAAI,KAAK,qBAAqB,QAAW;AAGrC,eAAK,aAAa,KAAK;AAAA,QAC3B,OACK;AACD,eAAK,aAAa,KAAK,UAAU;AAAA,QACrC;AAAA,MACJ,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ;AACA,UAAM,YAAY,KAAK;AACvB,QAAI;AAIA,UAAI,UAAU,gBAAgB,QAAW;AACrC,kBAAU,cACL,MAAM,UAAU,OAAO,WAAW,KAAM;AAC7C,YAAI,UAAU,aAAa;AACvB,oBAAU,SAAS,WAAW;AAAA,QAClC;AAAA,MACJ;AACA,YAAM,SAAS,UAAU,OAAO,WAAW;AAC3C,aAAO,UAAU,KAAK;AACtB,YAAM,cAAc,EAAE,MAAM,WAAW,OAAO;AAC9C,gBAAU,aAAa,IAAI,WAAW;AACtC,aAAO;AAAA,IACX,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,UAAU,QAAQ;AACd,QAAI;AACA,iBAAiB,OAAO,KAAK,MAAM,KAAK,UAAU;AAClD,aAAO;AAAA,QACH;AAAA,QACA,aAAa;AAAA,QACb,UAAU,IAAI,SAAS,QAAQ,CAAC;AAAA,QAChC,UAAU,oBAAI,KAAK;AAAA,QACnB,cAAc,oBAAI,IAAI;AAAA,MAC1B;AAAA,IACJ,SACO,GAAG;AACN,YAAM,cAAc,CAAC;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,MAAM,YAAY;AACd,QAAI;AACA,iBAAW,MAAM,MAAM,KAAK,KAAK,WAAW,YAAY,GAAG;AACvD,YAAI;AACA,aAAG,OAAO,MAAM;AAAA,QACpB,QACM;AAAA,QAAE;AAAA,MACZ;AACA,WAAK,WAAW,OAAO,MAAM;AAAA,IACjC,QACM;AAAA,IAAE;AACR,QAAI,KAAK,kBAAkB;AACvB,UAAI;AACA,aAAK,iBAAiB,OAAO,MAAM;AAAA,MACvC,QACM;AAAA,MAAE;AACR,WAAK,mBAAmB;AAAA,IAC5B;AACA,UAAM,OAAO,KAAK,UAAU;AAC5B,UAAMD,WAAU,MAAM,KAAK,OAAO,WAAW;AAC7C,SAAK,cAAcA,YAAW;AAC9B,QAAI,KAAK,aAAa;AAClB,WAAK,SAAS,WAAW;AAAA,IAC7B;AACA,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,aAAa,aAAa;AACtB,gBAAY,OAAO,MAAM;AACzB,UAAM,YAAY,YAAY;AAC9B,cAAU,aAAa,OAAO,WAAW;AACzC,QAAI,UAAU,aAAa,SAAS,KAChC,cAAc,KAAK,YAAY;AAG/B,gBAAU,OAAO,MAAM;AAAA,IAC3B;AAAA,EACJ;AAAA,EACA,QAAQ;AACJ,SAAK,WAAW,OAAO,MAAM;AAC7B,SAAK,SAAS;AACd,QAAI,KAAK,kBAAkB;AACvB,UAAI;AACA,aAAK,iBAAiB,OAAO,MAAM;AAAA,MACvC,QACM;AAAA,MAAE;AACR,WAAK,mBAAmB;AAAA,IAC5B;AACA,SAAK,SAAS;AAAA,EAClB;AACJ;AACO,IAAM,gBAAN,cAA4B,iBAAiB;AAAA,EA/UpD,OA+UoD;AAAA;AAAA;AAAA,EAChD;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,OAAO,MAAMA,UAAS;AACtC,UAAM,MAAMA,QAAO;AACnB,SAAK,UAAU;AACf,SAAK,eAAe;AAAA,EACxB;AAAA;AAAA,EAEA,aAAa;AACT,WAAO,KAAK,aAAa;AAAA,EAC7B;AAAA;AAAA,EAEA,eAAe;AACX,WAAO,KAAK,aAAa,KAAK;AAAA,EAClC;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,aAAa,KAAK,YAAY;AAAA,EAC/C;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,aAAa,OAAO;AAAA,EACpC;AACJ;;;A8CtWA;AAAA;AAAAE;AAOA,IAAAC,wBAAyB;AAMlB,SAASC,eAAcC,SAAQ;AAClC,MAAIA,QAAO,WAAW,WAAWA,QAAO,WAAW,QAAQ;AACvD,UAAM,IAAI,YAAY,2EACX,KAAK,UAAUA,QAAO,SAAS,GAAG,CAAC,uCAAuC,gBAAgB,IAAI,0BAA0B;AAAA,EACvI;AACA,MAAIA,QAAO,kBAAkB,QAAW;AACpC,UAAM,IAAI,YAAY,yDAAyD,8BAA8B;AAAA,EACjH;AACA,MAAIA,QAAO,WAAW,UAAUA,QAAO,KAAK;AACxC,UAAM,IAAI,YAAY,qDAAqD,aAAa;AAAA,EAC5F,WACSA,QAAO,WAAW,WAAW,CAACA,QAAO,KAAK;AAC/C,UAAM,IAAI,YAAY,wDAAwD,aAAa;AAAA,EAC/F;AACA,QAAM,MAAM,cAAcA,QAAO,QAAQA,QAAO,WAAWA,QAAO,IAAI;AACtE,SAAO,IAAIC,YAAW,KAAKD,QAAO,WAAWA,QAAO,SAASA,QAAO,OAAOA,QAAO,WAAW;AACjG;AAhBgB,OAAAD,gBAAA;AAiBhB,IAAMG,oBAAmB;AAClB,IAAMD,cAAN,MAAiB;AAAA,EA/BxB,OA+BwB;AAAA;AAAA;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,KAAK,WAAW,SAAS,aAAa,aAAa;AAC3D,SAAK,OAAO;AACZ,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,UAAgB,SAAS,KAAK,MAAM,KAAK,YAAY,KAAK,YAAY;AAC3E,SAAK,QAAQ,UAAU,KAAK;AAC5B,SAAK,WAAW;AAChB,SAAK,4BAAwB,sBAAAE,SAAa,KAAK,YAAY;AAAA,EAC/D;AAAA,EACA,MAAM,MAAM,IAAI;AACZ,WAAO,KAAK,sBAAsB,EAAE;AAAA,EACxC;AAAA,EACA,MAAM,QAAQ,WAAW,MAAM;AAC3B,QAAI;AACJ,QAAI,OAAO,cAAc,UAAU;AAC/B,aAAO;AAAA,QACH,KAAK;AAAA,QACL,MAAM,QAAQ,CAAC;AAAA,MACnB;AAAA,IACJ,OACK;AACD,aAAO;AAAA,IACX;AACA,WAAO,KAAK,MAAM,YAAY;AAC1B,UAAI;AACA,cAAM,YAAY,YAAY,IAAI;AAGlC,YAAI;AACJ,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,YAAI;AACA,wBAAc,OAAO,MAAM,SAAS;AAAA,QACxC,UACA;AACI,iBAAO,gBAAgB;AAAA,QAC3B;AACA,cAAM,aAAa,MAAM;AACzB,eAAO,mBAAmB,UAAU;AAAA,MACxC,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,MAAM,OAAO,OAAO,YAAY;AAClC,WAAO,KAAK,MAAM,YAAY;AAC1B,UAAI;AACA,cAAM,kBAAkB,MAAM,IAAI,CAAC,SAAS;AACxC,cAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,mBAAO;AAAA,cACH,KAAK,KAAK,CAAC;AAAA,cACX,MAAM,KAAK,CAAC,KAAK,CAAC;AAAA,YACtB;AAAA,UACJ;AACA,iBAAO;AAAA,QACX,CAAC;AACD,cAAM,aAAa,gBAAgB,IAAI,WAAW;AAClD,cAAMC,WAAU,MAAM,KAAK,QAAQ,WAAW;AAG9C,YAAI;AACJ,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,YAAI;AAGA,gBAAM,WAAW,IAAI,SAAS,QAAQF,iBAAgB;AACtD,mBAAS,MAAM,UAAU;AAKzB,gBAAM,QAAQ,OAAO,MAAM,KAAK;AAChC,2BAAiB,kBAAkB,MAAME,UAAS,OAAO,UAAU;AAAA,QACvE,UACA;AACI,iBAAO,gBAAgB;AAAA,QAC3B;AACA,cAAM,UAAU,MAAM;AACtB,eAAO;AAAA,MACX,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,QAAQ,OAAO;AACjB,WAAO,KAAK,MAAM,YAAY;AAC1B,UAAI;AACA,cAAM,aAAa,MAAM,IAAI,WAAW;AACxC,cAAMA,WAAU,MAAM,KAAK,QAAQ,WAAW;AAG9C,YAAI;AACJ,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,YAAI;AACA,gBAAM,QAAQ,OAAO,MAAM,KAAK;AAChC,2BAAiB,kBAAkB,YAAYA,UAAS,OAAO,YAAY,IAAI;AAAA,QACnF,UACA;AACI,iBAAO,gBAAgB;AAAA,QAC3B;AACA,cAAM,UAAU,MAAM;AACtB,eAAO;AAAA,MACX,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,YAAY,OAAO,SAAS;AAC9B,WAAO,KAAK,MAAM,YAAY;AAC1B,UAAI;AACA,cAAMA,WAAU,MAAM,KAAK,QAAQ,WAAW;AAC9C,eAAO,IAAI,gBAAgB,KAAK,QAAQ,WAAW,GAAG,MAAMA,QAAO;AAAA,MACvE,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,MAAM,gBAAgBC,MAAK;AACvB,WAAO,KAAK,MAAM,YAAY;AAC1B,UAAI;AAGA,YAAI;AACJ,cAAM,SAAS,KAAK,QAAQ,WAAW;AACvC,YAAI;AACA,oBAAU,OAAO,SAASA,IAAG;AAAA,QACjC,UACA;AACI,iBAAO,gBAAgB;AAAA,QAC3B;AACA,cAAM;AAAA,MACV,SACO,GAAG;AACN,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,OAAO;AACH,UAAM,IAAI,YAAY,mCAAmC,oBAAoB;AAAA,EACjF;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,MAAM;AAAA,EACvB;AAAA,EACA,MAAM,YAAY;AACd,QAAI;AACA,UAAI,CAAC,KAAK,QAAQ;AAEd,aAAK,QAAQ,MAAM;AAAA,MACvB;AAAA,IACJ,UACA;AAEI,WAAK,UAAgB,SAAS,KAAK,MAAM,KAAK,YAAY,KAAK,YAAY;AAC3E,WAAK,QAAQ,UAAU,KAAK;AAAA,IAChC;AAAA,EACJ;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,QAAQ;AAAA,EACxB;AACJ;AACO,IAAM,kBAAN,cAA8B,iBAAiB;AAAA,EA9MtD,OA8MsD;AAAA;AAAA;AAAA,EAClD;AAAA,EACA;AAAA;AAAA,EAEA,YAAY,QAAQ,MAAMD,UAAS;AAC/B,UAAM,MAAMA,QAAO;AACnB,SAAK,UAAU;AACf,SAAK,YAAY,IAAI,SAAS,QAAQF,iBAAgB;AAAA,EAC1D;AAAA;AAAA,EAEA,aAAa;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,eAAe;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,MAAM;AAAA,EACvB;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,QAAQ;AAAA,EACxB;AACJ;;;ApD/NO,SAAS,aAAaI,SAAQ;AACjC,SAAOC,eAAc,aAAaD,SAAQ,IAAI,CAAC;AACnD;AAFgB;AAIT,SAASC,eAAcD,SAAQ;AAClC,MAAIA,QAAO,WAAW,QAAQA,QAAO,WAAW,OAAO;AACnD,WAAO,cAAgBA,OAAM;AAAA,EACjC,WACSA,QAAO,WAAW,UAAUA,QAAO,WAAW,SAAS;AAC5D,WAAOC,eAAkBD,OAAM;AAAA,EACnC,OACK;AACD,UAAM,IAAI,YAAY,iHACX,KAAK,UAAUA,QAAO,SAAS,GAAG,CAAC,uCAAuC,gBAAgB,IAAI,0BAA0B;AAAA,EACvI;AACJ;AAXgB,OAAAC,gBAAA;;;AqDRhB;;AAAAC;;;ACAA;;AAAAC;AA0BO,IAAM,gBAAN,MAAM,uBAGH,cAAwD;EA7BlE,OA6BkE;;;EAMjE,YACS,QACR,SACQ,QACA,SACA,IACP;AACD,UAAM,OAAO;AANL,SAAA,SAAA;AAEA,SAAA,SAAA;AACA,SAAA,UAAA;AACA,SAAA,KAAA;AAGR,SAAK,SAAS,QAAQ,UAAU,IAAI,WAAW;AAC/C,SAAK,QAAQ,QAAQ,SAAS,IAAI,UAAU;EAC7C;EAfA,QAA0B,UAAU,IAAY;EAExC;EACA;EAcR,aACC,OACA,QACA,eACA,uBACA,oBACA,eAIA,aACyB;AACzB,WAAO,IAAI;MACV,KAAK;MACL;MACA,KAAK;MACL,KAAK;MACL;MACA;MACA;MACA,KAAK;MACL;MACA;MACA;IACD;EACD;EAEA,MAAM,MAAwE,SAAY;AACzF,UAAM,kBAAmC,CAAC;AAC1C,UAAM,eAA8B,CAAC;AAErC,eAAW,SAAS,SAAS;AAC5B,YAAM,gBAAgB,MAAM,SAAS;AACrC,YAAM,aAAa,cAAc,SAAS;AAC1C,sBAAgB,KAAK,aAAa;AAClC,mBAAa,KAAK,EAAE,KAAK,WAAW,KAAK,MAAM,WAAW,OAAiB,CAAC;IAC7E;AAEA,UAAM,eAAe,MAAM,KAAK,OAAO,MAAM,YAAY;AACzD,WAAO,aAAa,IAAI,CAAC,QAAQ,MAAM,gBAAgB,CAAC,EAAG,UAAU,QAAQ,IAAI,CAAC;EACnF;EAEA,MAAM,QAA0E,SAAY;AAC3F,UAAM,kBAAmC,CAAC;AAC1C,UAAM,eAA8B,CAAC;AAErC,eAAW,SAAS,SAAS;AAC5B,YAAM,gBAAgB,MAAM,SAAS;AACrC,YAAM,aAAa,cAAc,SAAS;AAC1C,sBAAgB,KAAK,aAAa;AAClC,mBAAa,KAAK,EAAE,KAAK,WAAW,KAAK,MAAM,WAAW,OAAiB,CAAC;IAC7E;AAEA,UAAM,eAAe,MAAM,KAAK,OAAO,QAAQ,YAAY;AAC3D,WAAO,aAAa,IAAI,CAAC,QAAQ,MAAM,gBAAgB,CAAC,EAAG,UAAU,QAAQ,IAAI,CAAC;EACnF;EAEA,MAAe,YACd,aACA,SACa;AAEb,UAAM,WAAW,MAAM,KAAK,OAAO,YAAY;AAC/C,UAAM,UAAU,IAAI;MACnB,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL;IACD;AACA,UAAM,KAAK,IAAI,kBAAwC,SAAS,KAAK,SAAS,SAAS,KAAK,MAAM;AAClG,QAAI;AACH,YAAM,SAAS,MAAM,YAAY,EAAE;AACnC,YAAM,SAAS,OAAO;AACtB,aAAO;IACR,SAASC,MAAK;AACb,YAAM,SAAS,SAAS;AACxB,YAAMA;IACP;EACD;EAES,kCAAkC,QAA0B;AACpE,WAAQ,OAAqB;EAC9B;EAES,kCAAkC,QAA0B;AACpE,WAAQ,OAAqB,KAAK,CAAC;EACpC;EAES,qCAAqC,QAA0B;AACvE,WAAQ,OAAqB;EAC9B;AACD;AAEO,IAAM,oBAAN,MAAM,2BAGH,kBAA4D;EAhJtE,OAgJsE;;;EACrE,QAA0B,UAAU,IAAY;EAEhD,MAAe,YAAe,aAAsF;AACnH,UAAM,gBAAgB,KAAK,KAAK,WAAW;AAC3C,UAAM,KAAK,IAAI,mBAAkB,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,QAAQ,KAAK,cAAc,CAAC;AACvG,UAAM,KAAK,QAAQ,IAAI,IAAI,IAAI,aAAa,aAAa,EAAE,CAAC;AAC5D,QAAI;AACH,YAAM,SAAS,MAAM,YAAY,EAAE;AACnC,YAAM,KAAK,QAAQ,IAAI,IAAI,IAAI,qBAAqB,aAAa,EAAE,CAAC;AACpE,aAAO;IACR,SAASA,MAAK;AACb,YAAM,KAAK,QAAQ,IAAI,IAAI,IAAI,yBAAyB,aAAa,EAAE,CAAC;AACxE,YAAMA;IACP;EACD;AACD;AAEO,IAAM,sBAAN,cAAuF,oBAE5F;EApKF,OAoKE;;;EAGD,YACS,QACR,OACQ,QACR,OACA,eAIA,aACwB,QAChB,IACR,eACQ,wBACgB,oBAIvB;AACD,UAAM,SAAS,eAAe,OAAO,OAAO,eAAe,WAAW;AAlB9D,SAAA,SAAA;AAEA,SAAA,SAAA;AAOgB,SAAA,SAAA;AAChB,SAAA,KAAA;AAEA,SAAA,yBAAA;AACgB,SAAA,qBAAA;AAMxB,SAAK,qBAAqB;AAC1B,SAAK,SAAS;EACf;EAxBA,QAA0B,UAAU,IAAY;EA0BhD,MAAM,IAAI,mBAAiE;AAC1E,UAAM,SAAS,iBAAiB,KAAK,MAAM,QAAQ,qBAAqB,CAAC,CAAC;AAC1E,SAAK,OAAO,SAAS,KAAK,MAAM,KAAK,MAAM;AAC3C,WAAO,MAAM,KAAK,eAAe,KAAK,MAAM,KAAK,QAAQ,YAAY;AACpE,YAAM,OAAoB,EAAE,KAAK,KAAK,MAAM,KAAK,MAAM,OAAiB;AACxE,aAAO,KAAK,KAAK,KAAK,GAAG,QAAQ,IAAI,IAAI,KAAK,OAAO,QAAQ,IAAI;IAClE,CAAC;EACF;EAEA,MAAM,IAAI,mBAAgE;AACzE,UAAM,EAAE,QAAQ,QAAQ,OAAO,IAAI,QAAQ,mBAAmB,IAAI;AAClE,QAAI,CAAC,UAAU,CAAC,oBAAoB;AACnC,YAAM,SAAS,iBAAiB,MAAM,QAAQ,qBAAqB,CAAC,CAAC;AACrE,aAAO,SAAS,MAAM,KAAK,MAAM;AACjC,aAAO,MAAM,KAAK,eAAe,MAAM,KAAK,QAAQ,YAAY;AAC/D,cAAM,OAAoB,EAAE,KAAK,MAAM,KAAK,MAAM,OAAiB;AACnE,gBAAQ,KAAK,GAAG,QAAQ,IAAI,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAK,CAAC,EAAE,MAAAC,MAAK,MAAM,KAAK,aAAaA,KAAI,CAAC;MACjG,CAAC;IACF;AAEA,UAAM,OAAO,MAAM,KAAK,OAAO,iBAAiB;AAEhD,WAAO,KAAK,aAAa,IAAI;EAC9B;EAES,aAAa,MAAe,aAAgC;AACpE,QAAI,aAAa;AAChB,aAAQ,KAAmB;IAC5B;AAEA,QAAI,CAAC,KAAK,UAAU,CAAC,KAAK,oBAAoB;AAC7C,aAAQ,KAAmB,IAAI,CAAC,QAAQ,aAAa,GAAG,CAAC;IAC1D;AAEA,QAAI,KAAK,oBAAoB;AAC5B,aAAO,KAAK,mBAAmB,MAAqB,mBAAmB;IACxE;AAEA,WAAQ,KAAmB,IAAI,CAAC,QAAQ;AACvC,aAAO;QACN,KAAK;QACL,MAAM,UAAU,MAAM,KAAK,GAAG,EAAE,IAAI,CAAC,MAAM,oBAAoB,CAAC,CAAC;QACjE,KAAK;MACN;IACD,CAAC;EACF;EAEA,MAAM,IAAI,mBAAgE;AACzE,UAAM,EAAE,QAAQ,QAAQ,OAAO,IAAI,QAAQ,mBAAmB,IAAI;AAClE,QAAI,CAAC,UAAU,CAAC,oBAAoB;AACnC,YAAM,SAAS,iBAAiB,MAAM,QAAQ,qBAAqB,CAAC,CAAC;AACrE,aAAO,SAAS,MAAM,KAAK,MAAM;AACjC,aAAO,MAAM,KAAK,eAAe,MAAM,KAAK,QAAQ,YAAY;AAC/D,cAAM,OAAoB,EAAE,KAAK,MAAM,KAAK,MAAM,OAAiB;AACnE,gBAAQ,KAAK,GAAG,QAAQ,IAAI,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAK,CAAC,EAAE,MAAAA,MAAK,MAAM,KAAK,aAAaA,KAAI,CAAC;MACjG,CAAC;IACF;AAEA,UAAM,OAAO,MAAM,KAAK,OAAO,iBAAiB;AAEhD,WAAO,KAAK,aAAa,IAAI;EAC9B;EAES,aAAa,MAAe,aAAgC;AACpE,QAAI,aAAa;AAChB,aAAQ,KAAmB;IAC5B;AAEA,UAAM,MAAO,KAAmB,CAAC;AAEjC,QAAI,CAAC,KAAK,UAAU,CAAC,KAAK,oBAAoB;AAC7C,aAAO,aAAa,GAAG;IACxB;AAEA,QAAI,CAAC,KAAK;AACT,aAAO;IACR;AAEA,QAAI,KAAK,oBAAoB;AAC5B,aAAO,KAAK,mBAAmB,MAAqB,mBAAmB;IACxE;AAEA,WAAO;MACN,KAAK;MACL,MAAM,UAAU,MAAM,KAAK,GAAG,EAAE,IAAI,CAAC,MAAM,oBAAoB,CAAC,CAAC;MACjE,KAAK;IACN;EACD;EAEA,MAAM,OAAO,mBAAmE;AAC/E,UAAM,SAAS,iBAAiB,KAAK,MAAM,QAAQ,qBAAqB,CAAC,CAAC;AAC1E,SAAK,OAAO,SAAS,KAAK,MAAM,KAAK,MAAM;AAC3C,WAAO,MAAM,KAAK,eAAe,KAAK,MAAM,KAAK,QAAQ,YAAY;AACpE,YAAM,OAAoB,EAAE,KAAK,KAAK,MAAM,KAAK,MAAM,OAAiB;AACxE,cAAQ,KAAK,KAAK,KAAK,GAAG,QAAQ,IAAI,IAAI,KAAK,OAAO,QAAQ,IAAI,GAAG,KAAK,CAAC,EAAE,KAAK,MAAM,IAAI;IAG7F,CAAC;EACF;;EAGA,wBAAiC;AAChC,WAAO,KAAK;EACb;AACD;AAEA,SAAS,aAAa,KAAU;AAK/B,SAAO,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,KAA0B,QAAQ;AACjE,QAAI,OAAO,UAAU,qBAAqB,KAAK,KAAK,GAAG,GAAG;AACzD,UAAI,GAAG,IAAI,IAAI,GAAG;IACnB;AACA,WAAO;EACR,GAAG,CAAC,CAAC;AACN;AAXS;AAaT,SAAS,oBAAoB,OAAgB;AAC5C,MAAI,OAAO,gBAAgB,eAAe,iBAAiB,aAAa;AACvE,QAAI,OAAO,WAAW,aAAa;AAClC,UAAI,EAAE,iBAAiB,SAAS;AAC/B,eAAO,OAAO,KAAK,KAAK;MACzB;AACA,aAAO;IACR;AACA,QAAI,OAAO,gBAAgB,aAAa;AACvC,aAAO,IAAI,YAAY,EAAE,OAAO,KAAK;IACtC;AACA,UAAM,IAAI,MAAM,qFAAqF;EACtG;AACA,SAAO;AACR;AAdS;;;ADxSF,IAAM,iBAAN,cAEG,mBAAgD;EAhB1D,OAgB0D;;;EACzD,QAA0B,UAAU,IAAY;EAKhD,MAAM,MACL,OAC4B;AAC5B,WAAO,KAAK,QAAQ,MAAM,KAAK;EAChC;AACD;AAGO,SAAS,UAEd,QAAgBC,UAAiC,CAAC,GAElD;AACD,QAAM,UAAU,IAAI,mBAAmB,EAAE,QAAQA,QAAO,OAAO,CAAC;AAChE,MAAI;AACJ,MAAIA,QAAO,WAAW,MAAM;AAC3B,aAAS,IAAI,cAAc;EAC5B,WAAWA,QAAO,WAAW,OAAO;AACnC,aAASA,QAAO;EACjB;AAEA,MAAI;AACJ,MAAIA,QAAO,QAAQ;AAClB,UAAM,eAAe;MACpBA,QAAO;MACP;IACD;AACA,aAAS;MACR,YAAYA,QAAO;MACnB,QAAQ,aAAa;MACrB,eAAe,aAAa;IAC7B;EACD;AAEA,QAAM,UAAU,IAAI,cAAc,QAAQ,SAAS,QAAQ,EAAE,QAAQ,OAAOA,QAAO,MAAM,GAAG,MAAS;AACrG,QAAMC,MAAK,IAAI,eAAe,SAAS,SAAS,SAAS,MAAM;AACxD,EAAAA,IAAI,UAAU;AACd,EAAAA,IAAI,SAASD,QAAO;AAC3B,MAAWC,IAAI,QAAQ;AACf,IAAAA,IAAI,OAAO,YAAY,IAAID,QAAO,OAAO;EACjD;AACA,SAAOC;AACR;AAlCgB;;;AtD1BT,SAAS,WAIZ,QAiBF;AACD,MAAI,OAAO,OAAO,CAAC,MAAM,UAAU;AAClC,UAAM,WAAW,aAAa;MAC7B,KAAK,OAAO,CAAC;IACd,CAAC;AAED,WAAO,UAAU,UAAU,OAAO,CAAC,CAAC;EACrC;AAEA,MAAI,SAAS,OAAO,CAAC,CAAC,GAAG;AACxB,UAAM,EAAE,YAAY,QAAQ,GAAG,cAAc,IAAI,OAAO,CAAC;AAIzD,QAAI,OAAQ,QAAO,UAAU,QAAQ,aAAa;AAElD,UAAM,WAAW,OAAO,eAAe,WAAW,aAAa,EAAE,KAAK,WAAW,CAAC,IAAI,aAAa,UAAW;AAE9G,WAAO,UAAU,UAAU,aAAa;EACzC;AAEA,SAAO,UAAU,OAAO,CAAC,GAAc,OAAO,CAAC,CAAuC;AACvF;AA3CgB;CA6CT,CAAUC,aAAV;AACC,WAAS,KACfC,SAGC;AACD,WAAO,UAAU,CAAC,GAAUA,OAAM;EACnC;AANgB;AAATD,WAAS,OAAA;AAAA,GADA,YAAA,UAAA,CAAA,EAAA;;;ADjDV,IAAM,KAAK,QAAQ,QAAQ,IAAI,YAAa;;;AyDFnD;AAAA;AAAAE;AAAO,IAAM,UAAU,wBAAC,SAAiB,CAAC,OAAO;AAAA,EAC7C,QAAQ;AAAA,EACR,GAAG;AACP,IAHuB;AAKhB,IAAM,UAAU,wBAAC,aAAqB;AAAA,EACzC,QAAQ;AAAA,EACR;AACJ,IAHuB;;;ACLvB;AAAA;AAAAC;AAEO,IAAM,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;;ACFpD;AAAA;AAAAC;;;ACAA;AAAA;AAAAC;AAGA,IAAM,WAAW;AACjB,IAAM,eAAe;AAGrB,IAAM,aAAa;AACnB,IAAM,WAAW;AACjB,IAAM,WAAW;AAIjB,IAAI;AAAA,CACH,SAAUC,gBAAe;AACtB,EAAAA,eAAc,yBAAyB,IAAI;AAC3C,EAAAA,eAAc,4BAA4B,IAAI;AAC9C,EAAAA,eAAc,0BAA0B,IAAI;AAC5C,EAAAA,eAAc,oBAAoB,IAAI;AACtC,EAAAA,eAAc,wBAAwB,IAAI;AAC1C,EAAAA,eAAc,0BAA0B,IAAI;AAC5C,EAAAA,eAAc,mBAAmB,IAAI;AACrC,EAAAA,eAAc,aAAa,IAAI;AAC/B,EAAAA,eAAc,YAAY,IAAI;AAC9B,EAAAA,eAAc,aAAa,IAAI;AACnC,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACxC,IAAM,YAAN,cAAwB,MAAM;AAAA,EA1B9B,OA0B8B;AAAA;AAAA;AAAA,EAC1B,YAAY,WAAW,SAAS;AAC5B,UAAM,GAAG,OAAO,KAAK,SAAS,GAAG;AACjC,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAChB;AACJ;AAEA,SAAS,WAAW,MAAM;AAItB,QAAM,iBAAiB,KAAK,MAAM,KAAK,IAAI,YAAY,IAAI;AAC3D,SAAO,SAAS,OAAO,cAAc;AACzC;AANS;AAuHT,SAAS,WAAW,MAAM;AACtB,QAAM,aAAa,WAAW;AAC9B,QAAM,eAAgB,eAAe,WAAW,UAAU,WAAW,aAChE;AACL,MAAI,OAAO,cAAc,oBAAoB,YAAY;AACrD,WAAO,MAAM;AACT,YAAM,SAAS,IAAI,WAAW,CAAC;AAC/B,mBAAa,gBAAgB,MAAM;AACnC,aAAO,OAAO,CAAC,IAAI;AAAA,IACvB;AAAA,EACJ,WACS,OAAO,cAAc,gBAAgB,YAAY;AACtD,WAAO,MAAM,aAAa,YAAY,CAAC,EAAE,UAAU,IAAI;AAAA,EAC3D,MACK;AACL,QAAM,IAAI,UAAU,cAAc,mBAAmB,gCAAgC;AACzF;AAhBS;AAiBT,SAAS,aAAa;AAClB,MAAI,YAAY;AACZ,WAAO;AACX,MAAI,OAAO,WAAW,aAAa;AAC/B,WAAO;AAAA,EACX;AACA,MAAI,OAAO,WAAW,aAAa;AAC/B,WAAO;AAAA,EACX;AACA,MAAI,OAAO,eAAe,aAAa;AACnC,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAbS;AAcT,SAAS,aAAa,KAAK,MAAM;AAC7B,MAAI,MAAM;AACV,SAAO,MAAM,GAAG,OAAO;AACnB,UAAM,WAAW,IAAI,IAAI;AAAA,EAC7B;AACA,SAAO;AACX;AANS;AAaT,SAAS,WAAW,KAAK,MAAM,UAAU;AACrC,MAAI,MAAM,GAAG,GAAG;AACZ,UAAM,IAAI,UAAU,cAAc,0BAA0B,0BAA0B,GAAG,EAAE;AAAA,EAC/F,WACS,MAAM,UAAU;AACrB,UAAM,IAAI,UAAU,cAAc,wBAAwB,oCAAoC,QAAQ,KAAK,GAAG,EAAE;AAAA,EACpH,WACS,MAAM,GAAG;AACd,UAAM,IAAI,UAAU,cAAc,oBAAoB,0BAA0B,GAAG,EAAE;AAAA,EACzF,WACS,OAAO,UAAU,GAAG,MAAM,OAAO;AACtC,UAAM,IAAI,UAAU,cAAc,0BAA0B,4BAA4B,GAAG,EAAE;AAAA,EACjG;AACA,MAAI,KAAK,MAAM;AACf,WAAS,aAAa,KAAK,aAAa,GAAG,cAAc;AACrD,UAAM,MAAM;AACZ,UAAM,SAAS,OAAO,GAAG,IAAI;AAC7B,WAAO,MAAM,OAAO;AAAA,EACxB;AACA,SAAO;AACX;AApBS;AAqBT,SAAS,cAAc;AAEnB,SAAO,OAAO,sBAAsB,eAAe,gBAAgB;AACvE;AAHS;AAmDT,SAAS,KAAK,UAAU,MAAM;AAC1B,QAAM,cAAc,QAAQ,WAAW;AACvC,QAAM,OAAO,CAAC,YAAY,MAAM,QAAQ,IAAI,KAAK,IAAI,IAAI;AACzD,SAAO,WAAW,MAAM,QAAQ,IAAI,aAAa,YAAY,WAAW;AAC5E;AAJS;;;AD3QF,IAAM,QAAQ,wBAAC,WAAmB,SAAS,MAAM,KAAK,GAAxC;;;AxHiBrB,IAAM,gBAAgB,mBAAmB,KAAK;AAC9C,IAAM,gBAAgB,mBAAmB,KAAK;AAEvC,IAAM,iBAAiB,IAAI,OAAO;AAAA,EACrC,QAAQ;AAAA,EACR,QAAQ;AAAA,IACJ,MAAM,CAAC,OAAO;AAAA,EAClB;AACJ,CAAC,EACI,IAAI,IAAI,YAAY;AACjB,QAAM,OAAO,MAAM,GAAG,OAAO,EAAE,KAAK,KAAK;AACzC,SAAO,QAAQ,EAAE,OAAO,KAAK,CAAC;AAClC,CAAC,EAEA;AAAA,EACG;AAAA,EACA,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM;AAC1B,UAAM,OAAO,MAAM,GACd,OAAO,EACP,KAAK,KAAK,EACV,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,EACtB,MAAM,CAAC;AAEZ,QAAI,CAAC,KAAK,QAAQ;AACd,aAAOC,OAAM,KAAK,QAAQ,iBAAiB,CAAC;AAAA,IAChD;AAEA,WAAO,QAAQ,EAAE,MAAM,KAAK,CAAC,EAAE,CAAC;AAAA,EACpC;AAAA,EACA,EAAE,QAAQ,UAAU;AACxB,EAEC;AAAA,EACG;AAAA,EACA,OAAO,EAAE,MAAM,KAAAC,KAAI,MAAM;AACrB,UAAM,aAAa;AAAA,MACf,IAAI,MAAM,MAAM;AAAA,MAChB,OAAO,KAAK;AAAA,MACZ,aAAa,KAAK;AAAA,IACtB;AAEA,UAAM,OAAO,MAAM,GACd,OAAO,KAAK,EACZ,OAAO,UAAU,EACjB,UAAU;AAEf,IAAAA,KAAI,SAAS;AACb,WAAO,QAAQ,EAAE,MAAM,KAAK,CAAC,EAAE,CAAC;AAAA,EACpC;AAAA,EACA;AAAA,IACI,MAAM,EAAE,KAAK,eAAe,UAAU;AAAA,EAC1C;AACJ,EAEC;AAAA,EACG;AAAA,EACA,OAAO,EAAE,QAAQ,EAAE,GAAG,GAAG,KAAK,MAAM;AAChC,UAAM,OAAO,MAAM,GACd,OAAO,KAAK,EACZ,IAAI,IAAI,EACR,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,EACtB,UAAU;AAEf,QAAI,CAAC,KAAK,QAAQ;AACd,aAAOD,OAAM,KAAK,QAAQ,iBAAiB,CAAC;AAAA,IAChD;AAEA,WAAO,QAAQ,EAAE,MAAM,KAAK,CAAC,EAAE,CAAC;AAAA,EACpC;AAAA,EACA,EAAE,QAAQ,WAAW,MAAM,cAAc;AAC7C;;;ArJnFG,IAAM,MAAM,IAAI,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,MAAM,OAAAE,OAAM,MAAM;AACvE,UAAQ,IAAI,IAAI;AAChB,SAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAOA,OAAM,SAAS,KAAK,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAC5F,CAAC,EAAE,IAAI,cAAc;AAGrB,IAAI,IAAI,KAAK,MAAM,6BAAsB;;;ADRzC,IAAO,gBAAQ;AAAA,EACb,MAAM,MACJ,SACAC,MACA,KAEmB;AAEnB,UAAM,WAAW,IAAI,IAAI,QAAQ,GAAG,EAAE;AAEtC,WAAO,MAAM,IAAI,MAAM,OAAO;AAAA,EAChC;AACF;",
  "names": ["init_performance", "performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "fd", "dir", "env", "count", "init_performance", "fd", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "decodeURIComponent", "uri", "byte", "parse", "serialize", "decode", "max", "init_performance", "init_performance", "init_promises", "init_performance", "ReadStream", "WriteStream", "init_performance", "error", "access", "appendFile", "chown", "chmod", "copyFile", "cp", "lchown", "lchmod", "link", "lstat", "lutimes", "mkdir", "mkdtemp", "realpath", "open", "opendir", "readdir", "readFile", "readlink", "rename", "rm", "rmdir", "stat", "symlink", "truncate", "unlink", "utimes", "writeFile", "statfs", "watch", "glob", "init_performance", "ReadStream", "WriteStream", "access", "appendFile", "chmod", "chown", "copyFile", "cp", "glob", "lchmod", "lchown", "link", "lstat", "lutimes", "mkdir", "mkdtemp", "open", "opendir", "readFile", "readdir", "readlink", "realpath", "rename", "rm", "rmdir", "stat", "statfs", "symlink", "truncate", "unlink", "utimes", "watch", "writeFile", "init_fs", "init_performance", "init_promises", "init_performance", "cp", "init_performance", "array", "StringType", "init_lib", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "error", "init_performance", "init_performance", "init_performance", "init_performance", "err", "init_performance", "init_performance", "init_performance", "init_performance", "l", "t", "lt", "init_performance", "parse", "init_performance", "env", "debug", "self", "init_performance", "error", "init_performance", "init_lib", "array", "debug", "init_lib", "init_performance", "initDebug", "StringType", "init_performance", "string", "StringType", "init_performance", "init_lib", "init_performance", "blob", "init_core", "init_performance", "init_lib", "error", "StringType", "version", "string", "init_performance", "count", "error", "err", "map", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "value", "init_performance", "init_performance", "init_performance", "IsAsyncIterator", "IsObject", "IsIterator", "IsDate", "IsUint8Array", "HasPropertyKey", "IsObject", "IsArray", "IsUndefined", "IsNull", "IsBoolean", "IsNumber", "IsBigInt", "IsString", "IsFunction", "IsSymbol", "TypeSystemPolicy", "isObject", "IsObject", "IsArray", "IsNumber", "IsUndefined", "init_performance", "value", "init_performance", "init_performance", "init_performance", "init_performance", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsRegExp", "IsString", "IsSymbol", "IsUndefined", "IsUint8Array", "IsArray", "IsBoolean", "IsBigInt", "IsAsyncIterator", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsAny", "IsArgument", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsComputed", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsIterator", "IsKind", "IsKindOf", "IsLiteral", "IsLiteralValue", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsNumber", "IsObject", "IsOptional", "IsPromise", "IsReadonly", "IsRecord", "IsRef", "IsRegExp", "IsSchema", "IsString", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTransform", "IsTuple", "IsUint8Array", "IsUndefined", "IsUnion", "IsUnknown", "IsUnsafe", "IsVoid", "init_performance", "IsSchema", "IsReadonly", "IsOptional", "IsAny", "IsKindOf", "IsArgument", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsComputed", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsTransform", "IsIterator", "IsLiteral", "IsLiteralValue", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsRecord", "IsRef", "IsRegExp", "IsString", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTuple", "IsUndefined", "IsUnion", "IsUint8Array", "IsUnknown", "IsUnsafe", "IsVoid", "IsKind", "init_performance", "init_performance", "Set", "init_performance", "Set", "type_exports", "Clear", "Delete", "Entries", "Get", "Has", "Set", "init_performance", "map", "Entries", "Clear", "Delete", "Has", "Set", "Get", "init_performance", "init_performance", "init_performance", "Array", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "Function", "init_performance", "init_performance", "init_performance", "init_performance", "isOptional", "init_performance", "init_performance", "init_performance", "init_performance", "count", "range", "pattern", "init_performance", "init_performance", "init_performance", "init_performance", "Boolean", "init_performance", "BigInt", "init_performance", "Number", "init_performance", "String", "Boolean", "Number", "BigInt", "String", "init_performance", "Visit", "schema", "IsNumber", "IsInteger", "IsBigInt", "IsString", "IsBoolean", "init_performance", "init_performance", "FromUnion", "IsNumber", "IsInteger", "init_performance", "FromUnion", "IsArray", "IsObject", "error", "init_performance", "init_performance", "Object", "init_performance", "Promise", "init_performance", "init_performance", "FromProperties", "FromMappedResult", "init_performance", "FromMappedResult", "FromRest", "FromProperties", "IsFunction", "Function", "IsAsyncIterator", "IsIterator", "IsObject", "Object", "IsArray", "Array", "IsPromise", "Promise", "map", "init_performance", "FromProperties", "FromMappedResult", "init_performance", "IsObject", "RemoveOptionalFromType", "RemoveOptionalFromRest", "init_performance", "init_performance", "FromIntersect", "FromRest", "FromUnion", "IsPromise", "init_performance", "init_performance", "init_performance", "init_performance", "FromRest", "FromIntersect", "FromUnion", "FromTuple", "FromArray", "FromProperties", "IsArray", "IsObject", "FromComputed", "FromRef", "Number", "FromProperties", "FromMappedResult", "init_performance", "Object", "init_performance", "init_performance", "Date", "init_performance", "init_performance", "Symbol", "init_performance", "init_performance", "Uint8Array", "init_performance", "FromArray", "FromProperties", "Uint8Array", "Date", "Object", "Function", "Symbol", "BigInt", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "ExtendsResult", "FromArray", "Visit", "FromIntersect", "FromLiteral", "count", "Number", "Function", "FromPromise", "String", "Value", "FromTemplateLiteral", "FromTuple", "FromUnion", "init_performance", "init_performance", "init_performance", "FromProperties", "FromMappedResult", "FromMappedKey", "init_performance", "Intersect", "schema", "Union", "init_performance", "FromProperties", "FromMappedResult", "init_performance", "init_performance", "init_performance", "FromProperties", "FromMappedResult", "init_performance", "init_performance", "init_performance", "init_performance", "Object", "IsBoolean", "IsInteger", "IsNumber", "IsRegExp", "IsString", "RecordKey", "String", "Number", "RecordValue", "FromConstructor", "FromFunction", "FromIntersect", "FromUnion", "FromTuple", "FromArray", "FromAsyncIterator", "FromIterator", "FromPromise", "FromObject", "FromProperties", "Object", "FromRecord", "RecordKey", "RecordValue", "FromProperty", "isOptional", "IsFunction", "IsArray", "IsAsyncIterator", "IsIterator", "IsPromise", "IsObject", "init_performance", "init_performance", "init_performance", "init_performance", "FromTemplateLiteral", "FromRest", "union", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "FromProperties", "FromMappedResult", "FromIntersect", "FromUnion", "FromProperty", "FromProperties", "FromObject", "Object", "result", "IsObject", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "init_performance", "init_performance", "init_performance", "FromProperties", "FromMappedResult", "FromIntersect", "FromUnion", "FromProperties", "FromObject", "Object", "UnionFromPropertyKeys", "result", "IsObject", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "init_performance", "init_performance", "FromComputed", "FromRef", "FromProperties", "FromObject", "Object", "FromRest", "IsObject", "IsBigInt", "IsBoolean", "IsInteger", "IsNull", "IsNumber", "IsString", "IsSymbol", "IsUndefined", "FromProperties", "FromMappedResult", "init_performance", "init_performance", "FromComputed", "FromRef", "FromProperties", "FromObject", "Object", "FromRest", "IsObject", "IsBigInt", "IsBoolean", "IsInteger", "IsNull", "IsNumber", "IsString", "IsSymbol", "IsUndefined", "FromProperties", "FromMappedResult", "FromType", "FromComputed", "FromArray", "Array", "FromAsyncIterator", "FromConstructor", "FromTypes", "FromFunction", "Function", "FromIntersect", "FromIterator", "FromObject", "Object", "FromRecord", "RecordValue", "FromTuple", "FromUnion", "IsArray", "IsAsyncIterator", "IsFunction", "IsIterator", "IsObject", "init_performance", "Not", "init_performance", "IsFunction", "init_performance", "init_performance", "RegExp", "init_performance", "init_performance", "IsFunction", "init_performance", "decode", "encode", "Encode", "Decode", "init_performance", "init_performance", "init_performance", "type_exports", "Array", "BigInt", "Boolean", "Date", "Function", "Not", "Number", "Object", "Promise", "RegExp", "String", "Symbol", "Uint8Array", "init_performance", "type_exports", "init_performance", "init_performance", "init_performance", "error", "init_performance", "target", "IsString", "init_performance", "ByteMarker", "ArrayType", "Visit", "byte", "DateType", "ObjectType", "Uint8ArrayType", "IsArray", "IsBoolean", "IsBigInt", "IsDate", "IsNull", "IsNumber", "IsObject", "IsString", "IsSymbol", "IsUint8Array", "IsUndefined", "init_performance", "FromAny", "FromArgument", "FromArray", "IsArray", "value", "Visit", "set", "IsNumber", "FromAsyncIterator", "IsAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "IsBoolean", "FromConstructor", "FromDate", "IsDate", "FromFunction", "IsFunction", "FromInteger", "FromIntersect", "schema", "FromIterator", "IsIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "IsNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "regex", "FromRef", "FromRegExp", "FromString", "IsString", "FromSymbol", "IsSymbol", "FromTemplateLiteral", "FromTuple", "FromUndefined", "IsUndefined", "FromUnion", "FromUint8Array", "IsUint8Array", "FromUnknown", "FromVoid", "type_exports", "ValueErrorType", "IsDefined", "FromAny", "FromArgument", "FromArray", "IsArray", "Visit", "set", "value", "IsNumber", "FromAsyncIterator", "IsAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "IsBoolean", "FromConstructor", "FromDate", "IsDate", "FromFunction", "IsFunction", "FromImport", "FromInteger", "FromIntersect", "error", "FromIterator", "IsIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "IsNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "regex", "FromRef", "FromRegExp", "IsString", "FromString", "FromSymbol", "IsSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "IsUndefined", "FromUnion", "FromUint8Array", "IsUint8Array", "FromUnknown", "FromVoid", "FromKind", "type_exports", "init_performance", "error", "_AssertError_Iterator", "init_performance", "init_performance", "init_performance", "FromObject", "Clone", "FromArray", "FromDate", "FromValue", "IsArray", "IsDate", "IsObject", "IsFunction", "Clone", "FromAny", "HasPropertyKey", "FromArgument", "FromArray", "Visit", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "self", "FromDate", "FromFunction", "FromImport", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "type_exports", "Create", "IsNull", "object", "schema", "exists", "union", "Clone", "Create", "FromArray", "IsArray", "IsNumber", "value", "Visit", "FromConstructor", "FromImport", "IsObject", "FromIntersect", "FromNever", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "IsString", "init_performance", "FromArray", "IsArray", "value", "Visit", "FromImport", "FromIntersect", "schema", "Clone", "IsObject", "FromObject", "HasPropertyKey", "FromRecord", "FromRef", "FromThis", "FromTuple", "IsUndefined", "FromUnion", "IsString", "init_performance", "IsString", "IsBigInt", "IsBoolean", "IsNumber", "value", "IsSymbol", "IsDate", "Default", "FromArray", "IsArray", "Visit", "FromBigInt", "FromBoolean", "FromDate", "FromImport", "FromInteger", "FromIntersect", "schema", "FromLiteral", "FromNull", "FromNumber", "FromObject", "IsObject", "HasPropertyKey", "FromRecord", "FromRef", "FromString", "FromSymbol", "FromThis", "FromTuple", "IsUndefined", "FromUndefined", "FromUnion", "Clone", "init_performance", "init_performance", "error", "Default", "FromArray", "IsArray", "value", "Visit", "FromIntersect", "IsObject", "FromImport", "FromNot", "FromObject", "HasPropertyKey", "IsUndefined", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "init_performance", "error", "Default", "FromArray", "IsArray", "value", "Visit", "FromImport", "FromIntersect", "IsObject", "FromNot", "FromObject", "HasPropertyKey", "IsUndefined", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "init_performance", "FromArray", "Visit", "FromAsyncIterator", "FromConstructor", "schema", "FromFunction", "FromIntersect", "FromImport", "FromIterator", "FromNot", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromThis", "FromTuple", "IsUndefined", "FromUnion", "init_performance", "HasPropertyKey", "IsFunction", "Clone", "IsUndefined", "IsObject", "FromArray", "IsArray", "Visit", "FromDate", "IsDate", "FromImport", "FromIntersect", "schema", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "max", "FromUnion", "Default", "init_performance", "init_performance", "Delete", "Get", "Has", "Set", "init_performance", "Escape", "Set", "Delete", "Has", "Get", "init_performance", "ObjectType", "IsObject", "DateType", "IsDate", "ArrayType", "IsArray", "Object", "String", "Delete", "ObjectType", "HasPropertyKey", "Visit", "ArrayType", "IsArray", "TypedArrayType", "ValueType", "Clone", "init_performance", "init_performance", "IsStandardObject", "IsObject", "IsArray", "ObjectType", "Clone", "Visit", "ArrayType", "TypedArrayType", "ValueType", "init_performance", "ParseRegistry", "Clone", "Default", "Delete", "Set", "Get", "value", "IsUndefined", "IsArray", "init_performance", "value_exports", "Clone", "Create", "Default", "init_performance", "init_performance", "Character", "MemberExpression", "Encode", "object", "Identifier", "LiteralString", "Escape", "Policy", "TypeCompiler", "IsAnyOrUnknown", "FromAny", "FromArgument", "FromArray", "IsNumber", "IsSchema", "FromAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "FromConstructor", "Visit", "FromDate", "FromFunction", "FromImport", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "IsString", "type_exports", "expression", "IsArray", "import_fast_decode_uri_component", "import_fast_decode_uri_component", "init_performance", "Kind", "Hint", "isOptional", "array", "config", "time", "createReadStream", "stat", "array", "number", "error2", "env", "error", "ParseError", "error2", "union", "value_exports", "error3", "type_exports", "fileTypeFromBlob", "number", "decode4", "domain", "access", "context", "config", "decode", "error2", "stat2", "app", "decode2", "error3", "not", "value_exports", "sanitize", "trace", "binding", "report", "ParseError", "decode3", "send", "env2", "_a", "_Elysia", "fastDecodeURIComponent", "init_performance", "init_performance", "init_performance", "init_performance", "table", "config", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "config", "table", "init_performance", "init_performance", "table", "init_performance", "value", "startFrom", "array", "config", "table", "ref", "actions", "table", "config", "init_performance", "sql", "init_performance", "init_performance", "version", "version", "otel", "rawTracer", "init_performance", "init_performance", "table", "config", "encoder", "param", "sql", "placeholder", "name", "encoder", "SQL", "name", "table", "init_performance", "init_performance", "config", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "result", "table", "table", "init_performance", "exists", "max", "init_performance", "table", "config", "exists", "relations", "table", "config", "t", "type_exports", "max", "integer", "columns", "init_performance", "init_performance", "init_performance", "init_performance", "ForeignKeyBuilder", "config", "table", "ForeignKey", "init_performance", "uniqueKeyName", "table", "UniqueConstraintBuilder", "table", "UniqueConstraint", "UniqueOnConstraintBuilder", "uniqueKeyName", "config", "table", "ref", "actions", "ForeignKeyBuilder", "uniqueKeyName", "table", "config", "init_performance", "table", "config", "init_performance", "config", "table", "init_performance", "table", "config", "init_performance", "table", "init_performance", "config", "table", "init_performance", "init_performance", "config", "init_performance", "init_performance", "init_performance", "InlineForeignKeys", "name", "table", "init_performance", "table", "table", "init_performance", "init_performance", "init_performance", "init_performance", "table", "init_performance", "config", "table", "set", "select", "sql", "joinOn", "field", "init_performance", "init_performance", "config", "table", "on", "self", "table", "config", "init_performance", "table", "set", "on", "init_performance", "init_performance", "table", "config", "init_performance", "self", "table", "config", "init_performance", "init_performance", "sql", "encoder", "err", "sql", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "text", "parseQuery", "init_performance", "init_performance", "version", "asc", "encodeURI", "cp", "decode", "config", "uri", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "status", "init_performance", "init_performance", "init_performance", "array", "byte", "count", "init_performance", "byte", "init_performance", "freeId", "init_performance", "init_performance", "init_performance", "error", "init_performance", "error", "sql", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "sql", "init_performance", "init_performance", "init_performance", "entry", "error", "error", "init_performance", "init_performance", "Stmt", "Batch", "BatchStep", "BatchCond", "Request", "Stmt", "Batch", "init_performance", "init_performance", "Stmt", "Value", "NamedArg", "Batch", "BatchStep", "BatchCond", "ClientMsg", "Stmt", "Batch", "init_performance", "init_performance", "Error", "Value", "error", "error", "Error", "Response", "init_performance", "init_performance", "Error", "StmtResult", "Col", "Value", "BatchResult", "CursorEntry", "DescribeResult", "DescribeParam", "DescribeCol", "ServerMsg", "Error", "StmtResult", "BatchResult", "CursorEntry", "DescribeResult", "ClientMsg", "error", "ServerMsg", "sql", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "error", "Error", "init_performance", "PipelineRespBody", "StreamResult", "StreamResponse", "Error", "StmtResult", "BatchResult", "DescribeResult", "CursorRespBody", "CursorRespBody", "CursorEntry", "error", "byte", "init_performance", "Stmt", "Batch", "init_performance", "PipelineReqBody", "StreamRequest", "CloseStreamReq", "Stmt", "Batch", "CursorReqBody", "sql", "error", "handleResponse", "fetch", "PipelineReqBody", "CursorReqBody", "PipelineRespBody", "error", "fetch", "init_performance", "init_performance", "version", "sql", "init_performance", "config", "WsClient", "promiseLimit", "version", "sql", "init_performance", "import_promise_limit", "_createClient", "config", "HttpClient", "sqlCacheCapacity", "promiseLimit", "version", "sql", "config", "_createClient", "init_performance", "init_performance", "err", "rows", "config", "db", "drizzle", "config", "init_performance", "init_performance", "init_performance", "init_performance", "ULIDErrorCode", "error", "set", "error", "env"]
}
